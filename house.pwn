//===========================| Инклюды |========================================
#include <a_samp>
#include <a_mysql>
#include <mxdate>
#include <mxINI>
#include <regex>
#include <a_http>
#include <streamer>
#include <sscanf2>
#include <zcmd>
#include <foreach>
#include <PointToPoint>
#include <proxycheck>
#include <crashdetect>
#include <crp>
//===========================| Макросы |========================================
#define SERVER_NAME 					"House Role Play | Тестовый Сервер"
#define SERVER_VERSION 					"[version 0.2]"
#define SERVER_MAP                      "Criminal Russia"
#define SERVER_WEBSITE 					"vk.com/Housecrmprolepley"
#define PAGE_WEBSITE_DONATE             "vk.com/Housecrmprolepley"
#define SERVER_FORUM                    "vk.com/Housecrmprolepley"
#define SERVER_GROUP                    "vk.com/Housecrmprolepley"
#define SERVER_FREE_GROUP               "vk.com/Housecrmprolepley"

#define NAME_DEVELOPER_ONE				"Mark_Facer"
#define NAME_DEVELOPER_TWO				"Woody_Clown"

#define DEBUG_STATUS                   true

#define SQL_HOST 						"89.223.89.219"
#define SQL_USER 						"gs6"
#define SQL_DB 							"gs6"
#define SQL_PASS 						"UhqpVdpUoT"

#define SQL_HOST1 						"89.223.89.219"
#define SQL_USER1 						"gs5"
#define SQL_DB1 						"gs5"
#define SQL_PASS1 						"MkdBVohupq"

#define MAIN_SQL_HOST      			"localhost"
#define MAIN_SQL_USER      			"gs65"
#define MAIN_SQL_DB      				"gs65"
#define MAIN_SQL_PASS      			"Ppyc9wD6rO"

#define T_ACCOUNTS                      "`accounts`"
#define T_VEHICLE   					"`vehicle`"
#define T_BIZZ      					"`bizz`"
#define T_HOUSE     					"`house`"
#define T_PORCH							"`porch`"
#define T_PORCH_HOUSE					"`porch_house`"
#define T_MAFIA     					"`mafia`"
#define T_GANG                         	"`gang`"
#define T_GANGZONE  					"`gangzone`"
#define T_ATM       					"`atm`"
#define T_OTHER     					"`other`"
#define T_ADMIN                         "`admin`"
#define T_PASSPORTS                     "`passports`"
//#include "../include/map.inc"
//================================МАП===========================================
stock LoadObject()
{
    //new tmpobjid;
    //new vorota;
	//#include <mapping/map>
	//#include <mapping/bank>
	//#include <mapping/sovet>
	//#include <mapping/mafia>
	//#include <mapping/int>
	//#include <mapping/park>
	//#include <mapping/armia>
	//#include <mapping/xyiznaetche>
	#include <mapping/testmap>
}
//================================МАП===========================================
main()
{
	print("House RolePlay");
}
#define YouAreNotLoggedInAsAdmin        "[A] Вы не авторизованы. Используйте {ffcc00}/alogin"
#define YouAlreadyLoggedInAsAdmin 		"[A] Вы уже авторизовались как администратор!"
#define YouCanNot 						"Вам недоступна данная возможность!"
#define PlayerIsNotOnline				"Игрок не в игре!"
#define PlayerIsNotAuthorized			"Игрок не ввел пароль!"
#define PlayerHaveMuteTime 				"У вас бан чата!"
#define PlayerNeedToLoggedForToPlay 	"{ffffff}Сервер закрыл соединение! Для выхода из игры введите: /q"
#define LoggedTimeOver 					"Время на авторизацию истекло! Для выхода из игры введите: {ffffff}/q"
#define PlayerAccess                    "{FFFFFF}Нажмите {03c03c}Y {FFFFFF}чтобы согласиться или {ff7518}N {FFFFFF}для отказа."

#define MAX_GANGZONES					(104)
#define MAX_FRACTIONS 					(26)
#define MAX_RANGS                       (17)
#define MAX_ADVERTS 					(15)
#define MAX_VCARS 						(500)
#define MAX_BIZZ 						(200)
#define MAX_ATM 						(50)
#define MAX_HOUSES 						(1000)
#define MAX_PORCHES						(100)
#define MAX_PORCH_HOUSES				(sizeof(PorchFlatsCoord)*MAX_PORCHES)
#define MAX_GANGS 						(20)

#define SMILE_COUNT       				(5)

#define SHOP_OBJECTS 					(11)
#define EAT_OBJECTS                     (4)
#define BAR_OBJECTS 					(7)
#define GUN_OBJECTS 					(10)

#define AMOUNT_OF_SALARY_MINE           (2)
#define AMOUNT_OF_SALARY_SAWMILL        (2)
#define AMOUNT_OF_SALARY_PLANT          (80)

#define MAX_SPEED 						(150)

#define TRUCK_LEVEL_2 					(30000)
#define TRUCK_LOAD_1 					(5000)
#define TRUCK_LOAD_2 					(7000)
#define SCM				               	SendClientMessage
#define SPD				                ShowPlayerDialog
#define PHONE_PRICE                     (100)
#define LSNEWS_NUMBER 					(555)
#define SFNEWS_NUMBER 					(666)
#define LVNEWS_NUMBER 					(777)

#define NONE_3D_TEXT 					(Text3D:-1)

#define SPECIAL_ACTION_PISS 			(68)

#define ADM_NONE 						(0)
#define ADM_MODER 						(1)
#define ADM_SUPER_MODER 				(2)
#define ADM_ADMIN       				(3)
#define ADM_SUPER_ADMIN 				(4)
#define ADM_GRAND_ADMIN 				(5)
#define ADM_GRAND						(6)

#define AMMO_PISTOL 					(20)
#define AMMO_SDPISTOL 					(20)
#define AMMO_DEAGLE 					(28)
#define AMMO_SHOTGUN 					(40)
#define AMMO_MICROUZI					(100)
#define AMMO_MP5 						(100)
#define AMMO_AK47 						(90)
#define AMMO_M4A1 						(90)

#define AMMO_PISTOL_VIP					(10)
#define AMMO_SDPISTOL_VIP				(10)
#define AMMO_DEAGLE_VIP 				(14)
#define AMMO_SHOTGUN_VIP				(20)
#define AMMO_MICROUZI_VIP				(50)
#define AMMO_MP5_VIP 					(50)
#define AMMO_AK47_VIP					(45)
#define AMMO_M4A1_VIP					(45)

#define D_NULL 							(0)
#define D_REGISTER 						(1)
#define D_LOGIN 						(2)
#define D_ERRORPAS 						(3)
#define D_SEX 							(4)
#define D_MAINMENU 						(5)
#define D_COMMANDSERVER 				(6)
#define D_UCPADMIN 						(7)
#define D_UCPADMIN2 					(8)
#define D_SKILLS 						(9)
#define D_ADDNED 						(11)
#define D_JOINHOUSE 					(24)
#define D_SELLHOUSE 					(29)
#define D_INVITEFRAC 					(18)
#define D_PICK 							(20)
#define D_MAKEGUN						(37)
#define D_GPS 							(46)
#define D_WEATHER   					(47)
#define D_FRACMENU 						(49)
#define D_ADMINREG						(57)
#define D_ATM 							(62)
#define D_VMENU 						(72)
#define D_NMENU 						(77)
#define D_CASH 							(93)
#define D_LIC 							(95)
#define D_HOME 							(101)
#define D_HEAL 							(106)
#define D_JOB 							(131)
#define D_CANCELRENT                    (970)
#define D_LEAVE 						(1125)
#define D_DONATE        				(200)
#define D_APANEL                        (3856)
#define D_CTO           				(8000)
#define D_VEH           				(8607)
#define D_BUYSIM                      	(2324)
#define D_HOMEULUCH                     (4315)
#define D_COMMAND_SHOW                  (5457)
#define D_BREAK                         (6754)
#define D_MAFIA                         (7945)
#define D_GANG                          (8100)
#define D_PHONE                         (344)
#define D_INVITESKIN                    (7434)
#define D_LEADERSKIN                    (7436)
#define D_TEMPLEADER                    (7437)
#define D_adm	     				    (8934)
#define D_MAIL                          (9233)
#define D_LICWEAPON                     (9245)
#define D_PASS                          (9246)
#define D_JOINCARS 						(9274)
#define D_BUYFISHKI                     (9412)
#define D_SERVICE                       (9501)
#define D_ARMOURY                       (9600)
#define D_STOPLOAD                      (9700)
#define D_ASH                           (720)
#define D_FIXCAR                        (9711)
#define D_PJ                            (9800)
#define D_REPUTATION                    (9820)
#define D_GUNMERIA                      (9830)
#define D_BUYRAK                      	(9821)
#define D_BUYSNASTI                     (9822)
#define D_MARKETF                     (9823)
#define SelectSpawn                     (721)
#define ArendTruckerDialog              (722)
#define JobVodolaz                      (723)
#define JobVodolaz1                     (724)

#define JOB_BUS           				(1)
#define JOB_TAXI          				(2)
#define JOB_PRODUCT 					(3)
#define JOB_FUEL          				(4)
#define JOB_MECHANIC      				(5)
#define JOB_TRUCKER       				(6)

#define TEAM_MERIA					    (1)
#define	TEAM_POLICIA	 				(2)
#define	TEAM_SFPD	 					(3)
#define	TEAM_FBI						(4)
#define	TEAM_SMP					(5)
#define	TEAM_AUTOSCHOOL					(6)
#define	TEAM_OPGTEST1         			(7)
#define	TEAM_BALLAS        				(8)
#define	TEAM_RIFA          				(9)
#define	TEAM_OPGTEST2       			(10)
#define TEAM_VAGOS         				(11)
#define TEAM_ARMIYA 					(12)
#pragma tabsize 0
#define TEAM_OPGOR 						(15)
#define TEAM_OPGYG						(16)
#define TEAM_RM    						(17)
#define TEAM_SMI 						(18)
#define TEAM_SFNEWS                     (19)
#define TEAM_LVNEWS                     (20)
#define TEAM_LVPD 	    				(21)
#define	TEAM_SFHOSPITAL					(22)
#define	TEAM_LVHOSPITAL					(23)
#define TEAM_SFMAYOR					(24)
#define TEAM_LVMAYOR					(25)

#define COLOR_SEA 						(0x00808000)
#define COLOR_GRAD1 					(0xB4B5B700)
#define COLOR_GRAD2 					(0xBFC0C200)
#define COLOR_GRAD3 					(0xCBCCCE00)
#define COLOR_GRAD4 					(0xD8D8D800)
#define COLOR_GRAD5 					(0xE3E3E300)
#define COLOR_GRAD6 					(0xF0F0F0FF)
#define COLOR_GREY 						(0xAFAFAFAA)
#define COLOR_GREEN 					(0x136711FF)
#define COLOR_RED 						(0xFF6347AA)
#define COLOR_LIGHTRED 					(0xFF6347AA)
#define COLOR_LIGHTRED2 				(0xFF0000FF)
#define COLOR_LIGHTBLUE 				(0x33CCFFAA)
#define COLOR_LIGHTGREEN 				(0x9ACD32AA)
#define COLOR_ORANGE                    (0xFF9900FF)
#define COLOR_DARKORANGE                (0xFF6600FF)
#define COLOR_YELLOW 					(0xFFFF00FF)
#define COLOR_YELLOW2 					(0xF5DEB3AA)
#define COLOR_WHITE 					(0xFFFFFFAA)
#define COLOR_FADE1 					(0xE6E6E6E6)
#define COLOR_FADE2 					(0xC8C8C8C8)
#define COLOR_TOMATO 					(0xFF6347AA)
#define COLOR_FADE3 					(0xAAAAAAAA)
#define COLOR_FADE4 					(0x8C8C8C8C)
#define COLOR_BLUE 						(0x0099FFAA)
#define COLOR_FADE5 					(0x6E6E6E6E)
#define COLOR_PURPLE 					(0xDD90FFAA)
#define COLOR_LIME						(0x99cc00FF)
#define COLOR_DBLUE 					(0x2641FEAA)
#define COLOR_ALLDEPT 					(0xFF8282AA)
#define COLOR_NEWS 						(0xFFA500AA)
#define COLOR_OOC 						(0xE0FFFFAA)
#define COLOR_ORANG 					(0xF3BB33FF)
#define TEAM_BLUE_COLOR 				(0x8D8DFF00)
#define COLOR_BLACK 					(0x000000AA)
#define COLOR_BOX   					(0x00000050)
#define COLOR_BBLUE 					(0x20A9FFAA)
#define COLOR_BORDER 					(0x00000AA)
#define COLOR_INDIGO 					(0x4B00B0AA)
#define COLOR_GRENNN  					(0x3C67BCAA)
#define COLOR_SYSTEM 					(0xEFEFF7AA)
#define COLOR_REDD 						(0xFF0000AA)

#define NONE_COLOR                      (0xFFFFFF11)
#define MAYOR_COLOR                     (0xCCFF00AA)
#define LSPD_COLOR                      (0x0000FFAA)
#define SFPD_COLOR                      (0x0000FFAA)
#define LVPD_COLOR                      (0x0000FFAA)
#define ARMY_COLOR                      (0x996633AA)
#define FBI_COLOR                       (0x0000FFAA)
#define HOSPITAL_COLOR                  (0xFF6666AA)
#define LIC_COLOR                       (0xCCFFFFAA)
#define LSNEWS_COLOR                    (0xFF6600AA)
#define SFNEWS_COLOR                    (0xFF6600AA)
#define LVNEWS_COLOR                    (0xFF6600AA)
#define YAKUZA_COLOR                    (0xBB0000AA)
#define RM_COLOR                        (0x007575AA)
#define LCN_COLOR                       (0x993366AA)
#define GROVE_COLOR 					(0x009900AA)
#define VAGOS_COLOR 					(0xFFCC00AA)
#define BALLAS_COLOR 					(0xCC00FFAA)
#define AZTECAS_COLOR 					(0x00B4E1AA)
#define RIFA_COLOR 						(0x6666FFAA)

#define EMAIL_ACTIVE 					"samp-es.ru/email_active.php"
#define EMAIL_AUTHKEY 					"229933"

#define GetName(%0) PI[%0][pName]
#define RandomEx(%1,%2) (random(%2-%1)+%1)
#define IsValidEmail(%1) regex_match(%1, "|([a-z0-9_\\.\\-]{1,20})@([a-z0-9\\.\\-]{1,20})\\.([a-z]{2,4})|is")
#define FreezePlayer(%0,%1) TogglePlayerControllable(%0, false), SetTimerEx("PlayerToggle", %1, false, "d", %0)

#define PORCH_MENU_DIALOGID				(3502)
#define PORCH_FLAT_COST					(2000)//Стоимость квартиры при создании подъезда

#if !defined IsValidVehicle
     native IsValidVehicle(vehicleid);
#endif

#if !defined FALSE
	new stock
	bool:FALSE = false;
#endif

#define SendMes(%1,%2,%3,%4) do{new _s[128]; format(_s,128,%3,%4); SendClientMessage(%1,%2,_s); }while(FALSE)
//грузчики
#define MAX_UCHECK 1 // Чекпоинты куда несём груз
#define MAX_PCHECK 1 // Чекпоинты где берём груз
#define START_JOB 1 // Колличество мест для начала работы
#define JOB_CASH 200 // Зарплата за 1 ящик

#define MOVE_SPEED              100.0
#define ACCEL_RATE              0.03
#define CAMERA_MODE_NONE        0
#define CAMERA_MODE_FLY         1
#define MOVE_FORWARD                    1
#define MOVE_BACK                       2
#define MOVE_LEFT                       3
#define MOVE_RIGHT                      4
#define MOVE_FORWARD_LEFT       5
#define MOVE_FORWARD_RIGHT      6
#define MOVE_BACK_LEFT          7
#define MOVE_BACK_RIGHT         8
enum MYSQL_SETTINGS
{
	FLAME_HOST,
	FLAME_USERNAME,
	FLAME_PASSWORD,
	FLAME_DATABASE
}
new MySQLSettings[MYSQL_SETTINGS][30];
//===========================| Переменные |=====================================
new gunmer;
new clickadm[MAX_PLAYERS];
new Text:tdapanel_TD_TD[10];
enum noclipenum
{
        cameramode,flyobject,mode,lrold,udold,lastmove,Float:accelmul
}
new noclipdata[MAX_PLAYERS][noclipenum];
new cashmer;
new passwordlogin[128];
new Text:Wasted[MAX_PLAYERS], Text:Wasted1[MAX_PLAYERS], Text:Wasted2[MAX_PLAYERS];
new pochtapickups[6];
new meriapick[2];
new ukrpick[2];
new PlayerText:TD_HOUSE_PTD[MAX_PLAYERS][7];
new PlayerText:Avtoriz_PTD[MAX_PLAYERS][1];
new Text:TD_HOUSE_TD[24];
new Text:Avtoriz_TD[4];
new Text:Registrz_TD[8];
new bool: keys_setting[MAX_PLAYERS];
new bool: logo_setting[MAX_PLAYERS];
new Text:village_TD[11];
new opgdver;
new opg2dver;
new opgslack;
new opgdvero;
new opg2dvero;
new opgslacko;
new porch_menu,
	porch_house_exit,
	TOTALPORCH,
	TOTALPORCHHOUSE;
new Float:start_job[START_JOB][3] = {// Места, где можно начать работу...
{2325.6614,-2384.3079,22.0034}
};
new TruckerCar[MAX_PLAYERS];
new TruckerGruz[MAX_PLAYERS];
new dbHandle;
new bool:TEST_SERVER;

new iPlayerAmmo[MAX_PLAYERS];
new iNewPlayerAmmo[MAX_PLAYERS];
new Shot[MAX_PLAYERS];

new PAYDAY = 0;

new Text3D:VehicleLabel[MAX_VEHICLES];//для номеров
new pLessonCar[MAX_PLAYERS];
new bool:AshLock[MAX_VEHICLES] = false;
//система рыбалки
#define FISHING_ROD_ATTACHID 0 // если данный ID уже используется, смените на свой
//#define DLG_FISH_MARKET 4095 // изменить на свой значение, если ID диалога уже используется

//new fishing_market_pickup;
//new fishing_info_pickup;
new fishing_rod_state[MAX_PLAYERS];
new fishing_busy[MAX_PLAYERS];
new fishing_bait[MAX_PLAYERS];
new fishing_line[MAX_PLAYERS];
new fishing_timer[MAX_PLAYERS];
//система рыбалки
// сис-ма мп
new Teleport;
new toolsbuy[MAX_PLAYERS];
new vehgame[MAX_PLAYERS];
new Float:TeleportFloat[3];
new TeleportInfo[2];
new vorota;
new ope;
//Шахта
new hands[MAX_PLAYERS];
new rands1;
new vidnick[MAX_PLAYERS];
new timemine[MAX_PLAYERS];
new kg[MAX_PLAYERS];
new randommine[][1] =
{
    {6},
    {3},
    {9},
    {28},
    {33},
    {30},
    {35},
    {32},
    {37},
    {41},
    {36},
    {42},
    {47},
    {52},
    {39},
    {40},
    {53},
    {54},
    {43},
    {44},
    {45}};
new bool:startjob2[MAX_PLAYERS];
new doubling_exp;
new doubling_donate;

enum chInfo
{
	chID1
}

#define MAX_RAK 12

enum E_RAK_STRUCT
{
	rak_id,
	Float: rak_x,
	Float: rak_y,
	Float: rak_z
};

new g_ranks[MAX_RAK][E_RAK_STRUCT] =
{
	{1, 2248.8586, 1934.8378, 0.8471},
	{2, 2242.4988, 1977.1516, 1.3956},
	{3, 2245.0271, 2028.3373, 1.5559},
	{4, 2254.3403, 1844.3521, 0.8500},
	{5, 2195.0190, 2005.0708, 0.8980},
	{6, 2173.7385, 1989.2052, 0.8559},
	{7, 2123.7451, 1985.9771, 1.1006},
	{8, 2072.2002, 1994.4349, 0.9629},
	{9, 2022.1644, 1984.9008, 1.0340},
	{10, 1972.7552, 1984.6383, 1.3329},
	{11, 1945.7859, 1998.0371, 1.3457},
	{12, 1990.4272, 1995.7698, 1.0415}
};

enum smInfo
{
	smInput[5],
	smOutput_M[40],
	smOutput_F[40]
}
new rabvodo[MAX_PLAYERS];
static const stock SmileInfo[SMILE_COUNT][smInfo] = {
	{")", "улыбается", "улыбается"},
	{"))", "смеется", "смеется"},
	{"(", "расстроился", "расстроилась"},
	{"((", "сильно расстроился", "сильно расстроилась"},
	{"=0", "удивился", "удивилась"}
};

new PassRegSex[MAX_PLAYERS];
enum psInfo
{
	psSeria,
	psNumber,
	psSex,
	psDate[3],
	psDateBirth[3],
	psCity,
	mcState
}
new PassInfo[MAX_PLAYERS][psInfo];
new Iterator:adm_vehicles<MAX_VEHICLES-1>;
new TotalAdminVehicles = 0;

new gGunWorkWH[3];
new gGunWorkTime[6];
static const stock Float:PorchFlatsCoord[][] = {
	{880.8964,1887.2583,1032.6885},
	{883.4028,1884.4102,1032.6885},
	{890.0463,1886.5337,1032.6885},
	{890.1667,1889.8685,1032.6885},
	{883.4783,1876.6675,1035.9352},
	{881.0499,1874.1298,1035.9352},
	{884.4229,1868.2466,1035.9352},
	{890.1475,1870.7490,1035.9352}
//	{2446.3684,-2086.6384,5.6022}
};

static const stock VehicleNames[][] = {
    "BMW X5","ИЖ-2715","Опель Омега Б","ЗИЛ-133","ВАЗ 2101","MMC Lancer","ЗИЛ-ММ3","Firetruck","Trashmaster"," ГАЗ-14","MMC Eclipse","Lada Kalina",
    "ИЖ 2125","ПАЗ-672","ЛиАЗ-5256","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","ГАЗ-2401","Washington","УАЗ-3741","Mr Whoopee","BF Injection",
    "Hunter","ЗИЛ-41047","Газель","Инкасатор","ГАЗ-М22","Predator","ЛиАЗ-677М","Rhino","ЗИЛ 131","Hotknife","Trailer","Toyota MarkII","Ikarus 260","ГАЗ-2402",
    "ИЖ-412","Rumpo","RC Bandit","Romero","Packer","Monster","ГАЗ-24","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
    "Reefer","Tropic","Flatbed","ГАЗ-3309","Caddy","ГАЗ-2402","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
    "BMW 535i","ИЖ-412ИЭ","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","ГАЗ-21И","MMC Pajero","Rustler","ZR3 50","ИЖ-27151","ГАЗ-2402",
    "Comet","BMX","Burrito","ПАЗ-3205","Marquis","ГАЗ 2402","Dozer","Maverick","News Chopper","Chevrolet Niva","FBI Rancher","Virgo","ВАЗ 2109",
    "Jetmax","Hotring","Sandking","ЗАЗ-1102","Police Maverick","Boxville","ГАЗ-53","УАЗ-69","RC Goblin","Hotring A","Hotring B",
    "Bloodring Banger","Rancher","Super GT","ГАЗ-2401"," УАЗ-452","Велик","Горный велик","Beagle","Cropdust","Stunt","КАМАЗ-54115","КАЗ-608В",
    "ВАЗ-21099","РАФ-2203"," ЕРАЗ-672","Shamal","Hydra","ИЖ Планета 5","NRG-500","Урал","Cement Truck","Эвакуатор","Fortune","Cadrona","FBI Truck",
    "Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","ГАЗ-3111","Bullet","ВАЗ 2424",
    "Москвич-434","Firetruck","Москвич-400","Москвич-2125","Москвич-2140","Cargobob","ЗАЗ-968А","Sunrise","ГАЗ 31105","Utility","Nevada","УАЗ-3303","ЗАЗ-968М","Monster A",
    "Monster B","Uranus","Toyota Celica","Sultan","ИЖ Москвич-427","Elegy","Raindance","RC Tiger","ВАЗ 2108","ВАЗ 2104","Savanna","Bandito","Freight","Trailer",
    "Kart","Mower","Duneride","Sweeper","ГАЗ-М20","Москвич-408","AT-400","ЗИЛ-157","Huntley","ГАЗ-13 Чайка","BF-400","Newsvan","Tug","Trailer A","Emperor",
    "Восход 3М","Euros","ЛиАЗ-677","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","ГАЗ-2401","ВАЗ 21099",
    "ВАЗ 2114","УАЗ 469","ИЖ-2717","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
    "Stair Trailer","ЛАЗ-699Р","Farm Plow","U Trailer" };

static const stock gGunCosts[GUN_OBJECTS] = {50,100,70,30,60,40,40,60,70,60};
static const stock gGunNames[GUN_OBJECTS][32] = {
	"Кастет",
	"Бейсбольная бита",
	"Дробовик",
	"Пистолет 9mm",
	"Пустынный орёл",
	"Полуавтомат MP5",
	"Пистолет-пулемёт Микро-Узи",
	"Автомат AK47",
	"Винтовка",
	"Автомат M4A1"
};

static const stock gShopCosts[SHOP_OBJECTS] = {450,300,300,550,100,150,300,70,70,150,200};
static const stock gShopProd[SHOP_OBJECTS] = {3,2,2,5,1,4,9,6,5,6,6};
static const stock gShopNames[SHOP_OBJECTS][25] = {
	"Мобильный телефон",
	"SIM-карта",
	"Фотоаппарат",
	"Аптечки для дома",
	"Цветы",
	"Часы",
	"Маска",
	"Сигарета",
	"Газировка",
	"Аптечка",
	"Плеер"
};

static const stock gEateryCosts[EAT_OBJECTS] = {1,2,3,4};
static const stock gEateryProd[EAT_OBJECTS] = {1,2,3,4};
static const stock gEateryNames1[EAT_OBJECTS][25] = {
	"Маленькая пицца",
	"Средняя пицца",
	"Большая пицца",
	"Пицца в коробке"
};
static const stock gEateryNames2[EAT_OBJECTS][25] = {
	"Бургер",
	"Большой бургер",
	"Гамбургер",
	"Гамбургер в упаковке"
};
static const stock gEateryNames3[EAT_OBJECTS][25] = {
	"Кусочки курицы",
	"Кусок куринной ножки",
	"Куринная ножка",
	"Курица в коробке"
};

static const stock gBarCost[BAR_OBJECTS] = {1,2,3,4,5,6,7};
static const stock gBarProd[BAR_OBJECTS] = {1,2,3,4,5,6,7};
static const stock gBarNames[BAR_OBJECTS][25] = {
	"Вода",
	"Сода",
	"Кока-кола",
	"Пиво",
	"Водка",
	"Коньяк",
	"Абсент"
};
stock LoadMySQLSettings()
{
	new FileID = ini_openFile("mysql_settings.ini"),errCode;
	if(FileID < 0)
	{
		printf("Error while opening MySQL settings file. Error code: %d",FileID);
		return 0;
	}
	errCode = ini_getString(FileID,"host",MySQLSettings[FLAME_HOST]);
	if(errCode < 0) printf("Error while reading MySQL settings file (host). Error code: %d",errCode);
	errCode = ini_getString(FileID,"username",MySQLSettings[FLAME_USERNAME]);
	if(errCode < 0) printf("Error while reading MySQL settings file (username). Error code: %d",errCode);
	errCode = ini_getString(FileID,"password",MySQLSettings[FLAME_PASSWORD]);
	if(errCode < 0) printf("Error while reading MySQL settings file (password). Error code: %d",errCode);
	errCode = ini_getString(FileID,"database",MySQLSettings[FLAME_DATABASE]);
	if(errCode < 0) printf("Error while reading MySQL settings file (database). Error code: %d",errCode);
	ini_closeFile(FileID);
	return 1;
}

static stock PhoneNumbers[MAX_PLAYERS][8];

static const stock Job_Names[7][32] = {
	"Нет",
	"Водитель автобуса",
	"Таксист",
	"Развозчик товаров",
	"Развозчик топлива",
	"Автомеханик",
	"Дальнобойщик"
};
new RegEx:CheckIPs;
new GangEd[5];
new GangPatr[5];
new MafiaEd[3];
new MafiaPatr[3];
new Text3D:Mafia3d[3];
new MafiaTotalBizz[3];
static const stock gGunAmount[9] = {60,70,170,190,200,210,280,300,360}; //Pistol,SD,Deagle,Uzi,MP5,Shotgun,M4A1,AK47,Rifle
static const stock gGunID[9] = {22,23,24,28,29,25,31,30,33}; //Pistol,SD,Deagle,Uzi,MP5,Shotgun,M4A1,AK47,Rifle
new gArmyWarehouse[2];
enum (<<=1)
{
	setFractionChat=1,
	setShowNickname,
	setAdminInfo,
	setPlayerIDChat,
	setHungerInfo,
	setShowKeis
}

enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
}

static const stock TeamColors[] =
{
	NONE_COLOR,
	MAYOR_COLOR,
	LSPD_COLOR,
	SFPD_COLOR,
	FBI_COLOR,
    HOSPITAL_COLOR,
    LIC_COLOR,
    GROVE_COLOR,
    BALLAS_COLOR,
    RIFA_COLOR,
    AZTECAS_COLOR,
    VAGOS_COLOR,
    ARMY_COLOR,
    0xFFFFFFAA,
    0xFFFFFFAA,
    LCN_COLOR,
    YAKUZA_COLOR,
    RM_COLOR,
    LSNEWS_COLOR,
    SFNEWS_COLOR,
    LVNEWS_COLOR,
    LVPD_COLOR,
    HOSPITAL_COLOR,
    HOSPITAL_COLOR,
    MAYOR_COLOR,
    MAYOR_COLOR
};

enum AreaInformation
{
	arServerHelp,
	arBankMenu,
	arAdminsZoneHP,
	arHotdogHP,
	arGettingPassport[3],
	arGreenZone[26],
	arBuyFishki,
	arBuyNarko[2],
	//arLoadPatr,
	//arLoadGun,
	//arArmyAmmo
}
new AreaInfo[AreaInformation];

new Predlog[MAX_PLAYERS];
new ZapretDice[MAX_PLAYERS];
new KostiName[MAX_PLAYERS];
new KostiMoney[MAX_PLAYERS];
new bool:InHospital[MAX_PLAYERS];
new OldMessage[MAX_PLAYERS][150];
new TextReset[MAX_PLAYERS];
new TextResetCMD[MAX_PLAYERS];
new TransferReset[MAX_PLAYERS];
new bool:PlayerDied[MAX_PLAYERS];
new bool:CheckOutMoney[MAX_PLAYERS];
new bool:UseGPS[MAX_PLAYERS];
new UnMaskReset[MAX_PLAYERS];
new bool:FreezePlayer[MAX_PLAYERS];
new b_Capture[5 char];
new b_Sklad[8 char];
new bool:drawcapt[MAX_PLAYERS];
new player_timer[MAX_PLAYERS];
new bool:MUSICACTIVE = false;
new MUSICURL[256];
new Float:MUSICX = 0.0;
new Float:MUSICY = 0.0;
new Float:MUSICZ = 0.0;
new Float:MUSICDIST = 0.0;
new bool:activemusic[MAX_PLAYERS];
new bool:PlayerMusic[MAX_PLAYERS];
new bool:StartGMTest[MAX_PLAYERS];
new bool:slotUsed[MAX_PLAYERS char];
new bool:ac_1[MAX_PLAYERS char];
new WeaponTime[MAX_PLAYERS];
new RapidFire[MAX_PLAYERS];
new playersIP[MAX_PLAYERS][64];
new PlayerBrake[MAX_PLAYERS];
new Float:AC_Air_Player[MAX_PLAYERS][3];
new AC_Air_Time[MAX_PLAYERS];
new Float:AC_Air_Car[MAX_PLAYERS][3];
new AC_Air_Time_Car[MAX_PLAYERS];
new Float:AC_Speed_Car[MAX_PLAYERS];
new Float:AC_Speed_Car_1[MAX_PLAYERS];
new Float:AC_Speed_Car_C[MAX_PLAYERS][3];
new Float:VehiclePos[MAX_VEHICLES][3];
new AC_GunCheattime[MAX_PLAYERS];
new PlayerEnterTime[MAX_PLAYERS];
new Menu:specmenu;
new Menu: skinmenu;
static const stock BE_Bad_Vehs[] = {
	460, 464, 476, 511, 512, 513, 519, 520, 539, 553, 577, 592, 593, // planes
	417, 425, 447, 465, 469, 487, 488, 497, 501, 548, 563 // heli
};
new bool: BE_Play_Check[MAX_PLAYERS];

new Ships[MAX_PLAYERS];
new Oldskin2[MAX_PLAYERS]; // сохраняет скин игрока
new buylicweapon[3];
new Pickup[19];
new armskin;
new mechanic[2];
new taxicar[2];
new buscar[2];
new CategoryA[2];
new CategoryB[2];
new CategoryC[2];
new CategoryD;
new skytera[5];
new pickupentered[MAX_PLAYERS] = 0;
new fbipic[4],merpicls[6],merpicsf[6],merpiclv[6],BolnicaLS[4],BolnicaSF[4],BolnicaLV[4],ashpic[4],lsnpic[2],sfnpic[2],lvnpic[2];
new grovpic[2],vagospic[2],rifapic[2],azpic[2],balpic[2];
new lcnpic[2],yakpic[2],rmpic[2];
new PlayerRegistered[MAX_PLAYERS];
new bool:TaxiON[MAX_PLAYERS];
new bool:MedicON[MAX_PLAYERS];
new bool:MechanicON[MAX_PLAYERS];
new bool:PoliceON[MAX_PLAYERS];
new gamemodeloaded;
new Medicines[MAX_PLAYERS];
new gunsklad[8];
new armyammo;
new bool:gym_cloakroom[MAX_PLAYERS];
new PlayerName[MAX_PLAYERS][MAX_PLAYER_NAME];
new FrakCD;
new PlayerText:CaptureTD[MAX_PLAYERS][7];
new lesspick[2];
new fishing[2];
new spawnpick[2];
new ashpick[2];
new sklad;
new policiapick[2];
new gunjob;
new stolovkapick[2];
new avtosalonpick[2];
new bankpick[2];
new voenkomatpick[2];
#define GCASH           150
#define D_GUNJOB        2227
#define D_GUNCJOB       2228
#define cWHITE FFFFFF
new bool:IsCapture;

enum Ganginfa
{
	capture,
	score,
	captureid,
	gangnumber
}
new GangInfo[MAX_GANGS][Ganginfa];
new	PlayerText:RabotaGruz[MAX_PLAYERS][5];
new	PlayerText:CaptureBIZ[MAX_PLAYERS][3];
new PlayerUseHeal[MAX_PLAYERS];
new gCurHour;
new gCurMinutes;
new set_name = -1;
new AdvertTime;
new NewsPrice[40],CallPrice[2], SmsPrice[2], AdvertPrice[2];
new SmsNews[2];
new CallNews[2];
new TOTALBIZZ, TOTALADVERT[2], TOTALVEH, TOTALHOUSE; // TOTALPRODUCT, TOTALFUEL
new engine,lights,alarm,doors,bonnet,boot,objective;
new years, months, days;
new Pick;
new query[2045],coordh[90],coordv[90],boordh[256];

new bool:Engine[MAX_VEHICLES];
new bool:Lights[MAX_VEHICLES];
new bool:IsLocked[MAX_VEHICLES];
new Fuel[MAX_VEHICLES] = 150;
new EnterVehicle[MAX_PLAYERS] = {INVALID_VEHICLE_ID, ...};

new UseWork[MAX_PLAYERS]; // 1 - шахта, 2 - лесопилка, 3 - оружейный завод

new bool:PlayerFuelMes[MAX_VEHICLES];
static const stock legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

enum CUFF
{
	pCuffer,
	pCuffee
}
new pCuff[MAX_PLAYERS][CUFF];

new bool:EtherCalled[MAX_PLAYERS];
new bool:Ether[MAX_PLAYERS];
new bool:EtherLive[MAX_PLAYERS];
new bool:EtherCall[2];
new bool:EtherSms[2];
new bool:Phone[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new bool:TPC[MAX_PLAYERS];
new bool:times[MAX_PLAYERS];
new InShop[MAX_PLAYERS];
new bool:PlayerLogged[MAX_PLAYERS];
new bool:PlayerSpawned[MAX_PLAYERS];
new ReFuelTimer[MAX_PLAYERS];
new DrivingTestTime[MAX_PLAYERS];
new FlyTestTime[MAX_PLAYERS];
new WaterTestTime[MAX_PLAYERS];

enum AcStructInformation
{
Float:LastOnFootPosition[3],
	CheckMapTP,
	MapTPLastPick,
Float:MapTP[3]
}
new AcStruct[MAX_PLAYERS][AcStructInformation];

new bool:AdminLogged[MAX_PLAYERS];
new bool:PlayerUseMask[MAX_PLAYERS];
new MaskTimer[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new PlayerLogTries[MAX_PLAYERS];
new STimer[MAX_PLAYERS];
new PlayerStats[MAX_PLAYERS] = -1;
new NameStats[MAX_PLAYERS];
new ClothesRound[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new Float:PlayerArmour[MAX_PLAYERS];
new InShopSkin[MAX_PLAYERS];
//new Weapons[MAX_PLAYERS][47];
new HouseOffer[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
new pPressed[MAX_PLAYERS];
new colors[MAX_PLAYERS][2];
new VehTest[MAX_PLAYERS];
new PlayerLastTick[MAX_PLAYERS];
new Text3D:BusText3D[MAX_PLAYERS];
new Text3D:TaxiText3D[MAX_PLAYERS];
new war = 0;
new Ujahhs[MAX_PLAYERS];
new mass_pass[MAX_PLAYERS][11];

new PlayerText:SecurityCode[MAX_PLAYERS][10];
new PlayerText:StatusWork[MAX_PLAYERS][6];
new PlayerText:GreenZoneText[MAX_PLAYERS][4];

new Text:AnimDraw;
new Text:Button[6];
new PlayerText:AvtosalonTD[MAX_PLAYERS][16];

new Text:HungerBackground[2];
//new PlayerText:HungerProgress[MAX_PLAYERS];

new objectplayerid;

enum admInfo
{
    admGoto,
	admGethere,
	admSpectate,
	admTimeMin,
	admReport,
	admReputation,
	admDostup
}
new AdminInfo[MAX_PLAYERS][admInfo];

enum pInfo {
	pID,
 	pAlog,
	pPassword[32],
	pSecurityCode,
	pCheckCode,
	pInputCode,
	pMail[64],
	pMailConfirmed,
	pIP[16],
	pLastIP[16],
	pRegIP[16],
	pRegData[15],
	pVhData[15],
	pLevel,
	pCash,
	pBank,
	pAdmin,
	pModel,
	pMemberSkin,
	pSex,
	pAge,
	pExp,
	pMuted,
	pWarn,
	pLics[16],
	pLic[4],
	pGun[13],
	pAmmo[13],
	pGunSkill[8],
	pLeader,
	pTempLeader,
	pRank,
	pVoennik,
	pMember,
	pPick,
	pCheckTime,
	pNews,
	pPhoneBalance,
	pPhoneNumber,
	pText[4],
	pTexts[20],
	pJail,
	pJailTime,
	pWanted,
	pWantedTime,
	pWantedWho[MAX_PLAYER_NAME],
	pWantedReason[32],
Float:pHeal,
	pDrugs,
	pPatron,
	pGunAmount,
	pCrimes,
	pJob,
	pColor,
	pMarried,
	pWhoMarried[MAX_PLAYER_NAME],
	pReferal[MAX_PLAYER_NAME],
	pRefMoney,
	pPayCheck,
	pCharity,
	pVip,
	pVipTime,
	pTime,
	pBusTime,
	pFightStyle,
	pCredits,
	pTotalCredits,
	pSkin[3],
	pSpawnChange,
	pHunger,
	Float:pHealthS,
	pSportExp,
	pOnline,
	pZakon,
	pCity,
	pRepcars[16],
	pRepcar[2],
	pImproves[32],
	pImprove[4],
	pBed,
	pWatch,
	pCiggare,
	pSprunk,
	pAptechka,
	pMusic,
	pMask,
	pTruckSkill,
	pTaxiSkill,
   	pWorkSalary,
 	// Машина
 	cModel,
	cClass,
	cFuel,
	cColor[2],
	cLock,
	cCost,
	cVehcom[64],
	cVehcoms[14],
	cPaintjob,
	Float:cProbeg,
	pVehicleKey,
	//------------
	SalonCarID,
	GruzCarID,
	TruckerCarID,
	TaxiCarID,
	BusCarID,
	MechanicCarID,
	PlayerCarID,
	//-------------
    Float:pPos[3],
	pName[MAX_PLAYER_NAME],
	pSettings,
	pNumberVehicle[30],
	pRegVehicle,
	pFishki,
	pCarA,
	pCarB,
	pCarC,
	pCarD,
	ACCheck,
	Spectating[2],
	PlayerText:SpecTxt,
	pAFK,
    Float:PosX,
    Float:PosY,
    Float:PosZ,
    pInt,
    pWorld,
    pTruckLevel,
    pYdochka,
    pRaki
};
new PI[MAX_PLAYERS][pInfo];

enum e_porch
{
	pID,
	Float:pEnterX,
	Float:pEnterY,
	Float:pEnterZ,
	Float:pCarX, 
	Float:pCarY,
	Float:pCarZ,
	Float:pCarA,
	pFirstFlat,
	pEnterPick
}
new PorchInfo[MAX_PORCHES][e_porch];

enum e_porch_house
{
	hID,
	Float:hEntrx,
	Float:hEntry,
	Float:hEntrz,
	hOwner[MAX_PLAYER_NAME+1],
	hOwnerID,
	hPrice,
	hDays,
	hMIcon,
	hPickup
}
new PorchHouseInfo[MAX_PORCH_HOUSES][e_porch_house];
enum hInfo
{
	hID,
Float:hEntrx,
Float:hEntry,
Float:hEntrz,
Float:hExitx,
Float:hExity,
Float:hExitz,
Float:hCarx,
Float:hCary,
Float:hCarz,
Float:hCarfa,
	hOwner[MAX_PLAYER_NAME],
	hDiscript[16],
	hPrice,
	hBuyPrice,
	hInt,
	hVirtual,
	hLock,
	hMIcon,
	hPickup,
Text3D:hPickupExit,
	hOplata,
	hHeal,
bool:hRob
};
new HouseInfo[MAX_HOUSES][hInfo];
new lastveh;

enum atm
{
	aID,
Float:aX,
Float:aY,
Float:aZ,
Float:arX,
Float:arY,
Float:arZ,
};
new ATMInfo[MAX_ATM][atm], TOTALATM;
new ATM[MAX_ATM];
new Text3D:LABELATM[MAX_ATM];
new opgorexi;
new opgygi;
new kaptit;
enum bzInfo
{
	bID,
Float:bEntrx,
Float:bEntry,
Float:bEntrz,
Float:bExitx,
Float:bExity,
Float:bExitz,
Float:bMenux,
Float:bMenuy,
Float:bMenuz,
	bOwner[MAX_PLAYER_NAME],
	bPrice,
	bBuyPrice,
	bMoney,
	bType,
	bLic,
	bInt,
	bVirtual,
	bLock,
	bEnter,
	bMIcon,
	bIcon,
	bPickup,
	bPickupExit,
	bName[32],
	bProduct,
	bTill,
	bMenu,
	bLockTime,
	bMafia,
	bZahvat
};
new BizzInfo[MAX_BIZZ][bzInfo];
#define DSL                             DIALOG_STYLE_LIST
#define DSP                             DIALOG_STYLE_PASSWORLD
#define DSI                             DIALOG_STYLE_INPUT
#define DSM                             DIALOG_STYLE_MSGBOX
new OnmZONE[1][20];
new ZoneOnBattlem[1];
new ZoneTimerm[1];
new allowedmfactions[] = {TEAM_OPGYG,TEAM_OPGOR};
new zons;
enum MzoneInfo
{
	mFrakVlad,
	mNapad,
}

new MZInfo[1][MzoneInfo];
new startwar = 0;

new Text3D:LABELBIZZ[MAX_BIZZ];
new BizzPay[MAX_BIZZ];
new fuelcheck;

enum vInfo
{
	vID,
	vModel,
	vColors[16],
	vColor[2],
Float:vPos_X,
Float:vPos_Y,
Float:vPos_Z,
Float:vPos_FA,
	vInt,
	vWorld,
	vVehicle,
	vFraction,
	vStatus,
	vCost
};
new VehInfo[MAX_VCARS][vInfo];

enum aInfo
{
	aText[128],
	aName[MAX_PLAYER_NAME],
	aPhone,
};
new AdvertInfo[MAX_ADVERTS][2][aInfo];

new FracBank[11];
new DrugsBank[MAX_FRACTIONS];

static const stock Fraction_Name[MAX_FRACTIONS][32] = {
	"Нет",
	"Поселковый совет",
	"Полиция",
	"Свободно",
	"ФСБ (Разработка)",
	"СМП-Б",
	"Свободно",
	"Свободно",
	"Свободно",
	"Свободно",
	"Свободно",
	"Свободно",
	"Армия",
	"Свободно",
	"Свободно",
	"Русская Мафия",
	"Украинская Мафия",
	"Уличные Гонщики (Разработка)",
	"ТРК ''Релакс''",
	"Свободно",
	"Свободно",
	"Свободно",
	"Свободно",
	"Свободно",
	"Свободно",
	"Свободно"
};

static const stock Fraction_Rang[MAX_FRACTIONS][MAX_RANGS][32] = {
	{"Нет","","","","","","","","","","","","","","","",""},
	{"","Водитель","Охранник","Начальник охраны","Адвокат","Гл.Адвокат","Министр МВД","Министр МЗ","Депутат","Зам.Мэра","Мэр","","","","","",""},
	{"","Рядовой","Сержант","Ст.сержант","Лейтенант","Ст.Лейтенант","Капитан","Майор","Подполковник","Полковник","Генерал","","Генерал","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","Интерн","Санитар","Медбрат","Спасатель","Нарколог","Доктор","Психолог","Хирург","Заместитель главного врача","Главный врач","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","Плейя","Хастла","Килла","Юонг","Гангста","О.Г.","Мобста","Де Кинг","Легенд","Мэд Дог","","","","","",""},
	{"","Блайд","Бастер","Крекер","Гун Бро","Ап Бро","Ганкстер","Федерал Блок","Фолкс","Райч Нига","Биг Вилли","","","","","",""},
	{"","Раро","Эстраньо","Навато","Ординарио","Эстимадро","Латино","Амиго","Криминаль","Проксимо","Падре","","","","","",""},
	{"","Перро","Тирадор","Геттор","Лас Герас","Мирандо","Сабио","Инвасор","Тессореро","Нестро","Падре","","","","","",""},
	{"","Новато","Ординарио","Локал","Вирификадо","V.E.G.","Ассесино","Бандито","Лидер V.E.G.","Проксимо","Падре","","","","","",""},
	{"","Рядовой","Мл.Сержант","Сержант","Старшина","Лейтенант","Капитан","Майор","Подполковник","Полковник","Генерал","","Генерал","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","Новицио","Ассосиато","Сомбаттенте","Солдато","Боец","Сотто-Капо","Капо","Босс","Консильере","Дон","","","","","",""},
	{"","Вакасю","Кедай","Сятейгасира","Вакагасира","Со-хобунтё","Камбу","Оядзи","Сайко комон","Оябун-кобун","Кумите","","","","","",""},
	{"","Щипач","Браток","Шнырь","Фраер","Барыга","Сторожила","Жиган","Свояк","Авторитет","Вор в законе","","","","","",""},
	{"","Стажер","Звукооператор","Звукорежиссер","Репортёр","Ведущий","Редактор","Гл.Редактор","Тех.Редактор","Программный редактор","Директор","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","",""}
};

static const stock Fraction_Pay[MAX_FRACTIONS][17] = {
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{1000,3500,6000,8500,11000,13500,16000,18500,21000,23500,0,0,0,0,0,0}, // Мэрия
	{1000,2000,3000,4000,5000,6000,7000,8000,10000,15000,0,0,0,0,0,0}, // Полиция
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{2500,3000,3500,4000,4500,5000,5500,6000,8000,15000,0,0,0,0,0,0}, // Больница пгт.Батырево
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Закрыто
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Закрыто
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Закрыто
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Закрыто
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Закрыто
	{2000,4000,5000,7000,8000,10000,13000,16000,18000,20000,0,0,0,0,0,0}, // Армия
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // LCN
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // Yakuza
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // RM
	{3500,4500,5500,6500,7500,8500,9500,10500,11500,12500,0,0,0,0,0,0}, // ТРК ''Релакс''
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} // Свободный слот для организаций
};

static const stock Fraction_Skin[MAX_FRACTIONS][8] = {
	{0,0,0,0,0,0,0,0}, // Гражданский
	{17,295,187,164,165,228,147,150}, // Мэрия пгт.Батырево
    {282,283,266,285,265,76}, // Полиция
    {280,284,282,283,266,285,265,211}, // SFPD
    {163,164,165,166,211,295,285,286}, // FBI
    {274,275,276,70,148}, // Больница пгт.Батырево
	{11,189,171,172,0,0,0,0}, // Автошкола
	{105,106,107,195,269,270,271,0}, // Закрыто
	{102,103,104,195,0,0,0,0}, // Закрыто
	{173,174,175,226,273,0,0,0}, // Закрыто
	{193,114,115,116,292,0,0,0}, // Закрыто
	{108,109,110,56,0,0,0,0}, // Закрыто
	{287,191,61,255,0,0,0}, // Армия
	{0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{223,124,127,290,113,117,98,93}, // LCN
	{117,118,120,122,123,169,263}, // Yakuza
	{46,111,112,126,125,272,233,43}, // RM
	{188,170,261,219}, // ТРК ''Релакс''
	{187,186,170,188,20,141,150,219}, // Закрыто
	{187,186,170,188,20,141,150,219}, // Закрыто
	{280,284,282,283,266,285,265,211}, // Закрыто
	{274,275,276,70,148,150,71,295}, // Больница SF
	{274,275,276,70,148,150,71,295}, // Больница LV
	{17,59,187,164,165,141,240,150}, // Мэрия SF
	{17,59,187,164,165,141,240,150} // Мэрия LV
};

new MZSafeTime[3] = 0;
new FrakCDm[20];

new OnZONE[MAX_GANGZONES][20];
new ZoneOnBattle[MAX_GANGZONES];
new allowedfactions[] = {7, 8, 9, 10, 11};
new GZSafeTime[MAX_GANGZONES];
new GangTotalGz[5]; //rifa,aztec,ballas,grove,vagos
enum GzoneInfo
{
	gID,
Float:gCoords[4],
	gFrak,
	gNapad
}
new GZInfo[MAX_GANGZONES][GzoneInfo];
new GangZone[MAX_GANGZONES];

/* 						АВТО ДЛЯ ФРАКЦИЙ									*/
new armyngcar[2];
new meriacar[2];
new policiacar[2];
new smicar[2];
new bolkacar[2];
new opg1car[2];
new opg2car[2];
static const stock Float:DrivingTest[][6] = {
	{689.1038,443.8523,11.6208,695.3602,453.0860,11.6213},
	{695.3602,453.0860,11.6213,694.3532,461.6593,11.6215},
	{694.3532,461.6593,11.6215,696.4544,470.4240,11.6209},
	{696.4544,470.4240,11.6209,681.1007,461.3087,11.6201},
	{681.1007,461.3087,11.6201,686.2193,472.4972,11.6234},
	{686.2193,472.4972,11.6234,678.2515,456.7473,12.2940},
	{678.2515,456.7473,12.2940,674.7188,475.5619,11.6217},
	{674.7188,475.5619,11.6217,656.2324,454.7915,11.6217},
	{656.2324,454.7915,11.6217,680.9903,430.6278,11.6226},
	{680.9903,430.6278,11.6226,649.3519,402.4631,11.8151},
	{649.3519,402.4631,11.8151,603.5487,408.5907,11.8139},
	{603.5487,408.5907,11.8139,563.7420,370.8742,11.6291},
	{563.7420,370.8742,11.6291,629.7734,551.8146,11.6758},
	{629.7734,551.8146,11.6758,546.6478,591.0586,11.6204},
	{546.6478,591.0586,11.6204,566.0526,653.2325,11.6216},
	{566.0526,653.2325,11.6216,381.1695,739.9445,11.6210},
	{381.1695,739.9445,11.6210,232.9354,796.2977,11.6279},
	{232.9354,796.2977,11.6279,175.2383,693.8950,11.6229},
	{175.2383,693.8950,11.6229,117.5118,542.4460,11.6213},
	{117.5118,542.4460,11.6213,177.0246,511.2003,11.6230},
	{177.0246,511.2003,11.6230,275.3051,472.7464,11.6223},
	{275.3051,472.7464,11.6223,296.2828,521.3855,11.6220},
	{296.2828,521.3855,11.6220,412.6223,478.0352,11.6756},
	{412.6223,478.0352,11.6756,571.3005,416.6056,11.6726},
	{571.3005,416.6056,11.6726,605.7759,490.9171,11.6787},
	{605.7759,490.9171,11.6787,631.0452,480.3650,11.8008},
	{631.0452,480.3650,11.8008,678.8832,427.4677,11.6207},
	{678.8832,427.4677,11.6207,0.0,0.0,0.0}
};

static const stock Float:FlyTest[][6] = {
	{-2010.7413,-39.4386,95.4837,-2006.9191,180.9614,95.4578},
	{-2006.9191,180.9614,95.4578,-2004.4702,472.4755,95.4234},
	{-2004.4702,472.4755,95.4234,-2117.8350,503.7773,95.4222},
	{-2117.8350,503.7773,95.4222,-2281.6128,509.3513,95.4102},
	{-2281.6128,509.3513,95.4102,-2458.8994,467.2858,95.3948},
	{-2458.8994,467.2858,95.3948,-2539.0950,334.9100,52.3313},
	{-2539.0950,334.9100,52.3313,-2462.2209,203.1778,97.3129},
	{-2462.2209,203.1778,97.3129,-2216.7964,208.8197,61.5710},
	{-2216.7964,208.8197,61.5710,-2154.8650,131.3025,69.0865},
	{-2154.8650,131.3025,69.0865,-2164.0918,-6.3266,69.0949},
	{-2164.0918,-6.3266,69.0949,-2136.0110,-166.9167,69.1069},
	{-2136.0110,-166.9167,69.1069,-2038.3370,-216.1395,35.7256},
	{-2038.3370,-216.1395,35.7256,0.0,0.0,0.0}
};

static const stock Float:WaterTest[][6] = {
	{-2969.5051,570.6226,-1.1616,-2982.6321,664.5944,-1.1298},
	{-2982.6321,664.5944,-1.1298,-2985.9182,841.5399,-0.7251},
	{-2985.9182,841.5399,-0.7251,-2997.0684,1099.2870,-0.4735},
	{-2997.0684,1099.2870,-0.4735,-2944.2852,1245.3586,-0.6197},
	{-2944.2852,1245.3586,-0.6197,-2849.8442,1325.6006,-0.6607},
	{-2849.8442,1325.6006,-0.6607,-2766.9316,1347.0320,-0.9388},
	{-2766.9316,1347.0320,-0.9388,-2752.9666,1445.9756,-1.0134},
	{-2752.9666,1445.9756,-1.0134,-2869.2339,1386.4480,-0.7352},
	{-2869.2339,1386.4480,-0.7352,-2999.1572,1246.1807,-1.2257},
	{-2999.1572,1246.1807,-1.2257,-3029.1658,1103.0569,-0.7395},
	{-3029.1658,1103.0569,-0.7395,-3021.3987,896.7744,-1.1502},
	{-3021.3987,896.7744,-1.1502,-3019.3062,676.8632,-0.8812},
	{-3019.3062,676.8632,-0.8812,-2963.1921,501.1066,-0.7070},
	{-2963.1921,501.1066,-0.7070,0.0,0.0,0.0}
};

static const stock Float:BusCityLV[][] = {
	{-710.8743,965.0538,12.1026,-609.7674,965.0527,12.1141},
	{-609.7674,965.0527,12.1141,-393.3902,964.2781,12.0941},
	{-393.3902,964.2781,12.0941,-385.1540,928.7322,12.0941},
	{-385.1540,928.7322,12.0941,386.7371,705.1396,12.1264},
	{-386.7371,705.1396,12.1264,-386.1244,630.9739,12.0951},
	{-386.1244,630.9739,12.0951,-284.6586,592.7407,12.0941},
	{-284.6586,592.7407,12.0941,-66.6421,564.5627,12.0949},
	{-66.6421,564.5627,12.0949,-62.1453,531.1238,12.0951},
	{-62.1453,531.1238,12.0951,-94.2526,334.8975,12.0951},
	{-94.2526,334.8975,12.0951,-111.6479,230.4643,12.3694},
	{-111.6479,230.4643,12.3694,-141.8777,48.0396,12.3736},
	{-141.8777,48.0396,12.3736,-173.2749,-145.4125,1.4005},
	{-173.2749,-145.4125,1.4005,-120.8839,-157.7223,1.3787},
	{-120.8839,-157.7223,1.3787,-26.3597,-156.9720,3.1349},
	{-26.3597,-156.9720,3.1349,115.3118,-157.8755,4.3067},
	{115.3118,-157.8755,4.3067,196.6042,-156.8860,4.3259},
	{196.6042,-156.8860,4.3259,202.9656,-205.3640,4.3245},
	{202.9656,-205.3640,4.3245,202.9759,-303.2773,4.3246},
	{202.9759,-303.2773,4.3246,199.9220,-357.2036,4.2581},
	{199.9220,-357.2036,4.2581,208.7955,-340.2405,4.3085},
	{208.7955,-340.2405,4.3085,208.1037,-163.4628,4.3234},
	{208.1037,-163.4628,4.3234,177.6586,-152.7642,4.3418},
	{177.6586,-152.7642,4.3418,-134.7911,-149.8063,1.3420},
	{-134.7911,-149.8063,1.3420,-163.3210,-153.0159,1.4160},
	{-163.3210,-153.0159,1.4160,-165.5533,-131.4632,1.3825},
	{-165.5533,-131.4632,1.3825,-151.6434,-46.1005,4.3599},
	{-151.6434,-46.1005,4.3599, -131.2660,76.4276,12.3809},
	{-131.2660,76.4276,12.3809,-94.1060,298.2881,12.3785},
	{-94.1060,298.2881,12.3785,-51.4914,545.6058,12.0951},
	{-51.4914,545.6058,12.0951,-284.4241,607.8356,12.0941},
	{-284.4241,607.8356,12.0941,-362.6739,614.9729,12.0951},
	{-362.6739,614.9729,12.0951,-372.2780,656.7633,12.0952},
	{-372.2780,656.7633,12.0952,-371.2540,954.8768,12.0943},
	{-371.2540,954.8768,12.0943,-408.5797,977.6666,12.0949},
	{-408.5797,977.6666,12.0949,-722.0510,979.3763,12.1042},
	{-722.0510,979.3763,12.1042,-744.5497,953.0797,12.2531},
	{-744.5497,953.0797,12.2531,0.0,0.0,0.0}

};

static const stock MaxPassengers[27] =
{
	0x10331113, 0x11311131, 0x11331313, 0x80133301,
	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,
	0x11100031, 0x11130221, 0x33113311, 0x11111101,
	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
	0x13330111, 0xFF131111, 0x0000FF3F
};
new trucker1lvl[2];
new trucker2lvl[2];

static const stock Float:BusCitySF[][] = {
	{-703.5718,964.7751,12.1031,-394.0823,964.3934,12.0938},
	{-394.0823,964.3934,12.0938,-354.9529,964.3803,12.0951},
	{-354.9529,964.3803,12.0951,-110.5897,914.5716,12.0938},
	{-110.5897,914.5716,12.0938,0.3837,873.1287,12.0938},
	{0.3837,873.1287,12.0938,28.6052,890.5668,12.0931},
	{28.6052,890.5668,12.0931,86.0752,1090.2957,12.0941},
	{86.0752,1090.2957,12.0941,132.2034,1318.8555,12.0942},
	{132.2034,1318.8555,12.0942,163.4416,1472.8859,12.0941},
	{163.4416,1472.8859,12.0941,195.7612,1483.2920,12.1747},
	{195.7612,1483.2920,12.1747,193.4783,1443.7032,12.1560},
	{193.4783,1443.7032,12.1560,176.9738,1361.3123,12.1751},
	{176.9738,1361.3123,12.1751,140.2091,1182.3271,12.1951},
	{140.2091,1182.3271,12.1951,108.0496,1091.7445,12.0940},
	{108.0496,1091.7445,12.0940,56.2064,1044.4491,12.0930},
	{56.2064,1044.4491,12.0930,43.1755,966.8984,12.0941},
	{43.1755,966.8984,12.0941,16.5029,896.0454,12.0941},
	{16.5029,896.0454,12.0941,-25.4146,898.3145,12.0934},
	{-25.4146,898.3145,12.0934,-131.4482,938.7707,12.0943},
	{-131.4482,938.7707,12.0943,-363.7038,978.2903,12.0951},
	{-363.7038,978.2903,12.0951,-734.9941,979.1884,12.1041},
	{-734.9941,979.1884,12.1041,-739.6608,951.0529,12.2531},
	{-739.6608,951.0529,12.2531,0.0,0.0,0.0}

};

static const stock Float:BatirevoUgniy[][] = {
	{-709.9035,964.9083,12.1033,-393.7387,964.7877,12.0940},
	{-393.7387,964.7877,12.0940,-358.5087,964.8270,12.0934},
	{-358.5087,964.8270,12.0934,-128.2780,922.3096,12.0941},
	{-128.2780,922.3096,12.0941,12.6816,869.7091,12.0951},
	{12.6816,869.7091,12.0951,190.8645,802.4684,12.0944},
	{190.8645,802.4684,12.0944,200.5778,798.8754,12.0940},
	{200.5778,798.8754,12.0940,235.8533,823.1960,12.0951},
	{235.8533,823.1960,12.0951,274.0558,972.5849,12.4329},
	{274.0558,972.5849,12.4329,293.0108,1136.8180,12.0941},
	{293.0108,1136.8180,12.0941,305.4981,1261.8273,25.8100},
	{305.4981,1261.8273,25.8100,320.3944,1419.3093,25.3498},
	{320.3944,1419.3093,25.3498,327.8776,1490.6398,12.0923},
	{327.8776,1490.6398,12.0923,337.9245,1499.6969,12.1529},
	{337.9245,1499.6969,12.1529,381.6593,1539.1776,12.1768},
	{381.6593,1539.1776,12.1768,388.4685,1619.8303,12.2051},
	{388.4685,1619.8303,12.2051,424.6226,1623.6438,12.1995},
	{424.6226,1623.6438,12.1995,700.6777,1601.0848,12.1844},
	{700.6777,1601.0848,12.1844,939.8496,1594.1978,12.2079},
	{939.8496,1594.1978,12.2079,915.2112,1600.4908,12.1681},
	{915.2112,1600.4908,12.1681,651.0947,1610.8723,12.1780},
	{651.0947,1610.8723,12.1780,398.8486,1631.2706,12.1811},
	{398.8486,1631.2706,12.1811,374.9442,1553.3218,12.1387},
	{374.9442,1553.3218,12.1387,333.4601,1502.5743,12.1249},
	{333.4601,1502.5743,12.1249,317.7871,1488.5026,12.1397},
	{317.7871,1488.5026,12.1397,306.5667,1374.6570,25.8116},
	{306.5667,1374.6570,25.8116,283.8235,1145.6176,12.1025},
	{283.8235,1145.6176,12.1025,222.8062,816.3630,12.0946},
	{222.8062,816.3630,12.0946, 177.7269,823.2864,12.0942},
	{177.7269,823.2864,12.0942,67.5694,863.3689,12.0951},
	{67.5694,863.3689,12.0951,-126.2813,936.6938,12.0941},
	{-126.2813,936.6938,12.0941,-362.7570,978.7401,12.0951},
	{-362.7570,978.7401,12.0951,-722.5858,980.7871,12.1740},
	{-722.5858,980.7871,12.1740,-736.7625,957.4746,12.2532},
	{-736.7625,957.4746,12.2532,0.0, 0.0, 0.0}

};

static const stock Float:BusSchool[][] = {
	{-705.6362,964.0098,12.1720,-394.0353,963.9706,12.0951},
	{-394.0353,963.9706,12.0951,-350.3504,963.8916,12.0951},
	{-350.3504,963.8916,12.0951,-129.0002,923.0370,12.0942},
	{-129.0002,923.0370,12.0942,81.6576,843.8359,12.0929},
	{81.6576,843.8359,12.0929,201.9471,798.8414,12.0951},
	{201.9471,798.8414,12.0951,235.8795,786.4230,12.0924},
	{235.8795,786.4230,12.0924,461.9827,699.8640,12.0941},
	{461.9827,699.8640,12.0941,668.1651,622.1927,12.0941},
	{668.1651,622.1927,12.0941,672.9017,588.3025,12.0941},
	{672.9017,588.3025,12.0941,632.5228,482.1779,12.2911},
	{632.5228,482.1779,12.2911,611.4156,429.1083,12.2850},
	{611.4156,429.1083,12.2850,628.2935,406.6939,12.2530},
	{628.2935,406.6939,12.2530,644.9565,399.8405,12.2284},
	{644.9565,399.8405,12.2284,691.6736,382.5881,12.2456},
	{691.6736,382.5881,12.2456,678.5054,332.9734,12.3053},
	{678.5054,332.9734,12.3053,652.9766,336.0258,12.1041},
	{652.9766,336.0258,12.1041,364.4926,450.4691,12.1077},
	{364.4926,450.4691,12.1077,295.6898,475.5013,12.0952},
	{295.6898,475.5013,12.0952,166.6491,526.6204,12.0931},
	{166.6491,526.6204,12.0931,138.7284,536.9307,12.0941},
	{138.7284,536.9307,12.0941,-30.5667,573.5156,12.0952},
	{-30.5667,573.5156,12.0952,-295.5928,608.0855,12.0950},
	{-295.5928,608.0855,12.0950,-339.5938,615.3359,12.1261},
	{-339.5938,615.3359,12.1261,-371.5832,638.7068,12.0941},
	{-371.5832,638.7068,12.0941,-371.8217,955.3319,12.0951},
	{-371.8217,955.3319,12.0951,-723.4140,978.8903,12.1041},
	{-723.4140,978.8903,12.1041,-743.4382,954.0220,12.2532},
	{-743.4382,954.0220,12.2532,0.0,0.0,0.0}
};

static const stock Float:BusLS[][] = {
	{1808.7693,-1889.6619,13.5441, 1824.0190,-1874.4978,13.4840},
	{1824.0190,-1874.4978,13.4840, 1824.0060,-1773.2596,13.5162},
	{1824.0060,-1773.2596,13.5162, 1824.0614,-1635.0193,13.5162},
	{1824.0614,-1635.0193,13.5162, 1844.6427,-1520.9193,13.5105},
	{1844.6427,-1520.9193,13.5105, 1853.1488,-1389.1710,13.5240},
	{1853.1488,-1389.1710,13.5240, 1852.5815,-1201.0886,22.2652},
	{1852.5815,-1201.0886,22.2652, 1828.0586,-1178.4015,23.7647},
	{1828.0586,-1178.4015,23.7647, 1743.3359,-1159.2402,23.7648},
	{1743.3359,-1159.2402,23.7648, 1657.0310,-1158.5968,23.9014},
	{1657.0310,-1158.5968,23.9014, 1557.1129,-1158.6820,24.0388}, /////////////////
	{1557.1129,-1158.6820,24.0388, 1437.4683,-1158.1476,23.7897},
	{1437.4683,-1158.1476,23.7897, 1376.5890,-1138.8882,23.7887},
	{1376.5890,-1138.8882,23.7887, 1360.5190,-1121.9950,23.8286},
	{1360.5190,-1121.9950,23.8286, 1378.7158,-965.2871,33.8278},
	{1378.7158,-965.2871,33.8278, 1395.1383,-950.7330,34.7365},
	{1395.1383,-950.7330,34.7365, 1482.0538,-975.8360,36.9147},
	{1482.0538,-975.8360,36.9147, 1588.9043,-991.8221,47.5224},
	{1588.9043,-991.8221,47.5224, 1690.7782,-925.4719,52.2945},
	{1690.7782,-925.4719,52.2945, 1710.1456,-811.7196,56.6823},
	{1710.1456,-811.7196,56.6823, 1715.7312,-658.3969,42.8951},
	{1715.7312,-658.3969,42.8951, 1703.9282,-455.4938,33.5071},
	{1703.9282,-455.4938,33.5071, 1677.1586,-251.9822,43.3416},
	{1677.1586,-251.9822,43.3416, 1654.6398,-33.1713,36.6220},
	{1654.6398,-33.1713,36.6220, 1626.1002,136.1207,36.2453},
	{1626.1002,136.1207,36.2453, 1702.3450,390.6835,30.3718},
	{1702.3450,390.6835,30.3718, 1778.0345,612.6203,21.4697},
	{1778.0345,612.6203,21.4697, 1806.4822,812.1041,11.0276},
	{1806.4822,812.1041,11.0276, 1767.3173,852.2102,10.4838},
	{1767.3173,852.2102,10.4838, 1619.8535,852.7777,6.8647},
	{1619.8535,852.7777,6.8647, 1423.8711,863.6336,6.9534},
	{1423.8711,863.6336,6.9534, 1259.5035,935.0343,14.0343},
	{1259.5035,935.0343,14.0343, 1108.6045,837.5462,10.8190},
	{1108.6045,837.5462,10.8190, 951.2515,750.0100,10.8096},
	{951.2515,750.0100,10.8096, 780.5138,689.3925,11.4581},
	{780.5138,689.3925,11.4581, 559.9733,696.3895,3.4388},
	{559.9733,696.3895,3.4388, 367.5167,783.2415,6.5434},
	{367.5167,783.2415,6.5434, 272.1324,877.9490,21.3849},
	{272.1324,877.9490,21.3849, 235.9642,956.7602,28.0319},
	{235.9642,956.7602,28.0319, 244.9654,975.6467,28.3250},
	{244.9654,975.6467,28.3250, 397.9491,1016.9831,28.5701},
	{397.9491,1016.9831,28.5701, 564.1965,1060.3011,28.5695},
	{564.1965,1060.3011,28.5695, 718.3242,1101.9430,28.5811},
	{718.3242,1101.9430,28.5811, 802.7499,1132.6182,28.5613},
	{802.7499,1132.6182,28.5613, 832.3854,1119.7511,29.9747},
	{832.3854,1119.7511,29.9747, 914.5725,941.4826,13.3511},
	{914.5725,941.4826,13.3511, 832.3351,854.2448,12.4807},
	{832.3351,854.2448,12.4807, 890.7936,891.7736,13.4848}, //////////////////
	{890.7936,891.7736,13.4848, 887.9802,1028.9658,16.6697},
	{887.9802,1028.9658,16.6697, 827.2870,1127.1987,30.0681},
	{827.2870,1127.1987,30.0681, 797.9722,1136.6748,28.4726},
	{797.9722,1136.6748,28.4726, 622.5432,1083.0826,28.4664},
	{622.5432,1083.0826,28.4664, 430.2862,1031.9989,28.4727},
	{430.2862,1031.9989,28.4727, 239.7596,980.1387,28.3301},
	{239.7596,980.1387,28.3301, 229.4479,955.5310,28.0652},
	{229.4479,955.5310,28.0652, 299.3630,797.7305,14.8966},
	{299.3630,797.7305,14.8966, 426.2678,601.2230,19.0801},
	{426.2678,601.2230,19.0801, 512.9183,478.3800,19.0631},
	{512.9183,478.3800,19.0631, 615.2172,326.4894,19.7042},
	{615.2172,326.4894,19.7042, 605.2267,308.3843,19.6450},
	{605.2267,308.3843,19.6450, 522.1287,247.3229,14.6816},
	{522.1287,247.3229,14.6816, 511.1678,212.9783,14.1755},
	{511.1678,212.9783,14.1755, 524.8848,55.7221,20.7846},
	{524.8848,55.7221,20.7846, 525.1271,-117.4125,37.5993},
	{525.1271,-117.4125,37.5993, 543.7299,-144.9373,37.3545},
	{543.7299,-144.9373,37.3545, 742.2243,-164.6572,19.2261},
	{742.2243,-164.6572,19.2261, 937.1564,-180.5933,11.0567},
	{937.1564,-180.5933,11.0567, 1089.0780,-190.0154,40.2116},
	{1089.0780,-190.0154,40.2116, 1187.1486,-185.4979,39.7762},
	{1187.1486,-185.4979,39.7762, 1251.4387,-354.2089,4.3749},
	{1251.4387,-354.2089,4.3749, 1228.0728,-559.8834,42.2943},
	{1228.0728,-559.8834,42.2943, 1154.3828,-773.3051,58.0512},
	{1154.3828,-773.3051,58.0512, 1156.1265,-925.4431,43.0940},
	{1156.1265,-925.4431,43.0940, 1180.6953,-953.1128,42.7677},
	{1180.6953,-953.1128,42.7677, 1268.9562,-936.8261,42.3414},
	{1268.9562,-936.8261,42.3414, 1347.3760,-943.0712,34.9112},
	{1347.3760,-943.0712,34.9112, 1359.3085,-961.2700,33.8680},
	{1359.3085,-961.2700,33.8680, 1340.5586,-1122.0743,23.8279},
	{1340.5586,-1122.0743,23.8279, 1358.0342,-1143.0795,23.8027},
	{1358.0342,-1143.0795,23.8027, 1436.1731,-1162.8156,23.7961},
	{1436.1731,-1162.8156,23.7961, 1498.9742,-1163.6650,24.0570},
	{1498.9742,-1163.6650,24.0570, 1656.2780,-1163.5833,23.9116},
	{1656.2780,-1163.5833,23.9116, 1728.9275,-1163.5092,23.7771}, ///////////
	{1728.9275,-1163.5092,23.7771, 1828.8960,-1183.5767,23.7642},
	{1828.8960,-1183.5767,23.7642, 1845.8003,-1200.4696,22.3763},
	{1845.8003,-1200.4696,22.3763, 1846.0093,-1298.4708,13.5051},
	{1846.0093,-1298.4708,13.5051, 1846.3126,-1443.3279,13.5332},
	{1846.3126,-1443.3279,13.5332, 1819.3213,-1590.4891,13.4889},
	{1819.3213,-1590.4891,13.4889, 1819.3759,-1711.7463,13.5161},
	{1819.3759,-1711.7463,13.5161, 1819.2158,-1848.1592,13.5477},
	{1819.2158,-1848.1592,13.5477, 1811.9922,-1888.8358,13.5436},
	{1811.9922,-1888.8358,13.5436, 1788.8031,-1905.1083,13.5291},
	{1788.8031,-1905.1083,13.5291, 0.0, 0.0, 0.0}
};

new TotalObject = 0;
/*stock CreateObjectEx(modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0)
{
    TotalObject ++;
    Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,MAX_OBJECTS-TotalObject);
	return CreateObject(modelid, X,  Y,  Z,  rX, rY,  rZ, DrawDistance);
}
stock DestroyObjectEx(objectid)
{
	TotalObject --;
    Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,MAX_OBJECTS-TotalObject);
	return DestroyObject(objectid);
}*/
//#define CreateObject CreateObjectEx
//#define DestroyObject DestroyObjectEx

static const stock WeaponNames[][32] = {
	{"Unarmed (Fist)"}, // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Colt 45"}, // 22
	{"Colt 45 (Silenced)"}, // 23
	{"Desert Eagle"}, // 24
	{"Normal Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4A1"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Heat-Seeking Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};

new bool:PlayerTied[MAX_PLAYERS];

static const stock carsBike[41][2] = {
    {409, 10000000},
    {500, 100000},
    {509, 4000},
    {481, 2000},
    {479, 500000},
    {424, 150000},
    {480, 2000000},
    {562, 200000},
    {527, 200000},
    {602, 1500000},
    {490, 2000000},
    {445, 60000},
    {477, 300000},
    {462, 15000},
    {463, 100000},
    {422, 80000},
    {558, 600000},
    {587, 900000},
    {421, 250000},
	{400, 850000},
	{495, 3000000},
	{603, 1000000},
	{522, 1500000},
    {405, 1500000},
    {415, 1300000},
	{436, 1200000},
	{466, 5000000},
	{547, 300000},
	{492, 90000},
	{461, 80000},
	{475, 550000},
    {505, 2000000},
    {560, 1500000},
	{566, 100000},
	{579, 4000000},
    {507, 800000},
    {559, 600000},
	{541, 3000000},
    {492, 170000},
    {555, 20000},
	{566, 70000}
};

static const stock carsA[41][2] = {
    {409, 10000000},
    {500, 100000},
    {509, 4000},
    {481, 2000},
    {479, 500000},
    {424, 150000},
    {480, 2000000},
    {562, 200000},
    {527, 200000},
    {602, 1500000},
    {490, 2000000},
    {445, 60000},
    {477, 300000},
    {462, 15000},
    {463, 100000},
    {422, 80000},
    {558, 600000},
    {587, 900000},
    {421, 250000},
	{400, 850000},
	{495, 3000000},
	{603, 1000000},
	{522, 1500000},
    {405, 1500000},
    {415, 1300000},
	{436, 1200000},
	{466, 5000000},
	{547, 300000},
	{492, 90000},
	{461, 80000},
	{475, 550000},
    {505, 2000000},
    {560, 1500000},
	{566, 100000},
	{579, 4000000},
    {507, 800000},
    {559, 600000},
	{541, 3000000},
    {492, 170000},
    {555, 20000},
	{566, 70000}
};

static const stock carsB[41][2] = {
    {409, 10000000},
    {500, 100000},
    {509, 4000},
    {481, 2000},
    {479, 500000},
    {424, 150000},
    {480, 2000000},
    {562, 200000},
    {527, 200000},
    {602, 1500000},
    {490, 2000000},
    {445, 60000},
    {477, 300000},
    {462, 15000},
    {463, 100000},
    {422, 80000},
    {558, 600000},
    {587, 900000},
    {421, 250000},
	{400, 850000},
	{495, 3000000},
	{603, 1000000},
	{522, 1500000},
    {405, 1500000},
    {415, 1300000},
	{436, 1200000},
	{466, 5000000},
	{547, 300000},
	{492, 90000},
	{461, 80000},
	{475, 550000},
    {505, 2000000},
    {560, 1500000},
	{566, 100000},
	{579, 4000000},
    {507, 800000},
    {559, 600000},
	{541, 3000000},
    {492, 170000},
    {555, 20000},
	{566, 70000}
};

static const stock carsC[41][2] = {
    {409, 10000000},
    {500, 100000},
    {509, 4000},
    {481, 2000},
    {479, 500000},
    {424, 150000},
    {480, 2000000},
    {562, 200000},
    {527, 200000},
    {602, 1500000},
    {490, 2000000},
    {445, 60000},
    {477, 300000},
    {462, 15000},
    {463, 100000},
    {422, 80000},
    {558, 600000},
    {587, 900000},
    {421, 250000},
	{400, 850000},
	{495, 3000000},
	{603, 1000000},
	{522, 1500000},
    {405, 1500000},
    {415, 1300000},
	{436, 1200000},
	{466, 5000000},
	{547, 300000},
	{492, 90000},
	{461, 80000},
	{475, 550000},
    {505, 2000000},
    {560, 1500000},
	{566, 100000},
	{579, 4000000},
    {507, 800000},
    {559, 600000},
	{541, 3000000},
    {492, 170000},
    {555, 20000},
	{566, 70000}
};

static const stock JoinRegF[8] = {
	12, 13, 41, 56, 64, 63, 69, 75
};

static const stock JoinRegM[8] = {
    14, 20, 21, 22, 24, 25, 25, 25
};

static const stock JoinShopF[][2] = {
	{31, 2000},
	{13, 2000},
	{198, 2000},
	{38, 2500},
	{201, 2500},
	{39, 6000},
	{207, 10000},
	{131, 15000},
	{195, 15000},
	{9, 20000},
	{10, 20000},
	{238, 20000},
	{151, 50000},
	{152, 90000},
	{69, 90000},
	{192, 100000},
	{237, 140000},
	{193, 150000},
	{190, 160000},
	{226, 180000},
	{169, 250000},
	{90, 280000},
	{214, 300000},
	{55, 300000},
	{56, 300000},
	{141, 300000},
	{211, 300000},
	{11, 300000},
	{150, 350000},
	{263, 350000},
	{12, 350000},
	{172, 400000},
	{194, 400000},
	{91,  450000},
	{216, 450000},
    {219, 450000},
    {296, 450000},
    {93, 500000},
    {233, 550000}
};

static const stock JoinShopM[][2] = {
    {3, 2000},
    {1, 2500},
    {8, 8000},
    {15, 10000},
    {32, 15000},
	{72, 20000},
	{96, 20000},
	{161, 20000},
	{21, 20000},
	{6, 25000},
	{24, 30000},
	{25, 30000},
	{66, 30000},
	{176, 30000},
	{222, 30000},
	{67, 35000},
	{2, 40000},
	{202, 40000},
	{206, 40000},
	{7, 40000},
	{180, 40000},
	{94, 50000},
	{128, 50000},
	{133, 50000},
	{34, 50000},
	{14, 50000},
	{241, 50000},
	{112, 50000},
	{242, 55000},
	{4, 80000},
	{5, 80000},
	{35, 80000},
	{36, 80000},
	{183, 90000},
	{33, 100000},
	{48, 100000},
	{73, 100000},
	{247, 100000},
	{254, 100000},
	{297, 100000},
	{100, 150000},
	{181, 150000},
	{208, 150000},
	{28, 180000},
	{23, 200000},
	{156, 200000},
	{22, 200000},
	{57, 200000},
	{170, 200000},
	{59, 250000},
	{185, 250000},
	{117, 250000},
	{228, 250000},
    {17, 250000},
	{269, 300000},
	{290, 300000},
	{250, 300000},
	{111, 300000},
	{187, 300000},
	{98, 350000},
	{188, 350000},
	{249, 350000},
	{20, 350000},
	{171, 350000},
	{126, 400000},
	{240, 400000},
	{19, 400000},
	{189, 400000},
	{223, 400000},
	{147, 400000},
	{296, 450000},
	{293, 500000},
	{46, 500000},
	{186, 500000},
	{294, 500000}
};

static const stock miner_MSG[][] = {
	{"{FFFF00}Добро пожаловать на шахту.\n\n"},
	{"{ffffff}Здесь Вы можете устроиться на временную работу.\n"},
	{"Для это вам нужно спуститься в шахту и начать работу в раздевалке,\n"},
	{"после вам выдадут спецодежду и необходимые инструменты, а также\n"},
	{"расскажут что делать дальше.\n\n"},
	{"За 1 кг принесённого угля, вы получаете 2 Рублей.\n"},
	{"Работа шахтера специализируется на добыче угля.\n"},
	{"Регулярная добыча угля поддерживает экономическую цепь.\n"}
};

static const stock minerore_MSG[][] = {
	{"{FFFF00}Уголь.\n\n"},
	{"{ffffff}По легенде, уголь в туннелях намного качественней обычного.\n"},
	{"Качественный уголь намного больше цениться, чем обычный. Поэтому за каждую\n"},
	{"партию угля из туннеля полагается премия.\n"}
};

static const stock pdd_MSG[][] = {
	{"{63BD4E}1. Общие правила\n"},
	{"{ffffff}Обгон транспортного средства разрешен только с левой стороны,\n"},
	{"при этом водители обязаны убедиться, что встречная полоса свободна на достаточном для обгона расстояние.\n"},
	{"При ДТП водители обязаны позвонить в полицию (/c), и дождаться ДПС\n\n"},
	{"{63BD4E}2. Скорость движения\n"},
	{"{ffffff}Ограничение скорости за переделами города неограничено\n"},
	{"Ограничение скорости в пределах города и населенных пунктов не более 60 км/ч\n\n"},
	{"{63BD4E}3. Остановка и стоянка\n"},
	{"{ffffff}Остановка и стоянка транспортных средств разрешаются на правой стороне дороги на обочине.\n"},
	{"В специальных отведённых для этого местах\n\n"},
	{"{63BD4E}4. ДПС\n"},
	{"{ffffff}При виде автомобиля с включённой сереной, водитель обязан сбавить скорость и прижаться к обочине.\n"},
	{"Водитель обязан предъявить паспорт/лицензии, если тот попросил\n"},
	{"———————————————————————————————————————————————————————————————————\n\n"},
	{"Клавиша {33CCFF}2{ffffff}\t\t\tзавести или заглушить двигатель\n"},
	//{"Клавиша {33CCFF}Левый Ctrl{ffffff}\t\tвключить или выключить ограничитель скорости\n"},
	{"Клавиша {33CCFF}Левый Alt{ffffff}\t\tвключить или выключить фары\n"}
};

Float:S_GetPlayerDistanceFromPoint(playerid, Float:x, Float:y, Float:z)
{
	new NaN_String[5];
	new Float:Distance = GetPlayerDistanceFromPoint(playerid, x, y, z);
	format(NaN_String, 5, "%f", Distance);
	if(!strcmp(NaN_String, "NaN")) return 3000.0;
	return Distance;
}
#define GetPlayerDistanceFromPoint S_GetPlayerDistanceFromPoint

Float:S_GetVehicleDistanceFromPoint(vehicleid, Float:x, Float:y, Float:z)
{
	new NaN_String[5];
	new Float:Distance = GetVehicleDistanceFromPoint(vehicleid, x, y, z);
	format(NaN_String, 5, "%f", Distance);
	if(!strcmp(NaN_String, "NaN")) return 3000.0;
	return Distance;
}
#define GetVehicleDistanceFromPoint S_GetVehicleDistanceFromPoint

stock SetPlayerSkinEx(playerid, skinid)
{
	ClearAnimations(playerid, 1);
	if(skinid > 311) skinid = 311;
	else if(skinid < 0) skinid = 0;
	SetPlayerSkin(playerid, skinid);
}
#if defined _ALS_SetPlayerSkin
	#undef SetPlayerSkin
#else
	#define _ALS_SetPlayerSkin
#endif
#define	SetPlayerSkin SetPlayerSkinEx

stock SetPlayerPosEx(playerid, Float:x, Float:y, Float:z)
{
	PlayerEnterTime[playerid] += 221;
    Air_Get_Pos(playerid);
    Air_Gettime(playerid, 4);
	SetPVarInt(playerid, "AntiBreik", 3);
	PI[playerid][pPos][0] = x;
	PI[playerid][pPos][1] = y;
	PI[playerid][pPos][2] = z;
	return SetPlayerPos(playerid, PI[playerid][pPos][0], PI[playerid][pPos][1], PI[playerid][pPos][2]);
}
#if defined _ALS_SetPlayerPos
	#undef SetPlayerPos
#else
	#define _ALS_SetPlayerPos
#endif
#define	SetPlayerPos SetPlayerPosEx

stock SpawnPlayerEx(playerid)
{
	PlayerEnterTime[playerid] += 221;
	return SpawnPlayer(playerid);
}
#if defined _ALS_SpawnPlayer
	#undef SpawnPlayer
#else
	#define _ALS_SpawnPlayer
#endif
#define	SpawnPlayer SpawnPlayerEx

stock PutPlayerInVehicleEx(playerid, vehicleid, seatid)
{
    PlayerEnterTime[playerid] += 221;
	Air_Get_Pos(playerid);
    Air_Gettime(playerid, 4);
    return PutPlayerInVehicle(playerid, vehicleid, seatid);
}
#if defined _ALS_PutPlayerInVehicle
	#undef PutPlayerInVehicle
#else
	#define _ALS_PutPlayerInVehicle
#endif
#define PutPlayerInVehicle PutPlayerInVehicleEx

stock SetVehiclePosEx(vehicleid, Float:x, Float:y, Float:z)
{
	VehiclePos[vehicleid][0] = x;
	VehiclePos[vehicleid][1] = y;
	VehiclePos[vehicleid][2] = z;
	SetVehiclePos(vehicleid, VehiclePos[vehicleid][0], VehiclePos[vehicleid][1], VehiclePos[vehicleid][2]);
 	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(GetPlayerState(i) == 2 && GetPlayerVehicleID(i) == vehicleid)
		{
			PI[i][pPos][0] = x;
			PI[i][pPos][1] = y;
			PI[i][pPos][2] = z;
			SetPVarInt(i, "AntiBreik", 3);
		}
	}
	for(new i = 0, maxplayers = GetMaxPlayers(); i != maxplayers; i++)
	{
        if(GetPlayerVehicleID(i) == vehicleid)
		{
            Air_Get_Pos(i);
            Air_Gettime(i, 4);
        }
    }
	return 1;
}
#if defined _ALS_SetVehiclePos
	#undef SetVehiclePos
#else
	#define _ALS_SetVehiclePos
#endif
#define	SetVehiclePos SetVehiclePosEx

stock CreateVehicleEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new carid = CreateVehicle(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	if(carid == 65535) return 0;
	return carid;
}
#if defined _ALS_CreateVehicle
	#undef CreateVehicle
#else
	#define _ALS_CreateVehicle
#endif
#define	CreateVehicle CreateVehicleEx

stock AddStaticVehicleExEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new carid = AddStaticVehicleEx(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	if(carid == 65535) return 0;
	return carid;
}
#if defined _ALS_AddStaticVehicleEx
	#undef AddStaticVehicleEx
#else
	#define _ALS_AddStaticVehicleEx
#endif
#define	AddStaticVehicleEx AddStaticVehicleExEx

stock AddStaticVehicleExx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2)
{
	new carid = AddStaticVehicle(modelid, X, Y, Z, A, Color1, Color2);
	return carid;
}
#if defined _ALS_AddStaticVehicle
	#undef AddStaticVehicle
#else
	#define _ALS_AddStaticVehicle
#endif
#define	AddStaticVehicle AddStaticVehicleExx

stock DestroyVehicleEx(vehicleid)
{
	if(!IsValidVehicle(vehicleid)) return 0;
	return (DestroyVehicle(vehicleid));
}
#if defined _ALS_DestroyVehicle
	#undef DestroyVehicle
#else
	#define _ALS_DestroyVehicle
#endif
#define	DestroyVehicle DestroyVehicleEx

stock ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
	SetPVarInt(playerid, "USEDIALOGID", dialogid);
	return 1;
}
#if defined _ALS_ShowPlayerDialog
	#undef ShowPlayerDialog
#else
	#define _ALS_ShowPlayerDialog
#endif
#define	ShowPlayerDialog ShowPlayerDialogEx

stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}

forward DisconnectPlayer(playerid);
public DisconnectPlayer(playerid)
{
    if(playerid != INVALID_PLAYER_ID) Kick(playerid);
}

stock KickEx(playerid)
{
    new fix_ping = GetPlayerPing(playerid) + 25;
    return SetTimerEx("DisconnectPlayer", fix_ping>1000?1000:fix_ping, 0, "d", playerid);
}
#if defined _ALS_Kick
	#undef Kick
#else
	#define _ALS_Kick
#endif
#define	Kick KickEx

stock GetTeamID(playerid)
{
	if(PI[playerid][pMember] > 0) return PI[playerid][pMember];
	if(PI[playerid][pLeader] > 0) return PI[playerid][pLeader];
	if(PI[playerid][pTempLeader] > 0) return PI[playerid][pTempLeader];
	return 0;
}

stock GetColor(playerid)
{
    new str[8];
	format(str, sizeof(str), "%06x", PI[playerid][pColor] >>> 8);
	return str;
}

stock GetTeamColor(team)
{
    new str[8];
	format(str, sizeof(str), "%06x", TeamColors[team] >>> 8);
	return str;
}

stock SetPlayerColorEx(playerid, color)
{
    PI[playerid][pColor] = color;
    SetPlayerColor(playerid, color);
    return 1;
}
#if defined _ALS_SetPlayerColor
	#undef SetPlayerColor
#else
	#define _ALS_SetPlayerColor
#endif

stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

stock IsPlayerApplyAnimation(playerid, animation[])
{
    if(!GetPlayerAnimationIndex(playerid)) return 0;
    new animlib[32], animname[32];
    GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
    if(strcmp(animname, animation, true) == 0) return 1;
	return 0;
}

stock SaveAcc()
{
 	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		SaveAccount(i);
	}
	return 1;
}

stock ATMList(playerid)
{
	ShowPlayerDialog(playerid, D_ATM+932, 2, "{7efd7d}Управление счётом", "1. Баланс счета\n2. Пополнить счёт\n3. Снять со счета\n4. Пополнить домашний счет\n5. Оплатить дом\n6. Оплатить бизнес", "Далее", "Выход");
	return 1;
}

stock BankList(playerid)
{
    ShowPlayerDialog(playerid, D_ATM+5, 2, "{7efd7d}Управление счётом", "1. Баланс счета\n2. Пополнить счет\n3. Снять со счёта\n4. Перевод другому игроку\n5. Оплатить дом\n6. Оплатить бизнес\n7. Забрать деньги с бизнеса", "Далее", "Выход");
	return 1;
}

forward CheckRentCar(playerid,ispassenger);
public CheckRentCar(playerid,ispassenger)
{
	if(GetPlayerState(playerid) != 2) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	EnterVehicle[playerid] = vehicleid;
	if(!ispassenger)
	{
		if(PI[playerid][TaxiCarID] == vehicleid
		|| PI[playerid][BusCarID] == vehicleid
		|| PI[playerid][MechanicCarID] == vehicleid
		|| PI[playerid][TruckerCarID] == vehicleid) return 1;
		else
	    {
			SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этого транспорта");
  			ClearAnimations(playerid, true);
     		return 1;
	    }
	}
	return 1;
}

forward DrugEffectGone(playerid);
public DrugEffectGone(playerid)
{
	new hour, minute;
	gettime(hour, minute, _);
	SetPlayerTime(playerid, hour, minute);
	SetPlayerWeather(playerid, 7);
	SetPlayerDrunkLevel(playerid, 0);
	return 1;
}
forward AdvertiseTimer();
public AdvertiseTimer()
{
	SendClientMessageToAll(COLOR_LIGHTGREEN,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
    SendClientMessageToAll(-1,"{99CC00}Получение дополнительных средств: {7efd7d}vk.com/Housecrmprolepley /donate");
    SendClientMessageToAll(-1,"{99CC00}Приведи друга - получи деньги. При регистрации необходимо указать Ваш ник");
    SendClientMessageToAll(-1,"{99CC00}При возникновении вопросов/жалоб, введите: {7efd7d}/menu{99CC00}, далее выберите: \"Вопросы/жалобы на игроков\"");
    SendClientMessageToAll(-1,"{99CC00}Всю полезную информацию Вы можете найти в {7efd7d}/gps{99CC00}, {7efd7d}/menu");
    SendClientMessageToAll(COLOR_LIGHTGREEN,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
    if(!IsPlayerConnected(playerid)) return 0;
    if(!IsPlayerConnected(issuerid)) return 0;
    if(PI[issuerid][pAFK] >= 3) return 0;
    if(issuerid == INVALID_PLAYER_ID) return 0;
    if(weaponid == 3)
	{
		if(IsACop(issuerid))
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(issuerid, COLOR_GREY, "Человек в машине!");
			if(GetPVarInt(playerid, "Tazer") > 0 || pCuff[playerid][pCuffee] == playerid) return SendClientMessage(issuerid, COLOR_GREY, "Игрок уже оглушен / в наручниках");
			new string[128];
			format(string, sizeof(string), "%s оглушил Вас на 15 секунд", GetName(issuerid));
			SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "Вы оглушили %s на 15 секунд", GetName(playerid));
			SendClientMessage(issuerid, COLOR_BLUE, string);
			if(PI[playerid][pSex] == 1) format(string, sizeof(string), "оглушил дубинкой %s", GetName(playerid));
			else format(string, sizeof(string), "оглушила дубинкой %s", GetName(playerid));
			MeAction(issuerid, string);
			ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 1, 1, 1, 0, 1);
			SetTimerEx("TazerOff", 15000, 0, "d", playerid);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "Tazer", 1);
		}
	}
	if(weaponid == 23)
	{
		if(IsACop(issuerid))
		{
			if(GetPVarInt(issuerid, "TazerGun") == 1)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(issuerid, COLOR_GREY, "Человек в машине!");
				if(GetPVarInt(playerid, "Tazer") > 0 || pCuff[playerid][pCuffee] == playerid) return SendClientMessage(issuerid, COLOR_GREY, "Игрок уже оглушен / в наручниках");
				new string[128];
				format(string, sizeof(string), "%s обездвижил Вас электрошокером на 15 секунд", GetName(issuerid));
				SendClientMessage(playerid, COLOR_BLUE, string);
				format(string, sizeof(string), "Вы обездвижили электрошокером %s на 15 секунд", GetName(playerid));
				SendClientMessage(issuerid, COLOR_BLUE, string);
				if(PI[playerid][pSex] == 1) format(string, sizeof(string), "обездвижил %s электрошокером", GetName(playerid));
				else format(string, sizeof(string), "обездвижила %s электрошокером", GetName(playerid));
				MeAction(issuerid, string);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 1, 1, 1, 0, 1);
				SetTimerEx("TazerOff", 15000, 0, "d", playerid);
				TogglePlayerControllable(playerid, 0);
				SetPVarInt(playerid, "Tazer", 1);
			}
		}
	}
    return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

forward PlayerToggle(playerid);
public PlayerToggle(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	if(GetPVarInt(playerid, "Tazer") > 0)
	{
		SetPVarInt(playerid, "Tazer", 0);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		return 1;
	}
	return 1;
}
forward MaskOff(playerid);
public MaskOff(playerid)
{
	SetPlayerColorEx(playerid,TeamColors[GetTeamID(playerid)]);
	PlayerUseMask[playerid] = false;
	PI[playerid][pMask]--;
	SetPlayerChatBubble(playerid, "снимает маску", COLOR_PURPLE, 13.0, 10000);
	GameTextForPlayer(playerid, "~y~INVISABLE OFF", 800, 4);
	PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
	return 1;
}

forward Player_Control(playerid);
public Player_Control(playerid)
{
    if(PlayerLogged[playerid] == false)
	{
		SetPVarInt(playerid, "avttimer", GetPVarInt(playerid, "avttimer") - 1);
		if(GetPVarInt(playerid, "avttimer") == 0)
		{
			SendClientMessage(playerid, COLOR_RED, LoggedTimeOver);
		    SKick(playerid, 21122);
			return 1;
		}
	}
    if(!PlayerLogged[playerid]) return 1;
	new Float:xw, Float:yw, Float:zw;
    GetPlayerVelocity(playerid,xw,yw,zw);
    if(xw > 1.7 || yw > 1.7)
    {
   		SetPVarInt(playerid, "Pizdorvanka", GetPVarInt(playerid, "Pizdorvanka") + 1);
      	if(GetPVarInt(playerid, "Pizdorvanka") > 2)
      	{
     		SetPVarInt(playerid, "Pizdorvanka", 0);
     		new string[128];
			format(string, sizeof(string), "[A] %s[%d] кикнут за использование читов (Раскидывание)", GetName(playerid), playerid);
            SendAdminMessage(COLOR_GREY, string);
            SendLog("CheatLog",string);
		    //CheatKick(playerid, 1532);
			return 1;
      	}
   	}
   	if(MUSICACTIVE == true && activemusic[playerid] == false && IsPlayerInRangeOfPoint(playerid, MUSICDIST, MUSICX, MUSICY, MUSICZ))
    {
		if(PlayerMusic[playerid] == true)
		{
           PlayAudioStreamForPlayer(playerid, MUSICURL, MUSICX, MUSICY, MUSICZ,MUSICDIST, 1);
    	   activemusic[playerid] = true;
 		   SendClientMessage(playerid, COLOR_GREEN, "Вы попали в зону проигрывания музыки.");
 		   SendClientMessage(playerid, COLOR_GREEN, "Во избежании недоразумений, сделайте пожалуйста громкость колонок тише.");
 		   SendClientMessage(playerid, COLOR_GREEN, "В песне, возможно, будет использована нецензурная брань.");
 		}
    }
    if(MUSICACTIVE == true && activemusic[playerid] == true && !IsPlayerInRangeOfPoint(playerid, MUSICDIST, MUSICX, MUSICY, MUSICZ))
    {
        if(PlayerMusic[playerid] == true)
		{
    	   activemusic[playerid] = false;
     	   StopAudioStreamForPlayer(playerid);
     	   SendClientMessage(playerid, COLOR_RED, "Вы покинули зону прослушивания музыки!");
		}
    }
	return 1;
}

forward SecTimer();
public SecTimer()
{
	for(new i; i < 6; i++) if(gGunWorkTime[i]) gGunWorkTime[i]--;
	WHDataUpdate();
	GzCheck();
	SaveAcc();
	Probeg();
	SaveWarehouse();
	new stringText[30];
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(GZSafeTime[i] > 0)
		{
			GZSafeTime[i]--;
			foreach(new x: Player)
			{
				if(PI[x][pMember] == GZInfo[i][gNapad] || PI[x][pMember] == GZInfo[i][gFrak])
				{
					Convert(GZSafeTime[i], stringText);
					PlayerTextDrawSetString(x, CaptureTD[x][2], stringText);
				}
			}
		}
	}
	PlayerTimer();
	if(FrakCD > 0 && IsCapture == false) FrakCD--;
	for(new f = 0; f < 3; f++)
	{
		if(MZSafeTime[f]>0)
		{
			MZSafeTime[f] --;
			if(MZSafeTime[f] == 200 || MZSafeTime[f] == 450)
			{
			    new string[128];
				format(string,sizeof(string),"У вас осталось %d секунд. Место встречи: Заброшенный аэропорт",MZSafeTime[f]);
				SendFMes(MZInfo[f][mNapad],COLOR_RED,string);
				for(new h = 0; h < MAX_BIZZ; h++)
				{
					if(BizzInfo[h][bZahvat] == 1) SendFMes(BizzInfo[h][bMafia],COLOR_RED,string);
				}
			}
		}
	}
	fuelcheck++;
	if(fuelcheck == 25)
	{
		fuelcheck = 0;
		for(new v = 1, j = MAX_VEHICLES; v <= j; v++)
		{
			if(GetVehicleModel(v) == 0) continue;
			if(IsAPlane(v) == 1 || IsABoat(v) == 1 || IsAVel(v) == 1) continue; // и мопед
			if(Engine[v] == true && Fuel[v] > 0)
			{
				Fuel[v]--;
				if(Fuel[v] < 1)
				{
					Engine[v] = false;
					PlayerFuelMes[v] = true;
					GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(v,false,lights,alarm,doors,bonnet,boot,objective);
					Fuel[v] = 0;
				}
			}
		}
	}
	new h,m,s;
	gettime(h,m,s);
	if(m == 0 && s >= 11 && s <= 16) PAYDAY = 0;
   	if(m == 0 && s >= 0 && s <= 10 && PAYDAY == 0)
   	{
   	    PAYDAY = 1;
   	    SetWorldTime(h);
   	    PayDay();
   	}
	return 1;
}
//Автопробег *******************************************************************
forward Probeg();
public Probeg()
{
	foreach(new i:Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(IsPlayerInAnyVehicle(i))
	        {
	            new t = PI[i][PlayerCarID];
				if(GetPlayerVehicleID(i) == t)
				{
					new Float:sp = GetPlayerSpeed1(i);
				    new Float:ms;
					ms = (sp/1.4)/1000;
					PI[i][cProbeg] += ms;
				}
	        }
		}
	}
	return 1;
}
forward UpdateSpeedometr(playerid);
public UpdateSpeedometr(playerid)
{
    new info[3][20];
	new Float:health;
 	new vehicleid = GetPlayerVehicleID(playerid);
	GetVehicleHealth(vehicleid,health);
	if(Lights[vehicleid])
	{
		PlayerTextDrawColor(playerid,TD_HOUSE_PTD[playerid][3],16711935);//ФАРЫ
        PlayerTextDrawShow(playerid,TD_HOUSE_PTD[playerid][3]);
	}
	else
	{
		PlayerTextDrawColor(playerid,TD_HOUSE_PTD[playerid][3],-16776961);//ФАРЫ
		PlayerTextDrawShow(playerid,TD_HOUSE_PTD[playerid][3]);
	}
	if(Engine[vehicleid])
	{
		PlayerTextDrawColor(playerid,TD_HOUSE_PTD[playerid][2],16711935);//Двигатель
		PlayerTextDrawShow(playerid,TD_HOUSE_PTD[playerid][2]);
	}
	else
	{
		PlayerTextDrawColor(playerid,TD_HOUSE_PTD[playerid][2],-16776961);//Двигатель
		PlayerTextDrawShow(playerid,TD_HOUSE_PTD[playerid][2]);
	}
	if(IsLocked[vehicleid])
	{
	    PlayerTextDrawColor(playerid,TD_HOUSE_PTD[playerid][4],16711935);//Двери
		PlayerTextDrawShow(playerid,TD_HOUSE_PTD[playerid][4]);
	}
	else
	{
		PlayerTextDrawColor(playerid,TD_HOUSE_PTD[playerid][4],-16776961);//Двери
		PlayerTextDrawShow(playerid,TD_HOUSE_PTD[playerid][4]);
	}
	format(info[1],20,"%d", SpeedVehicle(playerid));
    PlayerTextDrawSetString(playerid,TD_HOUSE_PTD[playerid][6],info[1]);
   	format(info[0],20,"%d", Fuel[vehicleid]);
	PlayerTextDrawSetString(playerid,TD_HOUSE_PTD[playerid][1],info[0]);
	format(info[2],20,"%.0f",health);
	PlayerTextDrawSetString(playerid,TD_HOUSE_PTD[playerid][5],info[2]);
	return 1;
}

stock ShowPlayerStatsDialog(playerid, targetid)
{
	new status_text[20], phone_text[20];
	
	if(PI[targetid][pPhoneNumber] <= 1) format(phone_text, sizeof(phone_text), "Не имеется");
	else format(phone_text, sizeof(phone_text), "%i", PI[targetid][pPhoneNumber]);
	if(PI[targetid][pAdmin]) status_text = "Администратор";
	else if(PI[targetid][pVip]) status_text = "VIP";
	else status_text = "Игрок";
	
	new sctring[1300], str[150];
	format(str,sizeof(str),"{ffffff}Имя:\t\t\t\t{0099FF}%s\n",GetName(targetid));
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Уровень:\t\t\t%d\n",PI[targetid][pLevel]);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Очки опыта:\t\t\t%d/%d\n",PI[targetid][pExp], (PI[targetid][pLevel]+1)*4);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Деньги:\t\t\t%i\n",GetMoney(targetid));
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Деньги в банке:\t\t%i\n",PI[targetid][pBank]);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Моб.Счёт:\t\t\t%i\n",PI[targetid][pPhoneBalance]);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Номер телефона:\t\t%s\n",phone_text);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Уровень розыска:\t\t%i\n",PI[targetid][pWanted]);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Законопослушность:\t\t%d\n",PI[targetid][pZakon]);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Наркотики:\t\t\t%d\n",PI[targetid][pDrugs]);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Патроны:\t\t\t%d\n",PI[targetid][pPatron]);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Металл:\t\t\t%d\n",PI[targetid][pGunAmount]);
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Раков:\t\t\t%d\n",PI[targetid][pRaki]);//изменить переменную на раки
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Пол:\t\t\t%s\n\n",(PI[targetid][pSex]==1)?("Мужской"):("Женский"));
	strcat(sctring,str);
	if(PI[targetid][pMember] != 0) format(str,sizeof(str),"{ffffff}Организация:\t\t\t%s\n",Fraction_Name[PI[targetid][pMember]]);
	else format(str,sizeof(str),"{ffffff}Организация:\t\t\tБезработный\n");
	strcat(sctring,str);
	format(str,sizeof(str),"{ffffff}Работа/должность:\t\t%s\n",Job_Names[PI[targetid][pJob]]);
	strcat(sctring,str);
	
	if(PI[targetid][pRank] != 0) format(str,sizeof(str),"Ранг:\t\t\t%s (%i){FFFFFF}\n\n",Fraction_Rang[PI[targetid][pMember]][PI[targetid][pRank]],PI[targetid][pRank]);
	else format(str,sizeof(str),"{ffffff}Ранг:\t\t\t\n\n");
	
	format(str,sizeof(str),"{ffffff}Военный билет:\t\t%s\n",(PI[targetid][pVoennik])?("Есть"):("Нет"));
	strcat(sctring,str);
	if(GetPlayerBizz(targetid) == 0) strcat(sctring,"{ffffff}Бизнес:\t\t\tНет\n");
	else
	{
	    new number_bizz = 0;
	    for(new i = 1; i <= TOTALBIZZ; i++)
	    {
	        if(!strcmp(BizzInfo[i][bOwner],GetName(targetid),true)) number_bizz = i;
	    }
	    format(str,sizeof(str),"{ffffff}Бизнеc:\t\t\t№%i\n",number_bizz);
		strcat(sctring,str);
	}
	if(GetPlayerHouse(targetid) == 0) strcat(sctring,"{ffffff}Дом:\t\t\tНет\n");
	else
	{
	    new number_house = 0;
	    for(new i = 1; i <= TOTALHOUSE; i++)
		{
		    if(!strcmp(HouseInfo[i][hOwner],GetName(targetid),true)) number_house = i;
		}
		format(str,sizeof(str),"{ffffff}Дом:\t\t\t\t№%i\n",number_house);
		strcat(sctring,str);
	}
	if(PI[targetid][PlayerCarID] == INVALID_VEHICLE_ID) strcat(sctring,"{ffffff}Транспорт:\t\t\tОтсутствует\n\n");
	else
	{
	    format(str,sizeof(str),"{ffffff}Транспорт:\t\t\t%s (%i)\n\n",VehicleNames[GetVehicleModel(PI[targetid][PlayerCarID])-400],GetVehicleModel(PI[targetid][PlayerCarID]));
		strcat(sctring,str);
	}
	ShowPlayerDialog(playerid, 15143, DIALOG_STYLE_MSGBOX, "{7efd7d}Статистика персонажа", sctring, "Закрыть", "");
	return 1;
}

stock ShowPlayerItemsDialog(playerid, targetid)
{
    new string[700];
	if(PI[targetid][pCiggare] > 0) format(string, sizeof(string), "%s{FFFFFF}Сигареты\t\t\t{FFFF00}[%d шт]\n", string, PI[targetid][pCiggare]);
	else format(string, sizeof(string), "%s{FFFFFF}Сигареты\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pSprunk] > 0) format(string, sizeof(string), "%s{FFFFFF}Газировка\t\t\t{FFFF00}[%d шт]\n", string, PI[targetid][pSprunk]);
	else format(string, sizeof(string), "%s{FFFFFF}Газировка\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pAptechka]) format(string, sizeof(string), "%s{FFFFFF}Аптечка\t\t\t{FFFF00}[%d шт]\n", string, PI[targetid][pAptechka]);
	else format(string, sizeof(string), "%s{FFFFFF}Аптечка\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pMask]) format(string, sizeof(string), "%s{FFFFFF}Маска\t\t\t\t{FFFF00}[%i шт]\n", string, PI[targetid][pMask]);
	else format(string, sizeof(string), "%s{FFFFFF}Маска\t\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pPatron]) format(string, sizeof(string), "%s{FFFFFF}Патроны\t\t\t{FFFF00}[%d шт]\n", string, PI[targetid][pPatron]);
	else format(string, sizeof(string), "%s{FFFFFF}Патроны\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pGunAmount]) format(string, sizeof(string), "%s{FFFFFF}Металл\t\t\t{FFFF00}[%d шт]\n", string, PI[targetid][pGunAmount]);
	else format(string, sizeof(string), "%s{FFFFFF}Металл\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pDrugs]) format(string, sizeof(string), "%s{FFFFFF}Наркотики\t\t\t{FFFF00}[%d шт]\n", string, PI[targetid][pDrugs]);
	else format(string, sizeof(string), "%s{FFFFFF}Наркотики\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pRepcar][0]) format(string, sizeof(string), "%s{FFFFFF}Канистра\t\t\t{FFFF00}[1 шт]\n", string, PI[targetid][pRepcar][0]);
	else format(string, sizeof(string), "%s{FFFFFF}Канистра\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pRepcar][1]) format(string, sizeof(string), "%s{FFFFFF}Инструменты\t\t\t{FFFF00}[1 шт]\n", string, PI[targetid][pRepcar][1]);
	else format(string, sizeof(string), "%s{FFFFFF}Инструменты\t\t\t{bbbbbb}[пусто]\n", string);
	if(PI[targetid][pFishki]) format(string, sizeof(string), "%s{FFFFFF}Фишки\t\t\t\t{FFFF00}[%i шт]\n", string, PI[playerid][pFishki]);
	else format(string, sizeof(string), "%s{FFFFFF}Фишки\t\t\t\t{bbbbbb}[пусто]\n", string);
	ShowPlayerDialog(playerid, 15144, DIALOG_STYLE_MSGBOX, "{7efd7d}Предметы", string, "Назад", "Закрыть");
	return 1;
}

forward AntiBH(playerid);
public AntiBH(playerid)
{
	if(times[playerid] == false)
	{
		ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,0,0,0);
		times[playerid] = true;
	}
	return 1;
}

public OnGameModeInit()
{
	//Иконки
	CreateDynamicMapIcon(1870.0732,1915.9746,13.3253,6,0,-1,-1,-1,600.0);//Украинская мафия
	CreateDynamicMapIcon(1921.7114,2085.3610,22.4557,56,0,-1,-1,-1,600.0);//Спавн пгт.Батырево
	CreateDynamicMapIcon(1762.5737,2397.7514,15.3288,6,0,-1,-1,-1,600.0);//Русская мафия
	CreateDynamicMapIcon(1851.6602,2044.4501,15.8850,52,0,-1,-1,-1,600.0);//Банк
	//Админ панель
	tdapanel_TD_TD[0] = TextDrawCreate(574.9993, 143.9555, "Admin Panel"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[0], 0.2759, 1.2928);
	TextDrawAlignment(tdapanel_TD_TD[0], 1);
	TextDrawColor(tdapanel_TD_TD[0], -1);
	TextDrawBackgroundColor(tdapanel_TD_TD[0], 255);
	TextDrawFont(tdapanel_TD_TD[0], 1);
	TextDrawSetProportional(tdapanel_TD_TD[0], 1);
	TextDrawSetShadow(tdapanel_TD_TD[0], 0);

	tdapanel_TD_TD[1] = TextDrawCreate(569.0000, 146.0296, "Box"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[1], 0.0000, 1.1000);
	TextDrawTextSize(tdapanel_TD_TD[1], 634.0000, 0.0000);
	TextDrawAlignment(tdapanel_TD_TD[1], 1);
	TextDrawColor(tdapanel_TD_TD[1], -1);
	TextDrawUseBox(tdapanel_TD_TD[1], 1);
	TextDrawBoxColor(tdapanel_TD_TD[1], 620694165);
	TextDrawBackgroundColor(tdapanel_TD_TD[1], 255);
	TextDrawFont(tdapanel_TD_TD[1], 1);
	TextDrawSetProportional(tdapanel_TD_TD[1], 1);
	TextDrawSetShadow(tdapanel_TD_TD[1], 0);

	tdapanel_TD_TD[2] = TextDrawCreate(568.9998, 160.1333, "Box"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[2], 0.0000, 3.4999);
	TextDrawTextSize(tdapanel_TD_TD[2], 635.0000, 0.0000);
	TextDrawAlignment(tdapanel_TD_TD[2], 1);
	TextDrawColor(tdapanel_TD_TD[2], -1);
	TextDrawUseBox(tdapanel_TD_TD[2], 1);
	TextDrawBoxColor(tdapanel_TD_TD[2], 144);
	TextDrawBackgroundColor(tdapanel_TD_TD[2], 255);
	TextDrawFont(tdapanel_TD_TD[2], 1);
	TextDrawSetProportional(tdapanel_TD_TD[2], 1);
	TextDrawSetShadow(tdapanel_TD_TD[2], 0);

	tdapanel_TD_TD[3] = TextDrawCreate(568.3333, 161.7926, "Уровень:"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[3], 0.1731, 1.0772);
	TextDrawAlignment(tdapanel_TD_TD[3], 1);
	TextDrawColor(tdapanel_TD_TD[3], -1);
	TextDrawBackgroundColor(tdapanel_TD_TD[3], 255);
	TextDrawFont(tdapanel_TD_TD[3], 2);
	TextDrawSetProportional(tdapanel_TD_TD[3], 1);
	TextDrawSetShadow(tdapanel_TD_TD[3], 0);

	tdapanel_TD_TD[4] = TextDrawCreate(568.3333, 171.3332, "Репутация:"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[4], 0.1731, 1.0772);
	TextDrawAlignment(tdapanel_TD_TD[4], 1);
	TextDrawColor(tdapanel_TD_TD[4], -1);
	TextDrawBackgroundColor(tdapanel_TD_TD[4], 255);
	TextDrawFont(tdapanel_TD_TD[4], 2);
	TextDrawSetProportional(tdapanel_TD_TD[4], 1);
	TextDrawSetShadow(tdapanel_TD_TD[4], 0);

	tdapanel_TD_TD[5] = TextDrawCreate(568.0003, 180.8739, "Репорт:"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[5], 0.1731, 1.0772);
	TextDrawAlignment(tdapanel_TD_TD[5], 1);
	TextDrawColor(tdapanel_TD_TD[5], -1);
	TextDrawBackgroundColor(tdapanel_TD_TD[5], 255);
	TextDrawFont(tdapanel_TD_TD[5], 2);
	TextDrawSetProportional(tdapanel_TD_TD[5], 1);
	TextDrawSetShadow(tdapanel_TD_TD[5], 0);

	tdapanel_TD_TD[6] = TextDrawCreate(621.9998, 159.3036, "7"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[6], 0.3086, 1.1354);
	TextDrawTextSize(tdapanel_TD_TD[6], -16.0000, 0.0000);
	TextDrawAlignment(tdapanel_TD_TD[6], 1);
	TextDrawColor(tdapanel_TD_TD[6], -1);
	TextDrawBackgroundColor(tdapanel_TD_TD[6], 255);
	TextDrawFont(tdapanel_TD_TD[6], 1);
	TextDrawSetProportional(tdapanel_TD_TD[6], 1);
	TextDrawSetShadow(tdapanel_TD_TD[6], 0);

	tdapanel_TD_TD[7] = TextDrawCreate(614.6668, 160.6481, "Box"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[7], 0.0000, 3.4333);
	TextDrawTextSize(tdapanel_TD_TD[7], 613.0000, 0.0000);
	TextDrawAlignment(tdapanel_TD_TD[7], 1);
	TextDrawColor(tdapanel_TD_TD[7], -1);
	TextDrawUseBox(tdapanel_TD_TD[7], 1);
	TextDrawBoxColor(tdapanel_TD_TD[7], 620694165);
	TextDrawBackgroundColor(tdapanel_TD_TD[7], 255);
	TextDrawFont(tdapanel_TD_TD[7], 1);
	TextDrawSetProportional(tdapanel_TD_TD[7], 1);
	TextDrawSetShadow(tdapanel_TD_TD[7], 0);

	tdapanel_TD_TD[8] = TextDrawCreate(615.3333, 169.2592, "1333"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[8], 0.3086, 1.1354);
	TextDrawTextSize(tdapanel_TD_TD[8], -16.0000, 0.0000);
	TextDrawAlignment(tdapanel_TD_TD[8], 1);
	TextDrawColor(tdapanel_TD_TD[8], -1);
	TextDrawBackgroundColor(tdapanel_TD_TD[8], 255);
	TextDrawFont(tdapanel_TD_TD[8], 1);
	TextDrawSetProportional(tdapanel_TD_TD[8], 1);
	TextDrawSetShadow(tdapanel_TD_TD[8], 0);

	tdapanel_TD_TD[9] = TextDrawCreate(615.3333, 178.3851, "1333"); // пусто
	TextDrawLetterSize(tdapanel_TD_TD[9], 0.3086, 1.1354);
	TextDrawTextSize(tdapanel_TD_TD[9], -16.0000, 0.0000);
	TextDrawAlignment(tdapanel_TD_TD[9], 1);
	TextDrawColor(tdapanel_TD_TD[9], -1);
	TextDrawBackgroundColor(tdapanel_TD_TD[9], 255);
	TextDrawFont(tdapanel_TD_TD[9], 1);
	TextDrawSetProportional(tdapanel_TD_TD[9], 1);
	TextDrawSetShadow(tdapanel_TD_TD[9], 0);
	//Спидометр
	TD_HOUSE_TD[0] = TextDrawCreate(505.0432, 357.3840, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[0], 19.0000, 21.0000);
	TextDrawAlignment(TD_HOUSE_TD[0], 1);
	TextDrawColor(TD_HOUSE_TD[0], 1336760051);
	TextDrawBackgroundColor(TD_HOUSE_TD[0], 255);
	TextDrawFont(TD_HOUSE_TD[0], 4);
	TextDrawSetProportional(TD_HOUSE_TD[0], 0);
	TextDrawSetShadow(TD_HOUSE_TD[0], 0);

	TD_HOUSE_TD[1] = TextDrawCreate(614.8740, 357.0176, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[1], 19.0000, 23.0000);
	TextDrawAlignment(TD_HOUSE_TD[1], 1);
	TextDrawColor(TD_HOUSE_TD[1], 1336760051);
	TextDrawBackgroundColor(TD_HOUSE_TD[1], 255);
	TextDrawFont(TD_HOUSE_TD[1], 4);
	TextDrawSetProportional(TD_HOUSE_TD[1], 0);
	TextDrawSetShadow(TD_HOUSE_TD[1], 0);

	TD_HOUSE_TD[2] = TextDrawCreate(516.2808, 363.1675, "Box"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[2], 0.0000, 0.7221);
	TextDrawTextSize(TD_HOUSE_TD[2], 622.0000, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[2], 1);
	TextDrawColor(TD_HOUSE_TD[2], -1);
	TextDrawUseBox(TD_HOUSE_TD[2], 1);
	TextDrawBoxColor(TD_HOUSE_TD[2], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[2], 255);
	TextDrawFont(TD_HOUSE_TD[2], 1);
	TextDrawSetProportional(TD_HOUSE_TD[2], 1);
	TextDrawSetShadow(TD_HOUSE_TD[2], 0);

	TD_HOUSE_TD[3] = TextDrawCreate(615.0800, 423.9841, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[3], 19.0000, 23.0000);
	TextDrawAlignment(TD_HOUSE_TD[3], 1);
	TextDrawColor(TD_HOUSE_TD[3], 808333055);
	TextDrawBackgroundColor(TD_HOUSE_TD[3], 255);
	TextDrawFont(TD_HOUSE_TD[3], 4);
	TextDrawSetProportional(TD_HOUSE_TD[3], 0);
	TextDrawSetShadow(TD_HOUSE_TD[3], 0);

	TD_HOUSE_TD[4] = TextDrawCreate(505.9143, 424.0675, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[4], 19.0000, 23.0000);
	TextDrawAlignment(TD_HOUSE_TD[4], 1);
	TextDrawColor(TD_HOUSE_TD[4], 808333055);
	TextDrawBackgroundColor(TD_HOUSE_TD[4], 255);
	TextDrawFont(TD_HOUSE_TD[4], 4);
	TextDrawSetProportional(TD_HOUSE_TD[4], 0);
	TextDrawSetShadow(TD_HOUSE_TD[4], 0);

	TD_HOUSE_TD[5] = TextDrawCreate(515.3986, 438.3670, "Box"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[5], 0.0000, 0.2687);
	TextDrawTextSize(TD_HOUSE_TD[5], 624.0001, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[5], 1);
	TextDrawColor(TD_HOUSE_TD[5], -1);
	TextDrawUseBox(TD_HOUSE_TD[5], 1);
	TextDrawBoxColor(TD_HOUSE_TD[5], 808333055);
	TextDrawBackgroundColor(TD_HOUSE_TD[5], 255);
	TextDrawFont(TD_HOUSE_TD[5], 1);
	TextDrawSetProportional(TD_HOUSE_TD[5], 1);
	TextDrawSetShadow(TD_HOUSE_TD[5], 0);

	TD_HOUSE_TD[6] = TextDrawCreate(510.0310, 369.3674, "Box"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[6], 0.0000, 7.2283);
	TextDrawTextSize(TD_HOUSE_TD[6], 628.8798, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[6], 1);
	TextDrawColor(TD_HOUSE_TD[6], -1);
	TextDrawUseBox(TD_HOUSE_TD[6], 1);
	TextDrawBoxColor(TD_HOUSE_TD[6], 808333055);
	TextDrawBackgroundColor(TD_HOUSE_TD[6], 255);
	TextDrawFont(TD_HOUSE_TD[6], 1);
	TextDrawSetProportional(TD_HOUSE_TD[6], 1);
	TextDrawSetShadow(TD_HOUSE_TD[6], 0);

	TD_HOUSE_TD[7] = TextDrawCreate(556.8579, 391.0172, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[7], 16.0000, 18.9200);
	TextDrawAlignment(TD_HOUSE_TD[7], 1);
	TextDrawColor(TD_HOUSE_TD[7], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[7], 255);
	TextDrawFont(TD_HOUSE_TD[7], 4);
	TextDrawSetProportional(TD_HOUSE_TD[7], 0);
	TextDrawSetShadow(TD_HOUSE_TD[7], 0);

	TD_HOUSE_TD[8] = TextDrawCreate(510.8937, 396.6333, "Box"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[8], 0.0000, 0.8489);
	TextDrawTextSize(TD_HOUSE_TD[8], 562.7509, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[8], 1);
	TextDrawColor(TD_HOUSE_TD[8], -1);
	TextDrawUseBox(TD_HOUSE_TD[8], 1);
	TextDrawBoxColor(TD_HOUSE_TD[8], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[8], 255);
	TextDrawFont(TD_HOUSE_TD[8], 1);
	TextDrawSetProportional(TD_HOUSE_TD[8], 1);
	TextDrawSetShadow(TD_HOUSE_TD[8], 0);

	TD_HOUSE_TD[9] = TextDrawCreate(575.6088, 432.2174, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[9], 6.0000, 8.0000);
	TextDrawAlignment(TD_HOUSE_TD[9], 1);
	TextDrawColor(TD_HOUSE_TD[9], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[9], 255);
	TextDrawFont(TD_HOUSE_TD[9], 4);
	TextDrawSetProportional(TD_HOUSE_TD[9], 0);
	TextDrawSetShadow(TD_HOUSE_TD[9], 0);

	TD_HOUSE_TD[10] = TextDrawCreate(575.8087, 394.9006, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[10], 6.0000, 8.0000);
	TextDrawAlignment(TD_HOUSE_TD[10], 1);
	TextDrawColor(TD_HOUSE_TD[10], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[10], 255);
	TextDrawFont(TD_HOUSE_TD[10], 4);
	TextDrawSetProportional(TD_HOUSE_TD[10], 0);
	TextDrawSetShadow(TD_HOUSE_TD[10], 0);

	TD_HOUSE_TD[11] = TextDrawCreate(578.5194, 400.5166, "Box"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[11], 0.0000, 3.7423);
	TextDrawTextSize(TD_HOUSE_TD[11], 578.6986, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[11], 1);
	TextDrawColor(TD_HOUSE_TD[11], -1);
	TextDrawUseBox(TD_HOUSE_TD[11], 1);
	TextDrawBoxColor(TD_HOUSE_TD[11], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[11], 255);
	TextDrawFont(TD_HOUSE_TD[11], 1);
	TextDrawSetProportional(TD_HOUSE_TD[11], 1);
	TextDrawSetShadow(TD_HOUSE_TD[11], 0);

	TD_HOUSE_TD[12] = TextDrawCreate(583.0618, 400.8529, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[12], 5.0000, 5.0000);
	TextDrawAlignment(TD_HOUSE_TD[12], 1);
	TextDrawColor(TD_HOUSE_TD[12], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[12], 255);
	TextDrawFont(TD_HOUSE_TD[12], 4);
	TextDrawSetProportional(TD_HOUSE_TD[12], 0);
	TextDrawSetShadow(TD_HOUSE_TD[12], 0);

	TD_HOUSE_TD[13] = TextDrawCreate(621.4586, 400.7698, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[13], 5.0000, 5.0000);
	TextDrawAlignment(TD_HOUSE_TD[13], 1);
	TextDrawColor(TD_HOUSE_TD[13], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[13], 255);
	TextDrawFont(TD_HOUSE_TD[13], 4);
	TextDrawSetProportional(TD_HOUSE_TD[13], 0);
	TextDrawSetShadow(TD_HOUSE_TD[13], 0);

	TD_HOUSE_TD[14] = TextDrawCreate(588.0994, 403.8181, "Box"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[14], 0.0000, -0.0961);
	TextDrawTextSize(TD_HOUSE_TD[14], 623.0000, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[14], 1);
	TextDrawColor(TD_HOUSE_TD[14], -1);
	TextDrawUseBox(TD_HOUSE_TD[14], 1);
	TextDrawBoxColor(TD_HOUSE_TD[14], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[14], 255);
	TextDrawFont(TD_HOUSE_TD[14], 1);
	TextDrawSetProportional(TD_HOUSE_TD[14], 1);
	TextDrawSetShadow(TD_HOUSE_TD[14], 0);

	TD_HOUSE_TD[15] = TextDrawCreate(621.4586, 410.1701, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[15], 5.0000, 5.0000);
	TextDrawAlignment(TD_HOUSE_TD[15], 1);
	TextDrawColor(TD_HOUSE_TD[15], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[15], 255);
	TextDrawFont(TD_HOUSE_TD[15], 4);
	TextDrawSetProportional(TD_HOUSE_TD[15], 0);
	TextDrawSetShadow(TD_HOUSE_TD[15], 0);

	TD_HOUSE_TD[16] = TextDrawCreate(593.4652, 410.2702, "LD_BEAT:chit"); // пусто
	TextDrawTextSize(TD_HOUSE_TD[16], 5.0000, 5.0000);
	TextDrawAlignment(TD_HOUSE_TD[16], 1);
	TextDrawColor(TD_HOUSE_TD[16], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[16], 255);
	TextDrawFont(TD_HOUSE_TD[16], 4);
	TextDrawSetProportional(TD_HOUSE_TD[16], 0);
	TextDrawSetShadow(TD_HOUSE_TD[16], 0);

	TD_HOUSE_TD[17] = TextDrawCreate(598.4108, 413.4187, "Box"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[17], 0.0000, -0.1729);
	TextDrawTextSize(TD_HOUSE_TD[17], 621.3991, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[17], 1);
	TextDrawColor(TD_HOUSE_TD[17], -1);
	TextDrawUseBox(TD_HOUSE_TD[17], 1);
	TextDrawBoxColor(TD_HOUSE_TD[17], 1336760063);
	TextDrawBackgroundColor(TD_HOUSE_TD[17], 255);
	TextDrawFont(TD_HOUSE_TD[17], 1);
	TextDrawSetProportional(TD_HOUSE_TD[17], 1);
	TextDrawSetShadow(TD_HOUSE_TD[17], 0);

	TD_HOUSE_TD[18] = TextDrawCreate(512.0794, 413.9999, "Engine"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[18], 0.1849, 1.0283);
	TextDrawTextSize(TD_HOUSE_TD[18], -271.0000, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[18], 1);
	TextDrawColor(TD_HOUSE_TD[18], -1);
	TextDrawBackgroundColor(TD_HOUSE_TD[18], 255);
	TextDrawFont(TD_HOUSE_TD[18], 2);
	TextDrawSetProportional(TD_HOUSE_TD[18], 1);
	TextDrawSetShadow(TD_HOUSE_TD[18], 0);

	TD_HOUSE_TD[19] = TextDrawCreate(512.0794, 425.4006, "Lights"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[19], 0.1849, 1.0283);
	TextDrawTextSize(TD_HOUSE_TD[19], -271.0000, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[19], 1);
	TextDrawColor(TD_HOUSE_TD[19], -1);
	TextDrawBackgroundColor(TD_HOUSE_TD[19], 255);
	TextDrawFont(TD_HOUSE_TD[19], 2);
	TextDrawSetProportional(TD_HOUSE_TD[19], 1);
	TextDrawSetShadow(TD_HOUSE_TD[19], 0);

	TD_HOUSE_TD[20] = TextDrawCreate(590.1602, 425.4006, "Doors"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[20], 0.1849, 1.0283);
	TextDrawTextSize(TD_HOUSE_TD[20], -271.0000, 0.0000);
	TextDrawAlignment(TD_HOUSE_TD[20], 1);
	TextDrawColor(TD_HOUSE_TD[20], -1);
	TextDrawBackgroundColor(TD_HOUSE_TD[20], 255);
	TextDrawFont(TD_HOUSE_TD[20], 2);
	TextDrawSetProportional(TD_HOUSE_TD[20], 1);
	TextDrawSetShadow(TD_HOUSE_TD[20], 0);

	TD_HOUSE_TD[21] = TextDrawCreate(596.8814, 389.1997, "KM/H"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[21], 0.2597, 1.3487);
	TextDrawAlignment(TD_HOUSE_TD[21], 1);
	TextDrawColor(TD_HOUSE_TD[21], -1);
	TextDrawBackgroundColor(TD_HOUSE_TD[21], 255);
	TextDrawFont(TD_HOUSE_TD[21], 2);
	TextDrawSetProportional(TD_HOUSE_TD[21], 1);
	TextDrawSetShadow(TD_HOUSE_TD[21], 0);

	TD_HOUSE_TD[22] = TextDrawCreate(527.2774, 395.3666, "Fuel"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[22], 0.1867, 1.1555);
	TextDrawAlignment(TD_HOUSE_TD[22], 1);
	TextDrawColor(TD_HOUSE_TD[22], 808333055);
	TextDrawBackgroundColor(TD_HOUSE_TD[22], 255);
	TextDrawFont(TD_HOUSE_TD[22], 2);
	TextDrawSetProportional(TD_HOUSE_TD[22], 1);
	TextDrawSetShadow(TD_HOUSE_TD[22], 0);

	TD_HOUSE_TD[23] = TextDrawCreate(622.2847, 416.8833, "HP"); // пусто
	TextDrawLetterSize(TD_HOUSE_TD[23], 0.1648, 0.8590);
	TextDrawAlignment(TD_HOUSE_TD[23], 2);
	TextDrawColor(TD_HOUSE_TD[23], -1);
	TextDrawBackgroundColor(TD_HOUSE_TD[23], 255);
	TextDrawFont(TD_HOUSE_TD[23], 2);
	TextDrawSetProportional(TD_HOUSE_TD[23], 1);
	TextDrawSetShadow(TD_HOUSE_TD[23], 0);
	//Логотип
    village_TD[0] = TextDrawCreate(587.5109, 12.6666, "House"); // ?????
	TextDrawLetterSize(village_TD[0], 0.2551, 1.1683);
	TextDrawAlignment(village_TD[0], 1);
	TextDrawColor(village_TD[0], 0x7efd7dFF);
	TextDrawBackgroundColor(village_TD[0], 255);
	TextDrawFont(village_TD[0], 1);
	TextDrawSetProportional(village_TD[0], 1);
	TextDrawSetShadow(village_TD[0], 0);

	village_TD[1] = TextDrawCreate(583.7626, 20.8332, "ROLE_PLAY"); // ?????
	TextDrawLetterSize(village_TD[1], 0.1877, 1.0575);
	TextDrawAlignment(village_TD[1], 1);
	TextDrawColor(village_TD[1], -1);
	TextDrawBackgroundColor(village_TD[1], 255);
	TextDrawFont(village_TD[1], 2);
	TextDrawSetProportional(village_TD[1], 1);
	TextDrawSetShadow(village_TD[1], 0);

	village_TD[2] = TextDrawCreate(552.6720, 5.0833, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[2], 34.0000, 35.0000);
	TextDrawAlignment(village_TD[2], 1);
	TextDrawColor(village_TD[2], 0x49cc48FF);
	TextDrawBackgroundColor(village_TD[2], 255);
	TextDrawFont(village_TD[2], 4);
	TextDrawSetProportional(village_TD[2], 0);
	TextDrawSetShadow(village_TD[2], 0);

	village_TD[3] = TextDrawCreate(558.2943, 9.7497, "ld_beat:chit"); // ?????
	TextDrawTextSize(village_TD[3], 23.0000, 25.0000);
	TextDrawAlignment(village_TD[3], 1);
	TextDrawColor(village_TD[3], 0x7efd7dFF);
	TextDrawBackgroundColor(village_TD[3], 255);
	TextDrawFont(village_TD[3], 4);
	TextDrawSetProportional(village_TD[3], 0);
	TextDrawSetShadow(village_TD[3], 0);

	village_TD[4] = TextDrawCreate(561.5740, 13.2501, "ld_beat:chit"); // ?????
	TextDrawTextSize(village_TD[4], 16.0000, 18.0000);
	TextDrawAlignment(village_TD[4], 1);
	TextDrawColor(village_TD[4], 0x7efd7dFF);
	TextDrawBackgroundColor(village_TD[4], 255);
	TextDrawFont(village_TD[4], 4);
	TextDrawSetProportional(village_TD[4], 0);
	TextDrawSetShadow(village_TD[4], 0);

	village_TD[5] = TextDrawCreate(566.4274, 16.1665, "H"); // ?????
	TextDrawLetterSize(village_TD[5], 0.3122, 1.2675);
	TextDrawAlignment(village_TD[5], 1);
	TextDrawColor(village_TD[5], -1);
	TextDrawBackgroundColor(village_TD[5], 255);
	TextDrawFont(village_TD[5], 1);
	TextDrawSetProportional(village_TD[5], 1);
	TextDrawSetShadow(village_TD[5], 0);

	village_TD[6] = TextDrawCreate(555.4830, 24.3332, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[6], 2.8700, 3.4200);
	TextDrawAlignment(village_TD[6], 1);
	TextDrawColor(village_TD[6], 0x7efd7dFF);
	TextDrawBackgroundColor(village_TD[6], 255);
	TextDrawFont(village_TD[6], 4);
	TextDrawSetProportional(village_TD[6], 0);
	TextDrawSetShadow(village_TD[6], 0);

	village_TD[7] = TextDrawCreate(554.0776, 20.8332, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[7], 3.2499, 4.0600);
	TextDrawAlignment(village_TD[7], 1);
	TextDrawColor(village_TD[7], 0x7efd7dFF);
	TextDrawBackgroundColor(village_TD[7], 255);
	TextDrawFont(village_TD[7], 4);
	TextDrawSetProportional(village_TD[7], 0);
	TextDrawSetShadow(village_TD[7], 0);

	village_TD[8] = TextDrawCreate(554.0776, 16.1666, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[8], 3.4899, 4.5500);
	TextDrawAlignment(village_TD[8], 1);
	TextDrawColor(village_TD[8], 0x7efd7dFF);
	TextDrawBackgroundColor(village_TD[8], 255);
	TextDrawFont(village_TD[8], 4);
	TextDrawSetProportional(village_TD[8], 0);
	TextDrawSetShadow(village_TD[8], 0);

	village_TD[9] = TextDrawCreate(555.0145, 12.0832, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[9], 4.2400, 4.8400);
	TextDrawAlignment(village_TD[9], 1);
	TextDrawColor(village_TD[9], 0x7efd7dFF);
	TextDrawBackgroundColor(village_TD[9], 255);
	TextDrawFont(village_TD[9], 4);
	TextDrawSetProportional(village_TD[9], 0);
	TextDrawSetShadow(village_TD[9], 0);

	village_TD[10] = TextDrawCreate(557.8255, 8.5832, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[10], 4.5300, 5.6500);
	TextDrawAlignment(village_TD[10], 1);
	TextDrawColor(village_TD[10], 0x7efd7dFF);
	TextDrawBackgroundColor(village_TD[10], 255);
	TextDrawFont(village_TD[10], 4);
	TextDrawSetProportional(village_TD[10], 0);
	TextDrawSetShadow(village_TD[10], 0);
	
	Avtoriz_TD[0] = TextDrawCreate(186.666610, 124.303680, "1auth:main");
	TextDrawLetterSize(Avtoriz_TD[0], 0.000000, 0.000000);
	TextDrawTextSize(Avtoriz_TD[0], 311.000000, 194.000000);
	TextDrawAlignment(Avtoriz_TD[0], 1);
	TextDrawColor(Avtoriz_TD[0], -1);
	TextDrawSetShadow(Avtoriz_TD[0], 0);
	TextDrawSetOutline(Avtoriz_TD[0], 0);
	TextDrawBackgroundColor(Avtoriz_TD[0], 255);
	TextDrawFont(Avtoriz_TD[0], 4);
	TextDrawSetProportional(Avtoriz_TD[0], 0);
	TextDrawSetShadow(Avtoriz_TD[0], 0);

	Avtoriz_TD[1] = TextDrawCreate(230.666641, 295.622192, "");
	TextDrawLetterSize(Avtoriz_TD[1], 0.000000, 0.000000);
	TextDrawTextSize(Avtoriz_TD[1], 65.000000, 21.000000);
	TextDrawAlignment(Avtoriz_TD[1], 1);
	TextDrawColor(Avtoriz_TD[1], 0xFFFFFF00);
	TextDrawSetShadow(Avtoriz_TD[1], 0);
	TextDrawSetOutline(Avtoriz_TD[1], 0);
	TextDrawBackgroundColor(Avtoriz_TD[1], 0xFFFFFF00);
	TextDrawFont(Avtoriz_TD[1], 4);
	TextDrawSetProportional(Avtoriz_TD[1], 0);
	TextDrawSetShadow(Avtoriz_TD[1], 0);
	TextDrawSetSelectable(Avtoriz_TD[1], true);

	Avtoriz_TD[2] = TextDrawCreate(331.000000, 295.622192, "");
	TextDrawLetterSize(Avtoriz_TD[2], 0.000000, 0.000000);
	TextDrawTextSize(Avtoriz_TD[2], 65.000000, 21.000000);
	TextDrawAlignment(Avtoriz_TD[2], 1);
	TextDrawColor(Avtoriz_TD[2], 0xFFFFFF00);
	TextDrawSetShadow(Avtoriz_TD[2], 0);
	TextDrawSetOutline(Avtoriz_TD[2], 0);
	TextDrawBackgroundColor(Avtoriz_TD[2], 0xFFFFFF00);
	TextDrawFont(Avtoriz_TD[2], 4);
	TextDrawSetProportional(Avtoriz_TD[2], 0);
	TextDrawSetShadow(Avtoriz_TD[2], 0);
	TextDrawSetSelectable(Avtoriz_TD[2], true);

	Avtoriz_TD[3] = TextDrawCreate(255.333343, 218.051803, "");
	TextDrawLetterSize(Avtoriz_TD[3], 0.000000, 0.000000);
	TextDrawTextSize(Avtoriz_TD[3], 115.000000, 21.000000);
	TextDrawAlignment(Avtoriz_TD[3], 1);
	TextDrawColor(Avtoriz_TD[3], 0xFFFFFF00);
	TextDrawSetShadow(Avtoriz_TD[3], 0);
	TextDrawSetOutline(Avtoriz_TD[3], 0);
	TextDrawBackgroundColor(Avtoriz_TD[3], 0xFFFFFF00);
	TextDrawFont(Avtoriz_TD[3], 4);
	TextDrawSetProportional(Avtoriz_TD[3], 0);
	TextDrawSetShadow(Avtoriz_TD[3], 0);
	TextDrawSetSelectable(Avtoriz_TD[3], true);
	
	//======================================
	Registrz_TD[0] = TextDrawCreate(188.999984, 104.807395, "reg:main");
	TextDrawLetterSize(Registrz_TD[0], 0.000000, 0.000000);
	TextDrawTextSize(Registrz_TD[0], 255.000000, 237.000000);
	TextDrawAlignment(Registrz_TD[0], 1);
	TextDrawColor(Registrz_TD[0], -1);
	TextDrawSetShadow(Registrz_TD[0], 0);
	TextDrawSetOutline(Registrz_TD[0], 0);
	TextDrawBackgroundColor(Registrz_TD[0], 255);
	TextDrawFont(Registrz_TD[0], 4);
	TextDrawSetProportional(Registrz_TD[0], 0);
	TextDrawSetShadow(Registrz_TD[0], 0);

	Registrz_TD[1] = TextDrawCreate(329.000030, 233.814773, "reg:women");
	TextDrawLetterSize(Registrz_TD[1], 0.000000, 0.000000);
	TextDrawTextSize(Registrz_TD[1], 46.000000, 19.000000);
	TextDrawAlignment(Registrz_TD[1], 1);
	TextDrawColor(Registrz_TD[1], -1);
	TextDrawSetShadow(Registrz_TD[1], 0);
	TextDrawSetOutline(Registrz_TD[1], 0);
	TextDrawBackgroundColor(Registrz_TD[1], 255);
	TextDrawFont(Registrz_TD[1], 4);
	TextDrawSetProportional(Registrz_TD[1], 0);
	TextDrawSetShadow(Registrz_TD[1], 0);
	TextDrawSetSelectable(Registrz_TD[1], true);

	Registrz_TD[2] = TextDrawCreate(255.666610, 234.229598, "reg:man");
	TextDrawLetterSize(Registrz_TD[2], 0.000000, 0.000000);
	TextDrawTextSize(Registrz_TD[2], 46.000000, 19.000000);
	TextDrawAlignment(Registrz_TD[2], 1);
	TextDrawColor(Registrz_TD[2], -1);
	TextDrawSetShadow(Registrz_TD[2], 0);
	TextDrawSetOutline(Registrz_TD[2], 0);
	TextDrawBackgroundColor(Registrz_TD[2], 255);
	TextDrawFont(Registrz_TD[2], 4);
	TextDrawSetProportional(Registrz_TD[2], 0);
	TextDrawSetShadow(Registrz_TD[2], 0);
	TextDrawSetSelectable(Registrz_TD[2], true);

	Registrz_TD[3] = TextDrawCreate(231.666687, 323.000030, "");
	TextDrawLetterSize(Registrz_TD[3], 0.000000, 0.000000);
	TextDrawTextSize(Registrz_TD[3], 71.000000, 19.000000);
	TextDrawAlignment(Registrz_TD[3], 1);
	TextDrawColor(Registrz_TD[3], 0xFFFFFF00);
	TextDrawSetShadow(Registrz_TD[3], 0);
	TextDrawSetOutline(Registrz_TD[3], 0);
	TextDrawBackgroundColor(Registrz_TD[3], 0xFFFFFF00);
	TextDrawFont(Registrz_TD[3], 4);
	TextDrawSetProportional(Registrz_TD[3], 0);
	TextDrawSetShadow(Registrz_TD[3], 0);
	TextDrawSetSelectable(Registrz_TD[3], true);

	Registrz_TD[4] = TextDrawCreate(330.000091, 322.170379, "");
	TextDrawLetterSize(Registrz_TD[4], 0.000000, 0.000000);
	TextDrawTextSize(Registrz_TD[4], 71.000000, 19.000000);
	TextDrawAlignment(Registrz_TD[4], 1);
	TextDrawColor(Registrz_TD[4], 0xFFFFFF00);
	TextDrawSetShadow(Registrz_TD[4], 0);
	TextDrawSetOutline(Registrz_TD[4], 0);
	TextDrawBackgroundColor(Registrz_TD[4], 0xFFFFFF00);
	TextDrawFont(Registrz_TD[4], 4);
	TextDrawSetProportional(Registrz_TD[4], 0);
	TextDrawSetShadow(Registrz_TD[4], 0);
	TextDrawSetSelectable(Registrz_TD[4], true);

	Registrz_TD[5] = TextDrawCreate(257.666748, 166.614776, "");
	TextDrawLetterSize(Registrz_TD[5], 0.000000, 0.000000);
	TextDrawTextSize(Registrz_TD[5], 117.000000, 19.000000);
	TextDrawAlignment(Registrz_TD[5], 1);
	TextDrawColor(Registrz_TD[5], 0xFFFFFF00);
	TextDrawSetShadow(Registrz_TD[5], 0);
	TextDrawSetOutline(Registrz_TD[5], 0);
	TextDrawBackgroundColor(Registrz_TD[5], 0xFFFFFF00);
	TextDrawFont(Registrz_TD[5], 4);
	TextDrawSetProportional(Registrz_TD[5], 0);
	TextDrawSetShadow(Registrz_TD[5], 0);
	TextDrawSetSelectable(Registrz_TD[5], true);

	Registrz_TD[6] = TextDrawCreate(257.333557, 199.799987, "");
	TextDrawLetterSize(Registrz_TD[6], 0.000000, 0.000000);
	TextDrawTextSize(Registrz_TD[6], 117.000000, 19.000000);
	TextDrawAlignment(Registrz_TD[6], 1);
	TextDrawColor(Registrz_TD[6], 0xFFFFFF00);
	TextDrawSetShadow(Registrz_TD[6], 0);
	TextDrawSetOutline(Registrz_TD[6], 0);
	TextDrawBackgroundColor(Registrz_TD[6], 0xFFFFFF00);
	TextDrawFont(Registrz_TD[6], 4);
	TextDrawSetProportional(Registrz_TD[6], 0);
	TextDrawSetShadow(Registrz_TD[6], 0);
	TextDrawSetSelectable(Registrz_TD[6], true);

	Registrz_TD[7] = TextDrawCreate(259.000061, 267.000000, "");
	TextDrawLetterSize(Registrz_TD[7], 0.000000, 0.000000);
	TextDrawTextSize(Registrz_TD[7], 117.000000, 19.000000);
	TextDrawAlignment(Registrz_TD[7], 1);
	TextDrawColor(Registrz_TD[7], 0xFFFFFF00);
	TextDrawSetShadow(Registrz_TD[7], 0);
	TextDrawSetOutline(Registrz_TD[7], 0);
	TextDrawBackgroundColor(Registrz_TD[7], 0xFFFFFF00);
	TextDrawFont(Registrz_TD[7], 4);
	TextDrawSetProportional(Registrz_TD[7], 0);
	TextDrawSetShadow(Registrz_TD[7], 0);
	TextDrawSetSelectable(Registrz_TD[7], true);
	//
	
	ope = 0;
	opgdvero = 0;
	opg2dvero = 0;
	opgslacko = 0;
    gamemodeloaded = 0;
	SetGameModeText("LOADING...");
	//LoadMySQLSettings();
	new bind[64];
	//new port[20];
    GetServerVarAsString("bind", bind, sizeof(bind));
   // GetServerVarAsString("port", port, sizeof(port));
	
	if(!strcmp(bind, "89.223.89.219", true))
	{
	    //dbHandle = mysql_connect(SQL_HOST, SQL_USER, SQL_DB, SQL_PASS);
	    TEST_SERVER = true;
	    if(GetServerVarAsInt("port") == 7777)
	    {
		    SendRconCommand("hostname House RolePlay | Test Server Woody");
			dbHandle = mysql_connect(SQL_HOST, SQL_USER, SQL_DB, SQL_PASS);
		}
		if(GetServerVarAsInt("port") == 7779)
		{
		    SendRconCommand("hostname House RolePlay | Test Server Mark");
			dbHandle = mysql_connect(SQL_HOST1, SQL_USER1, SQL_DB1, SQL_PASS1);
		}
	}
	if(!strcmp(bind, "45.138.72.42", true))
	{
	    //dbHandle = mysql_connect(SQL_HOST, SQL_USER, SQL_DB, SQL_PASS);
	    TEST_SERVER = true;
	    if(GetServerVarAsInt("port") == 7777)
	    {
		    SendRconCommand("hostname House RolePlay | Main Test");
			dbHandle = mysql_connect(MAIN_SQL_HOST, MAIN_SQL_USER, MAIN_SQL_DB, MAIN_SQL_PASS);
		}
	}
	else
	{
	//	dbHandle = mysql_connect(MySQLSettings[FLAME_HOST],MySQLSettings[FLAME_USERNAME],MySQLSettings[FLAME_DATABASE],MySQLSettings[FLAME_PASSWORD]);
		dbHandle = mysql_connect(SQL_HOST, SQL_USER, SQL_DB, SQL_PASS);
	}
	mysql_log(LOG_WARNING | LOG_ERROR);
    if(mysql_errno() == -1)
    {
        if(!strcmp(bind, "46.105.49.123", true)) SetGameModeText("");
        else print("  MySQL connection: FALSE (host)\n");
    }
    else
    {
        if(!strcmp(bind, "46.105.49.123", true)) print("  MySQL connection: TRUE (local)\n");
	    else print("  MySQL connection: TRUE (host)\n");
	    
	    mysql_function_query(1, "SET NAMES 'utf8'", false, "", "");
	    mysql_function_query(1, "SET CHARACTER SET 'cp1251'", false, "", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_VEHICLE"", "LoadVeh", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_BIZZ" ORDER BY  "T_BIZZ".`id` ASC ", "LoadBizz", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_HOUSE" ORDER BY  "T_HOUSE".`id` ASC ", "LoadHouse", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_PORCH_HOUSE" ORDER BY  "T_PORCH_HOUSE".`id` ASC ", "LoadPorchHouse", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_PORCH" ORDER BY  "T_PORCH".`id` ASC ", "LoadPorch", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_MAFIA"", "LoadMafia", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_GANG"", "LoadGang", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_GANGZONE"", "LoadGZ", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_ATM"", "LoadATM", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_OTHER"", "LoadOther", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_PASSPORTS"", "LoadPass", "");
		mysql_tquery(dbHandle, "UPDATE "T_ADMIN" SET `timemin` = '0'", "", "");
    }

	SendRconCommand("mapname "SERVER_MAP"");
	SendRconCommand("weburl "SERVER_WEBSITE"");
	
	SetWeather(2);
	new h;
	gettime(h,gCurMinutes,gCurHour);
	SetWorldTime(h);
	SetGravity(0.008);
	ManualVehicleEngineAndLights();
	EnableStuntBonusForAll(0);
	SetNameTagDrawDistance(24.0);
 	ShowPlayerMarkers(2);
	DisableInteriorEnterExits();

	AddPlayerClass(36,0.0,0.0,5.0,0.0,0,0,0,0,0,0);
	CreateActor(1, 2047.2817,1976.6250,2.9482,49.6986);
	//CreateActor(15, 2344.7715,1419.6361,11.3700,181.0193);
	CreateDynamic3DTextLabel("Василий\n{ffbf00}'Продажа раков'\n'ALT'", 0xFFFFFFFF, 2047.2817,1976.6250,2.9482 + 0.6, 4.0);
	//CreateDynamic3DTextLabel("Николай Петрович\n{ffbf00}'Продажа снастей'\n'ALT'", 0xFFFFFFFF, 2344.7715,1419.6361,11.3700 + 0.6, 4.0);
	//система рыбалки
	//Create3DTextLabel("{FFA500}Информация: {00BFFF}Рыбалка",0x00FFFFDD, 2825.8967,-2648.2358,2.0501,20.0,0,1);
	//fishing[0] = CreatePickup(1239, 1, 2825.8967,-2648.2358,2.0501, -1);
	//Create3DTextLabel("{FFA500}Магазин: {00BFFF}Рыбный рынок",0x00FFFFDD, 2786.4055,-2684.2224,3.2554,20.0,0,1);
	//fishing[1] = CreatePickup(1318, 1, 2786.4055,-2684.2224,3.2554, -1);
	//система рыбалки
	CreateDynamicMapIcon(3782.3491,-2685.3384,3.2554, 9, -1);
	LoadTextDraws();
	LoadPickups();
	LoadRakolov();
	vorota = CreateDynamicObject(980, 1891.67188, 1722.85364, 17.16094,   0.00000, 0.00000, -90.00000);
	//LoadObjects();
	LoadObject();
	Menu();
    
	SetTimer("SecTimer", 1000, true);
	SetTimer("CheatDetect", 1000, true);
	SetTimer("ArendTimer", 10000, true);
	SetTimer("AdvertiseTimer", 1200000, true);
	
	/* ---------------------------------------------------------------------- */
	for(new i = 0; i < MAX_PLAYERS; i++) SetPlayerDataToDefault(i);
	/* ---------------------------------------------------------------------- */
	printf ("-> Динамических объектов: %d",CountDynamicObjects());
	printf ("-> Статических объектов: %d",TotalObject);

  	Streamer_SetTickRate(55);
 	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,MAX_OBJECTS-TotalObject);
 	//Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 800);

	printf ("-> Видимых объектов (стример): %d",Streamer_GetVisibleItems(STREAMER_TYPE_OBJECT));
	/* ---------------------------------------------------------------------- */
	for(new i = MAX_VEHICLES; i != 0; i --)
	{
	    if(!IsValidVehicle(i)) continue;
	    SetVehicleParamsEx(i, false, false, false, false, false, false, false);
	    Engine[i] = Lights[i] = false;
		Fuel[i] = 50;
		SetVehicleNumberPlate(i, "House");
	}
	lastveh = CreateVehicle(542,0,0,0,0,0,0,0);
	DestroyVehicle(lastveh);
	
	SetGameModeText(SERVER_VERSION);
	gamemodeloaded = 1;
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	new str[500];
	format(str, sizeof(str), "SetPlayerAttachedObject(playerid, %d, %d, %d, %.4f, %.4f, %.4f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f)", index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	printf(str);
	if(!IsPlayerInAnyVehicle(playerid)) SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	else AttachObjectToVehicle(GetPVarInt(playerid, "VehicleObj"), GetPlayerVehicleID(playerid), fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ);
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(GetPVarInt(playerid, "LoadATM") > 0)
	{
		if(!playerobject)
		{
			if(!IsValidObject(objectid)) return 1;
			MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
		}
		if(response == EDIT_RESPONSE_FINAL)
		{
			TOTALATM++;
			ATMInfo[TOTALATM][aX] = fX;
			ATMInfo[TOTALATM][aY] = fY;
			ATMInfo[TOTALATM][aZ] = fZ;
			ATMInfo[TOTALATM][arX] = fRotX;
			ATMInfo[TOTALATM][arY] = fRotY;
			ATMInfo[TOTALATM][arZ] = fRotZ;
			SendClientMessage(playerid,COLOR_YELLOW,"ИНФО: Вы установили банкомат");
			DestroyObject(GetPVarInt(playerid, "LoadATM")-1);
			ATM[TOTALATM] = CreateObject(2942, fX, fY, fZ, fRotX, fRotY, fRotZ);
			LABELATM[TOTALATM] = CreateDynamic3DTextLabel("{99cc00}Банкомат\n{FFFFFF}Нажмите: {7efd7d}ALT", 0xBBBBBBFF, ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ]+1.1,10.0);
			DeletePVar(playerid, "LoadATM");
			CancelEdit(playerid);
			new str[512];
			format(str,sizeof(str),"INSERT INTO "T_ATM" (ID, aX, aY, aZ, arX, arY, arZ) VALUES (%i,'%f','%f','%f','%f', '%f', '%f')",
			TOTALATM,ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ], ATMInfo[TOTALATM][arX], ATMInfo[TOTALATM][arY], ATMInfo[TOTALATM][arZ]);
			mysql_tquery(dbHandle, str, "", "");
		}
		if(response == EDIT_RESPONSE_CANCEL)
		{
			DeletePVar(playerid, "LoadATM");
			SendClientMessage(playerid, COLOR_RED, "Установка банкомата отменена");
			DestroyObject(GetPVarInt(playerid, "LoadATM")-1);
			CancelEdit(playerid);
		}
		return 1;
	}
	if(response == EDIT_RESPONSE_CANCEL)
	{
		DestroyObject(objectid);
		CancelEdit(playerid);
	}
	if(response == EDIT_RESPONSE_FINAL)
	{
	    #if DEBUG_STATUS == true
			printf("CreateObject(%i, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f);",objectid,fX, fY, fZ, fRotX, fRotY, fRotZ);
		#endif
		CancelEdit(playerid);
	}
	return 1;
}

public OnGameModeExit()
{
	DestroyAllDynamicObjects();
	DestroyAllDynamicPickups();
	DestroyAllDynamicCPs();
	DestroyAllDynamicMapIcons();
	DestroyAllDynamic3DTextLabels();
	DestroyAllDynamicAreas();
	regex_delete_all();
	mysql_close();
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(PlayerLogged[playerid] == true)
	{
	    SetSpawnInfoEx(playerid, PI[playerid][pModel], 0, 0, 0, 1.0);
		return SpawnPlayer(playerid);
	}
	
	ac_1{playerid} = true;
	PlayerSpawned[playerid] = false;
	SetPVarInt(playerid, "AntiBreik", 500);
	
	SetTimerEx("player_join", 300, false, "i", playerid);
	return 1;
}

forward player_join(playerid);
public player_join(playerid)
{
	SetPlayerVirtualWorld(playerid, playerid + 1);
	TogglePlayerControllable(playerid, 0);
	
	switch(random(2))
	{
	    case 0:
	    {
	        SetPlayerPos(playerid, 1244.6781,-1387.5233,13.3752);
	    }
	    case 1:
	    {
	        SetPlayerPos(playerid, 1011.5471,-1726.0316,20.7109);
	    }
	}

	mysql_format(dbHandle, query, sizeof(query), "SELECT `name`,`password` FROM "T_ACCOUNTS" WHERE `name` = '%e' LIMIT 1", GetName(playerid));
   	mysql_tquery(dbHandle, query, "player_check", "i", playerid);
	return 1;
}

forward player_check(playerid);
public player_check(playerid)
{
    if(!IsPlayerConnected(playerid)) return 1;
    new rows, fields;
 	cache_get_data(rows, fields);
 	//new string[371];
    if(rows)
	{
        PlayerPlaySound(playerid,1062,0.0,0.0,0.0);
        //format(string, sizeof(string), "{"#cWHITE"}Добро пожаловать на сервер {7efd7d}House RolePlay{"#cWHITE"}\nВаш ник зарегистрирован\n\nЛогин:{7efd7d} %s{"#cWHITE"}\nВведите пароль:",GetName(playerid));
		//ShowPlayerDialog(playerid, D_LOGIN, 3, "{7efd7d}Авторизация", string, "Войти", "Отмена");
		TextDrawShowForPlayer(playerid, Avtoriz_TD[0]);
	    TextDrawShowForPlayer(playerid, Avtoriz_TD[1]);
	    TextDrawShowForPlayer(playerid, Avtoriz_TD[2]);
	    TextDrawShowForPlayer(playerid, Avtoriz_TD[3]);
	    PlayerTextDrawShow(playerid, Avtoriz_PTD[playerid][0]);
		SelectTextDraw(playerid, 0xFFFFFFFF);
	}
	else
	{
        PlayerPlaySound(playerid,1076,0.0,0.0,0.0);
        //format(string, sizeof(string), "{FFFFFF}Добро пожаловать на сервер {7efd7d}House RolePlay\n{ffffff}Чтобы начать игру вам необходимо пройти регистрацию\n\nВведите пароль для Вашего аккаунта\nОн будет запрашиваться каждый раз, когда вы заходите на сервер\n\n\t{7efd7d}Примечания:\n\t•Пароль может состоять из русских и латинских символов\n\t•Пароль чувствителен к регистру\n\t•Длина пароля от 6-ти до 15-ти символов");
		//ShowPlayerDialog(playerid, D_REGISTER, DIALOG_STYLE_INPUT, "{7efd7d}Регистрация", string, "Далее","Отмена");
		TextDrawShowForPlayer(playerid, Registrz_TD[0]);
	    TextDrawShowForPlayer(playerid, Registrz_TD[1]);
	    TextDrawShowForPlayer(playerid, Registrz_TD[2]);
	    TextDrawShowForPlayer(playerid, Registrz_TD[3]);
	    TextDrawShowForPlayer(playerid, Registrz_TD[4]);
	    TextDrawShowForPlayer(playerid, Registrz_TD[5]);
	    TextDrawShowForPlayer(playerid, Registrz_TD[6]);
	    TextDrawShowForPlayer(playerid, Registrz_TD[7]);
		SelectTextDraw(playerid, 0xFFFFFFFF);
	}
	SetPVarInt(playerid, "Logged", 1);
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
    if(!IsPlayerConnected(playerid)) Kick(playerid);
    if(!success) GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	if(TextResetCMD[playerid] < gettime()) TextResetCMD[playerid] = gettime()+2;
	#if DEBUG_STATUS == true
	printf("Игрок %s только что использовал команду \"%s\"", GetName(playerid), cmdtext);
	#endif
	return 1;
}

enum connectionInfo
{
	IncomingIP[16],
	IncomingAttempt,
	IncomingTime
}
new IncomingConnection[connectionInfo];
public OnIncomingConnection(playerid, ip_address[], port)
{
	if(!strcmp(IncomingConnection[IncomingIP], ip_address, true) && IncomingConnection[IncomingTime] > gettime())
	{
		IncomingConnection[IncomingAttempt]++;
		return 1;
	}
	format(IncomingConnection[IncomingIP], 16, ip_address);
	IncomingConnection[IncomingAttempt] = 0;
	IncomingConnection[IncomingTime] = gettime()+2;
	return 1;
}

public OnPlayerConnect(playerid)
{
    noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	noclipdata[playerid][lrold] = 0;
	noclipdata[playerid][udold] = 0;
	noclipdata[playerid][mode] = 0;
	noclipdata[playerid][lastmove] = 0;
	noclipdata[playerid][accelmul] = 0.0;

	keys_setting[playerid] = true;
	logo_setting[playerid] = true;
   // for(new i; i < 11; i++) TextDrawShowForPlayer(playerid,village_TD[i]);
  
    //Wasted
    Wasted[playerid] = TextDrawCreate(720.243469, -122.166549, "usebox");
    TextDrawLetterSize(Wasted[playerid], 0.306881, 116.333961);
    TextDrawTextSize(Wasted[playerid], -1222.372070, 0.000000);
    TextDrawAlignment(Wasted[playerid], 1);
    TextDrawColor(Wasted[playerid], 0);
    TextDrawUseBox(Wasted[playerid], true);
    TextDrawBoxColor(Wasted[playerid], 102);
    TextDrawSetShadow(Wasted[playerid], 0);
    TextDrawSetOutline(Wasted[playerid], 0);
    TextDrawFont(Wasted[playerid], 0);

	Wasted1[playerid] = TextDrawCreate(1369.141845, 148.499908, "usebox");
	TextDrawLetterSize(Wasted1[playerid], -0.071681, 12.002384);
	TextDrawTextSize(Wasted1[playerid], -1287.496459, 48.416664);
	TextDrawAlignment(Wasted1[playerid], 1);
	TextDrawColor(Wasted1[playerid], 0);
	TextDrawUseBox(Wasted1[playerid], true);
	TextDrawBoxColor(Wasted1[playerid], 102);
	TextDrawSetShadow(Wasted1[playerid], 0);
	TextDrawSetOutline(Wasted1[playerid], 0);
	TextDrawFont(Wasted1[playerid], 0);

	Wasted2[playerid] = TextDrawCreate(248.316223, 182.583267, "WASTED");
	TextDrawLetterSize(Wasted2[playerid], 1.045490, 4.079166);
	TextDrawAlignment(Wasted2[playerid], 1);
	TextDrawColor(Wasted2[playerid], -16776961);
	TextDrawSetShadow(Wasted2[playerid], 0);
	TextDrawSetOutline(Wasted2[playerid], 1);
	TextDrawBackgroundColor(Wasted2[playerid], 51);
	TextDrawFont(Wasted2[playerid], 3);
	TextDrawSetProportional(Wasted2[playerid], 1);
    //Спидометр
    TD_HOUSE_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 9.666666, 3.988888, "usebox");
	PlayerTextDrawLetterSize(playerid, TD_HOUSE_PTD[playerid][0], 0.000000, 0.605144);
	PlayerTextDrawAlignment(playerid, TD_HOUSE_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, TD_HOUSE_PTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, TD_HOUSE_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, TD_HOUSE_PTD[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, TD_HOUSE_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, TD_HOUSE_PTD[playerid][0], 0);
	
	TD_HOUSE_PTD[playerid][6] = CreatePlayerTextDraw(playerid, 593.8701, 366.7499, "0"); // ?????
	PlayerTextDrawLetterSize(playerid, TD_HOUSE_PTD[playerid][6], 0.4880, 2.7025);
	PlayerTextDrawAlignment(playerid, TD_HOUSE_PTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, TD_HOUSE_PTD[playerid][6], 1336760063);
	PlayerTextDrawBackgroundColor(playerid, TD_HOUSE_PTD[playerid][6], 255);
	PlayerTextDrawFont(playerid, TD_HOUSE_PTD[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, TD_HOUSE_PTD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, TD_HOUSE_PTD[playerid][6], 0);

	TD_HOUSE_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 523.9093, 395.3330, "11.1"); // ?????
	PlayerTextDrawLetterSize(playerid, TD_HOUSE_PTD[playerid][1], 0.1756, 1.1258);
	PlayerTextDrawAlignment(playerid, TD_HOUSE_PTD[playerid][1], 3);
	PlayerTextDrawColor(playerid, TD_HOUSE_PTD[playerid][1], 808333055);
	PlayerTextDrawBackgroundColor(playerid, TD_HOUSE_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, TD_HOUSE_PTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, TD_HOUSE_PTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, TD_HOUSE_PTD[playerid][1], 0);

	TD_HOUSE_PTD[playerid][2] = CreatePlayerTextDraw(playerid, 566.1256, 417.0165, "LD_SPAC:white"); // ?????
	PlayerTextDrawTextSize(playerid, TD_HOUSE_PTD[playerid][2], 5.5798, 5.4798);
	PlayerTextDrawAlignment(playerid, TD_HOUSE_PTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, TD_HOUSE_PTD[playerid][2], -16776961);
	PlayerTextDrawBackgroundColor(playerid, TD_HOUSE_PTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, TD_HOUSE_PTD[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, TD_HOUSE_PTD[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, TD_HOUSE_PTD[playerid][2], 0);

	TD_HOUSE_PTD[playerid][3] = CreatePlayerTextDraw(playerid, 566.0504, 427.9837, "LD_SPAC:white"); // ?????
	PlayerTextDrawTextSize(playerid, TD_HOUSE_PTD[playerid][3], 5.5798, 5.4798);
	PlayerTextDrawAlignment(playerid, TD_HOUSE_PTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, TD_HOUSE_PTD[playerid][3], -16776961);
	PlayerTextDrawBackgroundColor(playerid, TD_HOUSE_PTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, TD_HOUSE_PTD[playerid][3], 4);
	PlayerTextDrawSetProportional(playerid, TD_HOUSE_PTD[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, TD_HOUSE_PTD[playerid][3], 0);

	TD_HOUSE_PTD[playerid][4] = CreatePlayerTextDraw(playerid, 621.1369, 427.9837, "LD_SPAC:white"); // ?????
	PlayerTextDrawTextSize(playerid, TD_HOUSE_PTD[playerid][4], 5.5798, 5.4798);
	PlayerTextDrawAlignment(playerid, TD_HOUSE_PTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, TD_HOUSE_PTD[playerid][4], -16776961);
	PlayerTextDrawBackgroundColor(playerid, TD_HOUSE_PTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, TD_HOUSE_PTD[playerid][4], 4);
	PlayerTextDrawSetProportional(playerid, TD_HOUSE_PTD[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, TD_HOUSE_PTD[playerid][4], 0);

	TD_HOUSE_PTD[playerid][5] = CreatePlayerTextDraw(playerid, 616.6862, 416.8833, "1000"); // ?????
	PlayerTextDrawLetterSize(playerid, TD_HOUSE_PTD[playerid][5], 0.1648, 0.8590);
	PlayerTextDrawAlignment(playerid, TD_HOUSE_PTD[playerid][5], 3);
	PlayerTextDrawColor(playerid, TD_HOUSE_PTD[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, TD_HOUSE_PTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, TD_HOUSE_PTD[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, TD_HOUSE_PTD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, TD_HOUSE_PTD[playerid][5], 0);
	
	Avtoriz_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 256.999938, 223.185043, "Введите пароль");
	PlayerTextDrawLetterSize(playerid, Avtoriz_PTD[playerid][0], 0.335666, 1.152000);
	PlayerTextDrawAlignment(playerid, Avtoriz_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, Avtoriz_PTD[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, Avtoriz_PTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, Avtoriz_PTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, Avtoriz_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, Avtoriz_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, Avtoriz_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Avtoriz_PTD[playerid][0], 0);
    //--------------------------------------------------------------------------
    rabvodo[playerid] = 0;
    if(playerid == INVALID_PLAYER_ID || gamemodeloaded != 1) return Kick(playerid);
    //new CheckSobeit[10];
    //GetPlayerVersion(playerid, CheckSobeit, sizeof(CheckSobeit));
    //if(strfind(CheckSobeit, "LoL4" ) != -1) return Kick(playerid),SendClientMessage(playerid,COLOR_RED,"Вход на сервер с запрещённым ПО (S0beit) строго запрещён!");
    vidnick[playerid] = 1;
    testproxy(playerid);
    
    GetPlayerIp(playerid, PI[playerid][pIP], 16);
    GetPlayerName(playerid, PI[playerid][pName], MAX_PLAYER_NAME);
    
    if(slotUsed{playerid} && !strcmp(playersIP[playerid], PI[playerid][pIP], true)) return Ban(playerid);
    GetPlayerIp(playerid, playersIP[playerid], 16);
    slotUsed{playerid} = true;
    
 	if(IsLoginInvalid(GetName(playerid)))
	{
	    SendClientMessage(playerid, COLOR_RED, "Ваше имя содержит запрещенные символы или цифры, используйте имя формата Имя_Фамилия на английском");
		return Kick(playerid);
	}
	
	static const blacklist_name[5][5] = {"CM_","_CM","Bomj","bomj","BOMJ"};
	for(new i; i < sizeof(blacklist_name); i++)
	{
	    if(strfind(GetName(playerid), blacklist_name[i], true) == 0) return Kick(playerid);
	}
	
//	HideSpeedometer(playerid);
	ac_1{playerid} = false;
    SetPlayerDataToDefault(playerid);
	CreateTextDraws(playerid);
    SetPVarInt(playerid, "AntiBreik", 500);
    SetPVarInt(playerid, "DrawFill", 0);
    SetPVarInt(playerid, "PickupID", -1);
	SetPlayerColor(playerid, COLOR_WHITE);
	SendClientMessage(playerid, -1, "Добро пожаловать на:{7efd7d} House RolePlay");
	
	player_timer[playerid] = SetTimerEx("Player_Control", 1000, 1, "i", playerid);
	
	for(new i = 0; i < sizeof(GZInfo); i++) GangZoneShowForPlayer(playerid, GangZone[i], GetGangZoneColor(i));
	new string[144];
	GetPlayerIp(playerid, PI[playerid][pIP], 20);
	format(string, 144, "[A] %s[%d] присоеденился к серверу. IP: %s.", PI[playerid][pName], playerid, PI[playerid][pIP]);
	SendAdminMessage(COLOR_GREY, string);
	
	//Вокзал пгт.Батырево
	RemoveBuildingForPlayer(playerid, 4928, 1935.329, 2087.610, 19.800, 0.250);
	RemoveBuildingForPlayer(playerid, 4929, 1935.329, 2087.610, 19.800, 0.250);
	RemoveBuildingForPlayer(playerid, 1245, 1949.489, 2102.590, 15.850, 0.250);
	//==================================================
	
	RemoveBuildingForPlayer(playerid, 9160, 2248.8301, 1368.4963, 11.0681, 0.25);
	RemoveBuildingForPlayer(playerid, 9181, 2248.8301, 1368.4963, 11.0681, 0.25);
	RemoveBuildingForPlayer(playerid, 9149, 2284.8149, 1396.0011, 12.3876, 0.25);
	RemoveBuildingForPlayer(playerid, 9178, 2284.8149, 1396.0011, 12.3876, 0.25);
	RemoveBuildingForPlayer(playerid, 9150, 2284.8149, 1396.0011, 12.3876, 0.25);
	RemoveBuildingForPlayer(playerid, 9145, 1865.8325, 1460.9642, 9.5700, 0.25);
	RemoveBuildingForPlayer(playerid, 9183, 2248.8301, 1368.4963, 11.0681, 0.25);
	RemoveBuildingForPlayer(playerid, 9184, 2248.8301, 1368.4963, 11.0681, 0.25);
	RemoveBuildingForPlayer(playerid, 9198, 2249.3999, 1363.6801, 11.5300, 0.25);
	RemoveBuildingForPlayer(playerid, 9199, 2281.7400, 1367.1500, 11.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 9200, 2289.2800, 1367.1600, 11.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 9203, 2348.4890, 1364.2086, 10.9162, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2276.1873, 1463.6937, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2245.3472, 1431.2218, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2199.7642, 1419.1273, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2219.6040, 1473.7412, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9203, 2348.4890, 1364.2086, 10.9162, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2276.1873, 1463.6937, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2245.3472, 1431.2218, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2199.7642, 1419.1273, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2219.6040, 1473.7412, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1762.5815, 1386.9663, 8.6197, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1764.9900, 1397.4700, 8.7130, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1792.0875, 1417.6105, 8.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1769.8411, 1369.5352, 8.6197, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1793.8873, 1435.0773, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1776.8024, 1377.1295, 8.7130, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1778.9648, 1392.6151, 8.6197, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1775.3702, 1407.5974, 8.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1754.8209, 1474.2860, 8.3197, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1791.8719, 1448.3517, 8.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1761.9413, 1356.3563, 8.7130, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1763.7400, 1393.8000, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1760.3008, 1366.2220, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1757.9338, 1368.1563, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1762.8107, 1427.5100, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1788.4100, 1399.7800, 8.7130, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1764.2809, 1464.4819, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1758.2887, 1416.1677, 8.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1774.5970, 1423.5985, 8.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1783.0483, 1465.0034, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1778.6820, 1436.2190, 8.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1762.4332, 1435.3251, 8.3197, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1786.5947, 1424.1960, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1784.4460, 1457.6068, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1797.7616, 1460.9546, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1775.3298, 1449.9448, 8.3197, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1790.0353, 1466.8658, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1755.7200, 1402.0400, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1775.0868, 1413.3529, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1778.1920, 1415.0045, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1774.5834, 1417.3876, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1778.7441, 1418.9033, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1761.4957, 1392.4432, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1765.9126, 1418.5555, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1799.1642, 1470.0796, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1793.8873, 1435.0773, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1766.3495, 1455.0237, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1775.6865, 1477.8744, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1757.5343, 1404.1105, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1761.4453, 1467.5479, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1770.3127, 1428.3723, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1751.9211, 1462.7734, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1763.9200, 1381.9600, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1758.1300, 1394.4399, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1758.8101, 1387.0400, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1762.2700, 1389.9200, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1756.2117, 1354.7136, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 1789.6246, 1386.0400, 8.6628, 0.25);
	RemoveBuildingForPlayer(playerid, 631, 1759.3112, 1376.9995, 8.6723, 0.25);
	RemoveBuildingForPlayer(playerid, 631, 1767.1539, 1360.0833, 8.6723, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1784.7141, 1460.2733, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1773.6429, 1477.3901, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1767.1691, 1461.6611, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1757.7769, 1453.5018, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1771.0554, 1468.1583, 8.3197, 0.25);
	RemoveBuildingForPlayer(playerid, 621, 1807.8518, 1462.3799, 8.6922, 0.25);
	RemoveBuildingForPlayer(playerid, 621, 1800.4672, 1452.5518, 8.6922, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1757.4399, 1424.6300, 12.4481, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1858.3667, 1465.6356, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1863.9346, 1457.9438, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1860.2729, 1466.3643, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1859.0551, 1466.4885, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1858.9247, 1464.3036, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1867.5101, 1458.4137, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1862.6489, 1462.2563, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1862.7622, 1459.0115, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1862.8711, 1460.6404, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1860.8701, 1464.4911, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1863.7479, 1463.6008, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1865.0862, 1463.6387, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1867.5980, 1463.4017, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1865.7601, 1457.9628, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1866.4615, 1463.6050, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1757.3300, 1391.0200, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1761.2744, 1357.4398, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1760.8856, 1355.3104, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1760.2400, 1356.5153, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1762.6226, 1355.3192, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1758.5839, 1376.4762, 8.6036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1762.8207, 1357.0944, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1767.7723, 1370.1267, 8.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1769.6918, 1371.8092, 8.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1770.0400, 1367.5000, 8.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1772.1400, 1369.9200, 8.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1777.7385, 1380.4077, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.3270, 1468.5420, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1771.1906, 1443.2288, 12.4481, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1756.5789, 1350.4218, 8.6036, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1771.2312, 1462.2383, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1794.7175, 1435.9111, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1791.3909, 1466.7874, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1793.2869, 1470.4966, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1756.1298, 1472.8929, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1791.1254, 1470.7124, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.4353, 1471.9207, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.2446, 1470.0122, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1757.4301, 1474.3900, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1768.1539, 1464.8405, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1751.6907, 1474.9579, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1753.7098, 1477.3385, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1790.7413, 1468.7904, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1753.2146, 1472.6495, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1754.5553, 1472.2535, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1790.7446, 1383.7258, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1761.6696, 1394.7017, 8.6036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1752.8068, 1381.4454, 8.6036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1753.7679, 1380.5950, 8.6036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1756.5686, 1376.4794, 8.6036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1753.3875, 1374.7981, 8.6036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1755.4882, 1374.6321, 8.6036, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1756.5881, 1444.8380, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1787.2820, 1398.4956, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1789.3540, 1398.7397, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.3588, 1415.8599, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1787.6018, 1400.3014, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1793.6100, 1416.9800, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1789.6613, 1400.4091, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1793.5470, 1468.0923, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1791.0118, 1439.6866, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.7839, 1439.6372, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.3009, 1442.8014, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1793.8206, 1434.0323, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1791.4122, 1441.3795, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1794.0548, 1442.5004, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1794.6521, 1440.6676, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1793.0160, 1441.2198, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 843, 1782.9326, 1474.1676, 9.3800, 0.25);
	RemoveBuildingForPlayer(playerid, 835, 1751.1801, 1437.8700, 11.2431, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1768.3309, 1360.2332, 8.7036, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1755.6899, 1351.6438, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1781.6869, 1415.7040, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 1859.5436, 1465.0161, 8.9962, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1766.3900, 1378.6300, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1777.6115, 1411.0643, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2281.7405, 1365.9478, 10.3491, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2279.9055, 1365.5298, 10.3491, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2289.9177, 1365.7268, 10.3491, 0.25);
	RemoveBuildingForPlayer(playerid, 9150, 2284.8101, 1396.0000, 12.3876, 0.25);
	RemoveBuildingForPlayer(playerid, 4851, 1853.5500, 2029.6500, 17.3023, 0.25);
	RemoveBuildingForPlayer(playerid, 4852, 1853.5500, 2029.6500, 17.3023, 0.25);
	RemoveBuildingForPlayer(playerid, 4869, 1796.2800, 2500.0500, 19.5600, 0.25);
	RemoveBuildingForPlayer(playerid, 4870, 1796.2800, 2500.0500, 19.5600, 0.25);
	RemoveBuildingForPlayer(playerid, 3423, 1843.2700, 2526.7900, 17.7941, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 1843.2700, 2526.7900, 17.7941, 0.25);
	RemoveBuildingForPlayer(playerid, 3449, 1789.3700, 2495.9800, 14.5653, 0.25);
	RemoveBuildingForPlayer(playerid, 3450, 1789.3700, 2495.9800, 14.5653, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, 1867.1300, 2005.3700, 15.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 4887, 1842.4940, 2514.3611, 13.7780, 0.25);
	RemoveBuildingForPlayer(playerid, 4887, 1826.2585, 2536.5078, 13.7780, 0.25);
	
	RemoveBuildingForPlayer(playerid, 9150, 2284.8149, 1396.0011, 12.3876, 0.25);
	RemoveBuildingForPlayer(playerid, 9185, 2284.8149, 1396.0011, 12.3876, 0.25);
	RemoveBuildingForPlayer(playerid, 9150, 2284.8101, 1396.0000, 12.3876, 0.25);
	
	//
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	TextDrawDestroy(Wasted[playerid]);
    TextDrawDestroy(Wasted1[playerid]);
    TextDrawDestroy(Wasted2[playerid]);
	new string1[128];
	switch(reason)
	{
		case 0: strmid(string1, "ошибка", 0, strlen("ошибка"));
		case 1: strmid(string1, "вышел", 0, strlen("Вышел"));
		case 2: strmid(string1, "кик/бан", 0, strlen("кик/бан"));
		default: strmid(string1, "неизвестно", 0, strlen("неизвестно"));
	}
	format(string1, 128, "[A] %s[%d] отключился | IP: %s | Причина: %s.",PI[playerid][pName],playerid,PI[playerid][pIP],string1);
	SendAdminMessage(COLOR_GREY, string1);
    slotUsed{playerid} = false;
    PI[playerid][pOnline] = 0;
    KillTimer(player_timer[playerid]);
    if(PI[playerid][cModel] > 0) Delete3DTextLabel(VehicleLabel[PI[playerid][PlayerCarID]]);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_ADMIN" SET timemin='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admTimeMin], GetName(playerid));
	mysql_tquery(dbHandle, Query, "", "");
	format(Query, sizeof(Query), "UPDATE "T_ADMIN" SET report='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admReport], GetName(playerid));
	mysql_tquery(dbHandle, Query, "", "");//
	format(Query, sizeof(Query), "UPDATE "T_ADMIN" SET reputation='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admReputation], GetName(playerid));
	mysql_tquery(dbHandle, Query, "", "");
	format(Query, sizeof(Query), "UPDATE "T_ADMIN" SET dostup='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admDostup], GetName(playerid));
	mysql_tquery(dbHandle, Query, "", "");
	if(GetPVarInt(playerid,"DrawFill") > 0) DeletePVar(playerid,"DrawFill");
	if(PI[playerid][PlayerCarID] != INVALID_VEHICLE_ID)
	{
		PI[playerid][cFuel] = Fuel[PI[playerid][PlayerCarID]];
		DestroyVehicle(PI[playerid][PlayerCarID]);
		PI[playerid][PlayerCarID] = INVALID_VEHICLE_ID;
	}
	if(pCuff[playerid][pCuffee] != INVALID_PLAYER_ID && reason == 1)
	{
	    new id = pCuff[playerid][pCuffee];
	    if(id == playerid)
		{
		    new cuffer = pCuff[playerid][pCuffer];
		    new string[128];
			format(string, sizeof(string), "%s вышел при аресте (+30 минут КПЗ)", GetName(playerid));
			SendClientMessageToAll(COLOR_RED, string);
			PI[playerid][pJail] = 4;
			PI[playerid][pJailTime] = 1800;
			PI[playerid][pWanted] = 0;
			pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
			pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
			pCuff[playerid][pCuffee] = INVALID_PLAYER_ID;
			pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
		}
		else if(!IsPlayerConnected(id))
		{
		    SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(id, 0);
			pCuff[id][pCuffer] = INVALID_PLAYER_ID;
			pCuff[id][pCuffee] = INVALID_PLAYER_ID;
			pCuff[playerid][pCuffee] = INVALID_PLAYER_ID;
			pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
			SendClientMessage(playerid, COLOR_LIME, "Офицер, надевший на Вас наручники, вышел из игры. Наручники сняты.");
		}
	}
	if(GetPVarInt(playerid, "TruckerJob"))
	{
	    DestroyVehicleEx(TruckerCar[playerid]);
	    TruckerCar[playerid] = 0;
	    TruckerGruz[playerid] = 0;
		DeletePVar(playerid, "TruckerJobTime");
		DeletePVar(playerid, "TruckerJob");
		DeletePVar(playerid, "TruckerJobRazgruzka");
	}
	if(GetPVarInt(playerid,"objectcop"))
	{
		DestroyObject(GetPVarInt(playerid,"objectcop"));
		DestroyDynamicArea(Ships[playerid]);
	}
	PlayerDied[playerid] = false;
	drawcapt[playerid] = false;
	SetPlayerSkills(playerid);
 	if(PlayerUseMask[playerid])
	{
        PlayerUseMask[playerid] = false;
		KillTimer(MaskTimer[playerid]);
	}
	if(UseGPS[playerid])
	{
    	DisablePlayerRaceCheckpoint(playerid);
    	UseGPS[playerid] = false;
	}
	if(GetPVarInt(playerid, "PriceBus") > 0)
	{
		PI[playerid][pPayCheck] += GetPVarInt(playerid, "BusMoney");
		if(IsValidDynamic3DTextLabel(BusText3D[playerid])) DestroyDynamic3DTextLabel(BusText3D[playerid]);
		SetVehicleToRespawn(PI[playerid][BusCarID]);
	}
	if(GetPVarInt(playerid, "PriceTaxi") > 0)
	{
		PI[playerid][pPayCheck] += GetPVarInt(playerid, "TaxiMoney");
		if(IsValidDynamic3DTextLabel(TaxiText3D[playerid])) DestroyDynamic3DTextLabel(TaxiText3D[playerid]);
		SetVehicleToRespawn(PI[playerid][TaxiCarID]);
	}
	if(PI[playerid][MechanicCarID] != INVALID_VEHICLE_ID) SetVehicleToRespawn(PI[playerid][MechanicCarID]);
	if(UseWork[playerid] == 2)
	{
	    DeletePVar(playerid, "OldLessSkin");
		UseWork[playerid] = 0;
		DeletePVar(playerid, "LessProgress");
		DeletePVar(playerid, "LessStatus");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	}
	
	foreach(new i: Player)
	{
        if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && PI[i][Spectating][0] == playerid)
        {
            GameTextForPlayer(i, "PLAYER DISCONNECTED", 3000, 3);
            cmd_specoff(i, "");
	    }
	}
//_________________| Скрытие текстдравов после выхода игрока |__________________
	for(new i = 0; i < 6; i++) TextDrawHideForPlayer(playerid, Button[i]);
	
    for(new i = 0; i < 10; i++)
	{
		PlayerTextDrawDestroy(playerid, SecurityCode[playerid][i]);
		SecurityCode[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
	for(new i = 0; i < 6; i++)
	{
		PlayerTextDrawDestroy(playerid, StatusWork[playerid][i]);
		StatusWork[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
	for(new i = 0; i < 4; i++)
	{
		PlayerTextDrawDestroy(playerid, GreenZoneText[playerid][i]);
		GreenZoneText[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
	for(new i = 0; i < 7; i++)
	{
	    PlayerTextDrawDestroy(playerid, CaptureTD[playerid][i]);
		CaptureTD[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
	CancelSelectTextDraw(playerid);
//________________________| Сохранение оружия у игрока при выходе |_____________
	new gun_string[56], ammo_string[56], string[256];
	format(gun_string, 56, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	PI[playerid][pGun][0], PI[playerid][pGun][1], PI[playerid][pGun][2], PI[playerid][pGun][3],
	PI[playerid][pGun][4], PI[playerid][pGun][5], PI[playerid][pGun][6], PI[playerid][pGun][7],
	PI[playerid][pGun][8], PI[playerid][pGun][9], PI[playerid][pGun][10], PI[playerid][pGun][11],
	PI[playerid][pGun][12]);
	
	format(ammo_string, 56, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	PI[playerid][pAmmo][0], PI[playerid][pAmmo][1], PI[playerid][pAmmo][2], PI[playerid][pAmmo][3],
	PI[playerid][pAmmo][4], PI[playerid][pAmmo][5], PI[playerid][pAmmo][6], PI[playerid][pAmmo][7],
	PI[playerid][pAmmo][8], PI[playerid][pAmmo][9], PI[playerid][pAmmo][10], PI[playerid][pAmmo][11],
	PI[playerid][pAmmo][12]);
	
	format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET `guns` = '%s',`ammos` = '%s' WHERE `id` = '%i'", gun_string, ammo_string, PI[playerid][pID]);
	mysql_tquery(dbHandle, string, "", "");
//______________________________________________________________________________
	SaveAccount(playerid);
	SetPlayerDataToDefault(playerid);
	return 1;
}
stock PreloadAnimLibs(playerid)
{
    static animlibs[131][] = {
    "AIRPORT", "Attractors", "BAR", "BASEBALL", "BD_FIRE", "BEACH", "benchpress", "BF_injection",
    "BIKED", "BIKEH", "BIKELEAP", "BIKES", "BIKES", "BIKEV", "BIKE_DBZ", "BLOWJOBZ", "BMX",
    "BOMBER", "BOX", "BSKTBALL", "BUDDY", "BUS", "CAMERA", "CAR", "CARRY", "CAR_CHAT", "CASINO",
    "CHAINSAW", "CHOPPA", "CLOTHES", "COACH", "COLT45", "COP_AMBIENT", "COP_DVBYZ", "CRACK",
    "CRIB", "DAM_JUMP", "DANCING", "DEALER", "DILDO", "DODGE", "DOZER", "DRIVEBYS", "FAT",
    "FIGHT_B", "FIGHT_C", "FIGHT_D", "FIGHT_E", "FINALE", "FINALE2", "FLAME", "Flowers", "FOOD",
    "Freeweights", "GANGS", "GHANDS", "GHETTO_DB", "goggles", "GRAFFITI", "GRAVEYARD", "GRENADE",
    "GYMNASIUM", "HAIRCUTS", "HEIST9", "INT_HOUSE", "INT_OFFICE", "INT_SHOP", "JST_BUISNESS",
    "KART", "KISSING", "KNIFE", "LAPDAN1", "LAPDAN2", "LAPDAN3", "LOWRIDER", "MD_CHASE", "MD_END",
    "MEDIC", "MISC", "MTB", "MUSCULAR", "NEVADA", "ON_LOOKERS", "OTB", "PARACHUTE", "PARK",
    "PAULNMAC", "PED", "PLAYER_DVBYS", "PLAYIDLES", "POLICE", "POOL", "POOR", "PYTHON", "QUAD",
    "QUAD_DBZ", "RAPPING", "RIFLE", "RIOT", "ROB_BANK", "ROCKET", "RUSTLER", "RYDER", "SCRATCHING",
    "SEX", "SHAMAL", "SHOP", "SHOTGUN", "SILENCED", "SKATE", "SMOKING", "SNIPER", "SPRAYCAN",
    "STRIP", "SUNBATHE", "SWAT", "SWEET", "SWIM", "SWORD", "TANK", "TATTOOS", "TEC", "TRAIN",
    "TRUCK", "UZI", "VAN", "VENDING", "VORTEX", "WAYFARER", "WEAPONS", "WUZI"
    };
    for(new i = 0; i < 131; i++) ApplyAnimation(playerid, animlibs[i][0], "null", 0.0, 0, 0, 0, 0, 0);
    return 1;
}

public OnPlayerSpawn(playerid)
{
    if(GetPVarInt(playerid, "SpecBool") == 1)
    {
	    DeletePVar(playerid, "SpecBool");
	    new Float:X = GetPVarFloat(playerid, "SpecX"), Float:Y = GetPVarFloat(playerid, "SpecY"), Float:Z = GetPVarFloat(playerid, "SpecZ"),
	    Float:FA = GetPVarFloat(playerid, "SpecFA"), inter = GetPVarInt(playerid, "SpecInt"), world = GetPVarInt(playerid, "SpecWorld");
	    DeletePVar(playerid, "SpecX");
	    DeletePVar(playerid, "SpecY");
	    DeletePVar(playerid, "SpecZ");
	    DeletePVar(playerid, "SpecFA");
	    DeletePVar(playerid, "SpecInt");
	    DeletePVar(playerid, "SpecWorld");
	    SetPlayerPos(playerid, X, Y, Z);
	    SetPlayerFacingAngle(playerid, FA);
	    SetPlayerVirtualWorld(playerid, world);
	    SetPlayerInterior(playerid, inter);
	    SetPlayerScore(playerid, PI[playerid][pLevel]);
	     SetPlayerSkin(playerid, PI[playerid][pModel]);
	    if(PI[playerid][pWanted] > 0) SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
	    return true;
    }
   	TextDrawHideForPlayer(playerid, Wasted[playerid]);
    TextDrawHideForPlayer(playerid, Wasted1[playerid]);
    TextDrawHideForPlayer(playerid, Wasted2[playerid]);
	if(PlayerLogged[playerid] == false)
	{
	    SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
		return SKick(playerid, 2);
	}
	PlayerSpawned[playerid] = false;
	if(PI[playerid][pCash])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, PI[playerid][pCash]);
	}
	if(UseWork[playerid])
	{
		UseWork[playerid] = 0;
		for(new i; i < 6; i++) PlayerTextDrawHide(playerid, StatusWork[playerid][i]);
	}
    TogglePlayerControllable(playerid, true);
    SetHealth(playerid, 100);
    SetHunger(playerid, PI[playerid][pHunger]);
 	DisablePlayerCheckpoint(playerid);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerScore(playerid, PI[playerid][pLevel]);
	if(PI[playerid][pFightStyle]) SetPlayerFightingStyle(playerid, PI[playerid][pFightStyle]);
	else SetPlayerFightingStyle(playerid, 0);
	if(PI[playerid][pWanted]) SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
	PlayerPlaySound(playerid, 1184, 0.0, 0.0, 0.0);
	SetPVarInt(playerid, "K_Times", 0);
    SetPVarInt(playerid, "AC_Protection", 1);
    Air_Gettime(playerid, 6);
    SetPlayerSkills(playerid);
	if(GetPVarInt(playerid, "Connected"))
	{
		for(new i; i < 13; i++)
		{
			if(!PI[playerid][pGun][i] || !PI[playerid][pAmmo][i]) continue;
			GivePlayerWeaponAC(playerid, PI[playerid][pGun][i], PI[playerid][pAmmo][i]);
		}
		new gun_string[56], ammo_string[56], string[256];
		format(gun_string, 56, "0,0,0,0,0,0,0,0,0,0,0,0,0");
		format(ammo_string, 56, "0,0,0,0,0,0,0,0,0,0,0,0,0");
		format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET `guns` = '%s', `ammos` = '%s' WHERE `id` = '%i'", gun_string, ammo_string, PI[playerid][pID]);
		mysql_tquery(dbHandle, string, "", "");
		DeletePVar(playerid, "Connected");
		PreloadAnimLibs(playerid);
	}
	if(PI[playerid][pMember]) SetPlayerSkin(playerid, PI[playerid][pMemberSkin]);
	else SetPlayerSkin(playerid, PI[playerid][pModel]);
	if(PI[playerid][Spectating][0] != INVALID_PLAYER_ID)
	{
	    SetPlayerPos(playerid, GetPVarFloat(playerid, "SpecX"), GetPVarFloat(playerid, "SpecY"), GetPVarFloat(playerid, "SpecZ"));
	    SetPlayerFacingAngle(playerid, GetPVarFloat(playerid, "SpecA"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "SpecVw"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "SpecInt"));
		DeletePVar(playerid, "SpecInt");
		DeletePVar(playerid, "SpecVw");
		DeletePVar(playerid, "SpecX");
		DeletePVar(playerid, "SpecY");
		DeletePVar(playerid, "SpecZ");
		DeletePVar(playerid, "SpecA");
		PI[playerid][Spectating][0] = INVALID_PLAYER_ID;
		PI[playerid][Spectating][1] = INVALID_PLAYER_ID;
		SetPlayerScore(playerid, PI[playerid][pLevel]);
		if(PI[playerid][pWanted]) SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
		if(PI[playerid][pMember]) SetPlayerSkin(playerid, PI[playerid][pMemberSkin]);
		else if(Oldskin2[playerid] > 0) SetPlayerSkin(playerid, Oldskin2[playerid]);
		else SetPlayerSkin(playerid, PI[playerid][pModel]);
		return 1;
	}
	else if(ClothesRound[playerid] == 1)
	{
		if(PI[playerid][pSex] == 1) PI[playerid][pModel] = 20;
		else PI[playerid][pModel] = 13;
		ChosenSkin[playerid] = 0;
		SelectCharPlace[playerid] = 0;
		ClothesRound[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		CreateAccount(playerid, PI[playerid][pPassword]);
		HideMenuForPlayer(specmenu, playerid);
		SetHealth(playerid, 100.0);
        FreezePlayer(playerid, 6000);
		SetPlayerPos(playerid, 1820.0099,2525.8376,15.6825);
		SetPlayerFacingAngle(playerid, 120.9524);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(ClothesRound[playerid] == 2)
	{
		new string[128];
		SendClientMessage(playerid, COLOR_LIME, "Выберите себе подходящую одежду, после выбора нажмите 'SELECT', для отмены нажмите 'CANCEL'");
		SendClientMessage(playerid, COLOR_LIME, "Чтобы просмотреть одежду, используйте стрелочки на экране!");
		SetPlayerVirtualWorld(playerid, playerid);
	    SetPlayerInterior(playerid,9);
	    SetPlayerPos(playerid,1212.8570556641,1839.5760498047,1001.5);
	    SetPlayerFacingAngle(playerid,243.8123);
		SetPlayerCameraPos(playerid,1218.1670,1837.2847,1001.7859);
		SetPlayerCameraLookAt(playerid,1214.8570556641,1838.7847,1001.6859);
		ApplyAnimation(playerid,"DEALER","DEALER_IDLE",4.1,1,1,1,1,1);
		TogglePlayerControllable(playerid, 0);
		for(new i; i < 4; i++) TextDrawShowForPlayer(playerid, Button[i]);
		SelectTextDraw(playerid, 0xFF4040AA);
		if(PI[playerid][pSex] == 1)
		{
			SelectCharPlace[playerid] = 0;
			SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
			format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i Рублей", JoinShopM[SelectCharPlace[playerid]][1]);
		}
		else
		{
			SelectCharPlace[playerid] = 0;
			SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
			format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i Рублей", JoinShopF[SelectCharPlace[playerid]][1]);
		}
		GameTextForPlayer(playerid, string, 2000, 3);
	}
	else if(PlayerDied[playerid] == true)
	{
		switch(random(3))
		{
		    case 0:
			{
		        FreezePlayer(playerid, 4000);
				SetPlayerPos(playerid, 1492.7870,2883.9890,1013.0210);
				SetPlayerFacingAngle(playerid,181.9463);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			}
		    case 1:
			{
		        FreezePlayer(playerid, 4000);
				SetPlayerPos(playerid, 1500.4386,2883.2532,1013.0210);
				SetPlayerFacingAngle(playerid,181.0297);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			}
		    case 2:
			{
		        FreezePlayer(playerid, 4000);
				SetPlayerPos(playerid, 1494.6577,2868.7371,1013.0210);
				SetPlayerFacingAngle(playerid,0.5480);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			}
		}
		SetPlayerHealth(playerid,10);
		PI[playerid][pHeal] = 10;
  	    SetPVarInt(playerid, "lechenie", 1);
        HospitalHealth(playerid);
        SendClientMessage(playerid,COLOR_WHITE,"Вам придется пройти курс лечения или вылечиться у медика. Войдите в палату и делайте процедуру.");
	}
    else if(GetPlayerHouse(playerid) && PI[playerid][pSpawnChange] == 1)
	{
		new i = GetPVarInt(playerid, "PlayerHouse");
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, HouseInfo[i][hExitx],HouseInfo[i][hExity], HouseInfo[i][hExitz]);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, i);
	}
	else if(GetPlayerPorchHouse(playerid) && PI[playerid][pSpawnChange] == 4)
	{
	    new i = GetPlayerPorchHouse(playerid);
	    FreezePlayer(playerid, 6000);
		SetPlayerPos(playerid, 2424.5337,-1715.2516,26.2475);
		SetPlayerVirtualWorld(playerid, i);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 180);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid, "EnterPlayerPorch",floatround(GetPlayerPorchHouse(playerid) / 8, floatround_floor) + 1);
		SetPVarInt(playerid, "EnterPlayerPorchHouse",GetPlayerPorchHouse(playerid));
	}
	else if(PI[playerid][pMember] == TEAM_MERIA && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 6000);
		SetPlayerPos(playerid, 1562.7713,-761.5740,1114.7072);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(PI[playerid][pMember] == TEAM_SFMAYOR && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 355.0304,184.7031,1008.3793);
		SetPlayerFacingAngle(playerid, 180.8081);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(PI[playerid][pMember] == TEAM_LVMAYOR && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 355.0304,184.7031,1008.3793);
		SetPlayerFacingAngle(playerid, 180.8081);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(PI[playerid][pMember] == TEAM_POLICIA && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 6000);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1456.7242,1579.0334,1016.7194);
		SetPlayerFacingAngle(playerid, 181.2890);
	    SetCameraBehindPlayer(playerid);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(PI[playerid][pMember] == TEAM_SFPD && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 6000);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2553.2166,-2435.4063,22.0044);
		SetPlayerFacingAngle(playerid, 271.3967);
	    SetCameraBehindPlayer(playerid);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(PI[playerid][pMember] == TEAM_SMP && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 1486.9044,2868.6653,1013.0210);
		SetPlayerFacingAngle(playerid, 0.8145);
		SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 4);
		InHospital[playerid] = true;
	}
	else if(PI[playerid][pMember] == TEAM_OPGTEST1 && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 2569.0618,-1844.7719,2522.8401);
		SetPlayerFacingAngle(playerid, 244.4333);
		SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(PI[playerid][pMember] == TEAM_ARMIYA && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 6000);
	    SetPlayerPos(playerid, 1759.3897,2380.8964,18.4681);
		SetPlayerFacingAngle(playerid, 87.9999);
		SetCameraBehindPlayer(playerid);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(PI[playerid][pMember] == TEAM_OPGOR && PI[playerid][pSpawnChange] == 2) //Русская Мафия
	{
        FreezePlayer(playerid, 6000);
		SetPlayerPos(playerid, 1758.7872,2379.6223,18.4681);
		SetPlayerFacingAngle(playerid, 33.3370);
		SetCameraBehindPlayer(playerid);
	}
	else if(PI[playerid][pMember] == TEAM_OPGYG && PI[playerid][pSpawnChange] == 2) //Украинская Мафия
	{
        FreezePlayer(playerid, 6000);
		SetPlayerPos(playerid, 155.2704,2048.2700,701.9799);
		SetPlayerFacingAngle(playerid, 89.1812);
		SetCameraBehindPlayer(playerid);
	}
	else if(PI[playerid][pMember] == TEAM_SMI && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 6000);
		SetPlayerPos(playerid, 986.3008,1781.7638,1002.9020);
		SetPlayerFacingAngle(playerid, 0.5982);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(PI[playerid][pMember] == TEAM_LVPD && PI[playerid][pSpawnChange] == 2)
	{
        FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 211.8840,186.7526,1003.0313);
		SetPlayerFacingAngle(playerid, 359.1617);
		SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 122);
	}
	else if(PI[playerid][pSpawnChange] == 3)
	{
        FreezePlayer(playerid, 2000);
        SetPos(playerid);
	}
	else if(PI[playerid][pMember] >= 1 && PI[playerid][pSpawnChange] == 0 || PI[playerid][pMember] == 0)
	{
		if(PI[playerid][pLevel] >= 1 && PI[playerid][pLevel] <= 4)
		{
	       	FreezePlayer(playerid, 6000);
			SetPlayerPos(playerid, 1820.0099,2525.8376,15.6825);
			SetPlayerFacingAngle(playerid, 120.9524);
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(PI[playerid][pLevel] >= 5)
	    {
            FreezePlayer(playerid, 2000);
			SetPlayerPos(playerid, 1820.0099,2525.8376,15.6825);
			SetPlayerFacingAngle(playerid, 120.7877);
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	else if(PI[playerid][pJail] == 1)
	{
        FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1445.6836,1572.6676,1016.7194);
		SetPlayerFacingAngle(playerid, 0.0160);
		SetCameraBehindPlayer(playerid);
		SendClientMessage(playerid, COLOR_DARKORANGE, "Вы еще не отсидели свой тюремный срок");
	}
	else if(PI[playerid][pJail] == 2)
	{
        FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1445.6836,1572.6676,1016.7194);
		SetPlayerFacingAngle(playerid, 0.0000);
		SetCameraBehindPlayer(playerid);
		SendClientMessage(playerid, COLOR_DARKORANGE, "Вы еще не отсидели свой тюремный срок");
	}
    SetPVarInt(playerid, "AntiBreik", 10);
	PlayerSpawned[playerid] = true;
	SendClientMessage(playerid, -1, "[DEBUG] Успешный авторизовались");
	SendClientMessage(playerid, -1, "[DEBUG] Успешный спавн");
	return 1;
}
//надо by Facer`s
public OnPlayerDeath(playerid, killerid, reason)
{
	TextDrawShowForPlayer(playerid, Wasted[playerid]);
    TextDrawShowForPlayer(playerid, Wasted1[playerid]);
    TextDrawShowForPlayer(playerid, Wasted2[playerid]);
	new string[128];
	PlayerEnterTime[playerid] += 221;
	ResetPlayerWeaponsAC(playerid);
	if(GetPVarInt(playerid, "Animation"))
	{
	    DeletePVar(playerid, "Animation");
	    TextDrawHideForPlayer(playerid, AnimDraw);
	}
	DeletePVar(playerid,"car_spawn");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	PlayerSpawned[playerid] = false;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
    Air_Gettime(playerid,4);
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	if(UseGPS[playerid])
	{
    	DisablePlayerRaceCheckpoint(playerid);
    	UseGPS[playerid] = false;
	}
	if(pCuff[playerid][pCuffee] == playerid)
	{
		new id = playerid;
		new cuffer = pCuff[id][pCuffer];
		SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(id, 0);
		pCuff[id][pCuffer] = INVALID_PLAYER_ID;
		pCuff[id][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		SendClientMessage(cuffer, COLOR_BLUE, "Арестованный умер");
	}
	if(INVALID_PLAYER_ID != killerid)
	{
		new bandkiller = PI[killerid][pMember];//(PI[killerid][pLeader] != 0) ? (PI[killerid][pLeader]) :
		new bandkill = PI[playerid][pMember];//(PI[playerid][pLeader] != 0) ? (PI[playerid][pLeader]) : Капты за биззы
        for(new i = 0; i < sizeof(GZInfo); i++)
        {
            if(IsPlayerInRangeOfPoint(playerid, 80, 2433.2385,-1443.0505,80.7915))
            {
				if(bandkiller != bandkill)
				{
				    if(kaptit == 2)
				    {
					    opgorexi++;
					    if(opgorexi >= 5)
					    {
							startwar = 0;
							SendFMes(15,COLOR_GREEN,"Вы завоевали новый бизнес");
							for(new h = 0; h < sizeof(BizzInfo); h++)
							{
								if(BizzInfo[h][bZahvat] == 1)
								{
									SendFMes(16,COLOR_RED,"Вы потеряли контроль над одним из своих бизнесов");
									BizzInfo[h][bMafia] = MZInfo[i][mNapad];
									switch(BizzInfo[h][bMafia])
									{
									   	case TEAM_OPGOR: MafiaTotalBizz[0]++;
									   	case TEAM_OPGYG: MafiaTotalBizz[1]--;
									}
									BizzInfo[h][bZahvat] = 0;
									MysqlUpdateBizzInt(h, "mafia", BizzInfo[h][bMafia]);
								}
							}
					    }
					}
				    if(kaptit == 1)
				    {
					    opgygi++;
					    if(opgygi >= 5)
					    {
							startwar = 0;
							SendFMes(16,COLOR_GREEN,"Вы завоевали новый бизнес");
							for(new h = 0; h < sizeof(BizzInfo); h++)
							{
								if(BizzInfo[h][bZahvat] == 1)
								{
									SendFMes(15,COLOR_RED,"Вы потеряли контроль над одним из своих бизнесов");
									BizzInfo[h][bMafia] = MZInfo[i][mNapad];
									switch(BizzInfo[h][bMafia])
									{
									   	case TEAM_OPGOR: MafiaTotalBizz[0]--;
									   	case TEAM_OPGYG: MafiaTotalBizz[1]++;
									}
									BizzInfo[h][bZahvat] = 0;
									MysqlUpdateBizzInt(h, "mafia", BizzInfo[h][bMafia]);
								}
							}
					    }
					}
				}
			}
		}
	}
 	if(PlayerUseMask[playerid])
	{
        PlayerUseMask[playerid] = false;
		KillTimer(MaskTimer[playerid]);
	}
	if(PI[playerid][pWanted] > 0)
	{
		if(killerid == INVALID_PLAYER_ID) return 1;
		if(!IsACop(killerid)) return 1;
		if(PI[killerid][pMember] == TEAM_POLICIA || PI[killerid][pMember] == TEAM_FBI)
		{
			format(string, sizeof(string), "Вы посажены в КПЗ на %i секунд!", PI[playerid][pWanted]*600);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid, 264.1425,77.4712,1001.0391);
			SetPlayerFacingAngle(playerid, 263.0160);
			PI[playerid][pJail] = 1;
		}
		PI[playerid][pJailTime] = PI[playerid][pWanted] * 600;
		SetHealth(playerid, 100);
		PI[playerid][pWanted] = 0;
		SetPlayerWantedLevel(playerid, 0);
		TogglePlayerControllable(playerid, 1);
		format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", PI[playerid][pJailTime]);
		GameTextForPlayer(playerid, string, 3000, 3);
	}
	if(GetPVarInt(playerid, "PriceBus") > 0)
	{
		DeletePVar(playerid, "BusTime");
		DeletePVar(playerid, "TypeBus");
		DeletePVar(playerid, "PriceBus");
		DeletePVar(playerid, "BusStop");
		DeletePVar(playerid, "BusMoney");
		PI[playerid][pBusTime] = 0;
		pPressed[playerid] = 0;
		if(IsValidDynamic3DTextLabel(BusText3D[playerid])) DestroyDynamic3DTextLabel(BusText3D[playerid]);
		SetVehicleToRespawn(PI[playerid][BusCarID]);
		PI[playerid][BusCarID] = INVALID_VEHICLE_ID;
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(!PI[playerid][pJailTime])
	{
		PlayerDied[playerid] = true;
	}
	SetHunger(playerid, 40);
	DisablePlayerCheckpoint(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
	if(UseWork[playerid] == 2)
	{
	    UseWork[playerid] = 0;
	    DeletePVar(playerid, "OldLessSkin");
		DeletePVar(playerid, "LessProgress");
		DeletePVar(playerid, "LessStatus");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	}
	for(new i; i < 6; i++) PlayerTextDrawHide(playerid, StatusWork[playerid][i]);
	new callerid = Mobile[playerid];
	if(callerid != -1)
	{
		SendClientMessage(callerid,  COLOR_GRAD2, "Связь оборвалась");
		CellTime[callerid] = -1;
		Mobile[callerid] = -1;
		Mobile[playerid] = -1;
		CellTime[playerid] = -1;
		DeletePVar(playerid, "CallTime");
		DeletePVar(callerid, "CallTime");
	}
	if(InShop[playerid] > 0 || GetPVarInt(playerid, "InShop") > 0)
	{
	    if(PI[playerid][SalonCarID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][SalonCarID]);
		DeletePVar(playerid, "InShop");
		InShop[playerid] = 0;
		for(new i; i < 16; i++)
		{
		    PlayerTextDrawHide(playerid, AvtosalonTD[playerid][i]);
		}
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		if(PI[playerid][pJail] == 0)
		{
		    if(!PI[killerid][pAdmin])
		    {
				if(IsACop(killerid) || IsAArmy(killerid) || IsAGang(killerid) || IsAMafia(killerid)) { }
				else
				{
					if(PI[killerid][pWanted] >= 6) return 1;
					PI[killerid][pWanted] += 2;
					if(PI[killerid][pWanted] >= 6) PI[killerid][pWanted] = 6;
					PI[killerid][pWantedTime] = 1800 + random(300);
					SetPlayerWantedLevel(killerid,PI[killerid][pWanted]);
					format(string,128,"[A] %s[%d] был убит игроком %s[%d]", GetName(playerid),playerid,GetName(killerid),killerid);
					SendAdminMessage(COLOR_GREY,string);
					AC_GunCheattime[playerid]=3+floatround(GetPlayerPing(playerid)/100);
					SetPlayerCriminal(killerid, "Неизвестный", "Убийство человека");
				}
			}
		}
	}
	if(Ether[playerid] == true)
	{
		new CB[16];
		Ether[playerid] = false;
		Convert(GetPVarInt(playerid,"InEther"),CB);
		if(EtherSms[PI[playerid][pNews]-1] == true)
		{
			format(string, 90, "[F] %s выключил прием СМС", GetName(playerid));
			SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string);
		}
		if(EtherCall[PI[playerid][pNews]-1] == true)
		{
			format(string, 90, "[F] %s выключил прием звонков", GetName(playerid));
			SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string);
		}
		format(string, 90, "[F] %s вышел из прямого эфира [Время в эфире: %s, звонков: %i, СМС: %i]",GetName(playerid), CB, CallNews[PI[playerid][pNews]-1],SmsNews[PI[playerid][pNews]-1]);
		SendFMes(PI[playerid][pMember], COLOR_LIGHTBLUE, string);
		EtherSms[PI[playerid][pNews]-1] = false;
		EtherCall[PI[playerid][pNews]-1] = false;
		SmsNews[PI[playerid][pNews]-1] = 0;
		CallNews[PI[playerid][pNews]-1] = 0;
		DeletePVar(playerid, "InEther");
		if(Mobile[playerid] != -1) MobileCrash(playerid);
	}
	if(EtherLive[playerid] == true)
	{
		EtherLive[playerid] = false;
		DeletePVar(playerid, "Etherfrac");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы вышли из прямого эфира");
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
    if(vehicleid < lastveh) Fuel[vehicleid] = 50;
   	SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);
	Engine[vehicleid] = Lights[vehicleid] = false;
	SetVehicleNumberPlate(vehicleid,"San Andreas");
	if(AshLock[vehicleid] == true) AshLock[vehicleid] = false;
	switch(GetVehicleModel(vehicleid))
	{
	    case 462,510,509,481: Fuel[vehicleid] = 999;
	}
	if(vehicleid >= lastveh)
	{
		foreach(new i: Player)
		{
			if(PI[i][PlayerCarID] == vehicleid)
			{
				if(PI[i][cVehcoms][0] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][0]);
				if(PI[i][cVehcoms][1] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][1]);
				if(PI[i][cVehcoms][2] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][2]);
				if(PI[i][cVehcoms][3] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][3]);
				if(PI[i][cVehcoms][4] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][4]);
				if(PI[i][cVehcoms][5] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][5]);
				if(PI[i][cVehcoms][6] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][6]);
				if(PI[i][cVehcoms][7] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][7]);
				if(PI[i][cVehcoms][8] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][8]);
				if(PI[i][cVehcoms][9] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][9]);
				if(PI[i][cVehcoms][10] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][10]);
				if(PI[i][cVehcoms][11] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][11]);
				if(PI[i][cVehcoms][12] != 0) AddVehicleComponent(vehicleid, PI[i][cVehcoms][12]);
				if(PI[i][cVehcoms][13] != 0) AddVehicleComponent(vehicleid,PI[i][cVehcoms][13]);
				if(PI[i][cPaintjob] != 3) ChangeVehiclePaintjob(vehicleid, PI[i][cPaintjob]);
				SetVehicleNumberPlate(vehicleid, PI[i][pNumberVehicle]);
			}
		}
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	for(new i, l = MAX_PLAYERS; i != l; i++)
 	{
       	if(!strcmp(ip, PI[i][pIP], true) && PI[i][pAdmin] == ADM_GRAND)
    	{
        	if(!success) SendClientMessage(i, COLOR_RED, "[RCON] Неверный пароль.");
        	else SendClientMessage(i, COLOR_GREEN, "[RCON] Вы успешно авторизовались.");
        	return 1;
		}
	}
	new string[64];
	format(string, sizeof(string), "banip %s", ip);
	SendRconCommand(string);
	return 1;
}


public OnVehicleDeath(vehicleid, killerid)
{
    if(killerid != INVALID_PLAYER_ID && !IsPlayerConnected(killerid)) return 0;
    if(GetPlayerVehicleID(killerid) != vehicleid)
	{
		SetPVarInt(killerid, "car_spawn", GetPVarInt(killerid, "car_spawn") + 1);
		if(GetPVarInt(killerid, "car_spawn") >= 3) Kick(killerid);
    }
    return 1;
}

public OnPlayerText(playerid, text[])
{
    if(!PlayerLogged[playerid]) return 0;
    if(strfind(text, "PizDoS Bot", true) == 0) return BanEx(playerid, "AntiDoS: PizDoS_Bot");
//	if(GetPVarInt(playerid, "TextTime") > GetTickCount()) return CheatKick(playerid, 2180);
	else SetPVarInt(playerid, "TextTime", GetTickCount()+50);
	if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid],text))
	{
	    SendClientMessage(playerid, COLOR_DARKORANGE, "Не флуди!");
		return 0;
	}
	SetString(OldMessage[playerid],text);
	TextReset[playerid] = gettime()+3;
	if(emptyMessage(text)) return 0;
	if(PI[playerid][pMuted])
	{
		SendClientMessage(playerid, COLOR_GREY, PlayerHaveMuteTime);
		return 0;
	}
	if(IsIpFound(text) || CheckString(text))
	{
		PlayerGetsChatBan(playerid, text);
		return 0;
	}
	new string[128], mesid[128];
	if(EtherCalled[playerid] == true && IsANews(Mobile[playerid]))
	{
        if(Mobile[Mobile[playerid]] == playerid)
        {
			format(string, sizeof(string), "[%s] [Тел.] %s: %s",
			(PI[playerid][pNews] == 1)?("ТРК ''Релакс''"):
			(PI[playerid][pNews] == 2)?("Закрыто"):("Закрыто"), GetName(playerid), text);
			if(PI[playerid][pNews] == 1) SendNMes(1, TEAM_BLUE_COLOR, string);
			else if(PI[playerid][pNews] == 2) SendNMes(2, TEAM_BLUE_COLOR, string);
			else if(PI[playerid][pNews] == 3) SendNMes(3, TEAM_BLUE_COLOR, string);
        }
  		format(string, sizeof(string), "[Телефон] %s: %s", GetName(playerid), text);
		ProxDetector(13.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		return 0;
	}
	if(Mobile[playerid] != -1 && Ether[playerid] == false)
	{
		format(string, sizeof(string), "[Телефон] %s: %s", GetName(playerid), text);
		ProxDetector(13.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		if(Mobile[Mobile[playerid]] == playerid) SendClientMessage(Mobile[playerid], COLOR_YELLOW, string);
		return 0;
	}
	if(IsANews(playerid) && Ether[playerid] == true)
	{
		format(string, sizeof(string), "[%s] %s: %s", Fraction_Name[PI[playerid][pMember]], GetName(playerid), text);
		if(PI[playerid][pNews] == 1) SendNMes(1, TEAM_BLUE_COLOR, string);
		else if(PI[playerid][pNews] == 2) SendNMes(2, TEAM_BLUE_COLOR, string);
		else if(PI[playerid][pNews] == 3) SendNMes(3, TEAM_BLUE_COLOR, string);
		return 0;
	}
	if(EtherLive[playerid] == true)
	{
	    new enterfrac = GetPVarInt(playerid, "Etherfrac");
		format(string, sizeof(string), "[LIVE][%s] %s: %s", Fraction_Name[enterfrac], GetName(playerid), text);
		if(enterfrac == TEAM_SMI) SendNMes(1, TEAM_BLUE_COLOR, string);
		else if(enterfrac == TEAM_SFNEWS) SendNMes(2, TEAM_BLUE_COLOR, string);
		else if(enterfrac == TEAM_LVNEWS) SendNMes(3, TEAM_BLUE_COLOR, string);
		return 0;
	}
	for(new i; i < SMILE_COUNT; i++)
	{
		if(strcmp(text, SmileInfo[i][smInput], true) == 0)
		{
			if(PI[playerid][pSex] == 1)
			{
				MeAction(playerid, SmileInfo[i][smOutput_M]);
				SetPlayerChatBubble(playerid, SmileInfo[i][smOutput_M], COLOR_PURPLE, 13.0, 10000);
			}
			else
			{
				MeAction(playerid, SmileInfo[i][smOutput_F]);
				SetPlayerChatBubble(playerid, SmileInfo[i][smOutput_F], COLOR_PURPLE, 13.0, 10000);
			}
			return 0;
		}
	}
	if(strcmp(text, "ку", true) == 0 || strcmp(text, "q", true) == 0 || strcmp(text, "qq", true) == 0 || strcmp(text, "й", true) == 0)
	{
	    new member[20];
	    if(PI[playerid][pMember] == TEAM_ARMIYA)
	    {
			if(PI[playerid][pSex] == 1) MeAction(playerid, "отдал честь");
			else MeAction(playerid, "отдала честь");
	        return 0;
	    }
	    if(IsAGang(playerid))
	    {
	        switch(PI[playerid][pMember])
		    {
		        case TEAM_OPGTEST1: member = "Закрыто";
				case TEAM_BALLAS: member = "Закрыто";
				case TEAM_RIFA: member = "Закрыто";
				case TEAM_OPGTEST2: member = "Закрыто";
				case TEAM_VAGOS: member = "Закрыто";
		    }
		    if(PI[playerid][pSex] == 1) format(string, sizeof(string), "показал распальцовку %s", member);
		    else format(string, sizeof(string), "показала распальцовку %s", member);
			MeAction(playerid, string);
		    if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1);
		    return 0;
		}
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
	    format(string, sizeof(string), "- %s (%s)", text, GetName(playerid));
		format(mesid, sizeof(mesid), "- %s (%s)[%d]", text, GetName(playerid), playerid);
		ProxDetector(13.0, playerid, string, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		SetPlayerChatBubble(playerid, text, COLOR_WHITE, 13.0, 10000);
		if(!GetPVarInt(playerid, "Animation"))
		{
		    ApplyAnimation(playerid, "PED", "IDLE_CHAT", 8.1, 0, 1, 1, 1, 1);
			SetTimerEx("ClearAnimText", 2000, false, "d", playerid);
		}
	}
	else
	{
		format(string, sizeof(string), "- %s (%s)", text, GetName(playerid));
		format(mesid, sizeof(mesid), "- %s (%s)[%d]", text, GetName(playerid), playerid);
		ProxDetector(13.0, playerid, string, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		SetPlayerChatBubble(playerid, text, COLOR_WHITE, 13.0, 10000);
	}
	return 0;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	return 0;
}

stock IsVehicleOccupiedEx(vehicleid)
{
	foreach(new i: Player) if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	return 0;
}

stock IsVehicleOccupied(vehicleid)
{
    foreach(new i: Player) if(IsPlayerInVehicle(i, vehicleid)) return 1;
    return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(vehicleid >= mechanic[0] && vehicleid <= mechanic[1])
	{
		if(!ispassenger)
		{
			if(PI[playerid][pJob] != JOB_MECHANIC)
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не автомеханик!");
				ClearAnimations(playerid, true);
			    return 1;
			}
		}
	}
	if(vehicleid >= meriacar[0] && vehicleid <= meriacar[1])
	{
		if(!ispassenger)
		{
			if(PI[playerid][pMember] != TEAM_MERIA)
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не сотрудник Администрации Посёлка!");
				ClearAnimations(playerid, true);
			    return 1;
			}
		}
	}
	if(vehicleid >= armyngcar[0] && vehicleid <= armyngcar[1])
	{
		if(!ispassenger)
		{
			if(PI[playerid][pMember] != TEAM_ARMIYA)
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не сотрудник Армии!");
				ClearAnimations(playerid, true);
			    return 1;
			}
		}
	}
	if(vehicleid >= opg1car[0] && vehicleid <= opg1car[1])
	{
		if(!ispassenger)
		{
			if(PI[playerid][pMember] != TEAM_OPGOR)
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не из Русской Мафии");
				ClearAnimations(playerid, true);
				return 1;
			}
		}
	}
	if(vehicleid >= opg2car[0] && vehicleid <= opg2car[1])
	{
		if(!ispassenger)
		{
			if(PI[playerid][pMember] != TEAM_OPGYG)
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не из Украинская Мафия!");
				ClearAnimations(playerid, true);
				return 1;
			}
		}
	}
	if(vehicleid >= smicar[0] && vehicleid <= smicar[1])
	{
		if(!ispassenger)
		{
			if(PI[playerid][pMember] != TEAM_SMI)
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не сотрудник ТРК''Релакс''!");
				ClearAnimations(playerid, true);
				return 1;
			}
		}
	}
	if(vehicleid >= bolkacar[0] && vehicleid <= bolkacar[1])
	{
		if(!ispassenger)
		{
			if(PI[playerid][pMember] != TEAM_SMP)
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не сотрудник СМП-Б!");
	            ClearAnimations(playerid, true);
				return 1;
			}
		}
	}
	if(vehicleid >= policiacar[0] && vehicleid <= policiacar[1])
	{
		if(!ispassenger)
		{
			if(PI[playerid][pMember] != TEAM_POLICIA)
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не сотрудник Полиции!");
				ClearAnimations(playerid, true);
				return 1;
			}
		}
	}
    if(UseWork[playerid] == 2 || UseWork[playerid] == 3)
	{
		if(!ispassenger)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не можете сесть в т/с, работая");
			RemoveFromVehicle(playerid);
			ClearAnimations(playerid);
			return 1;
		}
	}
	if(pCuff[playerid][pCuffee] == playerid)
	{
		if(!ispassenger)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не можете сесть в т/с в наручниках");
			RemoveFromVehicle(playerid);
			ClearAnimations(playerid);
			return 1;
		}
	}
	EnterVehicle[playerid] = vehicleid;
	if(!ispassenger)
	{
	    if(IsVehicleOccupiedEx(vehicleid))
	    {
     		GameTextForPlayer(playerid, "~r~~h~ТРАНСПОРТ ЗАНЯТЬ ДРУГИМ ИГРОКОМ", 2000, 4);
  			ClearAnimations(playerid, true);
     		return 1;
	    }
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	SetPVarInt(playerid, "AntiBreik", 3);
	new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    PI[playerid][pPos][0] = X;
    PI[playerid][pPos][1] = Y;
    PI[playerid][pPos][2] = Z;
	new string[128];
	if(GetPVarInt(playerid, "LESSON") != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вы провалили практику."), DeletePVar(playerid, "LESSON"), DeletePVar(playerid, "B_CHECK"), DisablePlayerRaceCheckpoint(playerid);
	if(Ether[playerid] == true)
	{
		new CB[16];
		Ether[playerid] = false;
		Convert(GetPVarInt(playerid,"InEther"),CB);
		if(EtherSms[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
		if(EtherCall[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
		format(string, 90, "[F] %s вышел из прямого эфира [Время в эфире: %s, звонков: %i, СМС: %i]",GetName(playerid), CB, CallNews[PI[playerid][pNews]-1],SmsNews[PI[playerid][pNews]-1]);
		SendFMes(PI[playerid][pMember], COLOR_LIGHTBLUE, string);
		EtherSms[PI[playerid][pNews]-1] = false;
		EtherCall[PI[playerid][pNews]-1] = false;
		SmsNews[PI[playerid][pNews]-1] = 0;
		CallNews[PI[playerid][pNews]-1] = 0;
		DeletePVar(playerid, "InEther");
		if(Mobile[playerid] != -1) MobileCrash(playerid);
	}
	if(GetPVarInt(playerid, "PriceTaxi") > 0)
	{
	    format(string, sizeof(string), "Рабочий день завершен. Вами заработано: %i Рублей", GetPVarInt(playerid, "TaxiMoney"));
		SendClientMessage(playerid, COLOR_BLUE, string);
		SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
		DeletePVar(playerid, "PriceTaxi");
		DeletePVar(playerid, "TaxiMoney");
		if(IsValidDynamic3DTextLabel(TaxiText3D[playerid])) DestroyDynamic3DTextLabel(TaxiText3D[playerid]);
		foreach(new i: Player)
		{
			if(PlayerLogged[i] == false) continue;
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) != 2)
			{
				DeletePVar(i, "TimeTaxi");
				DeletePVar(i, "TaxiPrice");
				DeletePVar(i, "PlayerTaxi");
			}
		}
	}
	if(GetPVarInt(playerid, "TaxiPrice") > 0)
	{
		DeletePVar(playerid, "TimeTaxi");
		DeletePVar(playerid, "TaxiPrice");
		DeletePVar(playerid, "PlayerTaxi");
	}
	if(EtherLive[playerid] == true)
	{
		EtherLive[playerid] = false;
		DeletePVar(playerid, "Etherfrac");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы вышли из прямого эфира!");
	}
	return 1;
}

forward OnPlayerEnterDynamicArea(playerid, areaid);
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	new player_state = GetPlayerState(playerid);
    if(areaid == AreaInfo[arServerHelp] && player_state == PLAYER_STATE_ONFOOT)
    {
		ShowPlayerDialog(playerid, 3793, DIALOG_STYLE_MSGBOX, "{7efd7d}Помощь по серверу", "{FFFFFF}Добро пожаловать на сервер {7efd7d}"SERVER_NAME"\n{FFFFFF}Если Вы на сервере впервые, то прочитайте эту информацию до конца", "Далее", "Отмена");
    }
    else if(areaid == AreaInfo[arAdminsZoneHP] && player_state == PLAYER_STATE_ONFOOT)
    {
        new Float:health;
        GetPlayerHealth(playerid, health);
		if(health < 100) SetHealth(playerid, 100.0);
		GameTextForPlayer(playerid, "~b~~h~You regain ~n~~b~~h~health", 3000, 1);
    }
    else if(areaid == AreaInfo[arHotdogHP] && player_state == PLAYER_STATE_ONFOOT)
    {
        if(PI[playerid][pLevel] > 3) return SendClientMessage(playerid, COLOR_GREY, "Бесплатная еда доступна до 3 уровня");
        else if(PI[playerid][pHunger] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны!");
        else if(GetPVarInt(playerid, "floodeat") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Бесплатная еда доступна раз в 3 минуты");
        PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
		if(PI[playerid][pHunger] <= 75) GiveHunger(playerid, 25);
    	else SetHunger(playerid, 100);
		if(PI[playerid][pSex] == 1) MeAction(playerid, "съел хот-дог");
		else MeAction(playerid, "съела хот-дог");
		GameTextForPlayer(playerid, "~g~have you ~n~eaten", 3000, 1);
		SetPVarInt(playerid, "floodeat", gettime()+180);
    }
	else if(areaid >= AreaInfo[arGettingPassport][0] && areaid <= AreaInfo[arGettingPassport][2] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(!IsValidPassport(playerid)) ShowPlayerDialog(playerid, D_PASS, DIALOG_STYLE_LIST, "{7efd7d}Получение паспорта [1/2]", "{63BD4E}Выберите пол:\n{FFFFFF}- Мужчина\n{FFFFFF}- Женщина", "Далее", "Отмена");
		else return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть паспорт!");
	}
	else if(areaid == AreaInfo[arBuyFishki] && player_state == PLAYER_STATE_ONFOOT)
	{
        ShowPlayerDialog(playerid, D_BUYFISHKI, DIALOG_STYLE_LIST, "{7efd7d}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
	}
	else if(areaid == AreaInfo[arBuyNarko][0] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(GetPVarInt(playerid, "next_actor")) return SendClientMessage(playerid, COLOR_GREY, "Я тебе уже сказал, иди в соседнюю комнату");
		ShowPlayerDialog(playerid,1212,DIALOG_STYLE_INPUT," ", "\n\n{FFFFFF}Эй, парень! Ты к кому пришёл?\n\n", "За травой", "Заблудился");
	}
	else if(areaid == AreaInfo[arBuyNarko][1] && player_state == PLAYER_STATE_ONFOOT)
	{
	    //if(!GetPVarInt(playerid, "next_actor")) return SendClientMessage(playerid, COLOR_GREY, "Парень ты заблудился. Шагай отсюда!");
		ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{7efd7d}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.","Купить","Отмена");
	}
    else if(areaid == Ships[playerid] && player_state == PLAYER_STATE_DRIVER)
    {
        new panels, tires;
        GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, tires);
        UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, 15);
    }
  /*  for(new i = 1; i <= TOTALBIZZ; i++)
    {
        if(areaid == BizzInfo[i][bMenu] && player_state == PLAYER_STATE_ONFOOT)
        {
			switch(BizzInfo[i][bType])
			{
			    case 1: MagazineList(playerid);
			    case 3: EatList(playerid, i);
			    case 4,5,9: BarList(playerid);
			    case 6: GunShopList(playerid);
			    case 8: SkinShopList(playerid);
			}
		}
    }*/
    for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	{
		if(areaid == AreaInfo[arGreenZone][i])
        {
            PlayerTextDrawShow(playerid, GreenZoneText[playerid][0]);
            PlayerTextDrawShow(playerid, GreenZoneText[playerid][1]);
            PlayerTextDrawShow(playerid, GreenZoneText[playerid][2]);
		}
	}
    return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	{
		if(areaid == AreaInfo[arGreenZone][i])
        {
            PlayerTextDrawHide(playerid, GreenZoneText[playerid][0]);
            PlayerTextDrawHide(playerid, GreenZoneText[playerid][1]);
            PlayerTextDrawHide(playerid, GreenZoneText[playerid][2]);
		}
	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(!ac_1{playerid} && newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_NONE) return SKick(playerid, 5341);
	Air_Gettime(playerid,4);
	if(PI[playerid][pAdmin] == ADM_NONE)
	{
		if(newstate == PLAYER_STATE_DRIVER) PlayerEnterTime[playerid] = GetTickCount();
		else if(oldstate == PLAYER_STATE_DRIVER)
		{
			if((GetTickCount()-PlayerEnterTime[playerid]) < 220)
			{
			    new string[128];
				format(string, sizeof(string), "[A] %s[%d] кикнут за использование читов (Car Hack)", GetName(playerid), playerid);
	            SendAdminMessage(COLOR_GREY, string);
	            SendLog("CheatLog",string);
			 //   CheatKick(playerid, 6224);
				return 0;
			}
		}
	}
//	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_PASSENGER || oldstate == PLAYER_STATE_PASSENGER && newstate == PLAYER_STATE_DRIVER) CheatKick(playerid, 2918); // краш машинами
 /*	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_DRIVER)
    {
        if(GetPVarInt(playerid, "CarHackUsing") > 2) CheatKick(playerid, 1957);
        SetPVarInt(playerid, "CarHackUsing", GetPVarInt(playerid, "CarHackUsing")+1);
    }*/
    if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
    {
        new carid = GetPlayerVehicleID(playerid), Float:X, Float:Y, Float:Z;
        GetVehiclePos(carid, X, Y, Z);
        VehiclePos[carid][0] = X;
        VehiclePos[carid][1] = Y;
        VehiclePos[carid][2] = Z;
    }
/*	if(newstate == PLAYER_STATE_DRIVER)
	{
		new model = GetPlayerVehicleSeat(playerid);
		if(model != 128)
		{
			if(!model)
			{
				model = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(!(400 <= model <= 611) || MaxPassengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) return CheatKick(playerid, 12);
			}
			else return CheatKick(playerid, 62);
		}
	}*/
	if(oldstate == 2 || oldstate == PLAYER_STATE_PASSENGER)
	{
	    EnterVehicle[playerid] = INVALID_VEHICLE_ID;
	}
    if(newstate == PLAYER_STATE_PASSENGER)
	{
	    switch(GetPlayerWeapon(playerid))
	    {
	        case 24,31,26,28,29,30,33: SetPlayerArmedWeapon(playerid, 0);
	    }
    }
 /*   if((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2)  || (newstate == 2 && oldstate == 2))
	{
		SetPVarInt(playerid, "AC124", GetPVarInt(playerid,"AC124") + 1);
		if(GetPVarInt(playerid,"AC124") >= 3)
		{
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return CheatKick(playerid, 115);
		}
	}*/
	switch(newstate)
	{
		case 1: //Игрок пешком (можно писать PLAYER_STATE_ONFOOT)
		{
		    //for(new i; i < 24; i++) TextDrawHideForPlayer(playerid,TD_HOUSE_TD[i]);
		    //for(new m; m < 7; m++) PlayerTextDrawHide(playerid,TD_HOUSE_PTD[playerid][m]);
			KillTimer(STimer[playerid]);
			if(GetPVarInt(playerid, "PriceBus"))
			{
				SendClientMessage(playerid, COLOR_RED, "У вас есть 15 секунд, чтобы вернуться");
				DisablePlayerRaceCheckpoint(playerid);
				SetPVarInt(playerid, "BusTime", 15);
				DeletePVar(playerid, "TimeBus");
			}
			if(GetPVarInt(playerid, "TruckerJob"))
			{
				SendClientMessage(playerid, COLOR_DARKORANGE, "У вас есть 15 секунд, чтобы вернуться");
				DisablePlayerRaceCheckpoint(playerid);
				SetPVarInt(playerid, "TruckerJobTime", 15);
			}
		}
		case 2: //Игрок в машине, на месте водителя (можно писать PLAYER_STATE_DRIVER)
		{
			new cars = 0;
			if(InShop[playerid] < 1 || GetPVarInt(playerid, "InShop") == 0)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				new temp = GetVehicleModel(GetPlayerVehicleID(playerid));
				BE_Play_Check[playerid] = true;
				for(new i; i != sizeof(BE_Bad_Vehs); i++)
				{
					if(temp == BE_Bad_Vehs[i]) cars++, BE_Play_Check[playerid] = false;
				}
				if(cars == 0)
				{
					if(!IsAVel(vehicleid) && !IsABoat(vehicleid))
					{
					    //STimer[playerid] = SetTimerEx("UpdateSpeedometr", 150, true, "i", playerid);
						//for(new i; i < 24; i++) TextDrawShowForPlayer(playerid,TD_HOUSE_TD[i]);
						//for(new m; m < 7; m++) PlayerTextDrawShow(playerid,TD_HOUSE_PTD[playerid][m]);
					}
					if(vehicleid >= CategoryA[0] && vehicleid <= CategoryA[1])
					{
					    if(GetPVarInt(playerid, "LESSON") == 1)
						{
                            SetPlayerVirtualWorld(playerid, 1);
                            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 1);
						    AshLock[GetPlayerVehicleID(playerid)] = true;
							SendClientMessage(playerid, -1, "Вы сдаете категорию A!"), pLessonCar[playerid] = CHECKPOINT_1;
							SetPlayerRaceCheckpoint(playerid,0,1899.6517,2246.5349,15.9095,1887.0807,2201.9712,16.0329,5.0);
							SendClientMessage(playerid, COLOR_BLUE, "Чтобы завести двигатель, используйте клавишу: {7efd7d}\"L.CTRL\"{0099FF}, или ввежите команду {7efd7d}/en");
							SendClientMessage(playerid, COLOR_BLUE, "Для сдачи экзамена, следуйте по маркерам соблюдая ПДД. Внимание на экзамен вам даётся {7efd7d}10 минут"), SetPVarInt(playerid, "LESSONTIME", gettime()+600);
						}
					    else SendClientMessage(playerid, COLOR_GRAD1, "Этот транспорт для сдачи на права категории A."), RemovePlayerFromVehicle(playerid);
					    return true;
					}
					if(vehicleid >= CategoryB[0] && vehicleid <= CategoryB[1])
					{
					    if(GetPVarInt(playerid, "LESSON") == 2)
						{
                            SetPlayerVirtualWorld(playerid, 1);
                            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 1);
						    AshLock[GetPlayerVehicleID(playerid)] = true;
							SendClientMessage(playerid, -1, "Вы сдаете категорию B!"), pLessonCar[playerid] = CHECKPOINT_1;
							SetPlayerRaceCheckpoint(playerid,0,1899.6517,2246.5349,15.9095,1887.0807,2201.9712,16.0329,5.0);
                            SendClientMessage(playerid, COLOR_BLUE, "Чтобы завести двигатель, используйте клавишу: {7efd7d}\"L.CTRL\"{0099FF}, или ввежите команду {7efd7d}/en");
							SendClientMessage(playerid, COLOR_BLUE, "Для сдачи экзамена, следуйте по маркерам соблюдая ПДД. Внимание на экзамен вам даётся {7efd7d}10 минут"), SetPVarInt(playerid, "LESSONTIME", gettime()+600);
						}
					    else SendClientMessage(playerid, COLOR_GRAD1, "Этот транспорт для сдачи на права категории B."), RemovePlayerFromVehicle(playerid);
				        return true;
					}
					if(vehicleid >= skytera[0] && vehicleid <= skytera[4])
					{
					    if(GetPVarInt(playerid, "RendMoped") == GetPlayerVehicleID(playerid)) { }
					    else
					    {
					        SPD(playerid,1981,DIALOG_STYLE_MSGBOX,"{7efd7d}Аренда скутера","{FFFFFF}Вы действительно хотите арендовать скутер?\nАренда стоит: {7efd7d}150 {ffffff}рублей.","Да","Нет");
					    }
				        return true;
					}
					if(vehicleid >= CategoryC[0] && vehicleid <= CategoryC[1])
					{
				        if(GetPVarInt(playerid, "LESSON") == 3)
						{
                            SetPlayerVirtualWorld(playerid, 1);
                            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 1);
						    AshLock[GetPlayerVehicleID(playerid)] = true;
							SendClientMessage(playerid, -1, "Вы сдаете категорию C!"), pLessonCar[playerid] = CHECKPOINT_1;
							SetPlayerRaceCheckpoint(playerid,0,1899.6517,2246.5349,15.9095,1887.0807,2201.9712,16.0329,5.0);
                            SendClientMessage(playerid, COLOR_BLUE, "Чтобы завести двигатель, используйте клавишу: {7efd7d}\"L.CTRL\"{0099FF}, или ввежите команду {7efd7d}/en");
							SendClientMessage(playerid, COLOR_BLUE, "Для сдачи экзамена, следуйте по маркерам соблюдая ПДД. Внимание на экзамен вам даётся {7efd7d}10 минут"), SetPVarInt(playerid, "LESSONTIME", gettime()+600);
						}
					    else SendClientMessage(playerid, COLOR_GRAD1, "Этот транспорт для сдачи на права категории C."), RemovePlayerFromVehicle(playerid);
					    return true;
					}
					if(vehicleid == CategoryD)
					{
					    if(GetPVarInt(playerid, "LESSON") == 4)
						{
                            SetPlayerVirtualWorld(playerid, 1);
                            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 1);
						    AshLock[GetPlayerVehicleID(playerid)] = true;
							SendClientMessage(playerid, -1, "Вы сдаете категорию D!"), pLessonCar[playerid] = CHECKPOINT_1;
							SetPlayerRaceCheckpoint(playerid,0,1899.6517,2246.5349,15.9095,1887.0807,2201.9712,16.0329,5.0);
                            SendClientMessage(playerid, COLOR_BLUE, "Чтобы завести двигатель, используйте клавишу: {7efd7d}\"L.CTRL\"{0099FF}, или ввежите команду {7efd7d}/en");
							SendClientMessage(playerid, COLOR_BLUE, "Для сдачи экзамена, следуйте по маркерам соблюдая ПДД. Внимание на экзамен вам даётся {7efd7d}10 минут"), SetPVarInt(playerid, "LESSONTIME", gettime()+600);
						}
					    else SendClientMessage(playerid, COLOR_GRAD1, "Этот транспорт для сдачи на права категории D."), RemovePlayerFromVehicle(playerid);
					    return true;
					}
                    if(IsAMoped(vehicleid) && !IsAVel(vehicleid) && PI[playerid][pCarA] < 1)
				    {
					    if(GetPVarInt(playerid, "LESSON") == 1) return true;
					    else
					    SendClientMessage(playerid, COLOR_GREY, "У Вас нет прав категории A.");
						RemovePlayerFromVehicle(playerid);
						return 1;
				    }
				    if(KamazVeh(vehicleid) && !IsAVel(vehicleid) && PI[playerid][pCarC] < 1)
				    {
					    if(GetPVarInt(playerid, "LESSON") == 3) return true;
					    else
					    SendClientMessage(playerid, COLOR_GREY, "У Вас нет прав категории C.");
						RemovePlayerFromVehicle(playerid);
						return 1;
				    }
				    if(BusVeh2(vehicleid) && !IsAVel(vehicleid) && PI[playerid][pCarD] < 1)
				    {
					    if(GetPVarInt(playerid, "LESSON") == 4) return true;
					    else
					    SendClientMessage(playerid, COLOR_GREY, "У Вас нет прав категории D.");
						RemovePlayerFromVehicle(playerid);
						return 1;
				    }
				    if(!IsAVel(vehicleid) && !IsAMoped(vehicleid) && PI[playerid][pCarB] < 1)
				    {
						if(GetPVarInt(playerid, "LESSON") == 2) return true;
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) return true;
                        else
                        SendClientMessage(playerid, COLOR_GREY, "У Вас нет прав категории B.");
						RemovePlayerFromVehicle(playerid);
		                return 1;
					}
					if(Engine[vehicleid] == false)
					{
						if(IsAVel(vehicleid))
						{
							GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(vehicleid,true,lights,alarm,doors,bonnet,boot,objective);
						}
						else
						{
						    if(!InShop[playerid]) SendClientMessage(playerid, COLOR_WHITE, "Чтобы завести транспорт, нажмите {7efd7d}[л.CTRL]{FFFFFF} или же введите команду: {7efd7d}/en");
						}
					}
					if(vehicleid == TruckerCar[playerid])//дальнобойщик
					{
                        if(GetPVarInt(playerid, "TruckerJob") == 1)
                        {
                            if(GetPVarInt(playerid, "TruckerJob") == 1)
							{
                                SetPlayerCheckpoint(playerid, 2738.4316,-2273.2146,17.9269,5.0);
							}
							else if(GetPVarInt(playerid, "TruckerJob") == 2)
							{
                                SetPlayerCheckpoint(playerid, 2906.9075,2130.5762,9.3900,5.0);
							}
							if(GetPVarInt(playerid, "TruckerJobFuel") == 1)
							{
                                Fuel[GetPlayerVehicleID(playerid)] = 80;
							}
							DeletePVar(playerid, "TruckerJobTime");
							DeletePVar(playerid, "TruckerJobTimeGoToCar");
							DeletePVar(playerid, "TruckerJobFuel");
                            SendClientMessage(playerid, COLOR_BLUE, "Вы взяли грузовик, отправляйтесь на загрузку.");
                            return 1;
                        }
					}
					if(vehicleid >= trucker1lvl[0] && vehicleid <= trucker1lvl[1])
					{
						if(PI[playerid][pJob] != 6)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не работаете дальнобойщиком!");
							RemoveFromVehicle(playerid);
							return 1;
						}
						new trucklevel, price;
						if(vehicleid >= trucker1lvl[0] && vehicleid <= trucker1lvl[1]) { trucklevel = 1; price = 200; }
						else if(vehicleid >= trucker2lvl[0] && vehicleid <= trucker2lvl[1]) { trucklevel = 2; price = 300; }
						if((trucklevel == 2 && PI[playerid][pTruckSkill] < TRUCK_LEVEL_2))
						{
							SendClientMessage(playerid, COLOR_GREY, "Ваш опыт работы дальнобойщиком не достаточен для этого транспорта");
							RemoveFromVehicle(playerid);
							return 1;
						}
						if(GetMoney(playerid) < price)
						{
							new string[128];
							format(string, sizeof(string), "Вам нужно %d  Рублей чтобы арендовать этот грузовик", price);
							SendClientMessage(playerid, COLOR_GREY, string);
							RemoveFromVehicle(playerid);
							return 1;
						}
						SetPVarInt(playerid, "truckprice", price);
						new string[150];
						if(PI[playerid][TruckerCarID] == vehicleid) { }
						else
						{
						    SetTimerEx("CheckRentCar",8000,0,"i",playerid);
							format(string, sizeof(string), "{ffffff}Вы хотите арендовать данный тягач?\nСтоимость аренды: {33ccff}%i  Рублей", price);
							ShowPlayerDialog(playerid, 11212, DIALOG_STYLE_MSGBOX, "{7efd7d}Аренда", string, "Да", "Нет");
						}
						if(GetMoney(playerid) < 200)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам нужно 200  Рублей чтобы арендовать это транспорт");
							RemoveFromVehicle(playerid);
							return 1;
						}
						if(PI[playerid][MechanicCarID] == vehicleid) { }
						else
						{
						    SetTimerEx("CheckRentCar",8000,0,"i",playerid);
							ShowPlayerDialog(playerid, D_JOB+66, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данный транспорт?\n\nСтоимость: {33CCFF}200  Рублей", "Да", "Нет");
						}
					}
					if(vehicleid >= buscar[0] && vehicleid <= buscar[1])
					{
						if(PI[playerid][pJob] != JOB_BUS)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не работаете водителем автобуса!");
							RemoveFromVehicle(playerid);
							return 1;
						}
						if(GetPVarInt(playerid, "BusTime") > 0 && GetPVarInt(playerid, "PriceBus") > 0 && PI[playerid][BusCarID] == vehicleid)
						{
							new i = pPressed[playerid], name[30], string[128];
                            SetPlayerRaceCheckpoint(playerid,0,BatirevoUgniy[i][0],BatirevoUgniy[i][1],BatirevoUgniy[i][2],BatirevoUgniy[i][3],BatirevoUgniy[i][4],BatirevoUgniy[i][5],5.0);
							format(string, sizeof(string), "%s\n{FFFFFF}Стоимость проезда: {63BD4E}%i  Рублей", name, GetPVarInt(playerid, "PriceBus"));
							if(!IsValidDynamic3DTextLabel(BusText3D[playerid])) BusText3D[playerid] = CreateDynamic3DTextLabel(string, 0xffa500FF, 0.0, 0.0, 1.0, 20.0, INVALID_PLAYER_ID, vehicleid);
							DeletePVar(playerid, "BusTime");
						}
						if(GetMoney(playerid) < 200)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам нужно 200  Рублей чтобы арендовать этот автобус");
							RemoveFromVehicle(playerid);
							return 1;
						}
						if(PI[playerid][BusCarID] == vehicleid) { }
						else
						{
							SetTimerEx("CheckRentCar",15000,0,"i",playerid);
							ShowPlayerDialog(playerid, D_JOB+58, 0, "{7efd7d}Аренда", "{ffffff}Вы хотите арендовать данный автобус?\n\nСтоимость: {33CCFF}200  Рублей", "Да", "Нет");
						}
					}
				}
			}
		}
		case 3: //Игрок в машине, на месте пассажира - (можно писать PLAYER_STATE_PASSENGER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2)
				{
				    new string[32];
					if(GetPVarInt(i, "PriceBus") > 0)
					{
						if(GetMoney(playerid) < GetPVarInt(i, "PriceBus"))
						{
							SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
							RemoveFromVehicle(playerid);
						}
						else
						{
							TransferMoney(playerid, -1, GetPVarInt(i, "PriceBus"));
							SendMes(playerid, COLOR_BLUE, "Вы заплатили %i  Рублей за проезд водителю %s",GetPVarInt(i, "PriceBus"), GetName(i));
							PI[i][pPayCheck] += GetPVarInt(i, "PriceBus");
							SendMes(i, COLOR_BLUE, "Пассажир %s заплатил %i  Рублей за проезд", GetName(playerid), GetPVarInt(i, "PriceBus"));
							format(string, sizeof(string), "~r~-%i RUB",  GetPVarInt(i, "PriceBus"));
							GameTextForPlayer(playerid, string, 5000, 1);
							format(string, sizeof(string), "~b~+%i RUB", GetPVarInt(i, "PriceBus"));
							GameTextForPlayer(i, string, 5000, 1);
						}
					}
					if(GetPVarInt(i, "PriceTaxi") > 0)
					{
						if(GetMoney(playerid) < GetPVarInt(i, "PriceTaxi"))
						{
							SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
							RemoveFromVehicle(playerid);
						}
						else
						{
							TransferMoney(playerid, -1, GetPVarInt(i, "PriceTaxi"));
							PI[i][pPayCheck] += GetPVarInt(i, "PriceTaxi");
							SetPVarInt(playerid, "TimeTaxi", 30);
							SetPVarInt(playerid, "TaxiPrice",GetPVarInt(i, "PriceTaxi"));
							SetPVarInt(playerid, "PlayerTaxi", i);
							format(string, sizeof(string), "~r~-%i RUB", GetPVarInt(i, "PriceTaxi"));
							GameTextForPlayer(playerid, string, 5000, 1);
							format(string, sizeof(string), "~b~+%i RUB", GetPVarInt(i, "PriceTaxi"));
							GameTextForPlayer(i, string, 5000, 1);
							SetPVarInt(i, "TaxiMoney", GetPVarInt(i, "TaxiMoney") + GetPVarInt(i, "PriceTaxi"));
						}
					}
				}
			}
		}
	case 4: //Игрок вышел из машины
		{
			BE_Play_Check[playerid] = false;
		}
	case 5: //Игрок сел в машину на место водителя
		{
		}
	case 6: //Игрок сел в машину на место пассажира
		{
		}
	case 7: //Игрок выбирает скин (можно писать PLAYER_STATE_WASTED)
		{
		}
	case 8: //Игрок возродился (можно писать PLAYER_STATE_SPAWNED)
		{
		}
	case 9: //Игрок наблюдает с помощью функции SPECTATING (можно писать PLAYER_STATE_SPECTATING)
		{
		}
	}
	return 1;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	if(checkpointid == gunsklad[0])
	{
	    if(PI[playerid][pMember] == TEAM_OPGTEST1)
	    {
	        if(PI[playerid][pMember] == 7 && b_Sklad{0}) return SendClientMessage(playerid, COLOR_GREY, "Доступ к складу вашей банды закрыт!");
			ShowPlayerDialog(playerid, D_GANG, 2, "{7efd7d}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить Металл\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять Металл\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
		}
		return 1;
	}
	else if(checkpointid == gunsklad[1])
	{
	    if(PI[playerid][pMember] == TEAM_BALLAS)
	    {
	        if(PI[playerid][pMember] == 8 && b_Sklad{1}) return SendClientMessage(playerid, COLOR_GREY, "Доступ к складу вашей банды закрыт!");
    	   	ShowPlayerDialog(playerid, D_GANG, 2, "{7efd7d}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить Металл\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять Металл\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
		}
		return 1;
	}
	else if(checkpointid == gunsklad[2])
	{
	    if(PI[playerid][pMember] == TEAM_RIFA)
	    {
	        if(PI[playerid][pMember] == 9 && b_Sklad{2}) return SendClientMessage(playerid, COLOR_GREY, "Доступ к складу вашей банды закрыт!");
    	   	ShowPlayerDialog(playerid, D_GANG, 2, "{7efd7d}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить Металл\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять Металл\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
		}
		return 1;
	}
	else if(checkpointid == gunsklad[3])
	{
	    if(PI[playerid][pMember] == TEAM_OPGTEST2)
	    {
	        if(PI[playerid][pMember] == 10 && b_Sklad{3}) return SendClientMessage(playerid, COLOR_GREY, "Доступ к складу вашей банды закрыт!");
    	   	ShowPlayerDialog(playerid, D_GANG, 2, "{7efd7d}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить Металл\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять Металл\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
		}
		return 1;
	}
	else if(checkpointid == gunsklad[4])
	{
	    if(PI[playerid][pMember] == TEAM_VAGOS)
	    {
	        if(PI[playerid][pMember] == 11 && b_Sklad{4}) return SendClientMessage(playerid, COLOR_GREY, "Доступ к складу вашей банды закрыт!");
    	   	ShowPlayerDialog(playerid, D_GANG, 2, "{7efd7d}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить Металл\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять Металл\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
		}
		return 1;
	}
	else if(checkpointid == gunsklad[6])
	{
	    if(PI[playerid][pMember] == TEAM_OPGYG)
	    {
			ShowPlayerDialog(playerid, D_MAFIA, 2, "{7efd7d}Склад мафии", "{63BD4E}Положить патроны\n{63BD4E}Положить Металл\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять Металл\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
		}
		return 1;
	}
	else if(checkpointid == armyammo)
	{
	    if(IsAArmy(playerid) || IsAGang(playerid))
		{
			StealMats(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не можете пользоваться этим складом!");
	}
	return 1;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid) return 1;

public OnPlayerEnterCheckpoint(playerid)
{
	if(GetPVarInt(playerid,"Job") == 1)// Если момент работы игрока 1..
    {
        if(IsPlayerInRangeOfPoint(playerid, 3, 2351.0471,-257.8829,2.7890))
	    {
            SetPlayerCheckpoint(playerid, 2322.2927,-264.2782,1.5130,1.5);// Создаём один из чекпоинтов
            ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);// Анимация, типо что то несём..
            SetPVarInt(playerid,"Job",2);// Устанавливаем момент работы игрока на 2..
	        SetPlayerAttachedObject(playerid, 1 , 3052, 1,0.11,0.36,0.0,0.0,90.0);
        }
    }
    if(GetPVarInt(playerid,"Job") == 2)
    {
        if(IsPlayerInRangeOfPoint(playerid, 3, 2322.2644,-264.1605,1.5144))
        {
		    DisablePlayerCheckpoint(playerid);
		    RemovePlayerAttachedObject(playerid,1);// Удаляем объект из рук
		    ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);// Обнуляем анимацию
		    SetPVarInt(playerid,"Job",1);// Устанавливаем момент работы игрока на 1..
		    SetPVarInt(playerid,"JobY",GetPVarInt(playerid,"JobY")+1);// Прибавим к вещам игрока 1
		    SetPlayerCheckpoint(playerid, 2351.0471,-257.8829,2.7890,2.0);// Создаём один из чекпоинтов
	    }
    }
    if(GetPVarInt(playerid, "Gjob") == 2)
    {
	    DisablePlayerCheckpoint(playerid);
	    RemovePlayerAttachedObject(playerid,3);
	    ClearAnimations(playerid);
	    ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.1, 1, 1, 1, 1, 0);
        SetPlayerAttachedObject(playerid,3,355,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
        SetTimerEx("Gunjobanim", 7000, false, "i", playerid);
        return 1;
    }
	new string[150];
	if(PlayerToPoint(6.0, playerid,2316.0361,1649.5638,-37.7585)
	|| PlayerToPoint(6.0, playerid,2324.9434,1660.3811,-37.7068)
	|| PlayerToPoint(6.0, playerid,2331.0259,1654.2983,-37.6525))
	{
        startjob2[playerid] = true;
		ClearAnimations(playerid);
		ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,1,0,0,1,11000);
//      TogglePlayerControllable(playerid,1);
		DisablePlayerCheckpoint(playerid);
		hands[playerid] = SetTimerEx("hand",9800,false,"i",playerid);
	    return true;
	}
	if(UseWork[playerid] == 1)
	{
		startjob2[playerid] = false;
		rands1 = random(sizeof(randommine));
		kg[playerid] += randommine[rands1][0];
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);// забрали кирку
		if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);// забрали тачку
		if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);// забрали камень
		SetPlayerAttachedObject(playerid, 1, 18634, 6, 0.075000,0.002999,0.154000, 98.399978,-69.600013,1.100000);
		format(string, sizeof(string), "Вы доставили в кузницу {FF9900}%d кг {66CC33}руды.",randommine[rands1][0]);
		SendClientMessage(playerid, COLOR_LIME, string);
		format(string, sizeof(string), "Всего принесено: {FF9900}%d кг {0099FF}руды",kg[playerid]);
		SendClientMessage(playerid, COLOR_BLUE, string);
		new mcheckShahta = random(3);//Кол-во чекпоинтов
		if(mcheckShahta == 0) SetPlayerCheckpoint(playerid, 2316.0361,1649.5638,-37.7585-1,3.0);
		if(mcheckShahta == 1) SetPlayerCheckpoint(playerid, 2324.9434,1660.3811,-37.7068-1,3.0);
		if(mcheckShahta == 2) SetPlayerCheckpoint(playerid, 2331.0259,1654.2983,-37.6525-1,3.0);
		return 1;
	}
    if(GetPVarInt(playerid, "TruckerJobRazgruzka") == 1)
   	{
        DisablePlayerCheckpoint(playerid);
        DeletePVar(playerid, "TruckerJobRazgruzka");
        SetPVarInt(playerid, "TruckerJobRazgruzka", 2);
        SetPlayerCheckpoint(playerid, 1828.2499,2254.3435,15.2729,3.0);
        SendClientMessage(playerid, COLOR_GREEN, "Вы загрузились, отправляйтесь на разгрузку.");
        return 1;
    }
    if(GetPVarInt(playerid, "TruckerJobRazgruzka") == 2)
   	{
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid, "TruckerJobRazgruzka");
	    SetPVarInt(playerid, "TruckerJobRazgruzka", 1);
		PI[playerid][pTruckSkill] += 1;
		if(PI[playerid][pTruckSkill] == 15)
		{
		    PI[playerid][pTruckLevel] += 1;
		}
		if(!doubling_donate)
		{
			format(string, sizeof(string), "Вы доставили груз и получили %d рублей",PI[playerid][pTruckLevel]*2000);
		    SendClientMessage(playerid, COLOR_BLUE, string);
		    GiveMoney(playerid, PI[playerid][pTruckLevel]*2000);
		}
		else
		{
			format(string, sizeof(string), "Вы доставили груз и получили %d рублей",PI[playerid][pTruckLevel]*4000);
		    SendClientMessage(playerid, COLOR_BLUE, string);
		    GiveMoney(playerid, PI[playerid][pTruckLevel]*4000);
		}
	    SetPlayerCheckpoint(playerid, 2738.4316,-2273.2146,17.9269,3.0);
        return 1;
    }
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid) return 1;

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(UseGPS[playerid])
	{
		SendClientMessage(playerid, COLOR_LIME, "Вы достигли места назначения");
   		DisablePlayerRaceCheckpoint(playerid);
	   	UseGPS[playerid] = false;
	   	return 1;
	}
	if(GetPVarInt(playerid, "findplayer") == 1)
	{
		SendClientMessage(playerid, COLOR_LIME, "Вы достигли места назначения!");
		DeletePVar(playerid, "findplayer");
		DisablePlayerRaceCheckpoint(playerid);
		return 1;
	}
	if(GetPVarInt(playerid, "Home") == 1)
	{
		SendClientMessage(playerid, COLOR_LIME, "Вы достигли места назначения");
		DeletePVar(playerid, "Home");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "PriceBus") > 0)
	{
	    DisablePlayerRaceCheckpoint(playerid);
		new type = GetPVarInt(playerid, "TypeBus"), e_type, name[32];
		switch(GetPVarInt(playerid, "TypeBus"))
		{
			case 1: name = "Автовокзал - Лесопилка";
			case 2: name = "Автовокзал - Мэрия";
			case 3: name = "Автовокзал - Новый район";
			case 4: name = "Автовокзал - Автошкола";
			case 5: name = "ЖДЛС - Шахта";
		}
		if(type == 1)
		{
			if(pPressed[playerid] == 0 || pPressed[playerid] == 5 || pPressed[playerid] == 14 || pPressed[playerid] == 18 || pPressed[playerid] == 22 || pPressed[playerid] == 28 || pPressed[playerid] == 30 || pPressed[playerid] == 31  || pPressed[playerid] == 32)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
				    new string[128];
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, sizeof(string), "Автобус по маршруту %s отправляется через 10 секунд",name);
					AutoStationBusInfo(playerid, string);
					GameTextForPlayer(playerid, "~r~stop", 1000, 1);
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				}
				else
				{
					if(pPressed[playerid] == 32) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BatirevoUgniy[i][0],BatirevoUgniy[i][1],BatirevoUgniy[i][2],BatirevoUgniy[i][3],BatirevoUgniy[i][4],BatirevoUgniy[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 40);
				if(pPressed[playerid] == 0 || pPressed[playerid] == 5 || pPressed[playerid] == 14 || pPressed[playerid] == 18 || pPressed[playerid] == 22 || pPressed[playerid] == 28 || pPressed[playerid] == 30 || pPressed[playerid] == 31 || pPressed[playerid] == 32) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BatirevoUgniy[i][0],BatirevoUgniy[i][1],BatirevoUgniy[i][2],BatirevoUgniy[i][3],BatirevoUgniy[i][4],BatirevoUgniy[i][5],5.0);
			}
		}
		if(type == 2)
		{
			if(pPressed[playerid] == 0 || pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 14 || pPressed[playerid] == 18 || pPressed[playerid] == 21)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
				    new string[128];
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, sizeof(string), "Автобус по маршруту %s отправляется через 10 секунд",name);
					AutoStationBusInfo(playerid, string);
					GameTextForPlayer(playerid, "~r~stop", 1000, 1);
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				}
				else
				{
					if(pPressed[playerid] == 21) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 60);
				if(pPressed[playerid] == 0 || pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 14 || pPressed[playerid] == 18 || pPressed[playerid] == 21) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
			}
		}
		if(type == 3)
		{
			if(pPressed[playerid] == 0 || pPressed[playerid] == 4 || pPressed[playerid] == 6 || pPressed[playerid] == 13 || pPressed[playerid] == 19 || pPressed[playerid] == 23 || pPressed[playerid] == 30)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
				    new string[128];
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, sizeof(string), "Автобус по маршруту %s отправляется через 10 секунд",name);
					AutoStationBusInfo(playerid, string);
					GameTextForPlayer(playerid, "~r~stop", 1000, 1);
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				}
				else
				{
					if(pPressed[playerid] == 30) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 50);
				if(pPressed[playerid] == 0 || pPressed[playerid] == 4 || pPressed[playerid] == 6 || pPressed[playerid] == 13 || pPressed[playerid] == 19 || pPressed[playerid] == 23 || pPressed[playerid] == 30) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
			}
		}
		if(type == 4)
		{
			if(pPressed[playerid] == 0 || pPressed[playerid] == 3 || pPressed[playerid] == 13 || pPressed[playerid] == 19 || pPressed[playerid] == 23 || pPressed[playerid] == 27)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
				    new string[128];
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, sizeof(string), "Автобус по маршруту %s отправляется через 10 секунд",name);
					AutoStationBusInfo(playerid, string);
					GameTextForPlayer(playerid, "~r~stop", 1000, 1);
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				}
				else
				{
					if(pPressed[playerid] == 27) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 30);
				if(pPressed[playerid] == 0 || pPressed[playerid] == 3 || pPressed[playerid] == 13 || pPressed[playerid] == 19 || pPressed[playerid] == 23 || pPressed[playerid] == 27) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
			}
		}
		if(type == 5)
		{
			if(pPressed[playerid] == 9 || pPressed[playerid] == 46 || pPressed[playerid] == 81  || pPressed[playerid] == 91)
			{
				if(GetPVarInt(playerid, "BusStop") == 0)
				{
				    new string[128];
					SetPVarInt(playerid, "TimeBus", 11);
					format(string, sizeof(string), "Автобус по маршруту %s отправляется через 10 секунд",name);
					AutoStationBusInfo(playerid, string);
					GameTextForPlayer(playerid, "~r~stop", 1000, 1);
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				}
				else
				{
					if(pPressed[playerid] == 91) pPressed[playerid] = 0;
					else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
					SetPVarInt(playerid, "BusStop", 0);
				}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 30);
				if(pPressed[playerid] == 9 || pPressed[playerid] == 46 || pPressed[playerid] == 81 || pPressed[playerid] == 91) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
			}
		}
	}
	foreach(new i: Player)
	if(GetPlayerState(i) == PLAYER_STATE_DRIVER && CategoryVeh(GetPlayerVehicleID(i)) && GetPVarInt(i, "LESSONTIME") < gettime() && GetPVarInt(i, "LESSON") != 0)
	{
        DisablePlayerRaceCheckpoint(i), RemovePlayerFromVehicle(i), DeletePVar(i, "LESSONTIME"), DeletePVar(i, "LESSON"), DeletePVar(i, "A_CHECK"), DeletePVar(i, "B_CHECK"), DeletePVar(i, "C_CHECK");
	    SendClientMessage(i, COLOR_LIGHTRED, "На сдачу экзамена давалось 10 минут. Вы провалили экзамен.");
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)//автошкола
	{
		if(GetPVarInt(playerid, "LESSON") >= 0)
		{
			switch(pLessonCar[playerid])
			{
			case CHECKPOINT_1:
				{

					pLessonCar[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 0,1887.0807,2201.9712,16.0329,1887.1703,2141.7307,16.0340, 5.0);
				}
			case CHECKPOINT_2:
				{

					pLessonCar[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 0,1887.1703,2141.7307,16.0340,1887.2716,2065.8665,16.0506, 5.0);
				}
			case CHECKPOINT_3:
				{

					pLessonCar[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,1887.2716,2065.8665,16.0506,1961.3928,2033.7277,16.0333, 5.0);
				}
			case CHECKPOINT_4:
				{

					pLessonCar[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,1961.3928,2033.7277,16.0333,1962.7013,1918.0162,15.6653, 5.0);
				}
			case CHECKPOINT_5:
				{

					pLessonCar[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,1962.7013,1918.0162,15.6653,2042.0293,1903.9966,16.0687, 5.0);
				}
			case CHECKPOINT_6:
				{

					pLessonCar[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,2042.0293,1903.9966,16.0687,2231.6516,1903.4723,16.0765, 5.0);
				}
			case CHECKPOINT_7:
				{

					pLessonCar[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,2231.6516,1903.4723,16.0765,2355.4775,1910.8282,16.0987, 5.0);
				}
			case CHECKPOINT_8:
				{

					pLessonCar[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,2355.4775,1910.8282,16.0987,2450.4067,1894.6167,16.3244, 5.0);
				}
			case CHECKPOINT_9:
				{

					pLessonCar[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,2450.4067,1894.6167,16.3244,2575.0854,1894.3824,16.3788, 5.0);
				}
			case CHECKPOINT_10:
				{

					pLessonCar[playerid] = CHECKPOINT_11;
					SetPlayerRaceCheckpoint(playerid, 0,2575.0854,1894.3824,16.3788,2714.0862,1896.9119,16.4075, 5.0);
				}
			case CHECKPOINT_11:
				{

					pLessonCar[playerid] = CHECKPOINT_13;
					SetPlayerRaceCheckpoint(playerid, 0,2714.0862,1896.9119,16.4075,2755.3105,1925.2411,16.7373, 5.0);
				}
			case CHECKPOINT_13:
				{

					pLessonCar[playerid] = CHECKPOINT_14;
					SetPlayerRaceCheckpoint(playerid, 0,2755.3105,1925.2411,16.7373,2761.7229,2067.5271,18.1328, 5.0);
				}
			case CHECKPOINT_14:
				{

					pLessonCar[playerid] = CHECKPOINT_15;
					SetPlayerRaceCheckpoint(playerid, 0,2761.7229,2067.5271,18.1328,2757.0786,2338.6079,16.2255, 5.0);
				}
			case CHECKPOINT_15:
				{

					pLessonCar[playerid] = CHECKPOINT_16;
					SetPlayerRaceCheckpoint(playerid, 0,2757.0786,2338.6079,16.2255,2716.0344,2587.1267,16.1037, 5.0);
				}
			case CHECKPOINT_16:
				{

					pLessonCar[playerid] = CHECKPOINT_17;
					SetPlayerRaceCheckpoint(playerid, 0,2716.0344,2587.1267,16.1037,2670.1716,2780.2522,19.0839, 5.0);
				}
			case CHECKPOINT_17:
				{

					pLessonCar[playerid] = CHECKPOINT_18;
					SetPlayerRaceCheckpoint(playerid, 0,2670.1716,2780.2522,19.0839,2406.0046,2958.2695,21.9037, 5.0);
				}
			case CHECKPOINT_18:
				{

					pLessonCar[playerid] = CHECKPOINT_19;
					SetPlayerRaceCheckpoint(playerid, 0,2406.0046,2958.2695,21.9037,2108.9197,2967.3086,11.8601, 5.0);
				}
			case CHECKPOINT_19:
				{

					pLessonCar[playerid] = CHECKPOINT_20;
					SetPlayerRaceCheckpoint(playerid, 0,2108.9197,2967.3086,11.8601,2055.1235,2871.2405,13.8533, 5.0);
				}
			case CHECKPOINT_20:
				{

					pLessonCar[playerid] = CHECKPOINT_21;
					SetPlayerRaceCheckpoint(playerid, 0,2055.1235,2871.2405,13.8533,1932.4110,2704.2976,15.4065, 5.0);
				}
			case CHECKPOINT_21:
				{

					pLessonCar[playerid] = CHECKPOINT_22;
					SetPlayerRaceCheckpoint(playerid, 0,1932.4110,2704.2976,15.4065,1784.3219,2562.0911,15.3670, 5.0);
				}
			case CHECKPOINT_22:
				{

					pLessonCar[playerid] = CHECKPOINT_23;
					SetPlayerRaceCheckpoint(playerid, 0,1784.3219,2562.0911,15.3670,1768.1477,2482.2603,16.1258, 5.0);
				}
			case CHECKPOINT_23:
				{

					pLessonCar[playerid] = CHECKPOINT_24;
					SetPlayerRaceCheckpoint(playerid, 0,1768.1477,2482.2603,16.1258,1858.2102,2346.9963,16.1209, 5.0);
				}
			case CHECKPOINT_24:
				{

					pLessonCar[playerid] = CHECKPOINT_25;
					SetPlayerRaceCheckpoint(playerid, 0,1858.2102,2346.9963,16.1209,1897.2427,2247.2283,15.9712, 5.0);
				}
			case CHECKPOINT_25:
				{

					pLessonCar[playerid] = CHECKPOINT_26;
					SetPlayerRaceCheckpoint(playerid, 0,1897.2427,2247.2283,15.9712,1915.2113,2246.1807,15.9017, 5.0);
				}
			case CHECKPOINT_26:
				{

					pLessonCar[playerid] = CHECKPOINT_27;
					SetPlayerRaceCheckpoint(playerid, 0,1915.2113,2246.1807,15.9017,0.0,0.0,0.0, 5.0);//
				}
			case CHECKPOINT_27:
				{
					new Float:hph;
					GetVehicleHealth(GetPlayerVehicleID(playerid),hph);
					if(hph >= 850)
					{
                        if(GetPVarInt(playerid, "LESSON") == 1)
						{
                            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
							SendClientMessage(playerid, COLOR_BLUE, "Поздравляем! Вы успешно сдали на права.");
							PI[playerid][pCarA] = 1;
						}
                        if(GetPVarInt(playerid, "LESSON") == 2)
						{
							SendClientMessage(playerid, COLOR_BLUE, "Поздравляем! Вы успешно сдали на права.");
							PI[playerid][pCarB] = 1;
						}
                        if(GetPVarInt(playerid, "LESSON") == 3)
						{
							SendClientMessage(playerid, COLOR_BLUE, "Поздравляем! Вы успешно сдали на права.");
							PI[playerid][pCarC] = 1;
						}
                        if(GetPVarInt(playerid, "LESSON") == 4)
						{
							SendClientMessage(playerid, COLOR_BLUE, "Поздравляем! Вы успешно сдали на права.");
							PI[playerid][pCarD] = 1;
						}
                        SetPlayerVirtualWorld(playerid, 0);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
						DeletePVar(playerid, "LESSON");
						DisablePlayerRaceCheckpoint(playerid);
						SetVehicleToRespawn(GetPlayerVehicleID(playerid));

					}
					else
					{
                        SetPlayerVirtualWorld(playerid, 0);
                        SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
						SendClientMessage(playerid, COLOR_BLUE, "К сожалению в не сдали экзамен по вождению.");
						DeletePVar(playerid, "LESSON");
						DisablePlayerRaceCheckpoint(playerid);
						SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    return 0;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
    return 1;
}

public OnObjectMoved(objectid) return 1;
public OnPlayerObjectMoved(playerid, objectid) return 1;

forward PickupBack(playerid);
public PickupBack(playerid)
{
	pickupentered[playerid] = 0;
	return 1;
}

forward ResetAntiFloodPick(playerid);
public ResetAntiFloodPick(playerid) return SetPVarInt(playerid, "PickupID", -1);

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    if(pickupentered[playerid] == 1) return 1;
	if(GetPVarInt(playerid, "PickupID") == pickupid) return 1;
 	SetPVarInt(playerid, "PickupID", pickupid);
	SetTimerEx("ResetAntiFloodPick", 3000, 0, "i", playerid);
    if(GetPVarInt(playerid, "PickupTime") > gettime()) return 1;
	SetPVarInt(playerid, "PickupTime", gettime()+3);
	//рыбы
    //
	if(pickupid == lesspick[0])
	{
	    if(GetPVarInt(playerid, "lesspick") > gettime()) return 1;
     	if(UseWork[playerid] == 3) return SendClientMessage(playerid, COLOR_RED, "Вы уже где-то работаете! Завершите работу!");
  		if(!UseWork[playerid]) ShowPlayerDialog(playerid, 669, 0, "{7efd7d}Лесопилка", "{FFFFFF}Вы хотите начать работу на лесопилке?", "Да", "Нет");
		else if(UseWork[playerid] == 2) ShowPlayerDialog(playerid, 670, 0, "{7efd7d}Лесопилка", "{FFFFFF}Вы хотите завершить работу на лесопилке?", "Да", "Нет");
		SetPVarInt(playerid, "lesspick", gettime()+5);
		return 1;
	}
    else if(pickupid == gunjob)
    {
        if(GetPVarInt(playerid, "Gunjob") == 0) ShowPlayerDialog(playerid, D_GUNJOB, 0, "{7efd7d}Сборщик оружия", "{FFFFFF}Вы действительно хотите начать работу?", "Да", "Нет");
        else ShowPlayerDialog(playerid, D_GUNCJOB, 0, "{7efd7d}Сборщик оружия", "{FFFFFF}Вы действительно хотите завершить работу?", "Да", "Нет");
	}
    else if(pickupid == porch_menu)
    {
    	ShowPlayerDialog(playerid, PORCH_MENU_DIALOGID, DIALOG_STYLE_LIST, "{FFE408}Подъезд", "{FFFFFF}1. Список квартир\n2. Меню жильца", "Выбрать", "Отмена");
    }
    else if(pickupid == fishing[0])
	{
		ShowPlayerDialog(playerid, D_MARKETF, DIALOG_STYLE_LIST, "Рыбный рынок", "Удочка (50$)\nПриманка (35$)\nЛеска (15$)\nПолный комплект (100$)", "Купить", "Отмена");
	}
    else if(pickupid == fishing[1])
	{
		ShowFishingInfo(playerid);
	}
	else if(pickupid == ukrpick[0])
	{
	    FreezePlayer(playerid, 2000);
        SetPlayerPos(playerid,147.1199,2043.7611,701.9799);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == ukrpick[1])
	{
	    FreezePlayer(playerid, 2000);
        SetPlayerPos(playerid,1859.6787,1917.2979,13.3253);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == bankpick[1])
	{
	    FreezePlayer(playerid, 2000);
        SetPlayerPos(playerid,1853.2141,2038.0035,16.9741);
        SetPlayerFacingAngle(playerid, 0);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == bankpick[0])
	{
	    FreezePlayer(playerid, 2000);
	    SetPlayerPos(playerid,2375.6743,-1907.6744,1126.9100);
	    SetPlayerFacingAngle(playerid, 359.0);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == gunmer)
	{
	    if(PI[playerid][pMember] == TEAM_MERIA)
	    {
	        ShowPlayerDialog(playerid,D_GUNMERIA,DIALOG_STYLE_LIST,"{ffffff}Оружейная {7efd7d}| Поселковый Совет","\
	        {ffffff}1. Пистолет\n\
	        2. Автомат\n\
			3. Дубинка","Выбор","Закрыть");
	    } else SendClientMessage(playerid,COLOR_RED,"Ошибка | {ffffff}Вы не имеете доступа к оружейной {ffcc00}Поселкового Совета");
	}
	else if(pickupid == cashmer)
	{
	    ShowPlayerDialog(playerid,D_PJ,DIALOG_STYLE_INPUT,"{7efd7d}Пожертвование","\
		{ffffff}Вы желаете пожертвовать деньги в регион?\n\n\
		Когда Вы пожертвуете деньги в регион, то Вас сразу опубликуют в новостях\n\
		Для того чтобы пожертвовать деньги для этого укажите сумму строчкой ниже\n\n\
		{ffcc00}Ваша сумма должна составлять от {ffffff}100.000 {ffcc00}до {ffffff}2.000.000 рублей","Далее","Закрыть");
	}
	else if (pickupid == pochtapickups[0])//вход с улице
	{
	    FreezePlayer(playerid, 2000);
        SetPlayerPos(playerid,669.6998,994.9433,1015.4100);
        SetPlayerFacingAngle(playerid, 270.0);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
	}
	else if (pickupid == pochtapickups[1])//выход со здания
	{
	    FreezePlayer(playerid, 2000);
        SetPlayerPos(playerid,376.9925,2904.9199,2.1778);
        SetPlayerFacingAngle(playerid, 270.0);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
	}
/*	else if (pickupid == pochtapickups[2])//спавн почтальена
	{
	    FreezePlayer(playerid, 2000);
        SetPlayerPos(playerid,673.9261,998.3692,1015.4100);
        SetPlayerFacingAngle(playerid, 270.0);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
	}
		else if (pickupid == pochtapickups[3])//спавн почтальена выход
	{
	    FreezePlayer(playerid, 2000);
        SetPlayerPos(playerid,670.3583,998.1729,1015.4100);
        SetPlayerFacingAngle(playerid, 270.0);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
	}*/
 	else if(pickupid == meriapick[0])
    {
    	FreezePlayer(playerid, 2000);
        SetPlayerPos(playerid,1580.3195,-774.1156,1114.7072);
        SetPlayerFacingAngle(playerid, 270.0);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
    }
	else if(pickupid == meriapick[1])
	{
 		FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
	    SetPlayerPos(playerid,1821.2681,2095.7866,16.1631);
	    SetPlayerFacingAngle(playerid, 270.0);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == spawnpick[0]) // медики вход ls
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-683.3980, 939.8612, 12.1176);
		SetPlayerFacingAngle(playerid, 270.1457);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == spawnpick[1]) // медики вход ls
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-692.8136, 940.4213, 12.1176);
		SetPlayerFacingAngle(playerid, 90.1457);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == stolovkapick[0]) // медики вход ls
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,341.2714,2962.2874,1.7659);
		SetPlayerFacingAngle(playerid, 51.1457);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == stolovkapick[1]) // медики вход ls
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,345.6590,2952.8816,1.7659);
		SetPlayerFacingAngle(playerid, 180.1457);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == avtosalonpick[0])
	{
		new string[64];
		if(PI[playerid][pCarB] == 0) return SendClientMessage(playerid, COLOR_DARKORANGE, "У Вас нет водительских прав категории B.");
		else
		SelectTextDraw(playerid, 0xFFFFFFFF);
		InShop[playerid] = 1;
		pPressed[playerid] = 0;
		SetPlayerVirtualWorld(playerid, playerid);
		PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
		format(string,sizeof(string),"%s",VehicleNames[carsC[pPressed[playerid]][0]-400]);
		PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
		format(string,sizeof(string),"%d",carsC[pPressed[playerid]][1]);
		PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		SetPosInShop(playerid);
		SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
		SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
	}
	else if(pickupid == avtosalonpick[1]) // медики вход ls
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2013.5319,1540.7651,15.9405);
		SetPlayerFacingAngle(playerid, 90.3657);
		SetPlayerVirtualWorld(playerid, 0);
	}
    else if(pickupid == policiapick[0]) // Вход в Полиция
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1917.4193,2184.8098,2.4515);
		SetPlayerFacingAngle(playerid, 274.2475);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == policiapick[1]) // Выход с Полиция
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1914.1993,2183.3589,15.7060);
		SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerVirtualWorld(playerid, 0);
	}
    else if(pickupid == ashpick[0]) // медики вход ls
	{
		FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2311.6882,-1927.8606,2022.9600);
		SetPlayerFacingAngle(playerid, 90.1457);
		SetPlayerVirtualWorld(playerid, 0);
	}
    else if(pickupid == sklad) // Склад Армии воровство патронов
	{
		if(PI[playerid][pMember] == 15 || PI[playerid][pMember] == 16)
		{
			new ammo = random(5) + 1;
			if(gArmyWarehouse[1] < ammo) return SCM(playerid,COLOR_RED,"На складе Армии нет патронов!");
			gArmyWarehouse[1] -= ammo;
			new string[35];
			if(PI[playerid][pPatron] < 500)
			{
				PI[playerid][pPatron] += ammo;
				MysqlUpdatePlayerInt(playerid, "patron", PI[playerid][pPatron]);
				format(string, sizeof(string), "~y~+%d",ammo);
				GameTextForPlayer(playerid, string, 1500, 6);
			}
			else
			{
				GameTextForPlayer(playerid, "~r~FULL", 1500, 6);
			}
		}
	}
	else if(pickupid == ashpick[1]) // медики вход ls
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1907.9084,2227.5872,15.7215);
		SetPlayerFacingAngle(playerid, 91.5432);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == BolnicaLS[0]) // медики вход ls
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,313.3454,1554.9630,1084.1450);
		SetPlayerFacingAngle(playerid, 269.1457);
		SetPlayerVirtualWorld(playerid, 4);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = true;
	}
	else if(pickupid == BolnicaLS[1]) // медики выход ls
	{
	    if(PlayerDied[playerid] == true || GetPVarInt(playerid, "lechenie") > 0) return SendClientMessage(playerid,COLOR_WHITE,"Вы не прошли курс лечения.");
		SetPlayerInterior(playerid, 0);
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 1177.1721,-1323.3220,14.0576);
		SetPlayerFacingAngle(playerid, 270);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = false;
	}
	else if(pickupid == BolnicaLS[2]) // медики с вп
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid, 326.8491,1569.7863,1084.1450);
		SetPlayerFacingAngle(playerid, 180.1816);
		SetPlayerVirtualWorld(playerid, 4);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = true;
	}
	else if(pickupid == BolnicaLS[3]) // больница на вп
	{
        if(IsAMedic(playerid))
		{
			SetPlayerInterior(playerid, 0);
			FreezePlayer(playerid, 2000);
			SetPlayerPos(playerid, 1161.0867,-1345.7345,26.6638);
			SetPlayerFacingAngle(playerid, 177.5425);
	 		SetPlayerVirtualWorld(playerid, 0);
	 		SetCameraBehindPlayer(playerid);
	 		InHospital[playerid] = false;
 		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет пропуска!");
	}
	else if(pickupid == BolnicaSF[0]) // медики вход sf
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,313.3454,1554.9630,1084.1450);
		SetPlayerFacingAngle(playerid, 269.1457);
		SetPlayerVirtualWorld(playerid, 5);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = true;
	}
	else if(pickupid == BolnicaSF[1]) // медики выход sf
	{
	    if(PlayerDied[playerid] == true || GetPVarInt(playerid, "lechenie") > 0) return SendClientMessage(playerid,COLOR_WHITE,"Вы не прошли курс лечения.");
		SetPlayerInterior(playerid, 0);
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, -2655.0098,637.2404,14.4531);
		SetPlayerFacingAngle(playerid, 179.9766);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = false;
	}
	else if(pickupid == BolnicaSF[2]) // медики с вп
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid, 326.8491,1569.7863,1084.1450);
		SetPlayerFacingAngle(playerid, 180.1816);
		SetPlayerVirtualWorld(playerid, 5);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = true;
	}
	else if(pickupid == BolnicaSF[3]) // больница на вп
	{
        if(IsAMedic(playerid))
		{
			SetPlayerInterior(playerid, 0);
			FreezePlayer(playerid, 2000);
			SetPlayerPos(playerid, -2714.1086,628.3011,34.4028);
			SetPlayerFacingAngle(playerid, 182.0016);
	 		SetPlayerVirtualWorld(playerid, 0);
	 		SetCameraBehindPlayer(playerid);
	 		InHospital[playerid] = false;
 		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет пропуска!");
	}
    else if(pickupid == porch_house_exit)
    {
    	new porch = GetPVarInt(playerid, "EnterPlayerPorch");
    	new flat = GetPVarInt(playerid, "EnterPlayerPorchHouse");
    	if(flat == 0) flat = GetPlayerPorchHouse(playerid);
    	if(porch == 0) porch = floatround(porch / 8, floatround_floor) + 1;
    	FreezePlayer(playerid, 1500);
    	for(new i = 1; i < TOTALPORCHHOUSE; i++)
    	{
    		if(flat > 8) flat -= 8;
    		else break;
    	}
		SetPlayerPos(playerid, PorchFlatsCoord[flat][0], PorchFlatsCoord[flat][1], PorchFlatsCoord[flat][2]);
		SetPlayerInterior(playerid, 9);
		SetPlayerVirtualWorld(playerid, porch + 100);
		return SetCameraBehindPlayer(playerid);
    }
	else if(pickupid == BolnicaLV[0]) // медики вход lv
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,313.3454,1554.9630,1084.1450);
		SetPlayerFacingAngle(playerid, 269.1457);
		SetPlayerVirtualWorld(playerid, 6);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = true;
	}
	else if(pickupid == BolnicaLV[1]) // медики выход lv
	{
	    if(PlayerDied[playerid] == true || GetPVarInt(playerid, "lechenie") > 0) return SendClientMessage(playerid,COLOR_WHITE,"Вы не прошли курс лечения.");
		SetPlayerInterior(playerid, 0);
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 1607.3972,1819.0358,10.8203);
		SetPlayerFacingAngle(playerid, 0.8500);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = false;
	}
	else if(pickupid == BolnicaLV[2]) // медики с вп
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid, 326.8491,1569.7863,1084.1450);
		SetPlayerFacingAngle(playerid, 180.1816);
		SetPlayerVirtualWorld(playerid, 6);
		SetCameraBehindPlayer(playerid);
		InHospital[playerid] = true;
	}
	else if(pickupid == BolnicaLV[3]) // больница на вп
	{
        if(IsAMedic(playerid))
		{
			SetPlayerInterior(playerid, 0);
			FreezePlayer(playerid, 2000);
			SetPlayerPos(playerid, 1607.8663,1788.6047,30.4688);
			SetPlayerFacingAngle(playerid, 1.1633);
	 		SetPlayerVirtualWorld(playerid, 0);
	 		SetCameraBehindPlayer(playerid);
	 		InHospital[playerid] = false;
 		}
		else SendClientMessage(playerid,COLOR_GREY,"У вас нет пропуска!");
	}
    else if(pickupid == merpicls[0]) // Гл.выход
	{
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 1480.7377,-1769.7688,18.7958);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpicls[1]) // Вход
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 385.9440,173.6978,1008.3828);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 3);
		SetPlayerFacingAngle(playerid, 88.1044);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpicls[2]) // Вход в отдел
	{
		if(IsAMayor(playerid))
		{
			SetPlayerPos(playerid,356.6239,172.4054,1008.3831);
			SetPlayerVirtualWorld(playerid,1);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid,269.7490);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY,"У вас нет пропуска!");
	}
    else if(pickupid == merpicls[3]) // Выход с отдела
	{
		SetPlayerPos(playerid,366.4834,160.4774,1008.3828);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == merpicsf[0]) // Гл.выход
	{
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, -2763.4448,375.5558,6.0397);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 269.7041);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpicsf[1]) // Вход
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 385.9440,173.6978,1008.3828);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 3);
		SetPlayerFacingAngle(playerid, 88.1044);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpicsf[2]) // Вход в отдел
	{
		if(IsAMayor(playerid))
		{
			SetPlayerPos(playerid,356.6239,172.4054,1008.3831);
			SetPlayerVirtualWorld(playerid,2);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid,269.7490);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY,"У вас нет пропуска!");
	}
    else if(pickupid == merpicsf[3]) // Выход с отдела
	{
		SetPlayerPos(playerid,366.4834,160.4774,1008.3828);
		SetPlayerVirtualWorld(playerid,3);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == merpicsf[5]) // мэрия
	{
	    if(PI[playerid][pMember] != TEAM_SFMAYOR) return 1;
	    else if(PI[playerid][pRank] >= 2 && PI[playerid][pRank] <= 3) return SendClientMessage(playerid, COLOR_GREY, "Оружие могут брать только охранники!");
	    ShowPlayerDialog(playerid, D_ARMOURY+1, DIALOG_STYLE_LIST, "{7efd7d}Склад оружия", "SD Pistol (35 пт.)\nDesert Eagle (35 пт.)\nДубинка", "Выбрать", "Отмена");
		return 1;
	}
	else if(pickupid == merpiclv[0]) // Гл.выход
	{
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 2386.0410,2466.1414,10.8203);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 89.9152);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpiclv[1]) // Вход
	{
	    FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, 385.9440,173.6978,1008.3828);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 3);
		SetPlayerFacingAngle(playerid, 88.1044);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpiclv[2]) // Вход в отдел
	{
		if(IsAMayor(playerid))
		{
			SetPlayerPos(playerid,356.6239,172.4054,1008.3831);
			SetPlayerVirtualWorld(playerid,3);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid,269.7490);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY,"У вас нет пропуска!");
	}
    else if(pickupid == merpiclv[3]) // Выход с отдела
	{
		SetPlayerPos(playerid,366.4834,160.4774,1008.3828);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == merpiclv[5]) // мэрия
	{
	    if(PI[playerid][pMember] != TEAM_LVMAYOR) return 1;
	    else if(PI[playerid][pRank] >= 2 && PI[playerid][pRank] <= 3) return SendClientMessage(playerid, COLOR_GREY, "Оружие могут брать только охранники!");
	    ShowPlayerDialog(playerid, D_ARMOURY+1, DIALOG_STYLE_LIST, "{7efd7d}Склад оружия", "SD Pistol (35 пт.)\nDesert Eagle (35 пт.)\nДубинка", "Выбрать", "Отмена");
		return 1;
	}
	else if(pickupid == fbipic[0]) // Выход
 	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -2453.8381,503.9188,30.0796);
		SetPlayerFacingAngle(playerid, 266.5335);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == fbipic[1]) // Вход
	{
		if(IsACop(playerid) || PI[playerid][pMember] == TEAM_FBI || PI[playerid][pMember] == TEAM_ARMIYA)
		{
		    FreezePlayer(playerid, 2000);
			SetPlayerInterior(playerid, 2);
			SetPlayerPos(playerid, 629.9880,62.1039,1004.4370);
			SetPlayerFacingAngle(playerid, 175.7437);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_RED,"У вас нет пропуска!");
	}
	else if(pickupid == ashpic[0]) // Вход
 	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2026.2042,-108.0012,35.2359);
		SetPlayerFacingAngle(playerid, 181.5374);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == ashpic[1]) // Выход
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2026.4789,-100.1377,35.1641);
		SetPlayerFacingAngle(playerid, 359.6529);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == ashpic[2]) // Вход в интерьер (задний двор)
 	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2029.2377,-114.7397,35.1859);
		SetPlayerFacingAngle(playerid, 358.0583);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == ashpic[3]) // Выход из интерьера (задний двор)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2029.8304,-122.1700,35.1886);
		SetPlayerFacingAngle(playerid, 178.5633);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == lsnpic[0]) // Вход
 	{
		SetPlayerInterior(playerid, 1);
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, -1742.6362,2591.3359,62.6659);
		SetPlayerFacingAngle(playerid, 0.9609);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == lsnpic[1]) // Выход
	{
		if(Ether[playerid] == true)
		{
			new CB[16];
			new string[128];
			Ether[playerid] = false;
			Convert(GetPVarInt(playerid,"InEther"),CB);
			if(EtherSms[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
			if(EtherCall[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
			format(string, 90, "[F] %s вышел из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",GetName(playerid), CB, CallNews[PI[playerid][pNews]-1],SmsNews[PI[playerid][pNews]-1]);
			SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string);
			EtherSms[PI[playerid][pNews]-1] = false;
			EtherCall[PI[playerid][pNews]-1] = false;
			SmsNews[PI[playerid][pNews]-1] = 0;
			CallNews[PI[playerid][pNews]-1] = 0;
			DeletePVar(playerid, "InEther");
			if(Mobile[playerid] != -1) MobileCrash(playerid);
		}
		if(EtherLive[playerid] == true)
		{
			EtherLive[playerid] = false;
			DeletePVar(playerid, "Etherfrac");
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1653.8370,-1656.9789,22.5156);
		SetPlayerFacingAngle(playerid, 180.8779);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == sfnpic[0]) // Вход
 	{
		SetPlayerInterior(playerid, 1);
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, -1742.6362,2591.3359,62.6659);
		SetPlayerFacingAngle(playerid, 0.9609);
		SetPlayerVirtualWorld(playerid, 2);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == sfnpic[1]) // Выход
	{
		if(Ether[playerid] == true)
		{
			new CB[16];
			new string[128];
			Ether[playerid] = false;
			Convert(GetPVarInt(playerid,"InEther"),CB);
			if(EtherSms[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
			if(EtherCall[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
			format(string, 90, "[F] %s вышел из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",GetName(playerid), CB, CallNews[PI[playerid][pNews]-1],SmsNews[PI[playerid][pNews]-1]);
			SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string);
			EtherSms[PI[playerid][pNews]-1] = false;
			EtherCall[PI[playerid][pNews]-1] = false;
			SmsNews[PI[playerid][pNews]-1] = 0;
			CallNews[PI[playerid][pNews]-1] = 0;
			DeletePVar(playerid, "InEther");
			if(Mobile[playerid] != -1) MobileCrash(playerid);
		}
		if(EtherLive[playerid] == true)
		{
			EtherLive[playerid] = false;
			DeletePVar(playerid, "Etherfrac");
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -2054.8030,456.5989,35.1719);
		SetPlayerFacingAngle(playerid, 308.4413);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == lvnpic[0]) // Вход
 	{
		SetPlayerInterior(playerid, 1);
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid, -1742.6362,2591.3359,62.6659);
		SetPlayerFacingAngle(playerid, 0.9609);
		SetPlayerVirtualWorld(playerid, 3);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == lvnpic[1]) // Выход
	{
		if(Ether[playerid] == true)
		{
			new CB[16];
			new string[128];
			Ether[playerid] = false;
			Convert(GetPVarInt(playerid,"InEther"),CB);
			if(EtherSms[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
			if(EtherCall[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
			format(string, 90, "[F] %s вышел из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",GetName(playerid), CB, CallNews[PI[playerid][pNews]-1],SmsNews[PI[playerid][pNews]-1]);
			SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string);
			EtherSms[PI[playerid][pNews]-1] = false;
			EtherCall[PI[playerid][pNews]-1] = false;
			SmsNews[PI[playerid][pNews]-1] = 0;
			CallNews[PI[playerid][pNews]-1] = 0;
			DeletePVar(playerid, "InEther");
			if(Mobile[playerid] != -1) MobileCrash(playerid);
		}
		if(EtherLive[playerid] == true)
		{
			EtherLive[playerid] = false;
			DeletePVar(playerid, "Etherfrac");
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2650.9226,1182.8777,10.8203);
		SetPlayerFacingAngle(playerid, 180.9401);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == grovpic[0]) // Vhod Grov
	{
		SetPlayerPos(playerid,2496.0503,-1694.3811,1014.7422);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,3);
		SetPlayerFacingAngle(playerid,178.6150);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == grovpic[1]) // Vhod Grov
	{
		SetPlayerPos(playerid,2486.5645,-1646.6920,14.0703);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid,180.0000);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == vagospic[0]) // Vhod vagos
	{
		SetPlayerPos(playerid,302.6750,306.5937,1003.5391);
		SetPlayerVirtualWorld(playerid,2);
		SetPlayerInterior(playerid,4);
		SetPlayerFacingAngle(playerid,272.2089);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == vagospic[1]) // Vyhod Vagos
	{
		SetPlayerPos(playerid, 2756.4578, -1180.4377, 69.3984);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid,358.1798);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == rifapic[0]) // Vhod rifa
	{
		SetPlayerPos(playerid,-227.2669,1401.3639,27.7656);
		SetPlayerVirtualWorld(playerid,3);
		SetPlayerInterior(playerid, 18);
		SetPlayerFacingAngle(playerid,269.1691);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == rifapic[1]) // Rifa выход
	{
		SetPlayerPos(playerid, 2782.6321, -1925.7566, 13.5469);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 89.5630);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == azpic[0]) // AZTECAS вход
	{
		SetPlayerPos(playerid,-42.6874,1407.4977,1084.4297);
		SetPlayerVirtualWorld(playerid,4);
		SetPlayerInterior(playerid,8);
		SetPlayerFacingAngle(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == azpic[1]) // AZTECAS выход
	{
		SetPlayerPos(playerid, 2185.9773, -1811.2606, 13.5469);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 0.1418);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == balpic[0]) // Vhod BALLAS
	{
		SetPlayerPos(playerid,-68.7960,1353.2593,1080.2109);
		SetPlayerVirtualWorld(playerid,5);
		SetPlayerInterior(playerid,6);
		SetPlayerFacingAngle(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == balpic[1]) // Vyhod BALLAS
	{
		SetPlayerPos(playerid, 2022.9802, -1124.1179, 26.0280);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 181.3647);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == lcnpic[0]) // Vhod LCN
	{
		SetPlayerPos(playerid, 1298.8920,-795.1068,1084.0078);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid, 5);
		SetPlayerFacingAngle(playerid, 356.8563);
	}
	else if(pickupid == lcnpic[1]) // Vyhod LCN
	{
		SetPlayerPos(playerid, 1452.8875,751.0402,11.0234);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 88.6402);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == yakpic[0]) // Vhod Yakuza
	{
		SetPlayerPos(playerid, 1298.8920,-795.1068,1084.0078);
		SetPlayerVirtualWorld(playerid,2);
		SetPlayerInterior(playerid, 5);
		SetPlayerFacingAngle(playerid, 356.8563);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == yakpic[1]) // Vyhod Yakuza
	{
		SetPlayerPos(playerid, 1460.1923,2773.5188,10.8203);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 269.1689);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == rmpic[0]) // Vhod RM
	{
		SetPlayerPos(playerid, 1298.8920,-795.1068,1084.0078);
		SetPlayerVirtualWorld(playerid,3);
		SetPlayerInterior(playerid, 5);
		SetPlayerFacingAngle(playerid, 356.8563);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == rmpic[1]) // Vyhod RM
	{
		SetPlayerPos(playerid, 940.7062,1733.1799,8.8516);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 270.9551);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == buylicweapon[0])
	{
	    if(PI[playerid][pLic][3]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже имеете лицензию на владение оружием");
	    else if(PassInfo[playerid][mcState] < 2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мед.карты или вам запрещенно использовать оружие");
	    ShowPlayerDialog(playerid, D_LICWEAPON, DIALOG_STYLE_MSGBOX, "{7efd7d}Оформление лицензии", "{FFFFFF}- Вас приветствует сотрудник {0055FF}Полиции\n\n{FFFFFF}Желаете оформить лицензию на владение оружием?\nСтоимость: {63BD4E}30000  Рублей", "Принять", "Отмена");
	}
	else if(pickupid == buylicweapon[1])
	{
	    if(PI[playerid][pLic][3]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже имеете лицензию на владение оружием");
	    else if(PassInfo[playerid][mcState] < 2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мед.карты или вам запрещенно использовать оружие");
	    ShowPlayerDialog(playerid, D_LICWEAPON, DIALOG_STYLE_MSGBOX, "{7efd7d}Оформление лицензии", "{FFFFFF}- Вас приветствует сотрудник {0055FF}Полиции\n\n{FFFFFF}Желаете оформить лицензию на владение оружием?\nСтоимость: {63BD4E}30000  Рублей", "Принять", "Отмена");
	}
	else if(pickupid == buylicweapon[2])
	{
	    if(PI[playerid][pLic][3]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже имеете лицензию на владение оружием");
	    else if(PassInfo[playerid][mcState] < 2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мед.карты или вам запрещенно использовать оружие");
	    ShowPlayerDialog(playerid, D_LICWEAPON, DIALOG_STYLE_MSGBOX, "{7efd7d}Оформление лицензии", "{FFFFFF}- Вас приветствует сотрудник {0055FF}Полицииt\n\n{FFFFFF}Желаете оформить лицензию на владение оружием?\nСтоимость: {63BD4E}30000  Рублей", "Принять", "Отмена");
	}
	if(pickupid == voenkomatpick[0])
	{
	    FreezePlayer(playerid, 2000);
	    SetPlayerInterior(playerid,0);
	    SetPlayerPos(playerid,-569.0129,-193.2260,2552.0200);
		SetPlayerFacingAngle(playerid,270.1083);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == voenkomatpick[1])
	{
	    SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1915.4570,2302.0510,15.5697);
		SetPlayerFacingAngle(playerid,90.0008);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
    if(pickupid == armskin)
  	{
  	    if(PI[playerid][pMember] != TEAM_ARMIYA) return 1;
	    if(PI[playerid][pRank] < 6) return ShowPlayerDialog(playerid, 15419, DIALOG_STYLE_LIST, "{7efd7d}Раздевалка", "Постовая\nСпортивная", "Выбрать", "Отмена");
        ShowPlayerDialog(playerid, 15419, DIALOG_STYLE_LIST, "{7efd7d}Раздевалка", "Постовая\nСпортивная\nПарадная", "Выбрать", "Отмена");
    }
    for(new idx = 1; idx <= TOTALPORCHHOUSE; idx++)
	{
		if(pickupid == PorchHouseInfo[idx][hPickup])
		{
			SetPVarInt(playerid, "EnterPlayerPorchHouse", idx);
			new string[350];
			if(PorchHouseInfo[idx][hOwnerID] == 0)
			{
				format(string,sizeof(string),"{ffffff}\tКвартира №%d\n\nПлата за аренду: %d  рублей\nСтатус: {00FF00}Свободно",idx%8,PorchHouseInfo[idx][hPrice]);
				return ShowPlayerDialog(playerid, PORCH_MENU_DIALOGID+2, DIALOG_STYLE_MSGBOX,"{7efd7d}Дом",string,"Регистрация","Отмена");
			}
			else
			{
				format(string,sizeof(string),"{ffffff}\tКвартира №%d\n\nПлата за аренду: %d  рублей\n{FF0000}Владелец: %s",idx%8,PorchHouseInfo[idx][hPrice], PorchHouseInfo[idx][hOwner]);
				return ShowPlayerDialog(playerid, PORCH_MENU_DIALOGID+3, DIALOG_STYLE_MSGBOX,"{7efd7d}Дом",string,"Войти","Отмена");
			}
		}
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
/*	if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(GetPlayerHouse(playerid) && PI[playerid][PlayerCarID] == vehicleid)
		{
			PI[playerid][cColor][0] = color1;
			PI[playerid][cColor][1] = color2;
		}
		else
		{
			CheatKick(playerid, 1442);
		}
	}*/
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(playertextid == PlayerText:INVALID_TEXT_DRAW)
    {
        if(Ujahhs[playerid] == 1)
        {
            PI[playerid][pInputCode] = -1;
			CancelSelectTextDraw(playerid);
	        for(new osa = 0; osa < 10; osa++) PlayerTextDrawHide(playerid, SecurityCode[playerid][osa]);
	        SendClientMessage(playerid, COLOR_RED, "Вы были кикнуты по причине отказа ввода графического пароля!");
	        Kick(playerid);
        }
    }
	if(playertextid == AvtosalonTD[playerid][13])
	{
		BuyCloseCar(playerid);
		CancelSelectTextDraw(playerid);
	}
	if(playertextid == AvtosalonTD[playerid][12])
	{
		if(GetPlayerHouse(playerid) || GetPlayerPorchHouse(playerid)) BuyCar(playerid);
	}
	if(playertextid == AvtosalonTD[playerid][10])
	{
	    if(colors[playerid][1] == 0)
		{
			colors[playerid][1] = 1;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 1)
		{
			colors[playerid][1] = 2;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 2)
		{
			colors[playerid][1] = 3;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 3)
		{
			colors[playerid][1] = 4;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 4)
		{
			colors[playerid][1] = 5;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 5)
		{
			colors[playerid][1] = 6;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 6)
		{
			colors[playerid][1] = 7;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 7)
		{
			colors[playerid][1] = 8;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 8)
		{
			colors[playerid][1] = 9;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 9)
		{
			colors[playerid][1] = 10;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 10)
		{
			colors[playerid][1] = 11;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 11)
		{
			colors[playerid][1] = 12;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 12)
		{
			colors[playerid][1] = 13;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 13)
		{
			colors[playerid][1] = 14;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 14)
		{
			colors[playerid][1] = 15;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 15)
		{
			colors[playerid][1] = 0;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	}
	if(playertextid == AvtosalonTD[playerid][11])
	{
	    if(colors[playerid][1] == 0)
		{
			colors[playerid][1] = 15;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 15)
		{
			colors[playerid][1] = 14;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 14)
		{
			colors[playerid][1] = 13;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 13)
		{
			colors[playerid][1] = 12;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 12)
		{
			colors[playerid][1] = 11;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 11)
		{
			colors[playerid][1] = 10;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 10)
		{
			colors[playerid][1] = 9;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 9)
		{
			colors[playerid][1] = 8;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 8)
		{
			colors[playerid][1] = 7;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 7)
		{
			colors[playerid][1] = 6;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 6)
		{
			colors[playerid][1] = 5;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 5)
		{
			colors[playerid][1] = 4;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 4)
		{
			colors[playerid][1] = 3;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 3)
		{
			colors[playerid][1] = 2;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 2)
		{
			colors[playerid][1] = 1;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	    else if(colors[playerid][1] == 1)
		{
			colors[playerid][1] = 0;
	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][1], colors[playerid][1]);
		}
	}
	if(playertextid == AvtosalonTD[playerid][8])
	{
        new string[64];
        if((GetTickCount() - PlayerLastTick[playerid]) < 500) return 1;
	    {
			pPressed[playerid]++;
			if(PI[playerid][SalonCarID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][SalonCarID]);
			if(InShop[playerid] == 1)
			{
				if(pPressed[playerid] == 45)pPressed[playerid] = 0;
				PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,sizeof(string),"%s",VehicleNames[carsC[pPressed[playerid]][0]-400]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
				format(string,64,"%d",carsC[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
			}
			if(InShop[playerid] == 2)
			{
				if(pPressed[playerid] == 45)pPressed[playerid] = 0;
				PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,sizeof(string),"%s",VehicleNames[carsB[pPressed[playerid]][0]-400]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
				format(string,sizeof(string),"%d",carsB[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
			}
			if(InShop[playerid] == 3)
			{
				if(pPressed[playerid] == 45)pPressed[playerid] = 0;
				PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,sizeof(string),"%s",VehicleNames[carsA[pPressed[playerid]][0]-400]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
				format(string,sizeof(string),"%d",carsA[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
			}
			if(InShop[playerid] == 4)
			{
				if(pPressed[playerid] == 45)pPressed[playerid] = 0;
				PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,sizeof(string),"%s",VehicleNames[carsBike[pPressed[playerid]][0]-400]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
				format(string,sizeof(string),"%d",carsBike[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
			}
			PlayerLastTick[playerid] = GetTickCount();
			SetVehicleVirtualWorld(PI[playerid][SalonCarID],playerid);
			PutPlayerInVehicle(playerid,PI[playerid][SalonCarID],0);
			SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
			SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
	    }
	}
	if(playertextid == AvtosalonTD[playerid][9])
	{
        new string[64];
        if((GetTickCount() - PlayerLastTick[playerid]) < 500) return 1;
	    {
			pPressed[playerid]--;
			if(PI[playerid][SalonCarID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][SalonCarID]);
			if(InShop[playerid] == 1)
			{
				if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsC)-1;
				PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,sizeof(string),"%s",VehicleNames[carsC[pPressed[playerid]][0]-400]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
				format(string,sizeof(string),"%d",carsC[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
			}
			if(InShop[playerid] == 2)
			{
				if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsC)-1;
				PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,sizeof(string),"%s",VehicleNames[carsB[pPressed[playerid]][0]-400]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
				format(string,sizeof(string),"%i",carsB[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
			}
			if(InShop[playerid] == 3)
			{
				if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsC)-1;
				PI[playerid][SalonCarID] = CreateVehicle(carsA[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,sizeof(string),"%s",VehicleNames[carsA[pPressed[playerid]][0]-400]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
				format(string,sizeof(string),"%d",carsA[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
			}
			if(InShop[playerid] == 4)
			{
				if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsC)-1;
				PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,sizeof(string),"%s",VehicleNames[carsBike[pPressed[playerid]][0]-400]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
				format(string,sizeof(string),"%d",carsBike[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
			}
			PlayerLastTick[playerid] = GetTickCount();
            SetVehicleVirtualWorld(PI[playerid][SalonCarID],playerid);
			PutPlayerInVehicle(playerid,PI[playerid][SalonCarID],0);
			SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
			SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
	    }
	}
    for(new i = 0; i < 9; i++)
	{
		if(playertextid == SecurityCode[playerid][i])
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
			//SendMes(playerid, -1, "Использована цифра %i", mass_pass[playerid][i]);
		    if(GetPVarInt(playerid, "NumberDigits") == 0) return PI[playerid][pInputCode] += 1000 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
		    else if(GetPVarInt(playerid, "NumberDigits") == 1) return PI[playerid][pInputCode] += 100 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
		    else if(GetPVarInt(playerid, "NumberDigits") == 2) return PI[playerid][pInputCode] += 10 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
		    else if(GetPVarInt(playerid, "NumberDigits") == 3)
			{
				PI[playerid][pInputCode] += 1 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", 0);
				if(PI[playerid][pInputCode] == PI[playerid][pSecurityCode])
				{
				    if(PI[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, -1,"Вы вошли как администратор. Для авторизации, введите {7efd7d}/alogin");
				    //if(!PI[playerid][pMailConfirmed] && PI[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_LIME, "Подсказка: {FFFFFF}Ваша почта не привязана. Привяжите её, чтобы потвердить ваш аккаунт (/menu - Безопасность)");
				    PlayerLogged[playerid] = true;
				    Hunger(playerid, 0);
   					SpawnPlayer(playerid);
				}
				else Kick(playerid), SendClientMessage(playerid, COLOR_RED, "Вы были кикнуты по причине ввода неверного графического пароля!");
				for(new f = 0; f < 10; f++) PlayerTextDrawHide(playerid,SecurityCode[playerid][f]);
				PI[playerid][pInputCode] = -1;
				Ujahhs[playerid] = 0;
				CancelSelectTextDraw(playerid);
			}
		}
	}
    return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == Text:INVALID_TEXT_DRAW)
    {
        if(Ujahhs[playerid] == 1)
        {
            PI[playerid][pInputCode] = -1;
			CancelSelectTextDraw(playerid);
	        for(new osa = 0; osa < 10; osa++) PlayerTextDrawHide(playerid, SecurityCode[playerid][osa]);
	        SendClientMessage(playerid, COLOR_RED, "Вы были кикнуты по причине отказа ввода графического пароля!");
	        Kick(playerid);
        }
		else if(ClothesRound[playerid] == 1)
		{
		    SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
		    Kick(playerid);
		}
		else if(ClothesRound[playerid] == 2)
		{
		    TogglePlayerControllable(playerid,true);
			SetPlayerPos(playerid, 452.3130,-1492.2280,-10.7461);
			SetPlayerFacingAngle(playerid, 79.0676);
			SetPVarInt(playerid, "AntiBreik", 3);
			SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
			SetPlayerInterior(playerid, 5);
			InShopSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			if(PI[playerid][pMember]) SetPlayerSkin(playerid, PI[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, PI[playerid][pModel]);
			for(new i; i < 4; i++) TextDrawHideForPlayer(playerid, Button[i]);
			CancelSelectTextDraw(playerid);
		}
    }
	if(ClothesRound[playerid] == 1)
	{
		if(clickedid == Button[1])
		{
			if(PI[playerid][pSex] == 1)
			{
				if(SelectCharPlace[playerid] == sizeof(JoinRegM)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinRegM[SelectCharPlace[playerid]]);
				ChosenSkin[playerid] = JoinRegM[SelectCharPlace[playerid]];
			}
			else
			{
				if(SelectCharPlace[playerid] == sizeof(JoinRegF)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinRegF[SelectCharPlace[playerid]]);
				ChosenSkin[playerid] = JoinRegF[SelectCharPlace[playerid]];
			}
		}
		else if(clickedid == Button[0])
		{
			if(PI[playerid][pSex] == 1)
			{
			    if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinRegM)-1;
				else SelectCharPlace[playerid]--;
				SetPlayerSkin(playerid, JoinRegM[SelectCharPlace[playerid]]);
				ChosenSkin[playerid] = JoinRegM[SelectCharPlace[playerid]];
			}
			else
			{
			    if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinRegF)-1;
				else SelectCharPlace[playerid]--;
				SetPlayerSkin(playerid, JoinRegF[SelectCharPlace[playerid]]);
				ChosenSkin[playerid] = JoinRegF[SelectCharPlace[playerid]];
			}
		}
		else if(clickedid == Button[2])
		{
		    SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
		    Kick(playerid);
		}
		else if(clickedid == Button[3])
		{
			PI[playerid][pModel] = ChosenSkin[playerid];
			ChosenSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			TogglePlayerControllable(playerid, 1);
			CreateAccount(playerid, PI[playerid][pPassword]);
			for(new i; i < 4; i++) TextDrawHideForPlayer(playerid, Button[i]);
			CancelSelectTextDraw(playerid);
		}
	}
	//=============================================регистрация========================
	if(clickedid == Registrz_TD[1])
	{
	    SendClientMessage(playerid, -1, "Выбран женский пол");
	    PI[playerid][pSex] = 2;
	    DeletePVar(playerid, "sexvibron");
	    SetPVarInt(playerid, "sexvibron", 1);
	}
	if(clickedid == Registrz_TD[4])
	{
	    TextDrawHideForPlayer(playerid, Registrz_TD[0]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[1]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[2]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[3]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[4]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[5]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[6]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[7]);
		CancelSelectTextDraw(playerid);
        SendClientMessage(playerid, -1, "Вы отказались от регистрации и были кикнуты");
		return KickEx(playerid);
	}
	if(clickedid == Registrz_TD[2])
	{
	    SendClientMessage(playerid, -1, "Выбран мужской пол");
	    PI[playerid][pSex] = 1;
	    DeletePVar(playerid, "sexvibron");
        SetPVarInt(playerid, "sexvibron", 1);
	}
	if(clickedid == Registrz_TD[3])
	{
	    if(GetPVarInt(playerid, "PassEstReg") != 1) return SendClientMessage(playerid, -1, "Вы не ввели пароль");
	    if(GetPVarInt(playerid, "sexvibron") != 1) return SendClientMessage(playerid, -1, "Вы не выбрали пол");
	    if(GetPVarInt(playerid, "ReferalReg") != 1) return SendClientMessage(playerid, -1, "Вы не указали есть или нет реферала");
	    SendClientMessage(playerid, -1, "[debug]Регистрация дальше");
	    TextDrawHideForPlayer(playerid, Registrz_TD[0]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[1]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[2]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[3]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[4]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[5]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[6]);
	    TextDrawHideForPlayer(playerid, Registrz_TD[7]);
		//CancelSelectTextDraw(playerid);
     	ClothesRound[playerid] = 1;
		PlayerRegistered[playerid] = 1;
	//	SendClientMessage(playerid, COLOR_LIME, "Выберите одежду для вашего будущего персонажа:");
		SetHealth(playerid, 100);
		SetHunger(playerid, 100);
		PlayerLogged[playerid] = true;
		SpawnPlayer(playerid);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == Registrz_TD[5])
	{
	    new string[371];
	    format(string, sizeof(string), "{FFFFFF}Добро пожаловать на сервер {7efd7d}House RolePlay\n{ffffff}Чтобы начать игру вам необходимо пройти регистрацию\n\nВведите пароль для Вашего аккаунта\nОн будет запрашиваться каждый раз, когда вы заходите на сервер\n\n\t{7efd7d}Примечания:\n\t•Пароль может состоять из русских и латинских символов\n\t•Пароль чувствителен к регистру\n\t•Длина пароля от 6-ти до 15-ти символов");
		ShowPlayerDialog(playerid, D_REGISTER, DIALOG_STYLE_INPUT, "{7efd7d}Регистрация", string, "Далее","Отмена");
	}
	if(clickedid == Registrz_TD[6])
	{
	    SendClientMessage(playerid, -1, "В разработке");
	}
	if(clickedid == Registrz_TD[7])
	{
	    SendClientMessage(playerid, -1, "Реферал");
	    ShowPlayerDialog(playerid, D_JOB+30, 1, "{7efd7d}Реферал", "{ffffff}Введите имя игрока, приглосившего Вас на сервер\nЕсли Вас никто не приглашал, то нажмите \"Пропустить\"\n\n{7efd7d}Если Вы достигните 5 уровня,\nто Ваш реферал получит 50 000 рублей", "Ок", "Пропустить");
	}
	//================================================================================
	if(clickedid == Avtoriz_TD[1])
	{
	    SendClientMessage(playerid, -1, "Авторизация пошла дальше");
	    if(GetPVarInt(playerid, "vodpass") == 0) return SendClientMessage(playerid, -1, "Для начала введите пароль правильно.");
	    if(GetPVarInt(playerid, "goodpass") == 0) return SendClientMessage(playerid, -1, "Для начала введите пароль правильно.");
	    SetPVarInt(playerid, "gotovkvhody", 1);
     	new string[128];
     	//new output[128];
		mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%e'", GetName(playerid));
		mysql_tquery(dbHandle, string, "OnPlayerLogin", "d", playerid);
	}
	if(clickedid == Avtoriz_TD[2])
	{
	    TextDrawHideForPlayer(playerid, Avtoriz_TD[0]);
	    TextDrawHideForPlayer(playerid, Avtoriz_TD[1]);
	    TextDrawHideForPlayer(playerid, Avtoriz_TD[2]);
	    TextDrawHideForPlayer(playerid, Avtoriz_TD[3]);
	    PlayerTextDrawHide(playerid, Avtoriz_PTD[playerid][0]);
		CancelSelectTextDraw(playerid);
		SendClientMessage(playerid, -1, "Вы отказались от авторизации и были кикнуты");
		return KickEx(playerid);
	}
	if(clickedid == Avtoriz_TD[3])
	{
	    new string[371];
	    SendClientMessage(playerid, -1, "Начался ввод пароля");
        format(string, sizeof(string), "{"#cWHITE"}Добро пожаловать на сервер {7efd7d}House RolePlay{"#cWHITE"}\nВаш ник зарегистрирован\n\nЛогин:{7efd7d} %s{"#cWHITE"}\nВведите пароль:",GetName(playerid));
		ShowPlayerDialog(playerid, D_LOGIN, 3, "{7efd7d}Авторизация", string, "Войти", "Отмена");
	}
	else if(ClothesRound[playerid] == 2)
	{
		new string[170];
		if(clickedid == Button[1])
		{
			if(PI[playerid][pSex] == 1)
			{
  			    if(SelectCharPlace[playerid] == sizeof(JoinShopM)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
				format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i Рублей", JoinShopM[SelectCharPlace[playerid]][1]);
			}
			else
			{
				if(SelectCharPlace[playerid] == sizeof(JoinShopF)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
				format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i Рублей", JoinShopF[SelectCharPlace[playerid]][1]);
			}
			GameTextForPlayer(playerid, string, 2000, 3);
		}
		else if(clickedid == Button[0])
		{
			if(PI[playerid][pSex] == 1)
			{ 
   			    if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinShopM)-1;
				else SelectCharPlace[playerid]--;
				SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
				format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i Рублей", JoinShopM[SelectCharPlace[playerid]][1]);
			}
			else
			{
				if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinShopF)-1;
				else SelectCharPlace[playerid]--;
				SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
				format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i Рублей", JoinShopF[SelectCharPlace[playerid]][1]);
			}
			GameTextForPlayer(playerid, string, 2000, 3);
		}
		else if(clickedid == Button[2])
		{
			TogglePlayerControllable(playerid,true);
			SetPlayerPos(playerid, -1773.8546, 1768.1763, 2377.4053);
			SetPlayerFacingAngle(playerid, 53.0676);
			SetPVarInt(playerid, "AntiBreik", 3);
			SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
			SetPlayerInterior(playerid, 5);
			InShopSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			if(PI[playerid][pMember]) SetPlayerSkin(playerid, PI[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, PI[playerid][pModel]);
			for(new i; i < 4; i++) TextDrawHideForPlayer(playerid, Button[i]);
			CancelSelectTextDraw(playerid);
		}
		else if(clickedid == Button[3])
		{
		    new b = GetPVarInt(playerid, "PlayerBizz");
		    new price = (PI[playerid][pSex] == 1) ? (JoinShopM[SelectCharPlace[playerid]][1]) : (JoinShopF[SelectCharPlace[playerid]][1]);
			if(PI[playerid][pBank] < price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств на счету!");
			PI[playerid][pModel] = (PI[playerid][pSex] == 1) ? (JoinShopM[SelectCharPlace[playerid]][0]) : (JoinShopF[SelectCharPlace[playerid]][0]);
			PI[playerid][pBank] -= price;
			if(BizzInfo[b][bProduct] > 0)
			{
				BizzInfo[b][bMoney] += price / 4;
				BizzPay[b] += price / 4;
				BizzInfo[b][bProduct] -= price / 16;
				MysqlUpdateBizzInt(b, "money", BizzInfo[b][bMoney]);
				MysqlUpdateBizzInt(b, "product", BizzInfo[b][bProduct]);
			}
			TogglePlayerControllable(playerid,true);
			FreezePlayer(playerid, 3000);
			SetPlayerPos(playerid, -1773.8546, 1768.1763, 2377.4053);
			SetPlayerFacingAngle(playerid, 79.0676);
			SetPVarInt(playerid, "AntiBreik", 3);
			SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
			SetPlayerInterior(playerid, 5);
			InShopSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			SetPlayerSkin(playerid, PI[playerid][pModel]);
			new house12 = 0;
			for(new i = 1; i <= TOTALHOUSE;i++)
			{
				if(!strcmp(HouseInfo[i][hOwner],GetName(playerid),true)) house12++;
			}
			if(house12)
			{
			    new str[42], oneskin[14], twoskin[14], threeskin[14];

			    if(!PI[playerid][pSkin][0]) format(oneskin, sizeof(oneskin), "{F04245}(нет)");
				else format(oneskin, sizeof(oneskin), "{63BD4E}(%i)", PI[playerid][pSkin][0]);
			    if(!PI[playerid][pSkin][1]) format(twoskin, sizeof(twoskin), "{F04245}(нет)");
				else format(twoskin, sizeof(twoskin), "{63BD4E}(%i)", PI[playerid][pSkin][0]);
			    if(!PI[playerid][pSkin][2]) format(threeskin, sizeof(threeskin), "{F04245}(нет)");
				else format(threeskin, sizeof(threeskin), "{63BD4E}(%i)", PI[playerid][pSkin][0]);

			    format(str, sizeof(str), "{FFFFFF}Полка №1 %s\n", oneskin);
			    strcat(string, str);
			    format(str, sizeof(str), "{FFFFFF}Полка №2 %s\n", twoskin);
			    strcat(string, str);
			    format(str, sizeof(str), "{FFFFFF}Полка №3 %s\n", threeskin);
			    strcat(string, str);
			    strcat(string, "{FFFFFF}Оставить одежду на себе");

				ShowPlayerDialog(playerid, 1431, DIALOG_STYLE_LIST, "{7efd7d}Куда положить одежду", string, "Выбрать", "");
			}
			for(new i; i < 6; i++) TextDrawHideForPlayer(playerid, Button[i]);
			CancelSelectTextDraw(playerid);
			SendMes(playerid, COLOR_BLUE, "Вы купили одежду в магазине. Остаток на счете: %i  Рублей", PI[playerid][pBank]);
		}
	}
	return 1;
}

public OnPlayerExitedMenu(playerid) 
{
    if(playerid == INVALID_PLAYER_ID) return SKick(playerid, 7434);
    if(GetPlayerMenu(playerid) == Menu:INVALID_MENU) return SKick(playerid, 7435);
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
  //  if(enterexit == 1) return CheatKick(playerid, 2156);
    return true;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define KEY_AIM (128)

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	{
	    if(GetPVarInt(playerid,"Job") == 2)
        {
            if(newkeys == KEY_SECONDARY_ATTACK || newkeys == KEY_JUMP || newkeys == KEY_SECONDARY_ATTACK || newkeys == KEY_FIRE || newkeys == KEY_CROUCH)
            {
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы уронили ящик");
                RemovePlayerAttachedObject(playerid,1);// Удаляем объект из рук
                ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);// Обнуляем анимацию
                SetPVarInt(playerid,"Job",1);// Устанавливаем момент работы игрока на 1..
                SetPlayerCheckpoint(playerid, 2350.9539,-258.6003,2.7890,1.5);// Создаём один из чекпоинтов
           }
        }
        if(GetPVarInt(playerid,"Job") == 2)
        {
        if(newkeys == KEY_SECONDARY_ATTACK || newkeys == KEY_JUMP || newkeys == KEY_SECONDARY_ATTACK || newkeys == KEY_FIRE || newkeys == KEY_CROUCH)
        {
                RemovePlayerAttachedObject(playerid,1);// Удаляем объект из рук
                ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);// Обнуляем анимацию
                SetPVarInt(playerid,"Job",1);// Устанавливаем момент работы игрока на 1..
                SetPlayerCheckpoint(playerid, 2350.9539,-258.6003,2.7890,1.5);// Создаём один из чекпоинтов
            }
        }
	}
		if(newkeys == 1024)
	 	{
	 	    for(new i; i < sizeof(g_ranks); i ++)
	 	    {
	 	        if(IsPlayerInRangeOfPoint(playerid, 2.0, g_ranks[i][rak_x], g_ranks[i][rak_y], g_ranks[i][rak_z]))
	 	        {
	 	                if(GetPVarInt(playerid,"Rakolov") != 1) return SendClientMessage(playerid, 0xFF0000FF, "Сначало оденьте костюм раколова");
	 	                new Rakolov[20];
	 	                new str[144];
	 	                format(Rakolov,sizeof(Rakolov),"Rakolov%d",g_ranks[i][rak_id]);
	 	                if(GetPVarInt(playerid,Rakolov) > gettime()) return SendClientMessage(playerid, 0xFF0000FF, "Вы уже проверяли эту норку за последние 1 минут...");
	 	                ApplyAnimation(playerid,"INT_SHOP","shop_cashier",4.1,1,0,0,1,11000);
	 	                new rakov = random(6);
	 	                switch(rakov)
						{
						    case 0..1:
						    {
						        SendClientMessage(playerid, COLOR_GREEN, "Жаль, но в этой норке не нашлось раков. Отправляйтесь к другой");
						    }
						    case 2:
						    {
								SendClientMessage(playerid, COLOR_GREEN, "Ура! Вы нашли одного рака.");
								PI[playerid][pRaki] += 1;
						    }
						    case 3:
						    {
								SendClientMessage(playerid, COLOR_GREEN, "Ура! Вы нашли двух раков.");
								PI[playerid][pRaki] += 2;
						    }
						    case 4:
						    {
								SendClientMessage(playerid, COLOR_GREEN, "Ура! Вы нашли трёх раков.");
								PI[playerid][pRaki] += 3;
						    }
						    case 5:
						    {
								SendClientMessage(playerid, COLOR_GREEN, "Ура! Вы нашли четырёх раков.");
								PI[playerid][pRaki] += 4;
						    }
						}
						SetTimerEx("Unfreez2",5000,false,"i",playerid);
						format(str,sizeof(str),"Теперь у вас есть %d рак(ов). Продать их можно у Василия который около берега стоит.",PI[playerid][pRaki]);
						SendClientMessage(playerid, COLOR_GREEN, str);
						SetPVarInt(playerid,Rakolov,gettime() + 60);
						return 1;
	 	        }
	 	    }
		}
		/*if(newkeys == 1024)
		{
	    		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2047.2817,1976.6250,2.9482))
			    {
			            if(PI[playerid][pRaki] < 1) return SendClientMessage(playerid, -1, "Мне некогда с тобой просто так болтать. Приходи когда будут раки.");
			            new text[144];
			    		format(text,sizeof(text),"О привет. Меня зовут Василий.\nМеня тут жена отправила раков найти, но мне так лень.\nЯ тут смотрю у тебя есть %d рак(ов). Давай я их куплю у тебя.\nПо 300 рублей за 1 рака.",PI[playerid][pRaki]);
						ShowPlayerDialog(playerid, D_BUYRAK, DIALOG_STYLE_MSGBOX,"{ffffff}Василий. Скупка раков",text,"Продать", "Себе оставлю");
				}
				if(IsPlayerInRangeOfPoint(playerid, 5.0, 2344.7715,1419.6361,11.3700))
			    {
						ShowPlayerDialog(playerid, D_BUYSNASTI, DIALOG_STYLE_LIST,"{ffffff}Николай Петрович. Продажа снастей","1.Костюм краболова\t10.000 Рублей","Купить", "Отмена");
				}
		}*/
	if(newkeys == KEY_CROUCH)
	{
		for(new i = 1; i <= TOTALBIZZ; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 10.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) && BizzInfo[i][bType] == 7)
			{
			    if(PI[playerid][PlayerCarID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет машины!");
				else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
				else if(GetPlayerVehicleID(playerid) != PI[playerid][PlayerCarID]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в Вашем личном транспорте!");
				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете тюнинговать мопед!");
				ShowPlayerDialog(playerid, D_CTO, DSM, "{7efd7d}СТО", "{FFFFFF}Вы действительно хотите протюнинговать своё т/с?", "Да", "Нет");
				SetPVarInt(playerid, "CTObizzid", i);
			}
		}
 	    return 1;
	}
    else if((PRESSED(KEY_SECONDARY_ATTACK) || PRESSED(KEY_JUMP) || PRESSED(KEY_SPRINT)) && !IsPlayerInAnyVehicle(playerid))
    {
        if(UseWork[playerid] == 1 && IsPlayerAttachedObjectSlotUsed(playerid, 2))
        {
        	SendClientMessage(playerid, COLOR_RED, "Вы уронили руду!");
        	startjob2[playerid] = false;
        	RemovePlayerAttachedObject(playerid,1);
        	RemovePlayerAttachedObject(playerid,2);
        	RemovePlayerAttachedObject(playerid,3);
			DisablePlayerCheckpoint(playerid);
			TogglePlayerControllable(playerid,1);
			ClearAnimations(playerid);
			new mcheckShahta = random(3);//Кол-во чекпоинтов
			if(mcheckShahta == 0) SetPlayerCheckpoint(playerid, 2316.0361,1649.5638,-37.7585-1,3.0);
			if(mcheckShahta == 1) SetPlayerCheckpoint(playerid, 2324.9434,1660.3811,-37.7068-1,3.0);
			if(mcheckShahta == 2) SetPlayerCheckpoint(playerid, 2331.0259,1654.2983,-37.6525-1,3.0);
        }
	}
	for(new idx = 1; idx <= TOTALHOUSE; idx++)
	{
		if(newkeys == KEY_WALK && IsPlayerInRangeOfPoint(playerid, 1,HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]))
		{
			SetPVarInt(playerid, "PlayerHouse", idx);
			new string[350];
			new klass[32];
			if(HouseInfo[idx][hDiscript] == 'C')
			{
			    klass = "средний";
			}
			else if(HouseInfo[idx][hDiscript] == 'A')
			{
			    klass = "низкий";
			}
			else if(HouseInfo[idx][hDiscript] == 'B')
			{
			    klass = "высокий";
			}
			if(!strcmp(HouseInfo[idx][hOwner],"None",true))
			{
				format(string,sizeof(string),"{ffffff}Дом №: %d\nВладелец:\t\t{7efd7d}Государство\n{ffffff}Класс:\t\t\t{7efd7d}%s\n{ffffff}Стоимость:\t\t{99cc00}%d рублей\n{ffffff}Оплата в день:\t{99cc00}%d рублей",idx,klass,HouseInfo[idx][hPrice],GetHomeOplata(idx));
				return ShowPlayerDialog(playerid, D_JOINHOUSE, 0,"{7efd7d}Дом свободен",string,"Купить","Отмена");
			}
			else
			{
				format(string,sizeof(string),"{ffffff}Дом №: %d\nВладелец:\t\t{7efd7d}%s\n{ffffff}Класс:\t\t\t{7efd7d}%s\n{ffffff}Стоимость:\t\t{99cc00}%d рублей\n{ffffff}Оплата в день:\t{99cc00}%d рублей",idx,HouseInfo[idx][hOwner],klass,HouseInfo[idx][hPrice],GetHomeOplata(idx));
				return ShowPlayerDialog(playerid, D_JOINHOUSE, 0,"{7efd7d}Дом занят",string,"Войти","Отмена");
			}
		}
	}
    for(new idx = 1; idx <= TOTALPORCH; idx++)
    {
        if(newkeys == KEY_WALK && IsPlayerInRangeOfPoint(playerid, 1,PorchInfo[idx][pEnterX], PorchInfo[idx][pEnterY] , PorchInfo[idx][pEnterZ]))
    	{
    		FreezePlayer(playerid, 6000);
    		SetPVarInt(playerid, "EnterPlayerPorch", idx);
    		SetPlayerPos(playerid, 883.6675,1892.6168,1032.6885);
    		SetPlayerVirtualWorld(playerid, idx + 100);
    		SetPlayerInterior(playerid, 9);
    		SetPlayerFacingAngle(playerid, 90.0);
    		return SetCameraBehindPlayer(playerid);
    	}
    }
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(newkeys == KEY_WALK && IsPlayerInRangeOfPoint(playerid, 1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]))
		{
		    new string[128];
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
			{
				SetPVarInt(playerid, "PlayerBizz", idx);
				if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7)
				{
					new biz = GetPVarInt(playerid, "PlayerBizz");
					FreezePlayer(playerid, 2000);
					SetPlayerPos(playerid,BizzInfo[biz][bExitx], BizzInfo[biz][bExity], BizzInfo[biz][bExitz]);
					SetPlayerInterior(playerid,BizzInfo[biz][bInt]);
					SetPlayerVirtualWorld(playerid,BizzInfo[biz][bVirtual]);
					SetCameraBehindPlayer(playerid);
				}
			}
			else
			{
				SetPVarInt(playerid, "PlayerBizz", idx);
				if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7)
				{
					if(BizzInfo[idx][bEnter] > 0)
				 	{
					 	format(string, sizeof(string), "{FFFFFF}Цена входа: %i Рублей\nВы хотите войти в бизнес?", BizzInfo[idx][bEnter]);
					 	ShowPlayerDialog(playerid, D_HEAL+26, 0, "{7efd7d}Бизнес", string, "Да", "Нет");
					}
					else
					{
						FreezePlayer(playerid, 2000);
						SetPlayerPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
						SetPlayerInterior(playerid,BizzInfo[idx][bInt]);
						SetPlayerVirtualWorld(playerid,BizzInfo[idx][bVirtual]);
						SetCameraBehindPlayer(playerid);
					}
	                return 1;
				}
			}
		}
		if(newkeys == KEY_WALK && IsPlayerInRangeOfPoint(playerid, 1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz]))
		{
		   	switch(BizzInfo[idx][bType])
			{
			    case 1: MagazineList(playerid);
			   // case 3: EatList(playerid, i);
			    case 4,5: BarList(playerid);
			    case 6: GunShopList(playerid);
			    case 8: SkinShopList(playerid);
			    case 10: ToolsList(playerid);
			    case 14: AptekaList(playerid);
			    case 15: FishingList(playerid);
			}
		}
	}
	new biz = GetPVarInt(playerid, "PlayerBizz");
    if(newkeys == KEY_WALK && IsPlayerInRangeOfPoint(playerid, 1,BizzInfo[biz][bExitx], BizzInfo[biz][bExity], BizzInfo[biz][bExitz]))
	{
		FreezePlayer(playerid, 2000);
		SetPlayerPos(playerid,BizzInfo[biz][bEntrx], BizzInfo[biz][bEntry], BizzInfo[biz][bEntrz]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}
	if(newkeys == KEY_WALK)//пикапы на alt
	{
		if(IsPlayerInRangeOfPoint(playerid, 1,1479.5999,2885.4265,1013.0210)) //Выход из СМП-Б
		{
	        if(PI[playerid][pHeal] <=95) return SendClientMessage(playerid, COLOR_DARKORANGE, "Вы нуждаетесь в лечении!");
	        else
	        SetPlayerInterior(playerid,0);
	        SetPlayerPos(playerid,2140.5476,1845.6045,13.1507);
	        SetPlayerFacingAngle(playerid, 0.8825);
	        SetPlayerVirtualWorld(playerid, 0);
	        FreezePlayer(playerid, 6000);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,672.0107,998.2469,1015.4100))//вход почтальен
		{
			FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,673.9261,998.3692,1015.4100);
			SetPlayerFacingAngle(playerid, 181.1987);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,673.7890,998.5585,1015.4100))//выход почтальен
		{
			FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 669.9592,998.3860,1015.4100);
			SetPlayerFacingAngle(playerid, 181.1987);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,682.7831,997.7057,1015.4100))//выход во двор
		{
			FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,387.1445,2922.5146,1.7750);
			SetPlayerFacingAngle(playerid, 181.1987);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,387.2009,2919.8337,1.7750))//вход со двора
		{
			FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 680.2603,997.8173,1015.4100);
			SetPlayerFacingAngle(playerid, 181.1987);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,2140.5476,1845.6045,13.1507)) //Вход в СМП-Б
		{
		    FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1479.5999,2885.4265,1013.0210);
			SetPlayerFacingAngle(playerid, 181.1987);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,883.6675,1892.6168,1032.6885)) //Выход из ПАДИКА
		{
	    	new porch = GetPVarInt(playerid, "EnterPlayerPorch");
	    	FreezePlayer(playerid, 1500);
	    	SetPlayerPos(playerid, PorchInfo[porch][pEnterX], PorchInfo[porch][pEnterY], PorchInfo[porch][pEnterZ]);
	    	SetPlayerInterior(playerid, 0);
	    	SetPlayerVirtualWorld(playerid, 0);
	    	SetCameraBehindPlayer(playerid);
			SetPVarInt(playerid, "EnterPlayerPorch", 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,906.5637,1948.4961,1032.7977)) //Вход в Казарму
		{
		    FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1473.5433,1672.5758,15.3236);
			SetPlayerFacingAngle(playerid, 182.2697);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,1473.5433,1672.5758,15.3236)) //Выход с Казармы
		{
		    FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,906.5637,1948.4961,1032.7977);
			SetPlayerFacingAngle(playerid, 91.5066);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,1795.2946,2037.9290,16.2072)) //Вход в ТРК
		{
		    FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,980.2619,1779.2968,1002.9020);
			SetPlayerFacingAngle(playerid, 179.2365);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,980.2619,1779.2968,1002.9020)) //Выход с ТРК
		{
		    FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1795.2946,2037.9290,16.2072);
			SetPlayerFacingAngle(playerid, 91.5066);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,1919.2799,2183.3992,15.6982)) //Вход в Полиция
		{
		    FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1451.2917,1567.5509,1016.7194);
			SetPlayerFacingAngle(playerid, 179.2365);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,1451.2917,1567.5509,1016.7194)) //Выход с Полиция
		{
		    FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1919.2799,2183.3992,15.6982);
			SetPlayerFacingAngle(playerid, 91.5066);
			SetPlayerVirtualWorld(playerid, 0);
		}
	 	if(IsPlayerInRangeOfPoint(playerid, 3, 2334.1228, 1381.8114, 11.6482) && PI[playerid][pMember] == 15) //Дверь ОПГ "Ореховское"
        {
            if(opgdvero == 0)
            {
            	MoveDynamicObject(opgdver,  2334.1228, 1381.8114, 11.6482,  1, 0.0000, 0.0000, 90.0000); //Открыт
            	SendClientMessage(playerid,COLOR_BLUE,"Вы открыли дверь.");
            	opgdvero = 1;
			}
			else
			{
			    MoveDynamicObject(opgdver,  2334.1228, 1381.8114, 11.6482,  1, 0.0000, 0.0000, 180.0000); //Закрыт
                SendClientMessage(playerid,COLOR_RED,"Вы закрыли дверь.");
                opgdvero = 0;
			}
        }
	 	if(IsPlayerInRangeOfPoint(playerid, 3, 2401.1504, -1719.2760, 21.9141) && PI[playerid][pMember] == 16) //Дверь ОПГ "Южное"
        {
            if(opg2dvero == 0)
            {
            	MoveDynamicObject(opg2dver,  2401.1504, -1719.2760, 21.9141,  1, 0.0000, 0.0000, 90.0000); //Открыт
            	SendClientMessage(playerid,COLOR_BLUE,"Вы открыли дверь.");
            	opg2dvero = 1;
			}
			else
			{
			    MoveDynamicObject(opg2dver,  2401.1504, -1719.2760, 21.9141,  1, 0.0000, 0.0000, 180.0000); //Закрыт
                SendClientMessage(playerid,COLOR_RED,"Вы закрыли дверь.");
                opg2dvero = 0;
			}
        }
		if(IsPlayerInRangeOfPoint(playerid, 1,778.5310,675.8540,1002.5444)) //Выход из Поселкового совета
		{
	        SetPlayerInterior(playerid,0);
	        SetPlayerPos(playerid,1818.2972,2095.7300,16.1631);
	        SetPlayerFacingAngle(playerid, 0.8825);
	        SetPlayerVirtualWorld(playerid, 0);
	        FreezePlayer(playerid, 6000);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1,1818.2972,2095.7300,16.1631)) //Вход в Поселковый совет
		{
		    FreezePlayer(playerid, 6000);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,778.5310,675.8540,1002.5444);
			SetPlayerFacingAngle(playerid, 181.1987);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys == 2)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			cmd_vorota(playerid);
		}
	}
	if(pCuff[playerid][pCuffee] == playerid)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if((newkeys & KEY_JUMP || newkeys & KEY_FIRE || newkeys & KEY_CROUCH || (newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)))
			{
				ClearAnimations(playerid);
				SetTimerEx("Unfreez2",3000,false,"i",playerid);
				ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
				TogglePlayerControllable(playerid,0);
				SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать это действие так как вы в наручниках.");
			}
		}
	}
	if(newkeys & KEY_WALK)//сдача на права
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1, 2303.3792,-1927.4711,2022.9600))
        {
	        if(GetPVarInt(playerid, "LESSON") != 0) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас уже идет экзамен.");
	        ShowPlayerDialog(playerid, D_ASH, DIALOG_STYLE_LIST, "{7efd7d}Выберите категорию", "{7efd7d}1. {ffffff}Категория A         {9bae2d}4000 рублей\n{7efd7d}2. {ffffff}Категория B        {9bae2d}5000 рублей\n{7efd7d}3. {ffffff}Категория C        {9bae2d}5500 рублей\n{7efd7d}4. {ffffff}Категория D        {9bae2d}6500 рублей", "Выбрать", "Закрыть");
	    }
	}
	if(newkeys == 1024)//скупка раков
	{
    		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2047.2817,1976.6250,2.9482))
		    {
		            if(PI[playerid][pRaki] < 1) return SendClientMessage(playerid, -1, "Мне некогда с тобой просто так болтать. Приходи когда будут раки.");
		            new text[144];
		    		format(text,sizeof(text),"О привет. Меня зовут Василий.\nМеня тут жена отправила раков найти, но мне так лень.\nЯ тут смотрю у тебя есть %d рак(ов). Давай я их куплю у тебя.\nПо 300 рублей за 1 рака.",PI[playerid][pRaki]);
					ShowPlayerDialog(playerid, D_BUYRAK, DIALOG_STYLE_MSGBOX,"{ffffff}Василий. Скупка раков",text,"Продать", "Себе оставлю");
					return 1;
			}
	}
	//if(newkeys == 1024)//костюм раков
	//{
	//		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2344.7715,1419.6361,11.3700)) return ShowPlayerDialog(playerid, D_BUYSNASTI, DIALOG_STYLE_LIST,"{ffffff}Николай Петрович. Продажа снастей","1.Костюм краболова\t10.000 Рублей","Купить", "Отмена");
	//}
	if(newkeys & KEY_WALK)//устройство на работу в мэрии
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1, 1576.1375,-773.8145,1114.7072))
        {
			if(PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите в организации!");
			ShowPlayerDialog(playerid, D_HEAL+17, 2, "{7efd7d}Устройство на работу", "{ffffff}Водитель автобуса\t\t| {33AAFF}5 уровень\n{ffffff}Водитель такси\t\t| {33AAFF}4 уровень\n{ffffff}Автомеханик\t\t\t| {33aaff}3 уровень\n{ffffff}Дальнобойщик\t\t| {33aaff}2 уровень\n{ffffff}Уволиться с работы", "Выбор", "Отмена");
	    }
	}
	if(newkeys & KEY_WALK)//устройство шахтёром
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1, 2282.4890,1660.0847,-39.7646))
		if(!UseWork[playerid])
		{
			return ShowPlayerDialog(playerid,9995,0,"{FFCD00}Работа шахтёра","{FFFFFF}Вы хотите устроиться на работу шахтёра?","Да","Нет");
		}
		else if(UseWork[playerid] == 1)
		{
			return ShowPlayerDialog(playerid,9996,0,"{FFCD00}Работа шахтёра","{FFFFFF}Вы уверены что хотите завершить рабочий день?","Да","Нет");
		}
	}
	if(newkeys & KEY_WALK)//устройство дальнобойщиком
	{
        if(IsPlayerInRangeOfPoint(playerid, 1, 1754.8107,2251.7827,15.8603))
        {
	        if(GetPVarInt(playerid, "TruckerJob") == 1) return SendClientMessage(playerid, COLOR_DARKORANGE, "Вы уже арендуете грузовик");
		    if(PI[playerid][pJob] != 6)
		    {
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не работаете дальнобойщиком!");
				return 1;
		    }
		    else
		    {
			   ShowPlayerDialog(playerid,ArendTruckerDialog,DIALOG_STYLE_LIST,"{FFCD00}Аренда грузовика","{FFFFFF}ГАЗЕЛЬ\t\t({99cc00}1 уровень{ffffff})\nЗИЛЛ\t({99cc00}5 уровень{ffffff})\nКАМАЗ\t\t({99cc00}12 уровень{ffffff})\nКАЗ\t({99cc00}20 уровень)","Далее","Отмена");
		    }
		}
	}
	if(newkeys & KEY_WALK)//устройство грузчиком
	{
        if(IsPlayerInRangeOfPoint(playerid, 1, 2355.0908,-261.2916,2.7890))
        {
		 	if(GetPVarInt(playerid,"InJob") == 0) ShowPlayerDialog(playerid,30000,DIALOG_STYLE_MSGBOX,"{FFCD00}Прораб:","{FFFFFF}Привет, не желаешь поработать?\nТебе нужно отнести ящики на склад.\nЗа 1 ящик мы платим 200 рублей, ты готов?","Да","Нет");
			else if(GetPVarInt(playerid,"InJob") == 1) ShowPlayerDialog(playerid,30001,DIALOG_STYLE_MSGBOX,"{FFCD00}Прораб:","{FFFFFF}Вы хотите завершить подработку грузчиком?","Да","Нет");
		}
	}
	if(newkeys & KEY_WALK)//пикап в почте
	{
        if(IsPlayerInRangeOfPoint(playerid, 1, 671.5284,995.1760,1015.4100))
        {
		 	ShowPlayerDialog(playerid,99999,DIALOG_STYLE_LIST,"DEBUG DIALOG", "{FFFFFF}[DEBUG]Написать письмо\n{FFFFFF}[DEBUG]Забрать посылку\n{FFFFFF}[DEBUG]забрать письмо\n{FFFFFF}[DEBUG]Устроится почтальоном", "Дальше", "Отмена");

		}
	}
	if(newkeys & KEY_WALK)//маты ОПГ орехов
	{
		if(IsPlayerInRangeOfPoint(playerid, 1, 140.3174,2052.1376,701.9799))
		{
		    if(PI[playerid][pMember] == TEAM_OPGYG)
		    {
				ShowPlayerDialog(playerid, D_MAFIA, 2, "{7efd7d}Склад Мафии", "{ffffff}Положить патроны\nПоложить металл\nПоложить деньги\nПоложить наркотики\nВзять патроны\nВзять металл\nВзять деньги\nВзять наркотики", "Далее", "Отмена");
			}
			return 1;
		}
	}
	if(newkeys & KEY_WALK)//маты Русской Мафии
	{
        if(IsPlayerInRangeOfPoint(playerid, 1, 1754.3183,2379.4780,18.4681))
        {
		    if(PI[playerid][pMember] == TEAM_OPGOR)
		    {
				ShowPlayerDialog(playerid, D_MAFIA, 2, "{7efd7d}Склад Мафии", "{ffffff}Положить патроны\nПоложить металл\nПоложить деньги\nПоложить наркотики\nВзять патроны\nВзять металл\nВзять деньги\nВзять наркотики", "Далее", "Отмена");
			}
			return 1;
	    }
	}
	if(newkeys & KEY_WALK)//Боекомплект Полиция
	{
       if(IsPlayerInRangeOfPoint(playerid, 1, 1924.0483,2184.5667,2.4004))
       {
           if(PI[playerid][pMember] != TEAM_POLICIA) return 1;
           ShowPlayerDialog(playerid, D_ARMOURY, DIALOG_STYLE_LIST, "{7efd7d}Оружие полиции", "{7efd7d}1. {ffffff}Пистолет {0099FF}(50 патронов)\n{7efd7d}2. {ffffff}M5 {0099FF}(120 патронов)\n{7efd7d}3. {ffffff}Дубинка", "Создать", "Отмена");
	   }
	}
	if(newkeys & KEY_WALK)
	{
		for(new i = 1; i <= TOTALATM; i++)
		{
			if(PlayerToPoint(3.0, playerid, ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ])) ATMList(playerid);
		}
		new a = GetPVarInt(playerid, "PlayerHouse");
		if(PlayerToPoint(3.0, playerid, -1621.5793,1578.0673,2005.7100) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hVirtual])
		{
			SetPlayerInterior(playerid, HouseInfo[a][hInt]);
			SetPlayerVirtualWorld(playerid, HouseInfo[a][hVirtual]);
			SetPlayerPosEx(playerid, HouseInfo[a][hExitx], HouseInfo[a][hExity], HouseInfo[a][hExitz]);
		}
		if(PlayerToPoint(8.0, playerid, HouseInfo[a][hExitx], HouseInfo[a][hExity], HouseInfo[a][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hVirtual])
        {
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPosEx(playerid, HouseInfo[a][hEntrx], HouseInfo[a][hEntry], HouseInfo[a][hEntrz]);
		}
		if((IsPlayerInDynamicArea(playerid, AreaInfo[arBankMenu])) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) BankList(playerid);
	}
	if(newkeys == KEY_YES) // Y
	{
	    if(GetPVarInt(playerid, "KeyHeal") == 1)
	    {
   			new targetid = GetPVarInt(playerid, "PlayerHeal"), price = GetPVarInt(playerid, "MoneyHeal");
			if(GetMoney(playerid) < price)
			{
				SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "PlayerHeal");
				DeletePVar(playerid, "MoneyHeal");
				DeletePVar(playerid, "KeyHeal");
				return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
			}
			if(IsPlayerInAnyVehicle(targetid) && !IsPlayerInVehicle(playerid, GetPlayerVehicleID(targetid)))
				return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться вместе с вами в машине!");
			TransferMoney(-1, targetid, price);
			TransferMoney(playerid, -1, price);
			PI[playerid][pHealthS] = PI[playerid][pHeal] = 100;
			SetHealth(playerid, 100.0);
			if(GetPlayerDrunkLevel(playerid) > 0) SetPlayerDrunkLevel(playerid, 0);
			SendMes(playerid, COLOR_GREEN, "%s %s вылечил вас за %i Рублей", Fraction_Rang[PI[targetid][pMember]][PI[targetid][pRank]], GetName(targetid), price);
			SendMes(targetid, COLOR_GREEN, "Вы вылечили %s за %i Рублей", GetName(playerid), price);
			new string[128];
			if(PI[playerid][pSex] == 1) format(string, sizeof(string), "[MED] %s %s[%i] провёл курс лечения пациенту %s[%i] за %i Рублей", Fraction_Rang[PI[targetid][pMember]][PI[targetid][pRank]], GetName(targetid), targetid, GetName(playerid), playerid, price);
			else format(string, sizeof(string), "[MED] %s %s[%i] провела курс лечения пациенту %s[%i] за %i Рублей", Fraction_Rang[PI[targetid][pMember]][PI[targetid][pRank]], GetName(targetid), targetid, GetName(playerid), playerid, price);
			SendFMes(PI[targetid][pMember], COLOR_YELLOW, string);
			if(Medicines[targetid]) Medicines[targetid]--;
			SendMes(targetid, COLOR_WHITE, "Количество комплектов медикаментов с собой: %i", Medicines[targetid]);
			DeletePVar(playerid, "PlayerHeal");
			DeletePVar(playerid, "MoneyHeal");
			DeletePVar(playerid, "KeyHeal");
	    	return 1;
  		}
  		else if(GetPVarInt(playerid, "KeyDrugs") == 1)
  		{
  		    new targetid = GetPVarInt(playerid, "PlayerDrugs"), price = GetPVarInt(playerid, "DrugsPrice"), gramm = GetPVarInt(playerid, "PlayerDrugsKG");
			if(GetMoney(playerid) < price)
			{
				SendMes(targetid, COLOR_GREY, "У покупателя %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "PlayerDrugs");
				DeletePVar(playerid, "DrugsPrice");
				DeletePVar(playerid, "PlayerDrugsKG");
				DeletePVar(playerid, "KeyDrugs");
				return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
			}
			TransferMoney(playerid, -1, price);
			TransferMoney(-1, targetid, price);
			PI[targetid][pDrugs] -= gramm;
			PI[playerid][pDrugs] += gramm;
			new string[100];
			SendMes(targetid, COLOR_GREEN, "Вы продали наркотики (%i грамм) за %i  Рублей. Наркотиков в кармане: %i", gramm, price, PI[targetid][pDrugs]);
			SendMes(playerid, COLOR_GREEN, "Вы купили наркотики у %s (%i грамм). Цена: %i  Рублей", GetName(targetid), gramm, price);
			if(PI[playerid][pSex] == 1) format(string, sizeof(string), "достал пакетик и передал его %s", GetName(targetid));
			else format(string, sizeof(string), "достала пакетик и передала его %s", GetName(targetid));
			MeAction(playerid, string);
			DeletePVar(playerid, "PlayerDrugs");
			DeletePVar(playerid, "DrugsPrice");
			DeletePVar(playerid, "PlayerDrugsKG");
			DeletePVar(playerid, "KeyDrugs");
			return 1;
  		}
  		else if(GetPVarInt(playerid, "KeyZone") == 1)
  		{
  		    new targetid = GetPVarInt(playerid, "PlayerZone"), price = GetPVarInt(playerid, "ZonePrice"), i = GetPVarInt(playerid, "ZoneID");
			if(GetMoney(playerid) < price)
			{
				SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "PlayerZone");
				DeletePVar(playerid, "ZonePrice");
				DeletePVar(playerid, "ZoneID");
				DeletePVar(playerid, "KeyZone");
				return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
			}
			GZInfo[i][gFrak] = PI[playerid][pMember];
			GangZoneStopFlashForAll(GangZone[i]);
			GangZoneHideForAll(GangZone[i]);
			GangZoneShowForAll(GangZone[i],GetGangZoneColor(i));
			SaveGZ(i);
			TransferMoney(playerid, -1, price);
			TransferMoney(-1, targetid, price);
			new string[100];
			SendMes(targetid, COLOR_GREEN, "Вы продали зону %s за %i Рублей", GetName(playerid), price);
			SendMes(playerid, COLOR_GREEN, "Вы купили зону у %s. Цена: %i Рублей", GetName(targetid), price);
			format(string, sizeof(string), "[F] %s продает зону банде %s (%s)", GetName(targetid), Fraction_Name[PI[playerid][pMember]], GetName(playerid));
			SendFMes(PI[targetid][pMember], COLOR_LIGHTRED, string);
			format(string, sizeof(string), "[F] %s покупает зону у банды %s (%s)", GetName(playerid), Fraction_Name[PI[targetid][pMember]], GetName(targetid));
			SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string);
			DeletePVar(playerid, "PlayerZone");
			DeletePVar(playerid, "ZonePrice");
			DeletePVar(playerid, "ZoneID");
			DeletePVar(playerid, "KeyZone");
			return 1;
  		}
  		else if(GetPVarInt(playerid, "KeyGun") == 1)
  		{
  		    new targetid = GetPVarInt(playerid, "PlayerGun"), weapon = GetPVarInt(playerid, "PlayerGun_"), price = GetPVarInt(playerid, "PlayerGPrice"), ammo = GetPVarInt(playerid, "PlayerGAmmo");
			if(GetMoney(playerid) < price)
			{
				SendMes(targetid,COLOR_GREY, "У игрока %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "PlayerGun");
				DeletePVar(playerid, "PlayerGun_");
				DeletePVar(playerid, "PlayerGAmmo");
				DeletePVar(playerid, "PlayerGPrice");
				DeletePVar(playerid, "KeyGun");
				return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
			}
			TransferMoney(playerid, -1, price);
			TransferMoney(-1, targetid, price);
			PI[targetid][pPatron] -= ammo;
			GivePlayerWeaponAC(playerid, weapon, ammo);
			new string[100];
			SendMes(targetid, COLOR_GREEN, "Вы продали оружие %s за %i Рублей. Осталось патронов: %i", GetName(playerid), price, PI[targetid][pPatron]);
			SendMes(playerid, COLOR_GREEN, "Вы купили оружие у %s c %i патронами. Цена: %i", GetName(targetid), ammo, price);
			if(PI[playerid][pSex] == 1) format(string, sizeof(string), "сделал оружие и передал в руки %s", GetName(targetid));
			else format(string, sizeof(string), "сделала оружие и передала в руки %s", GetName(targetid));
			MeAction(playerid, string);
			DeletePVar(playerid, "PlayerGun");
			DeletePVar(playerid, "PlayerGun_");
			DeletePVar(playerid, "PlayerGAmmo");
			DeletePVar(playerid, "PlayerGPrice");
			DeletePVar(playerid, "KeyGun");
			return 1;
  		}
  		else if(GetPVarInt(playerid, "KeyCar") == 1)
  		{
  		    new targetid = GetPVarInt(playerid, "CarPlayer"), price = GetPVarInt(playerid, "CarPrice");
			if(GetMoney(playerid) < price)
			{
				SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "CarPrice");
				DeletePVar(playerid, "CarPlayer");
				DeletePVar(playerid, "KeyCar");
				SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				return 1;
			}
			PI[playerid][cModel] = PI[targetid][cModel];
			PI[playerid][cClass] = PI[targetid][cClass];
			PI[playerid][cFuel] = PI[targetid][cFuel];
			PI[playerid][cColor][0] = PI[targetid][cColor][0];
			PI[playerid][cColor][1] = PI[targetid][cColor][1];
			PI[playerid][cCost] = PI[targetid][cCost];
			PI[playerid][cVehcom] = PI[targetid][cVehcom];
			sscanf(PI[targetid][cVehcom], "p<,>a<i>[14]",PI[targetid][cVehcoms]);
			PI[playerid][cPaintjob] = PI[targetid][cPaintjob];
			PI[playerid][cModel] = 0;
			PI[playerid][cClass] = 0;
			PI[playerid][cFuel] = 45;
			PI[playerid][cColor][0] = PI[playerid][cColor][1] = PI[playerid][cCost] = 0;
			format(PI[playerid][cVehcom],64,"0,0,0,0,0,0,0,0,0,0,0,0,0,0");
			sscanf(PI[playerid][cVehcom], "p<,>a<i>[14]", PI[playerid][cVehcoms]);
			PI[playerid][cPaintjob] = 3;
			foreach(new i: Player)
           	{
		    	if(PI[i][pVehicleKey] == PI[targetid][PlayerCarID])
		    	{
	        	    PI[i][pVehicleKey] = 0;
				}
			}
			DestroyVehicle(PI[playerid][PlayerCarID]);
			LoadMyCar(playerid);
			DestroyVehicle(PI[targetid][PlayerCarID]);
			PI[targetid][PlayerCarID] = INVALID_VEHICLE_ID;
			SendClientMessage(targetid, COLOR_GREEN, "Поздравляем с продажей транспортного средства");
			SendClientMessage(playerid, COLOR_GREEN, "Поздравляем с приобретением транспортного средства");
			PI[playerid][pRegVehicle] = 0;
			MysqlUpdatePlayerInt(playerid, "veh_reg", PI[playerid][pRegVehicle]);
			strmid(PI[playerid][pNumberVehicle], "[ HET HOMEPOB ]", 0, strlen("[ HET HOMEPOB ]"), 20);
			MysqlUpdatePlayerStr(playerid, "veh_number", PI[playerid][pNumberVehicle]);
			SaveAccount(playerid);
			SaveAccount(targetid);
			TransferMoney(playerid, -1, price);
			TransferMoney(1, targetid, price);
			new string[128];
			format(string, sizeof(string), "Игрок %s купил транспорт %s[%i] за %d Рублей у игрока %s", GetName(playerid), VehicleNames[GetVehicleModel(PI[targetid][PlayerCarID])-400], GetPlayerVehicleID(targetid), price, GetName(targetid));
			SendLog("BuyCar", string);
			format(string, sizeof(string), "Игрок %s продал транспорт %s[%i] за %d Рублей игроку %s", GetName(targetid), VehicleNames[GetVehicleModel(PI[targetid][PlayerCarID])-400], GetPlayerVehicleID(targetid), price, GetName(playerid));
			SendLog("SellCar", string);
			DeletePVar(playerid, "CarPrice");
			DeletePVar(playerid, "CarPlayer");
			DeletePVar(playerid, "KeyCar");
			return 1;
  		}
  		else if(GetPVarInt(playerid, "KeyTicket") == 1)
  		{
  		    new targetid = GetPVarInt(playerid, "TicketPlayer"), price = GetPVarInt(playerid, "TicketSumma");
			if(GetMoney(playerid) < price)
			{
				SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "TicketPlayer");
				DeletePVar(playerid, "TicketSumma");
				DeletePVar(playerid, "TicketReason");
				DeletePVar(playerid, "KeyTicket");
				SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				return 1;
			}
			TransferMoney(-1, targetid, price);
			TransferMoney(playerid, -1, price);
			SendMes(playerid, COLOR_GREEN, "Вы оплатили штраф на %i Рублей офицеру %s", price, GetName(targetid));
			SendMes(targetid, COLOR_GREEN, "%s оплатил штраф в размере %i Рублей", GetName(playerid), price);
			DeletePVar(playerid, "TicketPlayer");
			DeletePVar(playerid, "TicketSumma");
			DeletePVar(playerid, "TicketReason");
			DeletePVar(playerid, "KeyTicket");
  		    return 1;
  		}
  		if(KostiName[playerid] != INVALID_PLAYER_ID)
		{
    		new dice = random(4) + 1;
   			new dice1 = random(4) + 1;
			if(!ProxDetectorS(6.0, playerid, KostiName[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами!");
			new fiski = PI[playerid][pCash];
			new fiski1 = PI[KostiName[playerid]][pCash];
			if(fiski < KostiMoney[playerid] || fiski1 < KostiMoney[KostiName[playerid]])
			{
			    SendClientMessage(playerid, COLOR_GREY, "У данного игрока нет столько денег");
			    SendClientMessage(KostiName[playerid], COLOR_GREY, "У данного игрока нет столько денег");
			    cmd_canceldice(playerid);
				cmd_canceldice(KostiName[playerid]);
			    return 0;
			}
			new string[128];
	    	format(string, sizeof(string), "%s и %s бросили кости. Результат: {FFFF00}%i : %i", GetName(KostiName[playerid]), GetName(playerid), dice, dice1);
	    	ProxDetector(13.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	    	if(dice > dice1)
	    	{
	    	    new idx = GetPVarInt(playerid, "PlayerBizz");
                BizzInfo[idx][bMoney] += KostiMoney[playerid]/10;
                BizzPay[idx] += KostiMoney[playerid]/10;
				GiveMoney(playerid, - KostiMoney[playerid]);
				GiveMoney(KostiName[playerid], KostiMoney[playerid]);
		        SendClientMessage(KostiName[playerid], COLOR_LIME, "Поздравляем! Вы выиграли!");
		        SendClientMessage(playerid, COLOR_DARKORANGE, "К сожалению, Вы проиграли!");
		        format(string, 20, "~g~+%d Рублей", KostiMoney[playerid]);
		        GameTextForPlayer(KostiName[playerid], string, 3000, 1);
		        format(string, 20, "~r~-%d Рублей", KostiMoney[playerid]);
		        GameTextForPlayer(playerid, string, 3000, 1);
		    }
		    else if(dice < dice1)
		    {
	    	    new idx = GetPVarInt(playerid, "PlayerBizz");
                BizzInfo[idx][bMoney] += KostiMoney[playerid]/10;
                BizzPay[idx] += KostiMoney[playerid]/10;
				GiveMoney(playerid, KostiMoney[playerid]);
				GiveMoney(KostiName[playerid],  -KostiMoney[playerid]);
		        SendClientMessage(playerid, COLOR_LIME, "Поздравляем! Вы выиграли!");
		        SendClientMessage(KostiName[playerid], COLOR_DARKORANGE, "К сожелению, вы проиграли!");
		        format(string, 20, "~g~+%d Рублей", KostiMoney[playerid]);
		        GameTextForPlayer(playerid, string, 3000, 1);
		        format(string, 20, "~r~-%d Рублей", KostiMoney[playerid]);
		        GameTextForPlayer(KostiName[playerid], string, 3000, 1);
		    }
		    else if(dice == dice1)
		    {
		        SendClientMessage(playerid, COLOR_ORANGE, "Игра закончилась в ничью!");
		        SendClientMessage(KostiName[playerid], COLOR_ORANGE, "Игра закончилась в ничью!");
		    }
			format(string, 14, "Выпало: %i", dice1);
			SetPlayerChatBubble(playerid, string, COLOR_DARKORANGE, 30.0, 10000);
			format(string, 14, "Выпало: %i", dice);
			SetPlayerChatBubble(KostiName[playerid], string, COLOR_LIME, 30.0, 10000);
		 	ZapretDice[playerid] = ZapretDice[KostiName[playerid]] = 0;
			KostiMoney[playerid] = KostiMoney[KostiName[playerid]] = 0;
			Predlog[KostiName[playerid]] = 0;
			KostiName[KostiName[playerid]] = KostiName[playerid] = INVALID_PLAYER_ID;
			return 1;
		}
	}
	else if(newkeys == KEY_NO) // N
	{
	    if(GetPVarInt(playerid, "KeyHeal") == 1)
	    {
	        new targetid = GetPVarInt(playerid, "PlayerHeal");
	    	SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "PlayerHeal");
			DeletePVar(playerid, "MoneyHeal");
			DeletePVar(playerid, "KeyHeal");
	    	return 1;
    	}
    	else if(GetPVarInt(playerid, "KeyDrugs") == 1)
    	{
    	    new targetid = GetPVarInt(playerid, "PlayerDrugs");
			SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "PlayerDrugs");
			DeletePVar(playerid, "DrugsPrice");
			DeletePVar(playerid, "PlayerDrugsKG");
			DeletePVar(playerid, "KeyDrugs");
			return 1;
    	}
    	else if(GetPVarInt(playerid, "KeyZone") == 1)
    	{
    	    new targetid = GetPVarInt(playerid, "PlayerZone");
    	    SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "PlayerZone");
			DeletePVar(playerid, "ZonePrice");
			DeletePVar(playerid, "ZoneID");
			DeletePVar(playerid, "KeyZone");
			return 1;
    	}
    	else if(GetPVarInt(playerid, "KeyGun") == 1)
    	{
    	    new targetid = GetPVarInt(playerid, "PlayerGun");
    	    SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "PlayerGun");
			DeletePVar(playerid, "PlayerGun_");
			DeletePVar(playerid, "PlayerGAmmo");
			DeletePVar(playerid, "PlayerGPrice");
			DeletePVar(playerid, "KeyGun");
			return 1;
    	}
    	else if(GetPVarInt(playerid, "KeyCar") == 1)
    	{
    	    new targetid = GetPVarInt(playerid, "CarPlayer");
    	    SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "CarPrice");
			DeletePVar(playerid, "CarPlayer");
			DeletePVar(playerid, "KeyCar");
    	    return 1;
		}
		else if(GetPVarInt(playerid, "KeyTicket") == 1)
		{
		    new targetid = GetPVarInt(playerid, "TicketPlayer");
		   	SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
		   	DeletePVar(playerid, "TicketPlayer");
			DeletePVar(playerid, "TicketSumma");
			DeletePVar(playerid, "TicketReason");
			DeletePVar(playerid, "KeyTicket");
		    return 1;
		}
		else if(KostiName[playerid] != INVALID_PLAYER_ID)
  		{
  		    SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(KostiName[playerid], COLOR_RED, "Игрок отказался от предложения");
  		    Predlog[playerid] = Predlog[KostiName[playerid]] =
			KostiMoney[playerid] = KostiMoney[KostiName[playerid]] =
			ZapretDice[playerid] = ZapretDice[KostiName[playerid]] = 0;
			KostiName[KostiName[playerid]] = KostiName[playerid] = INVALID_PLAYER_ID;
			return 1;
		}
		else if(GetPVarInt(playerid, "KeySim") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerSim");
		   	SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
		   	DeletePVar(playerid, "PlayerSim");
			DeletePVar(playerid, "SimPrice");
			DeletePVar(playerid, "KeySim");
		    return 1;
		}
		if(GetPVarInt(playerid, "sellexamlic") == 1)
		{
			new targetid = GetPVarInt(playerid, "idselllic");
			SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "sellexamlic");
			DeletePVar(playerid, "idselllic");
			DeletePVar(playerid, "changelic");
			return 1;
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
		if(!IsPlayerInAnyVehicle(playerid) && times[playerid] == true)
		{
			times[playerid] = false;
			SetTimerEx("AntiBH",790,false,"i",playerid);
			return 1;
		}
	}
	if(PRESSED(KEY_SPRINT))
    {
        if(GetPVarInt(playerid, "Animation") == 1)
        {
        	ClearAnimations(playerid);
        	SetPlayerSpecialAction(playerid, 0);
        	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
        	DeletePVar(playerid,"Animation");
        	TextDrawHideForPlayer(playerid, AnimDraw);
        	return 1;
        }
    }
	if(PRESSED(KEY_ACTION))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		if(GetPVarInt(playerid, "InShop") || InShop[playerid]) return 1;
		new cars = 0, vehicleid = GetPlayerVehicleID(playerid);
		for(new i; i != sizeof(BE_Bad_Vehs); i++)
		{
			if(GetVehicleModel(vehicleid) == BE_Bad_Vehs[i]) cars++;
		}
    	if(IsAPlane(vehicleid) || IsAVel(vehicleid)) return 1;
		if(Fuel[vehicleid] <= 0 && GetVehicleModel(vehicleid) != 462) return SendClientMessage(playerid, COLOR_GREY, "В транспорте закончился бензин, необходима заправка!");
 	    new Float:vehhealth;
		GetVehicleHealth(vehicleid, vehhealth);
		if(vehhealth <= 400 && cars == 0) return SendClientMessage(playerid, COLOR_GREY, "Машина поломана, вызовите механика!");
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,(Engine[vehicleid])?(false):(true),lights,alarm,doors,bonnet,boot,objective);
		Engine[vehicleid] = (Engine[vehicleid])?(false):(true);
		return 1;
	}
	if(PRESSED(KEY_FIRE))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		new cars = 0, vehicleid = GetPlayerVehicleID(playerid);
		for(new i; i != sizeof(BE_Bad_Vehs); i++)
		{
			if(GetVehicleModel(vehicleid) == BE_Bad_Vehs[i]) cars++;
		}
		if(cars > 0) return 1;
		if(IsAVel(vehicleid) || IsABoat(vehicleid)) return 1;
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,engine,(Lights[vehicleid])?(false):(true),alarm,doors,bonnet,boot,objective);
		Lights[vehicleid] = (Lights[vehicleid])?(false):(true);
		PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
		return 1;
	}
	if(!IsACop(playerid) || !IsAArmy(playerid) || !IsAMayor(playerid))
	{
	    if(!PI[playerid][pAdmin])
	    {
	        if(!UseWork[playerid])
	        {
				for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
			    {
			        if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
			        {
			            new index = GetPlayerAnimationIndex(playerid);
						if(index >= 1136 && index <= 1138 || index == 504 || index == 505 || index == 1141 || (oldkeys & 128 && newkeys & 16))
						{
					    	if(GetPlayerWeapon(playerid) != 43 && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DRINK_SPRUNK && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DRINK_BEER)
							{
						 		ApplyAnimation(playerid, "FAT", "IDLE_tired", 3.0, 1, 0, 0, 1, 3000);
								SetTimerEx("ClearAnimationsDelay", 3000, false, "i", playerid);
						 		if(!GetPVarInt(playerid, "SwitchingTextdraw"))
						 		{
							 		PlayerTextDrawShow(playerid, GreenZoneText[playerid][3]);
							 		PlayerTextDrawBoxColor(playerid, GreenZoneText[playerid][0], COLOR_RED);
							 		PlayerTextDrawShow(playerid, GreenZoneText[playerid][0]);
							 		SetTimerEx("WarningGreenZone", 3000, false, "i", playerid);
							 		SetPVarInt(playerid, "SwitchingTextdraw", 1);
						 		}
					 		}
				 		}
					}
				}
			}
		}
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if((oldkeys & 128 && newkeys & 16))
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0,-341.2002,438.6825,2513.6538) || IsPlayerInRangeOfPoint(playerid, 2.0,-340.8946,434.3313,2513.7161))
			{
				if(!gym_cloakroom[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Вы не переоделись!");
				switch(random(3))
				{
					case 1:
					{
						PlayerPlaySound(playerid, (random(2)==0)?(17805):(17806), 0.0, 0.0, 0.0);
						PI[playerid][pSportExp]++;
						new string[20];
						if(PI[playerid][pSportExp] <= 1000) format(string, sizeof(string), "%d/1000", PI[playerid][pSportExp]);
						else if(PI[playerid][pSportExp] <= 3000) format(string, sizeof(string), "%d/3000", PI[playerid][pSportExp]);
						else if(PI[playerid][pSportExp] <= 6000) format(string, sizeof(string), "%d/6000", PI[playerid][pSportExp]);
						else format(string, sizeof(string), "%d", PI[playerid][pSportExp]);
						GameTextForPlayer(playerid, string, 500, 6);
						if(PI[playerid][pSportExp] == 1000)
						{
							SendClientMessage(playerid,COLOR_WHITE,"Вы выучили новый стиль боя 'Бокс' 1000 ударов, используйте /fstyle 1");
							PI[playerid][pFightStyle] = 5;
							SendClientMessage(playerid, COLOR_WHITE, "Осталось открыть 2 стиля боя, требуется еще 2000 ударов");
						}
						if(PI[playerid][pSportExp] == 3000)
						{
							SendClientMessage(playerid,COLOR_WHITE,"Вы выучили новый стиль боя 'Кунг-фу' 3000 ударов, используйте /fstyle 2");
							PI[playerid][pFightStyle] = 6;
							SendClientMessage(playerid, COLOR_WHITE, "Осталось открыть 1 стиль боя, требуется еще 3000 ударов");
						}
						if(PI[playerid][pSportExp] == 6000)
						{
							SendClientMessage(playerid,COLOR_WHITE,"Вы выучили новый стиль боя 'Кикбокс' 6000 ударов, используйте /fstyle 3");
							PI[playerid][pFightStyle] = 7;
							SendClientMessage(playerid, COLOR_WHITE, "Вы выучили все стили боя! Поздравляем!");
						}
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
    if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY)
    {
    	new keys,ud,lr;
    	GetPlayerKeys(playerid,keys,ud,lr);

		if(noclipdata[playerid][mode] && (GetTickCount() - noclipdata[playerid][lastmove] > 100))
		{
			MoveCamera(playerid);
		}
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
		{
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0)
			{
				StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
				noclipdata[playerid][mode]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else
			{
				noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr);
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr;
		return 0;
	}
    if(!IsPlayerConnected(playerid))
 	{
  		Kick(playerid);
    	return 0;
 	}
	PI[playerid][pAFK] = 0;
	new string[155];
	format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits=%d,totalcredits=%d WHERE id=%d", PI[playerid][pCredits], PI[playerid][pTotalCredits], PI[playerid][pID]);
	iNewPlayerAmmo[playerid] = GetPlayerAmmo(playerid);
	if(iNewPlayerAmmo[playerid] != iPlayerAmmo[playerid])
	{
		OnPlayerAmmoChange(playerid, iNewPlayerAmmo[playerid], iPlayerAmmo[playerid]);
		iPlayerAmmo[playerid] = iNewPlayerAmmo[playerid];
	}
	if(InShop[playerid] > 0) SelectCar(playerid);
	for(new gjob; gjob < START_JOB; gjob++)// Цикл колличество мест в которых можно начать работу
	{
	if(IsPlayerInRangeOfPoint(playerid,2,start_job[gjob][0],start_job[gjob][1],start_job[gjob][2])) GameTextForPlayer(playerid,"~g~HA„M…TE ~r~ALT",5000,4);// Проверяем нахождение игрока в точках начала работы, если он там, выводи GameText
	}
	if(keys_setting[playerid] == true)
	{
	   	if(GetPlayerMoney(playerid) > 999999)
	    {
	     	SetPlayerAttachedObject(playerid,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
	    }
		if(GetPlayerMoney(playerid) < 999999)
		{
			RemovePlayerAttachedObject(playerid,3);
		}
	}
	else
	{
	    RemovePlayerAttachedObject(playerid,3);
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    if(playerid == INVALID_PLAYER_ID) return SKick(playerid, 7433);
//	if(GetPVarInt(playerid, "DialogResponseTime") > GetTickCount()) return CheatKick(playerid, 2178);
	else SetPVarInt(playerid, "DialogResponse", GetTickCount()+230);
	if(strlen(inputtext) > 0)
	{
		for(new i; i < strlen(inputtext); i++)
		{
	     	if(inputtext[i] == '%') inputtext[i] = '#';
	     	else if(inputtext[i] == '{' && inputtext[i+7] == '}') strdel(inputtext, i, i+8);
		}
	}
	if(GetPVarInt(playerid,"USEDIALOGID") != dialogid) return 1;
	SetPVarInt(playerid, "USEDIALOGID", -1);
	#if DEBUG_STATUS == true
		printf("Игрок %s только что использовал диалог номер %i", GetName(playerid), dialogid);
	#endif
	if(PlayerLogged[playerid] == true)
	{
		if(response) PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
		else PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
	}
	switch(dialogid)
	{
		case PORCH_MENU_DIALOGID: 
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new porch = GetPVarInt(playerid, "EnterPlayerPorch");
					new Query[128];
					mysql_format(dbHandle, Query, sizeof Query, "SELECT `hOwner`, `hPrice`, `hDays` FROM "T_PORCH_HOUSE" WHERE (`id` > '%d' and `id` < '%d') ORDER BY `id` ASC ", PorchInfo[porch][pFirstFlat]-1, (sizeof PorchFlatsCoord) + PorchInfo[porch][pFirstFlat]);
					mysql_tquery(dbHandle, Query, "@_ShowPorchFlats", "d", playerid);
				}
				case 1:
				{
					if(GetPlayerPorchHouse(playerid) == 0) return SendClientMessage(playerid, -1, "Вы не арендуете квартиру");
					if(GetPVarInt(playerid, "EnterPlayerPorch") == 0)
					{
						SetPVarInt(playerid, "EnterPlayerPorch", floatround(GetPlayerPorchHouse(playerid) / 8, floatround_floor) + 1);
					}
					if(GetPVarInt(playerid, "EnterPlayerPorch") != floatround(GetPlayerPorchHouse(playerid) / 8, floatround_floor) + 1 ) return SendClientMessage(playerid, -1, "Вы не арендуете квартиру в этом доме");
					ShowPlayerDialog(playerid, PORCH_MENU_DIALOGID+4, DIALOG_STYLE_LIST, "Меню жильца", "{FFFFFF}1. Оплатить проживание\n2. Забрать транспорт\n3. Выселиться из квартиры", "Выбрать", "Отмена");
				}
			}
			
		}
		case PORCH_MENU_DIALOGID+1:
		{
			if(!response) return SetPVarInt(playerid, "EnterPlayerPorchHouse", 0);
			new porch = GetPVarInt(playerid, "EnterPlayerPorch");
			new flat = GetPVarInt(playerid, "EnterPlayerPorchHouse");
			if(PI[playerid][pCash] < PorchHouseInfo[flat][hPrice]) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
			if(GetPlayerHouse(playerid) != 0) return SendClientMessage(playerid, -1, "У вас уже есть дом");
			if(GetPlayerPorchHouse(playerid) != 0) return SendClientMessage(playerid, -1, "У вас уже есть квартира");
			PI[playerid][pCash] -= PorchHouseInfo[flat][hPrice];
			PorchHouseInfo[flat][hDays] = 1;
			PorchHouseInfo[flat][hOwnerID] = PI[playerid][pID];
			strmid(PorchHouseInfo[flat][hOwner], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
			MysqlUpdatePlayerInt(playerid, "cash", PI[playerid][pCash]);
			new Query[170];
			mysql_format(dbHandle, Query, sizeof Query, "UPDATE "T_PORCH_HOUSE" SET `hOwner` = '%s', `hOwnerID` = '%d', `hDays` = '%d' WHERE `id` = '%d'", PI[playerid][pName], PI[playerid][pID], PorchHouseInfo[flat][hDays], flat);
			mysql_tquery(dbHandle, Query, "", "");
			print(Query);
			SendClientMessage(playerid, COLOR_BLUE, "Поздравляем, вы успешно арендовали квартиру!");
			SetPlayerPos(playerid, PorchHouseInfo[flat][hEntrx], PorchHouseInfo[flat][hEntry], PorchHouseInfo[flat][hEntrz]);
			DestroyDynamicMapIcon(PorchHouseInfo[flat][hMIcon]);
			DestroyDynamicPickup(PorchHouseInfo[flat][hPickup]);
			PorchHouseInfo[flat][hMIcon] = CreateDynamicMapIcon(PorchHouseInfo[flat][hEntrx], PorchHouseInfo[flat][hEntry], PorchHouseInfo[flat][hEntrz], 32, 0,porch + 100,9,-1,150.0);
			PorchHouseInfo[flat][hPickup] = CreateDynamicPickup(1272, 1, PorchHouseInfo[flat][hEntrx], PorchHouseInfo[flat][hEntry], PorchHouseInfo[flat][hEntrz], porch + 100,9);
			PI[playerid][pSpawnChange] = 4;
			return 1;
		}
		case PORCH_MENU_DIALOGID+2:
		{
			if(!response) return SetPVarInt(playerid, "EnterPlayerPorchHouse", 0);
			if(GetPlayerHouse(playerid) != 0) return SendClientMessage(playerid, -1, "У вас уже есть дом");
			if(GetPlayerPorchHouse(playerid) != 0) return SendClientMessage(playerid, -1, "У вас уже есть квартира");
			new temp = GetPVarInt(playerid, "EnterPlayerPorchHouse");
			new string[128];
			format(string, sizeof string, "{FFFFFF}Вы действительно хотите заселиться в квартиру №%d?\nРегистрация стоит %d рублей.", temp % 8, PorchHouseInfo[temp][hPrice]);
			return ShowPlayerDialog(playerid, PORCH_MENU_DIALOGID+1, DIALOG_STYLE_MSGBOX, "{FFE408}Подтверждение регистрации", string, "Выбрать", "Отмена");
		}
		case PORCH_MENU_DIALOGID+3:
		{
			if(!response) return SetPVarInt(playerid, "EnterPlayerPorchHouse", 0);
			new flat = GetPVarInt(playerid, "EnterPlayerPorchHouse");
			SetPlayerPos(playerid, -2295.0500,364.5222,-86.4541);
			SetPlayerVirtualWorld(playerid, flat + 100);
			SetPlayerInterior(playerid, 10);
			SetPlayerFacingAngle(playerid, 180);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
		case PORCH_MENU_DIALOGID+4:
		{
			if(!response) return 1;
			if(GetPlayerPorchHouse(playerid) == 0) return SendClientMessage(playerid, -1, "Вы не арендуете квартиру");
			if(GetPVarInt(playerid, "EnterPlayerPorch") != floatround(GetPlayerPorchHouse(playerid) / 8, floatround_floor) + 1 ) return SendClientMessage(playerid, -1, "Вы не арендуете квартиру в этом доме");
			new pflat = GetPlayerPorchHouse(playerid);
			switch(listitem)
			{
				case 0:
				{
					new string[128];
					format(string, sizeof string, "{FFFFFF}Оплаченных дней: %d/30\nЕжедневная плата: %d\n\nНа сколько дней вы хотите оплатить квартиру?", PorchHouseInfo[pflat][hDays], PORCH_FLAT_COST);
					ShowPlayerDialog(playerid, PORCH_MENU_DIALOGID+5, DIALOG_STYLE_INPUT, "{00D11A}Оплата проживания", string, "Оплатить", "Отмена");
				}
				case 1:
				{
					if(PI[playerid][cModel] == 0) return SendClientMessage(playerid, COLOR_DARKORANGE, "У вас нет авто!");
					LoadMyCar(playerid);
					SendClientMessage(playerid, COLOR_BLUE, "Вы успешно заспавнили свое авто");
				}
				case 2:
				{
					new Query[200];
					PI[playerid][pSpawnChange] = 0;
					SendClientMessage(playerid, COLOR_RED, "Вы отказались от аренды квартиры");
					if(PI[playerid][PlayerCarID] != INVALID_VEHICLE_ID)
					{
						DestroyVehicle(PI[playerid][PlayerCarID]);
						PI[playerid][PlayerCarID] = INVALID_VEHICLE_ID;
					}
					MysqlUpdatePlayerInt(playerid, "spawnchange", 0);
					new porch = floatround(GetPlayerPorchHouse(playerid) / 8, floatround_floor) + 1;
					strmid(PorchHouseInfo[pflat][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
					PorchHouseInfo[pflat][hDays] = 0;
					PorchHouseInfo[pflat][hOwnerID] = 0;
					mysql_format(dbHandle, Query, sizeof Query, "UPDATE "T_PORCH_HOUSE" SET `hOwner` = 'none', `hOwnerID` = '0', `hDays` = '0' WHERE `id` = '%d'", pflat);
					mysql_tquery(dbHandle, Query, "", "");
					DestroyDynamicMapIcon(PorchHouseInfo[pflat][hMIcon]);
					DestroyDynamicPickup(PorchHouseInfo[pflat][hPickup]);
					PorchHouseInfo[pflat][hMIcon] = CreateDynamicMapIcon(PorchHouseInfo[pflat][hEntrx], PorchHouseInfo[pflat][hEntry], PorchHouseInfo[pflat][hEntrz], 32, 0,porch + 100,9,-1,150.0);
					PorchHouseInfo[pflat][hPickup] = CreateDynamicPickup(1273, 1, PorchHouseInfo[pflat][hEntrx], PorchHouseInfo[pflat][hEntry], PorchHouseInfo[pflat][hEntrz], porch + 100, 9);
				}
			}
		}
		case D_MARKETF:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(GetPlayerMoney(playerid) < 50)
	                    return SendClientMessage(playerid, -1, "Недостаточно денег.");
	                if(fishing_rod_state[playerid])
	                    return SendClientMessage(playerid, -1, "Вы уже купили удочку!");
	                fishing_rod_state[playerid] = 1;
	                SendClientMessage(playerid, -1, "Удочка куплена!");
	                GameTextForPlayer(playerid, "~r~-50$", 1200, 1);
	                return GivePlayerMoney(playerid, -50);
	            }
	            case 1:
	            {
	                if(GetPlayerMoney(playerid) < 35)
	                    return SendClientMessage(playerid, -1, "Недостаточно денег.");
	                if(fishing_bait[playerid])
	                    return SendClientMessage(playerid, -1, "Вы уже купили приманку!");
	                fishing_bait[playerid] = 1;
	                SendClientMessage(playerid, -1, "Приманка куплена!");
	                GameTextForPlayer(playerid, "~r~-35$", 1200, 1);
	                return GivePlayerMoney(playerid, -35);
	            }
	            case 2:
	            {
	                if(GetPlayerMoney(playerid) < 15)
	                    return SendClientMessage(playerid, -1, "Недостаточно денег.");
	                if(fishing_line[playerid])
	                    return SendClientMessage(playerid, -1, "Вы уже купили леску!");
	                fishing_line[playerid] = 1;
	                SendClientMessage(playerid, -1, "Леска куплена!");
	                GameTextForPlayer(playerid, "~r~-15$", 1200, 1);
	                return GivePlayerMoney(playerid, -15);
	            }
	            case 3:
	            {
	                if(GetPlayerMoney(playerid) < 100)
	                    return SendClientMessage(playerid, -1, "Недостаточно денег.");
	                if(fishing_line[playerid])
	                    return SendClientMessage(playerid, -1, "Вы уже купили леску!");
	                if(fishing_bait[playerid])
	                    return SendClientMessage(playerid, -1, "Вы уже купили приманку!");
	                if(fishing_rod_state[playerid] != 0)
	                    return SendClientMessage(playerid, -1, "Вы уже купили удочку, приманку и леску!");
	                fishing_line[playerid] = 1;
	                fishing_bait[playerid] = 1;
	                fishing_rod_state[playerid] = 1;
	                GameTextForPlayer(playerid, "~r~-100$", 1200, 1);
	                GivePlayerMoney(playerid, -100);
	                return SendClientMessage(playerid, -1, "{00FF00}x{FFFFFF} Удочка, приманка и леска куплены!");
	            }
	        }
	    }
		case PORCH_MENU_DIALOGID+5:
		{
			if(!response) return 1;
			new h_days,
			 	pflat = GetPlayerPorchHouse(playerid),
			 	string[144];
			if(sscanf(inputtext, "d", h_days) || h_days < 1)
			{
				format(string, sizeof string, "{FFFFFFF}Оплаченных дней: %d/30\nЕжедневная плата: %d\n\nНа сколько дней вы хотите оплатить квартиру?", PorchHouseInfo[pflat][hDays], PORCH_FLAT_COST);
				return ShowPlayerDialog(playerid, PORCH_MENU_DIALOGID+5, DIALOG_STYLE_INPUT, "{00D11A}Оплата проживания", string, "Оплатить", "Отмена");
			}
			if(PI[playerid][pCash] < h_days* PORCH_FLAT_COST) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
			if(h_days + PorchHouseInfo[pflat][hDays] > 30) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете оплатить квартиру больше, чем на 30 суток.");
			PI[playerid][pCash] -= h_days* PORCH_FLAT_COST;
			PorchHouseInfo[pflat][hDays] += h_days;
			mysql_format(dbHandle, string, sizeof string, "UPDATE "T_PORCH_HOUSE" SET `hDays` = '%d' WHERE `id` = '%d'", PorchHouseInfo[pflat][hDays], pflat);
			mysql_tquery(dbHandle, string, "", "");
			MysqlUpdatePlayerInt(playerid, "cash", PI[playerid][pCash]);
			format(string, sizeof string, "Вы успешно оплатили квартиру на %d дн. Оплачено: %d дн.", h_days, PorchHouseInfo[pflat][hDays]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			return 1;
		}
		case 8420:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					   if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 2)) RemovePlayerAttachedObject(objectplayerid, 2);
					   SetPlayerAttachedObject(objectplayerid,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
					   return 1;
					}
					case 1:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
						SetPlayerAttachedObject(objectplayerid,5, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
					case 2:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
					case 3:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
						SetPlayerAttachedObject(objectplayerid,5, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
						return 1;
					}
					case 4:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
					case 5:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
					case 6:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
					case 7:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
					case 8:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
					case 9:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
						return 1;
					}
					case 10:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
					case 11:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 1) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 4))
						{
							RemovePlayerAttachedObject(objectplayerid, 0);
							RemovePlayerAttachedObject(objectplayerid, 1);
							RemovePlayerAttachedObject(objectplayerid, 4);
						}
						SetPlayerAttachedObject(objectplayerid,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(objectplayerid,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(objectplayerid,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
					case 12:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
						SetPlayerAttachedObject(objectplayerid,5, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

						return 1;
					}
					case 13:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
						SetPlayerAttachedObject(objectplayerid,5, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						return 1;
					}
					case 14:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
						SetPlayerAttachedObject(objectplayerid,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
						return 1;
					}
					case 15:
					{

						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
						SetPlayerAttachedObject(objectplayerid,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);

						return 1;
					}
					case 16:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
						return 1;
					}
					case 17:
					{
						RemovePlayerAttachedObject(objectplayerid, 0);
						RemovePlayerAttachedObject(objectplayerid, 1);
						RemovePlayerAttachedObject(objectplayerid, 2);
						RemovePlayerAttachedObject(objectplayerid, 3);
						RemovePlayerAttachedObject(objectplayerid, 4);
						RemovePlayerAttachedObject(objectplayerid, 5);
						RemovePlayerAttachedObject(objectplayerid, 6);
						RemovePlayerAttachedObject(objectplayerid, 7);
						RemovePlayerAttachedObject(objectplayerid, 8);
						RemovePlayerAttachedObject(objectplayerid, 9);
						return 1;
					}
				}
			}
		}
		case 666661:
		{
        if(!response) return 1;
		}
		case D_GUNJOB:
        {
            if(!response) return 1;
            SetPVarInt(playerid, "GSkin",GetPlayerSkin(playerid));
            new gskin = random(2);
            if(gskin == 0) SetPlayerSkin(playerid, 258);
            if(gskin == 1) SetPlayerSkin(playerid, 259);
           	SendClientMessage(playerid,COLOR_LIME,"Вы начали работу сборщика оружия. Следуйте к столу, чтобы взять ящик с металлом.");
           	PlayerTextDrawShow(playerid, StatusWork[playerid][0]);
           	PlayerTextDrawShow(playerid, StatusWork[playerid][1]);
           	PlayerTextDrawShow(playerid, StatusWork[playerid][2]);
           	PlayerTextDrawShow(playerid, StatusWork[playerid][3]);
           	PlayerTextDrawShow(playerid, StatusWork[playerid][4]);
		    PlayerTextDrawSetString(playerid, StatusWork[playerid][4], "ПРИНЕСЕНО: 0 KG");
            SetPVarInt(playerid,"Gunjob",1);
            SetPVarInt(playerid,"Gjob",1);
            new mcheck = random(7);//координаты ящиков с металлом
	        if(mcheck == 0) SetPlayerCheckpoint(playerid,143.7591,1841.5465,-18.3792-1,1.5);
		    if(mcheck == 1) SetPlayerCheckpoint(playerid,149.8506,1841.3478,-18.3790-1,1.5);
		    if(mcheck == 2) SetPlayerCheckpoint(playerid,155.8068,1841.4806,-18.3792-1,1.5);
		    if(mcheck == 3) SetPlayerCheckpoint(playerid,161.8487,1841.0291,-18.3788-1,1.5);
            if(mcheck == 4) SetPlayerCheckpoint(playerid,167.8412,1841.2073,-18.3893-1,1.5);
		    if(mcheck == 5) SetPlayerCheckpoint(playerid,173.7056,1841.4631,-18.3896-1,1.5);
		    if(mcheck == 6) SetPlayerCheckpoint(playerid,179.3695,1841.7573,-18.3900-1,1.5);
            return 1;
        }
        case D_GUNCJOB:
        {
            if(!response) return 1;
            new string[128];
            SetPlayerSkin(playerid, GetPVarInt(playerid, "GSkin"));
            format(string, 50,"Вы закончили работу. Заработано: %i  Рублей.",GetPVarInt(playerid, "GUN")*GCASH);
            SendClientMessage(playerid,COLOR_LIME,string);
            PI[playerid][pWorkSalary] = 0;
            GiveMoney(playerid,GetPVarInt(playerid, "GUN")*GCASH);//GivePlayerMoney замените на свою систему выдачи денег.
        	RemovePlayerAttachedObject(playerid, 3);
        	PlayerTextDrawHide(playerid, StatusWork[playerid][0]);
        	PlayerTextDrawHide(playerid, StatusWork[playerid][1]);
        	PlayerTextDrawHide(playerid, StatusWork[playerid][2]);
        	PlayerTextDrawHide(playerid, StatusWork[playerid][3]);
        	PlayerTextDrawHide(playerid, StatusWork[playerid][4]);
            DeletePVar(playerid, "Gunjob");
            DeletePVar(playerid, "GUN");
            DeletePVar(playerid, "Gjob");
            DeletePVar(playerid, "GSkin");
            DisablePlayerCheckpoint(playerid);
            return 1;
        }//работа почты
        case 99999:
   	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {

	            }
	            case 1:
	            {

	            }
	            case 2:
	            {

	            }
	            case 3:
	            {

	            }
	        }
	    }
		case 30000:
                {
	                if(!response) return true;// Если нажал отмена
	                SendClientMessage(playerid,0xFFFFFFAA,"Вы начали работу грузчика");
	                SendClientMessage(playerid,COLOR_YELLOW,"Направляйтесь к красному чекпоинту!");
	                SendClientMessage(playerid,COLOR_YELLOW,"После того, как закончите работу, встаньте на синий пикап одежды.");
	                SendClientMessage(playerid,COLOR_YELLOW,"Если Вы уйдёте далеко от места работы, то Ваша зарплата анулируется.");
	                SetPVarInt(playerid,"PSkin",GetPlayerSkin(playerid));// Сохраним скин игрока
	                SetPlayerSkin(playerid,254);// Установим игроку скин
	                SetPVarInt(playerid,"InJob",1);// Устанавливаем игроку работу.
	                SetPVarInt(playerid,"Job",1);// Устанавливаем момент работы, 1 - идём брать вещи. 2 - несём вещи.
	                SetPlayerCheckpoint(playerid, 2350.9539,-258.6003,2.7890,1.5);// Создаём один из чекпоинтов
	                STimer[playerid] = SetTimerEx("UpdateRabotaGruz", 100, true, "i", playerid);
	                ShowRabotaCruz(playerid);
                }
                case 30001:
                {
	                if(!response) return true;
	                {
		                new str[128];
		                SendClientMessage(playerid, COLOR_DARKORANGE, "Рабочий день завершён!");
		          		if(doubling_donate)
			        	{
			                format(str,sizeof(str),"Получено за работу: {00FF00}%d рублей",GetPVarInt(playerid,"JobY")*JOB_CASH*2);
			                SendClientMessage(playerid,0xFFFFFFAA,str);// Выводим текст
			                format(str,sizeof(str),"Ящиков перенесено: {7efd7d}%d",GetPVarInt(playerid,"JobY"));
			                SendClientMessage(playerid,0xFFFFFFAA,str);// Выводим текст
			                DisablePlayerCheckpoint(playerid);// Удаляем чекпоинт
			                ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);// Обнуляем анимацию
			                RemovePlayerAttachedObject(playerid,1);// Удаляем объект из рук
			                GiveMoney(playerid,GetPVarInt(playerid,"JobY")*JOB_CASH*2);// Выдаём деньги
						}
						else
						{
			                format(str,sizeof(str),"Получено за работу: {00FF00}%d рублей",GetPVarInt(playerid,"JobY")*JOB_CASH);
			                SendClientMessage(playerid,0xFFFFFFAA,str);// Выводим текст
			                format(str,sizeof(str),"Ящиков перенесено: {7efd7d}%d",GetPVarInt(playerid,"JobY"));
			                SendClientMessage(playerid,0xFFFFFFAA,str);// Выводим текст
			                DisablePlayerCheckpoint(playerid);// Удаляем чекпоинт
			                ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);// Обнуляем анимацию
			                RemovePlayerAttachedObject(playerid,1);// Удаляем объект из рук
			                GiveMoney(playerid,GetPVarInt(playerid,"JobY")*JOB_CASH);// Выдаём деньги
						}
		                SetPlayerSkin(playerid,GetPVarInt(playerid,"PSkin"));
		                DeletePVar(playerid,"Job");// Удаляем PVar с моментом работы
		                DeletePVar(playerid,"InJob");// Удаляем PVar с работой
		                DeletePVar(playerid,"JobY");// Удаляем PVar с колличеством вещей
		                DeletePVar(playerid,"PSkin");// Удаляем PVar с одеждой
		                HideRabotaCruz(playerid);
	                }
                }
				case 9995:// Если не на работе, то показываем чтоб устроиться
		        {
					if(response)
					{
						SetPVarInt(playerid, "OldLessSkin",GetPlayerSkin(playerid));
			   			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);// забрали кирку
						UseWork[playerid] = 1;
						SetPlayerSkin(playerid,16);
						SetPlayerAttachedObject(playerid, 1, 18634, 6, 0.075000,0.002999,0.154000, 98.399978,-69.600013,1.100000);
						SendClientMessage(playerid, COLOR_BLUE, "Вы начали работу шахтёра!");
						SendClientMessage(playerid, COLOR_YELLOW, "Местонахождение руды отмечено на карте красным чекпоинтом.");
						SendClientMessage(playerid, COLOR_YELLOW, "Добытое сырьё относите в кузницу.");
						SendClientMessage(playerid, COLOR_YELLOW, "Если Вы уйдёте далеко от места работы, то Ваша зарплата анулируется.");
						new mcheckShahta = random(3);//Кол-во чекпоинтов
						{
							if(mcheckShahta == 0) SetPlayerCheckpoint(playerid, 2316.0361,1649.5638,-37.7585-1,3.0);
							if(mcheckShahta == 1) SetPlayerCheckpoint(playerid, 2324.9434,1660.3811,-37.7068-1,3.0);
							if(mcheckShahta == 2) SetPlayerCheckpoint(playerid, 2331.0259,1654.2983,-37.6525-1,3.0);
						}
						ClearAnimations(playerid);
					}
					return 1;
				}
				case 9996:// Если на работе, то показваем, что желаете ли закончить рабочий день
				{
			 		if(response)
					{
						new string[100];
						new money = kg[playerid]*3;
						UseWork[playerid] = 0;// Игрок не шахтер
					  	SetPlayerSkin(playerid, GetPVarInt(playerid, "OldLessSkin"));
					   	DisablePlayerCheckpoint(playerid);// Убираем чп.
			  			format(string, sizeof(string), "Рабочий день завершён. Вы добыли: %d кг руды",kg[playerid]);
						SendClientMessage(playerid, COLOR_BLUE, string);
					   	format(string, sizeof(string), "Заработано %d рублей.",kg[playerid]*3,kg[playerid]);
			  			SendClientMessage(playerid, COLOR_BLUE, string);
				   	    format(string, sizeof(string), "~g~+%i RUB",kg[playerid]*3,kg[playerid]);
						GameTextForPlayer(playerid, string, 5000, 1);
					   	TransferMoney(-1,playerid,money);
					   	kg[playerid] = 0;
      		            RemovePlayerAttachedObject(playerid,1);
					   	RemovePlayerAttachedObject(playerid,2);// забрали тачку
					   	RemovePlayerAttachedObject(playerid,3);// забрали тачку
					}
					return 1;
		}
	    case 3793:
	    {
	        if(!response) return 1;
	        ShowPlayerDialog(playerid, 3794, DIALOG_STYLE_LIST, "{7efd7d}Помощь по серверу", "1. Общение\n2. Список игроков\n3. Транспорт\n4. Общее\n5. Работа\n6. Оружие и убийство", "Далее", "Отмена");
	    	return 1;
	    }
	    case 3794:
	    {
	        if(!response) return 1;
	        new string[1000];
	        switch(listitem)
	        {
	            case 0:
	            {
	                string = "\0";
	                strcat(string, "\tОбщение\n\n");
	                strcat(string, "Вы можете общаться с другими игроками через чат в левом верхнем углу.\n");
	                strcat(string, "Чтобы напечатать сообщение, нажмите клавишу \"F6\" или \"T\" (на латинице).\n");
	                strcat(string, "Так же с помощью чата используются все команды сервера, к примеру \"/menu\".\n\n");
	                strcat(string, "Используйте \"/menu\" для просмотра персонального меню.\n");
	                strcat(string, "В диалоговом окне Вы сможете найти всё необходимое.\n");
	                strcat(string, "Более подробное описание Вы найдёте на нашем сайте "SERVER_WEBSITE"\n");
	                strcat(string, "Так же вступите в группу сервера, в дальнейшем Вам это пригодится "SERVER_FORUM"");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{7efd7d}Общение", string, "Назад", "Закрыть");
	            }
	            case 1:
	            {
	                string = "\0";
	                strcat(string, "\tСписок игроков\n\n");
	                strcat(string, "Данный список можно посмотреть, нажав клавишу \"TAB\".\n");
	                strcat(string, "Там вы увидите:\n\n");
	                strcat(string, "\"ID\" игрока (используется в командах)\n");
	                strcat(string, "\"Ник\" (Role Play имя игрока)\n");
	                strcat(string, "\"Уровень\" графа Score (количество лет в штате)\n");
	                strcat(string, "\"Пинг\" время отклика между Вами и сервером (в милисекундах)\n\n");
	                strcat(string, "Для просмотра списка полностью, используйте прокрутку справа.\n");
	                strcat(string, "Вы в этой табличке всегда отображаетесь первым, независимо от ID.");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{7efd7d}Список игроков", string, "Назад", "Закрыть");
	            }
	            case 2:
	            {
	                string = "\0";
	                strcat(string, "\tТранспорт\n\n");
	                strcat(string, "Я надеюсь Вы умеете управлять транспортным средством, но даже если нет,\n");
	                strcat(string, "наша Автошкола и Авиашкола научат Вас.\n\n");
	                strcat(string, "В Автошколу и Авиашколу придётся идти в любом случае, поскольку езда без прав не\n");
	                strcat(string, "безопасна, а полёты уж темболее, ну и думаю Вы не хотите платить штрафы.\n");
	                strcat(string, "Ну а пока можете воспользоваться велосипедом или общественным транспортом.\n");
	                strcat(string, "Для того, чтобы сесть на пассажирское место, используйте клавишу \"G\".\n");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{7efd7d}Транспорт", string, "Назад", "Закрыть");
				}
				case 3:
				{
				    string = "\0";
	                strcat(string, "\tОбщее\n\n");
	                strcat(string, "На нашем сервере можно зарабатывать деньги, все работы Вы можете найти в GPS-навигаторе.\n");
	                strcat(string, "На заработанные деньги возможно приобретать недвижимость, транспорт и прочие мелочи.\n\n");
	                strcat(string, "Можно работать полицейским защищая гражданских или быть на противоположной стороне закона,\n");
	                strcat(string, "ведя войну за контроль над кварталами или бизнесами. И это только малая часть доступного!");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{7efd7d}Общее", string, "Назад", "Закрыть");
				}
				case 4:
				{
				    string = "\0";
	                strcat(string, "\tРабота\n\n");
	                strcat(string, "Многие профессии доступны каждому, но есть ограничения по прожитию в Штате (уровню).\n\n");
	                strcat(string, "Есть 4 работы для новичков, то место где Вы получите свои первые деньги:\n");
	                strcat(string, "Работа на лесопилке. Суть работы: пилить деревья и относить на склад.\n");
	                strcat(string, "Работа на шахте. Суть работы: добывать уголь и относить на склад. \n");
	                strcat(string, "Работа на оружейном заводе. Суть работы: собирать детали для оружия.\n");
	                strcat(string, "Любую из работ можно найти в GPS-навигаторе (/gps).\n\n");
	                strcat(string, "Остальные работы (с ограничениями по уровню):\n");
	                strcat(string, "Работа водителя автобуса. Суть работы: ездить по разным заданным маршрутам.\n");
                 strcat(string, "Работа таксиста. Суть работы: развозить пассажиров по конкретным местам.\n");
	                strcat(string, "Работа механика. Суть работы: ремонтировать транспортные средства.\n");
	                strcat(string, "Работа дальнобойщика. Суть работы: перевозить дерево и уголь на оружейный завод.\n");
	                strcat(string, "На каждую из работ можно устроиться в любой мэрии штата.");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{7efd7d}Работа", string, "Назад", "Закрыть");
				}
				case 5:
				{
				    string = "\0";
	                strcat(string, "\tОружие и убийство\n\n");
	                strcat(string, "Для ношения оружия необходима лицензия, без неё Вы не сможете приобрести оружие\n");
	                strcat(string, "в магазине. Но, оружие можно достать и другими способами.\n\n");
	                strcat(string, "За убийство человека Вы будете объявлены в розыск, как опасный преступник,\n");
	                strcat(string, "а при аресте Вы лишитесь свободы и сядете в тюрьму!\n");
	                strcat(string, "Так же почитайте Правила сервера в нашой группе "SERVER_FORUM"");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{7efd7d}Оружие и убийство", string, "Назад", "Закрыть");
				}
	        }
	    }
		case 3795:
		{
		    if(!response) return 1;
			else ShowPlayerDialog(playerid, 3794, DIALOG_STYLE_LIST, "{7efd7d}Помощь по серверу", "1. Общение\n2. Список игроков\n3. Транспорт\n4. Общее\n5. Работа\n6. Оружие и убийство", "Далее", "Отмена");
		}
		case D_JOINCARS+4:
		{
			if(!response) return 1;
			if(GetPlayerHouse(playerid) || GetPlayerPorchHouse(playerid)) BuyCar(playerid);
		}
		case D_CTO:
		{
			if(response)
			{
				if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится за рулем своего авто!");
				ShowSTODialog(playerid);
				TogglePlayerControllable(playerid, false);
				SetPVarInt(playerid, "UsedCTO", 1);
			}
		}
		case 672:
		{
			if(!response) return 1;
			new money = PI[playerid][pWorkSalary]*AMOUNT_OF_SALARY_MINE;
    		SetPlayerSkin(playerid, GetPVarInt(playerid, "OldMinerSkin"));
            SendMes(playerid, COLOR_BLUE, "Вы закончили работу, Ваш заработок: %i  Рублей",money);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
			PlayerTextDrawHide(playerid, StatusWork[playerid][0]);
			PlayerTextDrawHide(playerid, StatusWork[playerid][1]);
			PlayerTextDrawHide(playerid, StatusWork[playerid][2]);
			PlayerTextDrawHide(playerid, StatusWork[playerid][3]);
			PlayerTextDrawHide(playerid, StatusWork[playerid][4]);
			DeletePVar(playerid, "OldMinerSkin");
			UseWork[playerid] = 0;
			DeletePVar(playerid, "MinerCount");
			DeletePVar(playerid, "MinerKG_One");
			new str[32];
			format(str, sizeof(str), "~g~+%d RUB", money);
			GameTextForPlayer(playerid,str,3000,1);
			PI[playerid][pWorkSalary] = 0;
			TransferMoney(-1,playerid,money);
			return 1;
		}
		case 673:
		{
			if(!response) return 1;
  	        SetPlayerSkin(playerid,42);
			UseWork[playerid] = 3;
			SetPVarInt(playerid,"varioty",40);
			SendClientMessage(playerid,COLOR_YELLOW,"Вы начали рабочий день на заводе! {ffffff}Возьмите металл со склада.");
			PlayerTextDrawShow(playerid, StatusWork[playerid][0]);
			PlayerTextDrawShow(playerid, StatusWork[playerid][1]);
			PlayerTextDrawShow(playerid, StatusWork[playerid][2]);
			PlayerTextDrawShow(playerid, StatusWork[playerid][3]);
			PlayerTextDrawShow(playerid, StatusWork[playerid][4]);
			PlayerTextDrawSetString(playerid, StatusWork[playerid][4], "ПРИНЕСЕНО: 0 KG");
			return 1;
		}
		case 674:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid,"pgunobject"))
			{
				new objectid = GetPVarInt(playerid,"pgunobject");
				if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
				DeletePVar(playerid,"pgunobject");
			}
			new money = PI[playerid][pWorkSalary]*AMOUNT_OF_SALARY_PLANT;
			DeletePVar(playerid,"workamountgun");
			RemovePlayerAttachedObject(playerid,0);
			UseWork[playerid] = 0;
			if(PI[playerid][pMember]) SetPlayerSkin(playerid,PI[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid,PI[playerid][pModel]);
			SendMes(playerid, COLOR_YELLOW, "Вы закончили работу. {ffffff}Ваш заработок: %d  Рублей", money);
			PlayerTextDrawHide(playerid, StatusWork[playerid][0]);
			PlayerTextDrawHide(playerid, StatusWork[playerid][1]);
			PlayerTextDrawHide(playerid, StatusWork[playerid][2]);
			PlayerTextDrawHide(playerid, StatusWork[playerid][3]);
			PlayerTextDrawHide(playerid, StatusWork[playerid][4]);
			new str[32];
			format(str, sizeof(str), "~g~+%d RUB", money);
			GameTextForPlayer(playerid,str,3000,1);
			TransferMoney(-1, playerid, money);
			PI[playerid][pWorkSalary] = 0;
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"varioty");
			return 1;
		}
		case D_FIXCAR:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0: cmd_lock(playerid);
		        case 1:
		        {
		            if(PI[playerid][pCash] < 5000) return SendClientMessage(playerid,COLOR_RED,"Ошибка | {FFFFFF}У Вас не достаточно средств");
					new full = 0;
					for(new i; i < MAX_PLAYERS; i++)
					{
						if(!IsPlayerConnected(i)) continue;
						if(IsPlayerInVehicle(i, GetPlayerCar(playerid))) full++; break;
					}
					if(full != 0) return SendClientMessage(playerid, COLOR_GREY, "В транспорте находятся более 1 игрока!");
					DestroyVehicleOP(GetPlayerCar(playerid));
					LoadMyCar(playerid);
					GivePlayerMoney(playerid,-5000);
		        }
		        case 2: cmd_sellcar(playerid);
		    }
		}
		case D_GUNMERIA:
		{
      		if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
		        {
					if(GetPVarInt(playerid,"pistol") > gettime()) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Пистолет можно брать всеголишь 1 раз в 3 минуты");
					SetPVarInt(playerid,"pistol",gettime()+180);
					GivePlayerWeapon(playerid,24,100);
					SendClientMessage(playerid,0x7efd7dFF,"Информация | {ffffff}Вы успешно взяли {ffcc00}Пистолет");
		        }
		        case 1:
		        {
		            if(GetPVarInt(playerid,"avtomat") > gettime()) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Автомат можно брать всеголишь 1 раз в 3 минуты");
		            SetPVarInt(playerid, "avtomat", gettime()+180);
		            GivePlayerWeapon(playerid, 29, 100);
		            SendClientMessage(playerid,0x7efd7dFF,"Информация | {ffffff}Вы успешно взяли {ffcc00}Автомат");
		        }
		        case 2:
		        {
		            if(GetPVarInt(playerid,"dubinka") > gettime()) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Дубинку можно брать всеголишь 1 раз в 3 минуты");
		            SetPVarInt(playerid, "dubinka", gettime()+180);
		            GivePlayerWeapon(playerid, 3, 1);
		            SendClientMessage(playerid,0x7efd7dFF,"Информация | {ffffff}Вы успешно взяли {ffcc00}Дубинку");
		        }
		    }
		}
		case D_REPUTATION:
		{
			if(response)
			{
  				new id = GetPVarInt(playerid,"id");
				AdminInfo[id][admReputation]++;
				SendClientMessage(playerid,0x7efd7dFF,"Информация | {FFFFFF}Вы успешно поставили Администрацию оценку {6EF83C}'Хорошо'");
				new str[256];
				format(str,sizeof(str),"Игрок %s поставил положительную оценку за ответ Администратору %s",GetName(playerid),GetName(id));
				SendAdminMessage(COLOR_GREEN,str);
			}
			else
			{
			    new id = GetPVarInt(playerid,"id");
				AdminInfo[id][admReputation]--;
				SendClientMessage(playerid,0x7efd7dFF,"Информация | {FFFFFF}Вы успешно поставили Администрацию оценку {F81414}'Плохо'");
				new str[256];
				format(str,sizeof(str),"Игрок %s поставил отрицательную оценку за ответ Администратору %s",GetName(playerid),GetName(id));
				SendAdminMessage(COLOR_RED,str);
			}
		}
		case D_BUYRAK:
		{
			if(response)
			{
			    GiveMoney(playerid, PI[playerid][pRaki] * 300);
  				PI[playerid][pRaki] = 0;
  				SendClientMessage(playerid,0x7efd7dFF,"Василий: Вот спасибо тебе, если будут ещё то приходи тоже куплю.");
			}
			else
			{
				SendClientMessage(playerid,0x7efd7dFF,"Василий: Ну не хочешь как хочешь.");
			}
		}
		case D_BUYSNASTI:
		{
			if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(PI[playerid][pYdochka] != 0) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}У вас уже есть костюм раколова.");
					if(PI[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}У вас не достаточно денег.");
                    GiveMoney(playerid, -10000);
                    PI[playerid][pYdochka] = 1;
                    SendClientMessage(playerid, COLOR_GREEN, "Успешно | {ffffff}Вы купили костюм рыколова");
                    SendClientMessage(playerid, COLOR_GREEN, "Чтобы одеть костюм используйте /rakolov");
		        }
		    }
		}
		case D_PJ:
		{
		    new money = strval(inputtext);
			if(!response) return true;
			if(!strval(inputtext)) return ShowPlayerDialog(playerid,D_PJ,DIALOG_STYLE_INPUT,"{7efd7d}Пожертвование","\
			{ffffff}Вы желаете пожертвовать деньги в регион?\n\n\
			Когда Вы пожертвуете деньги в регион, то Вас сразу опубликуют в новостях\n\
			Для того чтобы пожертвовать деньги для этого укажите сумму строчкой ниже\n\n\
			{ffcc00}Ваша сумма должна составлять от {ffffff}100.000 {ffcc00}до {ffffff}2.000.000 рублей","Далее","Закрыть");
			if(!isNumeric(inputtext)) return ShowPlayerDialog(playerid,D_PJ,DIALOG_STYLE_INPUT,"{7efd7d}Пожертвование","\
			{ffffff}Вы желаете пожертвовать деньги в регион?\n\n\
			Когда Вы пожертвуете деньги в регион, то Вас сразу опубликуют в новостях\n\
			Для того чтобы пожертвовать деньги для этого укажите сумму строчкой ниже\n\n\
			{ffcc00}Ваша сумма должна составлять от {ffffff}100.000 {ffcc00}до {ffffff}2.000.000 рублей","Далее","Закрыть");
			if(PI[playerid][pCash] < money) return SendClientMessage(playerid,COLOR_RED,"Ошибка | {ffffff}У вас не достаточно средств!");
			if(strval(inputtext) < 100000 || strval(inputtext) > 2000000) return SendClientMessage(playerid, COLOR_GREY, "Сумма должна быть от 100.000 до 2.000.000 рублей");
			GiveMoney(playerid,-money);
			SendClientMessage(playerid,0x7efd7dFF,"Информация | {ffffff}Вы успешно пожертвовали деньги в регион, в ближайшее время вас опубликуют в новостях");
			new str[144];
			format(str,sizeof(str),"{7efd7d}[Новости]: {ffffff}Игрок {7efd7d}%s {ffffff}пожертвовал в регион сумму: {7efd7d}%d рублей",PI[playerid][pName], money);
			SendClientMessageToAll(-1,str);
		}
		case D_GPS:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "{7efd7d}Общественные места", "{7efd7d}1. {ffffff}Поселковый совет\n{7efd7d}2. {ffffff}Автошкола\n{7efd7d}3. {ffffff}Получение номеров\n{7efd7d}4. {ffffff}Пляж\n{7efd7d}5. {ffffff}Автосалон\n{7efd7d}6. {ffffff}Банк", "Далее", "Назад");
                case 1:	ShowPlayerDialog(playerid, 10002, DIALOG_STYLE_LIST, "{7efd7d}Подработки", "{7efd7d}1. {ffffff}Грузчики\t(д.Гарель)", "Далее", "Назад");
                case 2: ShowPlayerDialog(playerid, 10003, DIALOG_STYLE_LIST, "{7efd7d}Государственные организации", "{7efd7d}1. {ffffff}Поселковый совет\n{7efd7d}2. {ffffff}Полиция\n{7efd7d}3. {ffffff}ГИБДД\n{7efd7d}4. {ffffff}СМП-Б\n{7efd7d}5. {ffffff}Армия\n{7efd7d}6. {ffffff}ТРК ''Релакс''", "Далее", "Назад");
				case 3: ShowPlayerDialog(playerid, 10004, DIALOG_STYLE_LIST, "{7efd7d}Нелегальные организации", "{7efd7d}1. {ffffff}ОПГ 'Ореховское'\n{7efd7d}2. {ffffff}ОПГ 'Южное'", "Далее", "Назад");
				case 4: ShowPlayerDialog(playerid, 10005, DIALOG_STYLE_LIST, "{7efd7d}Работы", "{7efd7d}1. {ffffff}Водитель Автобуса\n{7efd7d}2. {ffffff}Механик\n{7efd7d}3. {ffffff}Дальнобойщик", "Далее", "Назад");
				case 5: ShowPlayerDialog(playerid, 10006, DIALOG_STYLE_LIST, "{7efd7d}Ближайшие Места", "{7efd7d}1. {ffffff}АЗС\n{7efd7d}2. {ffffff}24/7\n{7efd7d}3. {ffffff}Банкомат", "Далее", "Назад");
			}
			return 1;
		}
		case 10003:
		{
			if(!response) return cmd_gps(playerid, inputtext);
			SetPVarInt(playerid, "GPSWORK", 1);
			switch(listitem)
			{
			    case 0: SetPlayerMapIcon(playerid, 99, 1824.1860,2096.0564,15.8523, 19, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
				case 1: SetPlayerMapIcon(playerid, 99, 1916.6171,2183.3752,15.7060, 16, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 2: SetPlayerMapIcon(playerid, 99, 2581.4966,-2418.8635,21.9806, 16, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 3: SetPlayerMapIcon(playerid, 99, 2128.9861,1857.8135,12.0359, 22, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 4: SetPlayerMapIcon(playerid, 99, 1896.2050,1722.4187,15.7987, 62, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 5: SetPlayerMapIcon(playerid, 99, 1794.6389,2048.4290,15.8755, 44, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");

			}
			return 1;
		}
		case 10005:
		{
			if(!response) return cmd_gps(playerid, inputtext);
			SetPVarInt(playerid, "GPSWORK", 1);
			switch(listitem)
			{
			    case 0: SetPlayerMapIcon(playerid, 99, 1919.4816,2093.0417,15.7509, 11, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
				case 1: SetPlayerMapIcon(playerid, 99, 2563.1926,-2042.6587,21.9934, 11, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 2: SetPlayerMapIcon(playerid, 99, 1770.9301,2262.4412,15.8181, 11, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
			}
			return 1;
		}
		case 10004:
		{
			if(!response) return cmd_gps(playerid, inputtext);
			SetPVarInt(playerid, "GPSWORK", 1);
			switch(listitem)
			{
			    case 0: SetPlayerMapIcon(playerid, 99, 2319.4858,1367.3041,11.5656, 59, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
				case 1: SetPlayerMapIcon(playerid, 99, 2405.2820,-1729.3180,21.8594, 58, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
			}
			return 1;
		}
		case 10001:
        {
 			if(!response) return cmd_gps(playerid, inputtext);
			SetPVarInt(playerid, "GPSWORK", 1);
			switch(listitem)
			{
			    case 0: SetPlayerMapIcon(playerid, 99, 1824.1860,2096.0564,15.8523, 19, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
				case 1: SetPlayerMapIcon(playerid, 99, 1906.0551,2227.6094,15.7215, 55, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 2: SetPlayerMapIcon(playerid, 99, 1916.6171,2183.3752,15.7060, 4, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 3: SetPlayerMapIcon(playerid, 99, 2675.8511,2049.4983,7.0511, 21, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 4: SetPlayerMapIcon(playerid, 99, 2008.0150,1551.1852,15.9405, 55, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
                case 5: SetPlayerMapIcon(playerid, 99, 1852.2402,2044.0300,15.8850, 19, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");

			}
			return 1;
		}
		case 10002:
		{
			if(!response) return cmd_gps(playerid, inputtext);
			SetPVarInt(playerid, "GPSWORK", 1);
			switch(listitem)
			{
			    case 0: SetPlayerMapIcon(playerid, 99, 2352.9629,-263.8544,2.7890, 11, 0, 1), SendClientMessage(playerid, VAGOS_COLOR, "Место отмечено у Вас на GPS");
			}
			return 1;
		}
		case 10006:
		{
			if(!response) return cmd_gps(playerid, inputtext);
			SetPVarInt(playerid, "GPSWORK", 1);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			    case 0:
			    {
				    new max_distance = 100000;
					new id_bizz = -1;
					new vehicleid = GetPlayerVehicleID(playerid);
				    for(new i = 1; i <= TOTALBIZZ; i++)
				    {
				        if(BizzInfo[i][bType] != 2) continue;
				        new here_distance =
							(!IsPlayerInAnyVehicle(playerid)) ?
							floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) :
							floatround(GetVehicleDistanceFromPoint(vehicleid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
				        if(here_distance < max_distance)
						{
							id_bizz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_bizz == -1) return 1;
					X = BizzInfo[id_bizz][bEntrx], Y = BizzInfo[id_bizz][bEntry], Z = BizzInfo[id_bizz][bEntrz];
					strcat(locname, BizzInfo[id_bizz][bName]);
					SetPlayerMapIcon(playerid, 99, X,Y,Z, 2, 0, 1);
			    }
				case 1:
				{
				    new max_distance = 100000;
					new id_bizz = -1;
					new vehicleid = GetPlayerVehicleID(playerid);
				    for(new i = 1; i <= TOTALBIZZ; i++)
				    {
				        if(BizzInfo[i][bType] != 1) continue;
				        new here_distance =
							(!IsPlayerInAnyVehicle(playerid)) ?
							floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) :
							floatround(GetVehicleDistanceFromPoint(vehicleid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
				        if(here_distance < max_distance)
						{
							id_bizz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_bizz == -1) return 1;
					X = BizzInfo[id_bizz][bEntrx], Y = BizzInfo[id_bizz][bEntry], Z = BizzInfo[id_bizz][bEntrz];
					strcat(locname, BizzInfo[id_bizz][bName]);
					SetPlayerMapIcon(playerid, 99, X,Y,Z, 56, 0, 1);
				}
                case 2:
                {
				    new max_distance = 100000;
					new id_atm = -1;
					new vehicleid = GetPlayerVehicleID(playerid);
				    for(new i = 1; i <= TOTALATM; i++)
				    {
				        new here_distance =
							(!IsPlayerInAnyVehicle(playerid)) ?
							floatround(GetPlayerDistanceFromPoint(playerid, ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ])) :
							floatround(GetVehicleDistanceFromPoint(vehicleid, ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ]));
				        if(here_distance < max_distance)
						{
							id_atm = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_atm == -1) return 1;
					X = ATMInfo[id_atm][aX], Y = ATMInfo[id_atm][aY], Z = ATMInfo[id_atm][aZ], locname = "Ближайший банкомат";
					SetPlayerMapIcon(playerid, 99, X,Y,Z, 52, 0, 1);
                }
			}
			return 1;
		}
		case D_CTO+1: // CTO
		{
			if(response)
			{
				new bizzid = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[bizzid][bTill];
				new string[350];
				switch(listitem)
				{
					case 0:
					{
						SendMes(playerid,COLOR_WHITE,"Стоимость перекраски: %d Рублей", till*5);
						ShowPlayerDialog(playerid, D_CTO+4, 1, "{7efd7d}Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую", "Перекрасить", "Назад");
					}
					case 1:
					{
						if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),CARMODTYPE_HYDRAULICS) != 1087)
						{
							format(string,128,"{FFFFFF}Стоимость установки: %d Рублей\nВы уверены, что хотите купить и поставить гидравлику?",till*100);
							ShowPlayerDialog(playerid,D_CTO+3,DSM,"{7efd7d}Установка гидравлики",string,"Да","Назад");
						}
						else
						{
							ShowPlayerDialog(playerid,D_CTO+3,DSM,"{7efd7d}Удаление гидравлики","{FFFFFF}Вы уверены, что хотите удалить гидравлику?","Да","Назад");
						}
					}
					case 2:
					{
						format(string,128,"1. Nitro x2\t\t[%d Рублей]\n2. Nitro x5\t\t[%d Рублей]\n3. Nitro x10\t\t[%d Рублей]",till*80,till*150,till*300);
						ShowPlayerDialog(playerid,D_CTO+5,DIALOG_STYLE_LIST,"{7efd7d}Закись азота",string,"Купить","Назад");
					}
					case 3:
					{
						format(string,350,"1. Shadow\t\t[%d Рублей]\n2. Mega\t\t\t[%d Рублей]\n3. Wires\t\t[%d Рублей]\n4. Classic\t\t[%d Рублей]\n5. Twist\t\t\t[%d Рублей]\n6. Cutter\t\t[%d Рублей]\n7. Grove\t\t[%d Рублей]\n8. Atomic\t\t[%d Рублей]\n9. Dollar\t\t[%d Рублей]\n10. Switch\t\t[%d Рублей]",till*60,till*79,till*53,till*73,till*93,till*80,till*42,till*100,till*200,till*300);
						ShowPlayerDialog(playerid,D_CTO+6,DIALOG_STYLE_LIST,"{7efd7d}Смена дисков",string,"Смотреть","Назад");
					}
					case 4:
					{
						{
							new i = GetPVarInt(playerid,"CTObizzid");
							{
								if(GetMoney(playerid) < till*100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
								TransferMoney(playerid, -1, till*100);
								if(BizzInfo[i][bProduct] > 0)
								{
									BizzInfo[i][bMoney] += till*100;
									BizzInfo[i][bProduct] -= 100;
									BizzPay[i] += till*100;
									MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
									MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
								}
							}
							RepairVehicle(GetPlayerVehicleID(playerid));
							ShowSTODialog(playerid);
						}
					}
				}
			}
			else
			{
				DeletePVar(playerid,"UsedCTO");
                SetPVarInt(playerid, "AntiBreik", 3);
				TogglePlayerControllable(playerid,true);
			}
		}
	case D_CTO+15:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1146, tune[1] = 1147;
				else if(GetVehicleModel(c) == 560) tune[0] = 1138, tune[1] = 1139;
				else if(GetVehicleModel(c) == 565) tune[0] = 1049, tune[1] = 1050;
				else if(GetVehicleModel(c) == 561) tune[0] = 1058, tune[1] = 1060;
				else if(GetVehicleModel(c) == 559) tune[0] = 1158, tune[1] = 1162;
				else if(GetVehicleModel(c) == 558) tune[0] = 1063, tune[1] = 1064;
				else return SendClientMessage(playerid, COLOR_GREY, "Данная деталь 'Спойлер' недоступна для Вашей модели"),ShowSTODialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+16:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1171, tune[1] = 1172;
				else if(GetVehicleModel(c) == 560) tune[0] = 1169, tune[1] = 1170;
				else if(GetVehicleModel(c) == 575) tune[0] = 1174, tune[1] = 1175;
				else if(GetVehicleModel(c) == 565) tune[0] = 1152, tune[1] = 1153;
				else if(GetVehicleModel(c) == 561) tune[0] = 1155, tune[1] = 1157;
				else if(GetVehicleModel(c) == 559) tune[0] = 1160, tune[1] = 1173;
				else if(GetVehicleModel(c) == 558) tune[0] = 1165, tune[1] = 1166;
				else if(GetVehicleModel(c) == 534) tune[0] = 1179, tune[1] = 1185;
				else if(GetVehicleModel(c) == 536) tune[0] = 1181, tune[1] = 1182;
				else if(GetVehicleModel(c) == 535) tune[0] = 1188, tune[1] = 1189;
				else if(GetVehicleModel(c) == 576) tune[0] = 1190, tune[1] = 1191;
				else return SendClientMessage(playerid, COLOR_GREY, "Данная деталь 'Передний бампер' недоступна для Вашей модели"),ShowSTODialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*25);
				ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+17:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1148, tune[1] = 1149;
				else if(GetVehicleModel(c) == 560) tune[0] = 1140, tune[1] = 1141;
				else if(GetVehicleModel(c) == 575) tune[0] = 1176, tune[1] = 1177;
				else if(GetVehicleModel(c) == 565) tune[0] = 1150, tune[1] = 1151;
				else if(GetVehicleModel(c) == 561) tune[0] = 1154, tune[1] = 1156;
				else if(GetVehicleModel(c) == 559) tune[0] = 1159, tune[1] = 1161;
				else if(GetVehicleModel(c) == 558) tune[0] = 1167, tune[1] = 1168;
				else if(GetVehicleModel(c) == 534) tune[0] = 1178, tune[1] = 1180;
				else if(GetVehicleModel(c) == 536) tune[0] = 1183, tune[1] = 1184;
				else if(GetVehicleModel(c) == 535) tune[0] = 1186, tune[1] = 1187;
				else if(GetVehicleModel(c) == 576) tune[0] = 1192, tune[1] = 1193;
				else return SendClientMessage(playerid, COLOR_GREY, "Данная деталь 'Задний бампер' недоступна для Вашей модели"),ShowSTODialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+18:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[4], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1041, tune[1] = 1036, tune[2] = 1039, tune[3] = 1040;
				else if(GetVehicleModel(c) == 560) tune[0] = 1031, tune[1] = 1026, tune[2] = 1030, tune[3] = 1027;
				else if(GetVehicleModel(c) == 575) { SendClientMessage(playerid, COLOR_GREY, "Невозможно прикрепить боковые юбки к данному транспорту!"); return ShowSTODialog(playerid); }
				else if(GetVehicleModel(c) == 565) tune[0] = 1048, tune[1] = 1047, tune[2] = 1039, tune[3] = 1040;
				else if(GetVehicleModel(c) == 561) tune[0] = 1057, tune[1] = 1056, tune[2] = 1063, tune[3] = 1062;
				else if(GetVehicleModel(c) == 559) tune[0] = 1070, tune[1] = 1069, tune[2] = 1072, tune[3] = 1071;
				else if(GetVehicleModel(c) == 558) tune[0] = 1095, tune[1] = 1090, tune[2] = 1093, tune[3] = 1194;
				else if(GetVehicleModel(c) == 534) tune[0] = 1106, tune[1] = 1101, tune[2] = 1124, tune[3] = 1122;
				else if(GetVehicleModel(c) == 536) tune[0] = 1108, tune[1] = 1107, tune[2] = 1108, tune[3] = 1107;
				else if(GetVehicleModel(c) == 535) tune[0] = 1119, tune[1] = 1121, tune[2] = 1121, tune[3] = 1120;
				else if(GetVehicleModel(c) == 576) tune[0] = 1134, tune[1] = 1137, tune[2] = 1134, tune[3] = 1137;
				else return SendClientMessage(playerid, COLOR_GREY, "Данная деталь 'Боковые Юбки' недоступна для Вашей модели"),ShowSTODialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				//AddVehicleComponent(c, tune[listitem+2]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ComponentCTO2", tune[listitem+2]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+19:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new tune[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tune[0] = 1035, tune[1] = 1038;
				else if(GetVehicleModel(c) == 560) tune[0] = 1032, tune[1] = 1033;
				else if(GetVehicleModel(c) == 575) { SendClientMessage(playerid, COLOR_GREY, "Невозможно прикрепить крышу к данному транспорту!"); return ShowSTODialog(playerid); }
				else if(GetVehicleModel(c) == 565) tune[0] = 1053, tune[1] = 1054;
				else if(GetVehicleModel(c) == 561) tune[0] = 1055, tune[1] = 1061;
				else if(GetVehicleModel(c) == 559) tune[0] = 1067, tune[1] = 1068;
				else if(GetVehicleModel(c) == 558) tune[0] = 1088, tune[1] = 1091;
				else if(GetVehicleModel(c) == 534) { SendClientMessage(playerid, COLOR_GREY, "Невозможно прикрепить крышу к данному транспорту!"); return ShowSTODialog(playerid); }
				else if(GetVehicleModel(c) == 536) tune[0] = 1103, tune[1] = 1128;
				else if(GetVehicleModel(c) == 535) tune[0] = 1130, tune[1] = 1131;
				else if(GetVehicleModel(c) == 576) { SendClientMessage(playerid, COLOR_GREY, "Невозможно прикрепить крышу к данному транспорту!"); return ShowSTODialog(playerid); }
				else
				{
					ShowSTODialog(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Данная деталь 'Крыша' недоступна для Вашей модели");
				}
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+3: // CTO
		{
			if(!response) return ShowSTODialog(playerid);
			new i = GetPVarInt(playerid,"CTObizzid");
			new till = BizzInfo[i][bTill];
			if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),CARMODTYPE_HYDRAULICS) != 1087)
			{
				if(GetMoney(playerid) < till*100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
				TransferMoney(playerid, -1, till*100);
				if(BizzInfo[i][bProduct] > 0)
				{
					BizzInfo[i][bMoney] += till*100;
					BizzInfo[i][bProduct] -= 100;
					BizzPay[i] += till*100;
					MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				}
				SendClientMessage(playerid,COLOR_LIME,"Вы поставили гидравлику!");
				AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
			}
			else
			{
				SendClientMessage(playerid,COLOR_DARKORANGE,"Вы удалили гидравлику!");
				RemoveVehicleComponent(GetPlayerVehicleID(playerid),1087);
			}
			SaveVehicleTuning(playerid);
			ShowSTODialog(playerid);
		}
	case D_CTO+4: // CTO цвета 1
		{
			if(!response) return ShowSTODialog(playerid);
			new color[2], c = PI[playerid][PlayerCarID];
			if(sscanf(inputtext, "p<,>ii",color[0], color[1])) return ShowPlayerDialog(playerid, D_CTO+4, 1, "Перекраска", "Введите основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
			if(color[0] < 0 || color[0] > 255)
			{
				ShowPlayerDialog(playerid, D_CTO+4, 1, "{7efd7d}Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 255!");
			}
			if(color[1] < 0 || color[1] > 255)
			{
				ShowPlayerDialog(playerid, D_CTO+4, 1, "{7efd7d}Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 255!");
			}
			new i = GetPVarInt(playerid,"CTObizzid");
			new till = BizzInfo[i][bTill];
			if(GetMoney(playerid) < till*5) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
			TransferMoney(playerid, -1, till*5);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += till*5;
				BizzInfo[i][bProduct] -= 5;
				BizzPay[i] += till*5;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			PI[playerid][cColor][0] = color[0];
			PI[playerid][cColor][1] = color[1];
			ChangeVehicleColor(c, color[0], color[1]);
			SendClientMessage(playerid,COLOR_LIME,"Вы успешно перекрасили свое авто");
			ShowSTODialog(playerid);
		}
	case D_CTO+5: // CTO
		{
			if(!response) return ShowSTODialog(playerid);
			new i = GetPVarInt(playerid,"CTObizzid");
			new till = BizzInfo[i][bTill];
			switch(listitem)
			{
			case 0:
				{
					if(GetMoney(playerid) < till*80) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
					TransferMoney(playerid, -1, till*80);
					if(BizzInfo[i][bProduct] > 0)
					{
						BizzInfo[i][bMoney] += till*80;
						BizzInfo[i][bProduct] -= 80;
						BizzPay[i] += till*80;
						MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
						MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					}
					SendMes(playerid,COLOR_LIME,"Вы поставили Nitro x2 за %d Рублей", till*80);
					AddVehicleComponent(GetPlayerVehicleID(playerid),1009);
					SaveVehicleTuning(playerid);
				}
			case 1:
				{
					if(GetMoney(playerid) < till*150) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
					TransferMoney(playerid, -1, till*150);
					if(BizzInfo[i][bProduct] > 0)
					{
						BizzInfo[i][bMoney] += till*150;
						BizzInfo[i][bProduct] -= 150;
						BizzPay[i] += till*150;
						MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
						MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					}
					SendMes(playerid,COLOR_LIME,"Вы поставили Nitro x5 за %d Рублей", till*150);
					AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
					SaveVehicleTuning(playerid);
				}
			case 2:
				{
					if(GetMoney(playerid) < till*300) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
					TransferMoney(playerid, -1, till*300);
					if(BizzInfo[i][bProduct] > 0)
					{
						BizzInfo[i][bMoney] += till*300;
						BizzInfo[i][bProduct] -= 300;
						BizzPay[i] += till*300;
						MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
						MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					}
					SendMes(playerid,COLOR_LIME,"Вы поставили Nitro x10 за %d Рублей", till*300);
					AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
					SaveVehicleTuning(playerid);
				}
			}
			ShowSTODialog(playerid);
		}
	case D_CTO+6: // CTO
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new string[128];
				switch(listitem)
				{
				case 0:
					{
						if(GetMoney(playerid) < till*60) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Shadow, их стоимость %d Рублей", till*60);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
						SetPVarInt(playerid,"PriceCTO",till*60);
						SetPVarInt(playerid,"ComponentCTO",1073);
						SetPVarInt(playerid,"ProductCTO",60);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*60);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 1:
					{
						if(GetMoney(playerid) < till*79) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Mega, их стоимость %d Рублей", till*79);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
						SetPVarInt(playerid,"PriceCTO",till*79);
						SetPVarInt(playerid,"ComponentCTO",1074);
						SetPVarInt(playerid,"ProductCTO",79);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 2:
					{
						if(GetMoney(playerid) < till*53) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Wires, их стоимость %d Рублей", till*53);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1076);
						SetPVarInt(playerid,"PriceCTO",till*53);
						SetPVarInt(playerid,"ComponentCTO",1076);
						SetPVarInt(playerid,"ProductCTO",53);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*53);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 3:
					{
						if(GetMoney(playerid) < till*73) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Classic, их стоимость %d Рублей", till*73);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
						SetPVarInt(playerid,"PriceCTO",till*73);
						SetPVarInt(playerid,"ComponentCTO",1077);
						SetPVarInt(playerid,"ProductCTO",73);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*73);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 4:
					{
						if(GetMoney(playerid) < till*93) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Twist, их стоимость %d Рублей", till*93);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
						SetPVarInt(playerid,"PriceCTO",till*93);
						SetPVarInt(playerid,"ComponentCTO",1078);
						SetPVarInt(playerid,"ProductCTO",93);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*93);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 5:
					{
						if(GetMoney(playerid) < till*80) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Cutter, их стоимость %d Рублей", till*80);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1079);
						SetPVarInt(playerid,"PriceCTO",till*80);
						SetPVarInt(playerid,"ComponentCTO",1078);
						SetPVarInt(playerid,"ProductCTO",80);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*80);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 6:
					{
						if(GetMoney(playerid) < till*42) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Grove, их стоимость %d Рублей", till*42);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
						SetPVarInt(playerid,"PriceCTO",till*42);
						SetPVarInt(playerid,"ComponentCTO",1081);
						SetPVarInt(playerid,"ProductCTO",42);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*42);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 7:
					{
						if(GetMoney(playerid) < till*100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Atomic, их стоимость %d Рублей", till*100);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
						SetPVarInt(playerid,"PriceCTO",till*100);
						SetPVarInt(playerid,"ComponentCTO",1085);
						SetPVarInt(playerid,"ProductCTO",100);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*100);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 8:
					{
						if(GetMoney(playerid) < till*200) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Dollar, их стоимость %d Рублей", till*200);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
						SetPVarInt(playerid,"PriceCTO",till*200);
						SetPVarInt(playerid,"ComponentCTO",1083);
						SetPVarInt(playerid,"ProductCTO",200);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*200);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 9:
					{
						if(GetMoney(playerid) < till*300) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						SendMes(playerid,COLOR_LIME,"Вы поставили диски Switch, их стоимость %d Рублей", till*300);
						AddVehicleComponent(GetPlayerVehicleID(playerid),1080);
						SetPVarInt(playerid,"PriceCTO",till*300);
						SetPVarInt(playerid,"ComponentCTO",1080);
						SetPVarInt(playerid,"ProductCTO",300);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*300);
						ShowPlayerDialog(playerid,D_CTO+12,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				}
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+13:
		{
			new i = GetPVarInt(playerid,"CTObizzid");
			if(response)
			{
				TransferMoney(playerid, -1, GetPVarInt(playerid,"PriceCTO"));
				if(BizzInfo[i][bProduct] > 0)
				{
					BizzInfo[i][bMoney] += GetPVarInt(playerid,"PriceCTO");
					BizzInfo[i][bProduct] -= GetPVarInt(playerid,"ProductCTO");
					BizzPay[i] += GetPVarInt(playerid,"PriceCTO");
					MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				}
				SendMes(playerid,COLOR_LIME,"Вы оплатили %d Рублей за покрасочную работу", GetPVarInt(playerid,"PriceCTO"));
				PI[playerid][cPaintjob] = GetPVarInt(playerid,"PaintjobCTO");
				SaveVehicleTuning(playerid);
				ShowSTODialog(playerid);
			}
			else
			{
				if(PI[playerid][cPaintjob] != 3) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),PI[playerid][cPaintjob]);
				else
				{
					ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3);
					ChangeVehicleColor(GetPlayerVehicleID(playerid), PI[playerid][cColor][0], PI[playerid][cColor][1]);
				}
				SendClientMessage(playerid,COLOR_DARKORANGE,"Вы отменили покупку");
				SaveVehicleTuning(playerid);
				ShowSTODialog(playerid);
			}
		}
	case D_CTO+7: // CTO
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				new string[128];
				switch(listitem)
				{
				case 0:
					{
						if(GetMoney(playerid) < till*30) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0);
						SetPVarInt(playerid,"PriceCTO",till*30);
						SetPVarInt(playerid,"PaintjobCTO",0);
						SetPVarInt(playerid,"ProductCTO",30);
						format(string,128,"{FFFFFF}Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*30);
						ShowPlayerDialog(playerid,D_CTO+13,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");

					}
				case 1:
					{
						if(GetMoney(playerid) < till*35) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
						SetPVarInt(playerid,"PriceCTO",till*35);
						SetPVarInt(playerid,"PaintjobCTO",1);
						SetPVarInt(playerid,"ProductCTO",35);
						format(string,128,"{FFFFFF}Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*35);
						ShowPlayerDialog(playerid,D_CTO+13,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 2:
					{
						if(GetMoney(playerid) < till*40) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!"),ShowSTODialog(playerid);
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2);
						SetPVarInt(playerid,"PriceCTO",till*40);
						SetPVarInt(playerid,"PaintjobCTO",2);
						SetPVarInt(playerid,"ProductCTO",40);
						format(string,128,"{FFFFFF}Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*40);
						ShowPlayerDialog(playerid,D_CTO+13,DSM,"{7efd7d}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 3:
					{
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3);
						ShowSTODialog(playerid);
						SendClientMessage(playerid,COLOR_DARKORANGE,"Вы удалили покрасочную работу на авто");
					}
				}
			}
			else ShowSTODialog(playerid);
		}
	case D_CTO+12: // CTO
		{
			new i = GetPVarInt(playerid,"CTObizzid");
			if(response)
			{
				TransferMoney(playerid, -1, GetPVarInt(playerid,"PriceCTO"));
				if(BizzInfo[i][bProduct] > 0)
				{
					BizzInfo[i][bMoney] += GetPVarInt(playerid,"PriceCTO");
					BizzInfo[i][bProduct] -= GetPVarInt(playerid,"ProductCTO");
					BizzPay[i] += GetPVarInt(playerid,"PriceCTO");
					MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				}
				ShowSTODialog(playerid);
				SaveVehicleTuning(playerid);
				SendClientMessage(playerid,COLOR_LIME,"Вы купили эту запчасть");
			}
			else
			{
				ShowSTODialog(playerid);
				SendClientMessage(playerid, COLOR_DARKORANGE, "Вы отменили покупку");
				RemoveVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"ComponentCTO"));
				for(new s; s < 14; s++) if(PI[playerid][cVehcoms][s] != 0) AddVehicleComponent(GetPlayerVehicleID(playerid), PI[playerid][cVehcoms][s]);
			}
		}
	case 6446:
		{
			if(!response) return 1;
			if(gym_cloakroom[playerid])
			{
			    gym_cloakroom[playerid] = false;
				SetPlayerSkin(playerid, Oldskin2[playerid]);
				SendClientMessage(playerid, COLOR_RED, "Вы закончили тренировку!");
			}
			else
			{
			    if(GetMoney(playerid) < 500) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				TransferMoney(playerid, -1, 500);
				gym_cloakroom[playerid] = true;
				Oldskin2[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid, 80);
				SendClientMessage(playerid, COLOR_GREEN, "Вы начали тренировку. Бейте по грушам!");
			}
		}
		case D_MAINMENU:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerStatsDialog(playerid, playerid);
				case 1: ShowPlayerDialog(playerid, D_COMMANDSERVER, DIALOG_STYLE_LIST, "{7efd7d}Команды сервера", "{7efd7d}1. {ffffff}Основные\n{7efd7d}2. {ffffff}Чат\n{7efd7d}3. {ffffff}Дом\n{7efd7d}4. {ffffff}Бизнес\n{7efd7d}5. {ffffff}Транспорт\n{7efd7d}6. {ffffff}По работе\n{7efd7d}7. {ffffff}Для лидеров\n{7efd7d}8. {ffffff}Организация", "Выбрать", "Назад");
            	case 2:
				{
				    if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
				    ShowPlayerDialog(playerid, 13212, DIALOG_STYLE_INPUT, "{7efd7d}Жалоба на игрока", "{FFFFFF}Введите ID игрока и причину подачи на него в репорт:", "Отправить","Назад");
				}
            	case 3:
            	{
            	    if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
            	    ShowPlayerDialog(playerid, 13213, DIALOG_STYLE_INPUT, "{7efd7d}Задать вопрос", "{FFFFFF}Введите чётко поставленный вопрос:", "Отправить","Назад");
            	}
            	case 4:
				{
					new string[244];
					format(string,sizeof(string),"{7efd7d}1. {ffffff}НикНеймы\t\t\t\t%s\n{7efd7d}2. {ffffff}Логотип\t\t\t\t%s\n{7efd7d}3. {ffffff}Кейс в руке\t\t\t\t%s",(vidnick[playerid]==1)?("{0ad102}Включен"):("{c42601}Отключен"),(logo_setting[playerid] == true)?("{0ad102}Включен"):("{c42601}Отключен"),(keys_setting[playerid]==true)?("{0ad102}Включен"):("{c42601}Отключен"));
                    ShowPlayerDialog(playerid, 1890, DIALOG_STYLE_LIST, "{7efd7d}Персональные настройки", string, "Далее","Назад");
				} 
				case 5: PlayerSecurity(playerid);
				case 6:
				{
				    new string[300];
					format(string, sizeof(string), "%s\n%s\n%s\n%s\n{FFFFFF}Помощь",
					(PI[playerid][pImprove][0] != 1) ? ("{FFFFFF}Выносливость\t\t| {F04245}Не имеется (5 уровень и 50.000 Рублей)") : ("{FFFFFF}Выносливость\t\t| {63BD4E}Куплено"),
					(PI[playerid][pImprove][1] != 1) ? ("{FFFFFF}Решительность\t| {F04245}Не имеется (8 уровень и 75.000 Рублей)") : ("{FFFFFF}Решительность\t| {63BD4E}Куплено (/leave)"),
					(PI[playerid][pImprove][2] != 1) ? ("{FFFFFF}Рюкзак\t\t\t| {F04245}Не имеется (11 уровень и 100.000 Рублей)") : ("{FFFFFF}Рюкзак\t\t\t| {63BD4E}Куплено"),
					(PI[playerid][pImprove][3] != 1) ? ("{FFFFFF}Мастер вождения\t| {F04245}Не имеется (15 уровень и 125.000 Рублей)") : ("{FFFFFF}Мастер вождения\t| {63BD4E}Куплено"));
					ShowPlayerDialog(playerid, D_JOB+177, DIALOG_STYLE_LIST, "{7efd7d}Улучшения персонажа", string, "Выбрать", "Назад");
				}
				case 7: ShowPlayerDialog(playerid, D_JOB+20, 1, "{7efd7d}Смена NonRP ника", "{FFFFFF}Введите будущий ник\n\n{F04245}Возможно сменить только если у Вас NonRP ник!", "Принять", "Назад");
				case 8: cmd_donate(playerid);
		    }
       	}
 		case D_DONATE:
		{
			if(!response) return cmd_menu(playerid);
			switch(listitem)
			{
			    case 0:
			    {
			        new string[300];
			        format(string, sizeof(string), "\
					{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
					{63BD4E}Общее пополнение:\t\t%i кредитов\n\n\
					{FFFF00}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"",
					PI[playerid][pCredits], PI[playerid][pTotalCredits]);
			        ShowPlayerDialog(playerid, D_DONATE+1, DIALOG_STYLE_MSGBOX, "{7efd7d}Информация", string, "Принять", "Назад");
			    }
			    case 1:
			    {
			        new Query[135];
					format(Query, sizeof(Query), "SELECT `sum`,`status`,`id` FROM `gdonate_payments` WHERE `account` = '%s' AND `status` > 0", GetName(playerid));
 					mysql_tquery(dbHandle, Query, "gdonat_callback", "d", playerid);
			    }
				case 2:
				{
				    if(doubling_donate)
                    	ShowPlayerDialog(playerid, D_DONATE+2, DIALOG_STYLE_INPUT, "{7efd7d}Получение игровой валюты", "{FFFFFF}Введите количество кредитов, которые хотите перевести в игровые деньги\nКурс обмена: 1 кредит - 3000 Рублей {63BD4E}(с учётом акции)", "Далее", "Назад");
                    else
                    	ShowPlayerDialog(playerid, D_DONATE+2, DIALOG_STYLE_INPUT, "{7efd7d}Получение игровой валюты", "{FFFFFF}Введите количество кредитов, которые хотите перевести в игровые деньги\nКурс обмена: 1 кредит - 1500 Рублей", "Далее", "Назад");
				}
				case 3:
				{
				    new string[590];
					strcat(string, "{FFFF00}Преимущества VIP статуса:\n{FFFFFF}");
					strcat(string, "1) Ускоренное лечение в больнице\n");
					strcat(string, "2) Удаление тюнинга с личного транспорта (/removetuning)\n");
					strcat(string, "3) Возможность покинуть организацию самому (/leave)\n");
					strcat(string, "4) Каждую 4-ую зарплату +1 респект\n");
					strcat(string, "5) Прокачка скиллов в 2 раза быстрей\n");
					strcat(string, "6) Проявление чувства голода у персонажа в 2 раза реже\n");
					strcat(string, "7) Уменьшенное время на отправку вопроса/репорта\n");
					strcat(string, "8) Возможность уволиться с работы не на месте устройства (/quitjob)\n");
					strcat(string, "9) Возможность общаться с остальными VIP игроками в VIP чате (/v)\n\n");
					strcat(string, "{FFFF00}Примечание:\n{FFFFFF}");
					strcat(string, "- VIP статус выдаётся на 30 дней");
					ShowPlayerDialog(playerid, D_JOB+200, DIALOG_STYLE_MSGBOX, "{7efd7d}VIP статус", string, "Купить", "Назад");
				}
				case 4:
				{
				    if(PI[playerid][pWarn] == 0) return SendClientMessage(playerid, COLOR_GREY, "На вашем аккаунте нет предупреждений.");
					if(PI[playerid][pCredits] < 50) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
					PI[playerid][pCredits] -= 50;
                    PI[playerid][pWarn]--;
					SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно сняли {ffffff}одно {ffff00}предупреждение!");
				}
				case 5:
				{
				    if(PI[playerid][pCredits] < 20) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
				    ShowPlayerDialog(playerid, D_JOB+179, 1, "{7efd7d}Смена ника", "{FFFFFF}Введите будущий ник:", "Принять", "Назад");
				}
				case 6:
			    {
			        if(PI[playerid][pCredits] < 100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			        PI[playerid][pCredits] -= 100;
			        for(new i; i < 8; i++) PI[playerid][pGunSkill][i] = 100;
			        new Query[300];
					format(Query, sizeof(Query), "UPDATE "T_ACCOUNTS" SET sdpistol=%i,deserteagle=%i,shotgun=%i,mp5=%i,ak47=%i,m4=%i,pistol=%i,microuzi=%i WHERE id=%i",
					PI[playerid][pGunSkill][0], PI[playerid][pGunSkill][1], PI[playerid][pGunSkill][2], PI[playerid][pGunSkill][3], PI[playerid][pGunSkill][4], PI[playerid][pGunSkill][5], PI[playerid][pGunSkill][6], PI[playerid][pGunSkill][7], PI[playerid][pID]);
					mysql_tquery(dbHandle, Query, "", "");
					SendClientMessage(playerid, COLOR_LIME, "Вы приобрели все навыки владения оружием!");
			    }
				case 7:
			    {
			    	if(PI[playerid][pCredits] < 150) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			        PI[playerid][pCredits] -= 150;
			        for(new i; i < 4; i++) PI[playerid][pLic][i] = 1;
					PI[playerid][pCarA] = 1;
					PI[playerid][pCarB] = 1;
					PI[playerid][pCarC] = 1;
					PI[playerid][pCarD] = 1;
			        new Query[128];
			        format(PI[playerid][pLics],16,"%i, %i, %i, %i",PI[playerid][pLic][0],PI[playerid][pLic][1],PI[playerid][pLic][2],PI[playerid][pLic][3]);
					format(Query, sizeof(Query), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE id=%i", PI[playerid][pLics], PI[playerid][pID]);
					mysql_tquery(dbHandle, Query, "", "");
					SetPlayerSkills(playerid);
					SendClientMessage(playerid, COLOR_LIME, "Вы приобрели все лицензии!");
			    }
			    case 8:
			    {
			        if(PI[playerid][pCredits] < 50) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			        PI[playerid][pCredits] -= 50;
			        PI[playerid][pSportExp] = 6000;
			        PI[playerid][pFightStyle] = 7;
			        new Query[100];
					format(Query, sizeof(Query), "UPDATE "T_ACCOUNTS" SET sportexp=%i,fstyle=%i WHERE id=%i",
					PI[playerid][pSportExp], PI[playerid][pFightStyle], PI[playerid][pID]);
					mysql_tquery(dbHandle, Query, "", "");
					SendClientMessage(playerid, COLOR_LIME, "Вы приобрели все навыки стиля боя!");
				}
			}
		}
		case D_JOB+200:
		{
		    if(!response) return cmd_donate(playerid);
		    if(PI[playerid][pVip])
			{
			    new string[256];
          		new year, month, day;
				new current_date = getdate(year, month, day);
				new time_left = PI[playerid][pVipTime] - current_date;
			    format(string, sizeof(string), "\n\n{F04245}\tУ Вас уже имеется VIP статус!\n\n{FFFFFF}Дней до окончания: {FFFF00}%d\n{FFFFFF}Желаете продлить на {FFFF00}30 дней{FFFFFF} за 300 кредитов?\n\n", time_left);
				ShowPlayerDialog(playerid, D_JOB+202, DIALOG_STYLE_MSGBOX, "{7efd7d}Потверждение действия", string, "Да", "Нет");
				return 1;
			}
			if(PI[playerid][pCredits] < 100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			new year, month, day;
			new current_date = getdate(year, month, day);
			PI[playerid][pCredits] -= 100;
            PI[playerid][pVip] = 1;
            PI[playerid][pVipTime] = current_date + 30;
			SendClientMessage(playerid, COLOR_YELLOW, "Вы приобрели {ffffff}VIP{ffff00} статус на {ffffff}30{ffff00} дней (/viphelp)");
		}
		case D_JOB+202:
		{
		    if(!response) return cmd_donate(playerid);
			if(PI[playerid][pCredits] < 100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			new year, month, day;
			new current_date = getdate(year, month, day);
			new time_left = PI[playerid][pVipTime] - current_date;
			PI[playerid][pCredits] -= 100;
            PI[playerid][pVipTime] = time_left + (current_date + 30);
			SendClientMessage(playerid, COLOR_YELLOW, "Вы продлили {ffffff}VIP{ffff00} статус на {ffffff}30{ffff00} дней (/viphelp)");
		}
		case D_DONATE+1:
		{
		    if(!response) return cmd_donate(playerid);
		    else return 1;
		}
 		case D_DONATE+2:
		{
			if(!response) return cmd_donate(playerid);
		    if(strval(inputtext) < 1 || strval(inputtext) > 5000) return SendClientMessage(playerid, COLOR_GREY, "Количество от 1 до 5000 кредитов!");
			if(PI[playerid][pCredits] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			PI[playerid][pCredits] -= strval(inputtext);
			new string[128];
			if(!doubling_donate)
			{
				format(string, sizeof(string), "Вы получили {ffffff}%i Рублей{ffff00} за {ffffff}%d{ffff00} кредитов!", strval(inputtext)*1500, strval(inputtext));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "+%i Рублей", strval(inputtext)*1500);
				GameTextForPlayer(playerid, string, 3000, 1);
				TransferMoney(-1,playerid,strval(inputtext)*1500);
			}
			else
			{
			    format(string, sizeof(string), "Вы получили {ffffff}%i Рублей{ffff00} за {ffffff}%d{ffff00} кредитов!", strval(inputtext)*3000, strval(inputtext));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "+%i Рублей", strval(inputtext)*3000);
				GameTextForPlayer(playerid, string, 3000, 1);
				TransferMoney(-1,playerid,strval(inputtext)*3000);
			}
		}
	case D_MAKEGUN:
	    {
	        if(!response) return 1;
	        SetPVarInt(playerid, "makegunid", listitem);
			new needgun = gGunAmount[listitem];
			new bool:noneedgun;
			SetPVarInt(playerid, "noneedgun", 0);
			for(new i; i < 13; i++)
			{
				new weapid, ammot;
				GetPlayerWeaponData(playerid, i, weapid, ammot);
				if(weapid == gGunID[listitem]) { noneedgun = true; SetPVarInt(playerid, "noneedgun", 1); break; }
			}
			if(PI[playerid][pGunAmount] < needgun && !noneedgun)
			{
				new str[128];
			    format(str, sizeof(str),"Вам нужно %d Металл для сборки этого оружия", needgun);
				SendClientMessage(playerid, COLOR_GREY, str);
				ShowMakeGunList(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid, D_MAKEGUN+1, 1, "{7efd7d}Сборка оружия", "{FFFFFF}Сколько патронов вы хотите использовать для этого оружия?", "Собрать", "Отмена");
	    }
	case D_MAKEGUN+1:
	    {
	        if(!response) return 1;
			new ammo = strval(inputtext);
			if(ammo < 1 || ammo > 500)
			{
				SendClientMessage(playerid, COLOR_GREY, "Неверное к-во патронов");
				ShowMakeGunList(playerid);
				return 1;
			}
			new gunid = GetPVarInt(playerid,"makegunid");
			new needgun = gGunAmount[gunid];
			new weaponid = gGunID[gunid];
			if(PI[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно патронов");
			if(!GetPVarInt(playerid, "noneedgun")) PI[playerid][pGunAmount] -= needgun;
			SetPVarInt(playerid, "noneedgun", 0);
			PI[playerid][pPatron] -= ammo;
			new Query[128];
			format(Query, sizeof(Query), "UPDATE "T_ACCOUNTS" SET `gunamount` = '%i', `patron` = `%i` WHERE `id` = '%i' LIMIT 1", PI[playerid][pGunAmount], PI[playerid][pPatron], PI[playerid][pID]);
			mysql_tquery(dbHandle, Query, "", "");
			GivePlayerWeaponAC(playerid, weaponid, ammo);
			MeAction(playerid, "собрал оружие");
	    }
    case 9345:
		{
			if(!response) return 1;
			if(listitem == 5)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
				StopAudioStreamForPlayer(playerid);
			}
			else
			{
				static const Radio_List[6][64] = {
				    "http://radio02-cn03.akadostream.ru:8108/shanson128.mp3",
				    "http://radio02-cn03.akadostream.ru:8112/nashe128.mp3",
				    "http://online.radiorecord.ru:8101/rr_128",
				    "http://radio.zaycev.fm:9002/ZaycevFM(128).m3u",
				    "http://radio.zaycev.fm:9002/ZaycevFM(128).m3u",
				    "http://radio.zaycev.fm:9002/rnb/ZaycevFM(128).m3u"
				};
				if(!(IsPlayerAttachedObjectSlotUsed(playerid, 3)))
				{
				    ApplyAnimation(playerid, "goggles", "goggles_put_on", 4.1, 0, 0, 0, 0, 0, 1);
					SetPlayerAttachedObject(playerid, 3, 19424, 2, 0.05, 0.0, 0.0, 90.0, 360.0, 270.0);
				}
				PlayAudioStreamForPlayer(playerid, Radio_List[listitem]);
			}
		}
	case 969:
		{
			if(!response) return 1;
			if(!b_Capture{listitem})
			{
				b_Capture{listitem} = 1;
				SendClientMessage(playerid, COLOR_RED, "Вы включили запрет на капт данной банде!");
			}
			else
			{
				b_Capture{listitem} = 0;
				SendClientMessage(playerid, COLOR_GREEN, "Вы отключили запрет на капт данной банде!");
			}
			new Query[75];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET bcapt_g=%d,bcapt_b=%d,bcapt_r=%d,bcapt_a=%d,bcapt_v=%d", b_Capture{0}, b_Capture{1}, b_Capture{2}, b_Capture{3}, b_Capture{4});
			mysql_tquery(dbHandle, Query, "", "");
			ShowDialogGhetto(playerid);
			return 1;
		}
	case 1431:
		{
			if(response)
			{
				if(listitem < 3)
				{
					PI[playerid][pSkin][listitem] = PI[playerid][pModel];
					SendMes(playerid, COLOR_GREEN, "Вы выбрали %d полку для одежды. Переодеться можно дома (/hmenu)", listitem+1);
				}
				else SendClientMessage(playerid, COLOR_GREY, "Одежда будет на вас");
			}
		}
	case 1212:
	    {
	        if(!response) return SendClientMessage(playerid, COLOR_GREY, "Шагай тогда отсюда и не возвращайся");
            if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Что-то ты не похож на своего. Забудь сюда дорогу! (( Вы должны состоять в банде, чтобы вырубить наркотики ))");
            SendClientMessage(playerid, COLOR_GREEN, "Отправляйся в соседнюю комнату, там ты найдёшь что ищешь.");
            SetPVarInt(playerid, "next_actor", 1);
		}
	case 1213:
		{
			if(!response) return 1;
			new maximum = strval(inputtext);
			if(PI[playerid][pDrugs]+maximum >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете купить больше!");
			else if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{7efd7d}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.","Купить","Отмена");
			else if(PI[playerid][pCash] < maximum*40) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{7efd7d}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.\n\n{F04245}У вас недостаточно денег!","Купить","Отмена");
			else if(maximum < 1 || maximum > 100) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{7efd7d}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.\n\n{F04245}Количество не должно превышать 100 грамм!","Купить","Отмена");
			PI[playerid][pDrugs] += maximum;
			TransferMoney(playerid, -1, maximum*40);
			DeletePVar(playerid, "next_actor");
			SendClientMessage(playerid, COLOR_YELLOW, "Вот, держи свой товар! Заходи ещё, скоро будет увеличен ассортимент");
		}
  	case D_REGISTER:
	    {
	    	for(new i = strlen(inputtext); i != 0; --i)
	    	switch(inputtext[i])
			{
				case 'А'..'Я', 'а'..'я', ' ': //
				return SendClientMessage(playerid, COLOR_WHITE, "При вводе пароля используйте только английские буквы"), Kick(playerid);
			}
			if(response)
			{
   				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || IsTextRussian(inputtext))
				{
				    new string[371];
 					format(string, sizeof(string), "{FFFFFF}Добро пожаловать на сервер {7efd7d}House RolePlay\n{ffffff}Чтобы начать игру вам необходимо пройти регистрацию\n\nВведите пароль для Вашего аккаунта\nОн будет запрашиваться каждый раз, когда вы заходите на сервер\n\n\t{7efd7d}Примечания:\n\t•Пароль может состоять из русских и латинских символов\n\t•Пароль чувствителен к регистру\n\t•Длина пароля от 6-ти до 15-ти символов");
					ShowPlayerDialog(playerid, D_REGISTER, DIALOG_STYLE_INPUT, "{7efd7d}Регистрация", string, "Далее","Отмена");
		    	}
				else
				{
					strmid(PI[playerid][pPassword], inputtext, 0, strlen(inputtext), 32);
					SetPVarInt(playerid, "PassEstReg", 1);
					//ShowPlayerDialog(playerid, D_SEX, 0, "{7efd7d}Выбор пола", "{ffffff}Пожалуйста, выбырите свой пол:", "Мужской", "Женский");
				}
            }
            else
            SetPVarInt(playerid, "PassEstReg", 1);
            //ShowPlayerDialog(playerid, D_SEX, 1, "{7efd7d}Выбор пола", "{ffffff}Пожалуйста, выбырите свой пол:", "Мужской", "Женский");
	    }
		case 1456:
	    {
	        if(response)
	        {
	            new i = GetPVarInt(playerid, "PlayerBizz");
	            if(listitem == 0)
	            {
	                toolsbuy[playerid] = 1;
	                if(PI[playerid][pCash] < 1000)
	                {
	                    SCM(playerid,COLOR_DARKORANGE,"У Вас не достаточно денег.");
	                }
					else
					{
					    BizzInfo[i][bMoney] += 1000;
                		BizzPay[i] += 1000;
					    GiveMoney(playerid,-1000);
						SCM(playerid,COLOR_BLUE,"Вы купили игрушку. Чтобы использовать, выйдите на улицу и напишите /tools");
					}
	            }
	            if(listitem == 1)
	            {
	                toolsbuy[playerid] = 2;
	                if(PI[playerid][pCash] < 2800)
	                {
	                    SCM(playerid,COLOR_DARKORANGE,"У Вас не достаточно денег.");
	                }
					else
					{
					    GiveMoney(playerid,-2800);
					    BizzInfo[i][bMoney] += 2800;
                		BizzPay[i] += 2800;
                		SCM(playerid,COLOR_BLUE,"Вы купили игрушку. Чтобы использовать, выйдите на улицу и напишите /tools");
					}
	            }
	            if(listitem == 2)
	            {
	                toolsbuy[playerid] = 3;
	                if(PI[playerid][pCash] < 2500)
	                {
	                    SCM(playerid,COLOR_DARKORANGE,"У Вас не достаточно денег.");
	                }
					else
					{
					    GiveMoney(playerid,-2500);
					    BizzInfo[i][bMoney] += 2500;
                		BizzPay[i] += 2500;
                		SCM(playerid,COLOR_BLUE,"Вы купили игрушку. Чтобы использовать, выйдите на улицу и напишите /tools");
					}
	            }
	            if(listitem == 3)
	            {
	                toolsbuy[playerid] = 4;
	                if(PI[playerid][pCash] < 2600)
	                {
	                    SCM(playerid,COLOR_DARKORANGE,"У Вас не достаточно денег.");
	                }
					else
					{
					    GiveMoney(playerid,-2600);
					    BizzInfo[i][bMoney] += 2600;
                		BizzPay[i] += 2600;
                		SCM(playerid,COLOR_BLUE,"Вы купили игрушку. Чтобы использовать, выйдите на улицу и напишите /tools");
					}
	            }
	            if(listitem == 4)
	            {
	                toolsbuy[playerid] = 5;
	                if(PI[playerid][pCash] < 6200)
	                {
	                    SCM(playerid,COLOR_DARKORANGE,"У Вас не достаточно денег.");
	                }
					else
					{
					    GiveMoney(playerid,-6200);
					    BizzInfo[i][bMoney] += 6200;
                		BizzPay[i] += 6200;
                		SCM(playerid,COLOR_BLUE,"Вы купили игрушку. Чтобы использовать, выйдите на улицу и напишите /tools");
					}
	            }
	            if(listitem == 5)
	            {
	                toolsbuy[playerid] = 6;
	                if(PI[playerid][pCash] < 800)
	                {
	                    SCM(playerid,COLOR_DARKORANGE,"У Вас не достаточно денег.");
	                }
					else
					{
					    GiveMoney(playerid,-800);
					    BizzInfo[i][bMoney] += 800;
                		BizzPay[i] += 800;
                		SCM(playerid,COLOR_BLUE,"Вы купили игрушку. Чтобы использовать, выйдите на улицу и напишите /tools");
					}
	            }
	        }
	    }
		case 1458:
	    {
	        if(response)
	        {
	            new i = GetPVarInt(playerid, "PlayerBizz");
	            if(listitem == 0)
	            {
	                if(PI[playerid][pCash] < 1000)
	                {
	                    SCM(playerid,COLOR_DARKORANGE,"У Вас не достаточно денег.");
	                }
					else
					{
					    BizzInfo[i][bMoney] += 1000;
                		BizzPay[i] += 1000;
					    GiveMoney(playerid,-1000);
					    PI[playerid][pAptechka]++;
						SCM(playerid,COLOR_BLUE,"Вы купили аптечку.");
					}
	            }
	            if(listitem == 1)
	            {
	                if(PI[playerid][pCash] < 2000)
	                {
	                    SCM(playerid,COLOR_DARKORANGE,"У Вас не достаточно денег.");
	                }
					else
					{
					    GiveMoney(playerid,-2000);
					    BizzInfo[i][bMoney] += 2000;
                		BizzPay[i] += 2000;
                		PI[playerid][pMask]++;
                		SCM(playerid,COLOR_BLUE,"Вы купили маску.");
					}
	            }
	        }
	    }
 		case 1457:
	    {
	        if(response)
	        {
	            new Float:X, Float:Y, Float:Z;
    			GetPlayerPos(playerid, X, Y, Z);
				if(toolsbuy[playerid] == 1)
				{
				    vehgame[playerid] = CreateVehicle(441, X,Y,Z, 0.0, 0, 0, 12000);
	                PutPlayerInVehicle(playerid, vehgame[playerid], 0);
	                SCM(playerid,COLOR_BLUE,"Вы достали игрушку. Чтобы убрать её используйте команду /endtools");
				}
				if(toolsbuy[playerid] == 2)
				{
				    vehgame[playerid] = CreateVehicle(464, X,Y,Z, 0.0, 0, 0, 12000);
	                PutPlayerInVehicle(playerid, vehgame[playerid], 0);
	                SCM(playerid,COLOR_BLUE,"Вы достали игрушку. Чтобы убрать её используйте команду /endtools");
				}
				if(toolsbuy[playerid] == 3)
				{
				    vehgame[playerid] = CreateVehicle(465, X,Y,Z, 0.0, 0, 0, 12000);
	                PutPlayerInVehicle(playerid, vehgame[playerid], 0);
	                SCM(playerid,COLOR_BLUE,"Вы достали игрушку. Чтобы убрать её используйте команду /endtools");
				}
				if(toolsbuy[playerid] == 4)
				{
				    vehgame[playerid] = CreateVehicle(501, X,Y,Z, 0.0, 0, 0, 12000);
	                PutPlayerInVehicle(playerid, vehgame[playerid], 0);
	                SCM(playerid,COLOR_BLUE,"Вы достали игрушку. Чтобы убрать её используйте команду /endtools");
				}
				if(toolsbuy[playerid] == 5)
				{
				    vehgame[playerid] = CreateVehicle(564, X,Y,Z, 0.0, 0, 0, 12000);
	                PutPlayerInVehicle(playerid, vehgame[playerid], 0);
	                SCM(playerid,COLOR_BLUE,"Вы достали игрушку. Чтобы убрать её используйте команду /endtools");
				}
				if(toolsbuy[playerid] == 6)
				{
				    vehgame[playerid] = CreateVehicle(594, X,Y,Z, 0.0, 0, 0, 12000);
	                PutPlayerInVehicle(playerid, vehgame[playerid], 0);
	                SCM(playerid,COLOR_BLUE,"Вы достали игрушку. Чтобы убрать её используйте команду /endtools");
				}
				Fuel[GetPlayerVehicleID(playerid)] = 50;
				toolsbuy[playerid] = 0;
	        }
	    }
	case 1981:
	{
	    if(!response)
		{
			RemoveFromVehicle(playerid);
			SetPVarInt(playerid, "RendMoped", 0);
			SCM(playerid,COLOR_RED,"Вы отказались от аренды скутера.");
		}
	    else
	    {
			if(PI[playerid][pCash] < 150)
			{
				SendClientMessage(playerid,COLOR_RED,"Ошибка | {FFFFFF}У вас не достаточно средств!");
				RemoveFromVehicle(playerid);
			}
			else
			{
				GiveMoney(playerid, -150);
				SCM(playerid,COLOR_BLUE,"Вы арендовали скутер.");
				SetPVarInt(playerid, "RendMoped", GetPlayerVehicleID(playerid));
			}
	    }
	}
	case 1890:
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
        			if(vidnick[playerid] == 0)
        			{
						for(new i; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(playerid, i, 1);
						vidnick[playerid] = 1;
					}
					else
					{
						for(new i; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(playerid, i, 0);
						vidnick[playerid] = 0;
					}
	            }
	            case 1:
	            {
	                if(logo_setting[playerid] == true)
	                {
	                    //for(new i; i < 11;i++) TextDrawHideForPlayer(playerid,village_TD[i]);
	                    logo_setting[playerid] = false;
	                }
	                else
	                {
	                   // for(new i; i < 11; i++) TextDrawShowForPlayer(playerid,village_TD[i]);
						logo_setting[playerid] = true;
	                }
	            }
	            case 2:
	            {
	                if(keys_setting[playerid] == true)
	                {
	                    RemovePlayerAttachedObject(playerid,3);
	                    keys_setting[playerid] = false;
	                } else {
                 		if(GetPlayerMoney(playerid) > 999999)
		    			{
		     				SetPlayerAttachedObject(playerid,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
		    			}
						if(GetPlayerMoney(playerid) < 999999)
						{
							RemovePlayerAttachedObject(playerid,3);
			            }
			            keys_setting[playerid] = true;
	                }
	            }
	        }
	    }
	}
	case D_LOGIN:
	    {
	        if(!response) { SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay); Kick(playerid); }
			for(new i = strlen(inputtext); i != 0; --i)
	    	switch(inputtext[i])
			{
				case 'А'..'Я', 'а'..'я', ' ':
				return ShowPlayerDialog(playerid,D_ERRORPAS,DIALOG_STYLE_MSGBOX,"{FFFFFF}Ошибка","{F04245}Пароль не должен содержать запрещённые символы\nВозможно, Вы вводите пароль не в той раскладке","Повторить","");
			}
	        if(!strlen(inputtext))
			{
			    new string[256];
			    PlayerPlaySound(playerid,1062,0.0,0.0,0.0);
                format(string, sizeof(string), "{"#cWHITE"}Добро пожаловать на сервер{7efd7d} House RolePlay{"#cWHITE"}.\nВаш ник зарегистрирован\n\nЛогин:{7efd7d} %s{"#cWHITE"}\nВведите пароль указанный при регистрации:",GetName(playerid));
				ShowPlayerDialog(playerid, D_LOGIN, 3, "{7efd7d}", string, "Войти","Отмена");
			}
			DeletePVar(playerid,"passvtr");
			SetPVarString(playerid, "PassVhod", inputtext);
			format(passwordlogin, sizeof(passwordlogin), "%e", inputtext);
			PlayerTextDrawSetString(playerid, Avtoriz_PTD[playerid][0], "скрыто");
            new string[128];
			mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%e' AND `password`='%e'", GetName(playerid), inputtext);
			mysql_tquery(dbHandle, string, "CheckPass", "ds", playerid, inputtext);
		}
	case D_ERRORPAS:
		{
		    if(!response) { SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay); Kick(playerid); }
            new string[256];
            DeletePVar(playerid,"passvtr");
	 		format(string, sizeof(string), "{"#cWHITE"}Добро пожаловать на сервер {7efd7d}House RolePlay{"#cWHITE"}\nВаш ник зарегистрирован\n\nЛогин:{7efd7d} %s\n{FF6347}Неправильный пароль!",GetName(playerid));
			ShowPlayerDialog(playerid, D_LOGIN, 3, "{7efd7d}Авторизация", string, "Войти","Отмена");
		}
	case D_SEX:
		{
			if(response) PI[playerid][pSex] = 1;
			else PI[playerid][pSex] = 2;
			ShowPlayerDialog(playerid, D_JOB+30, 1, "{7efd7d}Реферал", "{ffffff}Введите имя игрока, приглосившего Вас на сервер\nЕсли Вас никто не приглашал, то нажмите \"Пропустить\"\n\n{7efd7d}Если Вы достигните 5 уровня,\nто Ваш реферал получит 50 000 рублей", "Ок", "Пропустить");
		}
	case 13212:
		{
			if(!response) return cmd_menu(playerid);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 13212, DIALOG_STYLE_INPUT, "{7efd7d}Репорт", "{FFFFFF}Введите ID игрока и причину подачи на него в репорт:", "Отправить","Назад");
			if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "На отправку репорта/вопроса существует лимит времени, пожалуйста подождите.");
			new string[128];
			format(string, sizeof(string), "[Жалоба] {FFFFFF}%s[%i]: %s",GetName(playerid),playerid,inputtext);
			SendAdminMessage(COLOR_RED, string);
			SendClientMessage(playerid, COLOR_LIME, string);
			if(PI[playerid][pVip]) SetPVarInt(playerid, "AntiFloodRep", gettime() + 5);
			else SetPVarInt(playerid, "AntiFloodRep", gettime() + 15);
		}
	case 13213:
		{
			if(!response) return cmd_menu(playerid);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 13213, DIALOG_STYLE_INPUT, "{7efd7d}Задать вопрос", "{FFFFFF}Введите чётко поставленный вопрос:", "Отправить","Назад");
			if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "На отправку репорта/вопроса существует лимит времени, пожалуйста подождите.");
            new string[128];
			format(string, sizeof(string), "[Вопрос] {FFFFFF}%s[%d]: %s",GetName(playerid),playerid,inputtext);
			SendAdminMessage(COLOR_LIME, string);
			SendClientMessage(playerid, COLOR_LIME, string);
			if(PI[playerid][pVip]) SetPVarInt(playerid, "AntiFloodRep", gettime() + 5);
			else SetPVarInt(playerid, "AntiFloodRep", gettime() + 15);
		}
	case 15143:
		{
		    if(response) return 1;
		}
	case 15144:
		{
		    if(response) return ShowPlayerStatsDialog(playerid, playerid);
		    else return 1;
		}
	case D_COMMANDSERVER:
		{
			if(!response) return cmd_menu(playerid);
			new string[1500];
			switch(listitem)
			{
				case 0:
				{
				    string = "\0";
				    strcat(string, "{66CC33}/id {FFFFFF}- поиск игрока\n");
				    strcat(string, "{66CC00}/time {FFFFFF}- посмотреть на часы\n");
                    strcat(string, "{66CC00}/skill {FFFFFF}- показать свои навыки\n");
				    strcat(string, "{66CC00}/smoke {FFFFFF}- курить\n");
				    strcat(string, "{66CC00}/sprunk {FFFFFF}- выпить газировку\n");
				    strcat(string, "{66CC00}/play {FFFFFF}- использовать mp3-плеер\n");
				    strcat(string, "{66CC00}/healme {FFFFFF}- использовать аптечку\n");
        			strcat(string, "{66CC00}/ad {FFFFFF}- подать объявление\n");
				    strcat(string, "{66CC00}/pay {FFFFFF}- передать деньги\n");
				    strcat(string, "{66CC00}/radio {FFFFFF}- переключить радиостанцию\n");
				    strcat(string, "{66CC00}/gps {FFFFFF}- навигатор\n");
				    strcat(string, "{66CC00}/leaders {FFFFFF}- лидеры в сети\n");
				    strcat(string, "{66CC00}/pass {FFFFFF}- показать паспорт\n");
				    strcat(string, "{66CC00}/lic {FFFFFF}- показать лицензии\n");
				    strcat(string, "{66CC00}/med {FFFFFF}- показать мед. карту\n");
				    strcat(string, "{66CC00}/togphone {FFFFFF}- вкл/выкл телефон\n");
				    strcat(string, "{66CC00}/anim {FFFFFF}- список анимаций\n");
				    strcat(string, "{66CC00}/drugs {FFFFFF}- использовать наркотик\n");
				    strcat(string, "{66CC00}/dropdrugs {FFFFFF}- выкинуть наркотики\n");
				    strcat(string, "{66CC00}/phone {FFFFFF}- меню телефона\n");
				    strcat(string, "{66CC00}/number {FFFFFF}- узнать номер игрока\n");
				    strcat(string, "{66CC00}/charity {FFFFFF}- самые щедрые игроки\n");
				    strcat(string, "{66CC00}/fstyle {FFFFFF}- изменить стиль боя\n");
				    strcat(string, "{66CC00}/giveflowers {FFFFFF}- передать цветы\n");
				    strcat(string, "{66CC00}/history {FFFFFF}- история ников\n");
				    ShowPlayerDialog(playerid, D_COMMAND_SHOW, DIALOG_STYLE_MSGBOX, "{7efd7d}Основные", string, "Назад", "Закрыть");
				}
				case 1:
				{
				    string = "\0";
				    strcat(string, "{66CC00}/me {FFFFFF}- действие от 1-го лица \n");
				    strcat(string, "{66CC00}/ame {FFFFFF}- действие от 1-го лица (над головой)\n");
				    strcat(string, "{66CC00}/do {FFFFFF}- действие от 3-го лица\n");
				    strcat(string, "{66CC00}/try {FFFFFF}- попытка действия\n");
				    strcat(string, "{66CC00}/s {FFFFFF}- крикнуть\n");
				    strcat(string, "{66CC00}/w {FFFFFF}- сказать шёпотом\n");
				    strcat(string, "{66CC00}/b {FFFFFF}- NonRP чат");
				    ShowPlayerDialog(playerid, D_COMMAND_SHOW, DIALOG_STYLE_MSGBOX, "{7efd7d}Чат", string, "Назад", "Закрыть");
				}
				case 2:
				{
				    if(!GetPlayerHouse(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!");
				    string = "\0";
				    strcat(string, "{66CC00}/hmenu {FFFFFF}- меню дома\n");
				    strcat(string, "{66CC00}/healing {FFFFFF}- использовать домашнюю аптечку\n");
				    strcat(string, "{66CC00}/hgps {FFFFFF}- отметить свой дом на GPS");
				    ShowPlayerDialog(playerid, D_COMMAND_SHOW, DIALOG_STYLE_MSGBOX, "{7efd7d}Дом", string, "Назад", "Закрыть");
				}
				case 3:
				{
				    string = "\0";
				    strcat(string, "{66CC00}/buybiz {FFFFFF}- приобрести бизнес\n");
				    strcat(string, "{66CC00}/bpanel {FFFFFF}- меню бизнеса\n");
				    //strcat(string, "{66CC00}/order {FFFFFF}- заказать товар\n");
				    //strcat(string, "{66CC00}/fuel {FFFFFF}- заказать топливо\n");
				    strcat(string, "{66CC00}/business {FFFFFF}- статистика бизнеса");
				    ShowPlayerDialog(playerid, D_COMMAND_SHOW, DIALOG_STYLE_MSGBOX, "{7efd7d}Бизнес", string, "Назад", "Закрыть");
				}
				case 4:
				{
				    string = "\0";
				    strcat(string, "{66CC00}/changecar {FFFFFF}- обменять транспорт\n");
				    strcat(string, "{66CC00}/sellcar {FFFFFF}- продать транспорт\n");
                    strcat(string, "{66CC00}/mynumber {FFFFFF}- получить номера на транспорт\n");
				    strcat(string, "{66CC00}/eject {FFFFFF}- выкинуть из транспорта\n");
				    strcat(string, "{66CC00}/lock {FFFFFF}- открыть/закрыть личный транспорт\n");
				    strcat(string, "{66CC00}/lock 2 {FFFFFF}- открыть/закрыть\n");
				    strcat(string, "арендованный транспорт\n");
                    strcat(string, "{66CC00}/usecanister {FFFFFF}- использовать канистру\n");
				    strcat(string, "{66CC00}/usetools {FFFFFF}- использовать инструменты\n");
				    if(PI[playerid][pVip])
				    {
				    	strcat(string, "{66CC00}/removetuning {FFFFFF}- удалить тюнинг с транспорта");
			    	}
				    ShowPlayerDialog(playerid, D_COMMAND_SHOW, DIALOG_STYLE_MSGBOX, "{7efd7d}Транспорт", string, "Назад", "Закрыть");
				}
				case 5:
				{
					if(PI[playerid][pJob] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы безработный человек!");
                    string = "\0";
					switch(PI[playerid][pJob])
					{
						case JOB_BUS:
						{
						    strcat(string, "{FFFFFF}Водитель автобуса:\n");
				    		strcat(string, "{66CC00}/end {FFFFFF}- завершить рейс");
						}
						case JOB_TAXI:
						{
						    strcat(string, "{FFFFFF}Водитель такси:\n");
				    		strcat(string, "{66CC00}/fare {FFFFFF}- начать работу");
						}
						case JOB_MECHANIC:
						{
						    strcat(string, "{FFFFFF}Автомеханик:\n");
				    		strcat(string, "{66CC00}/repair {FFFFFF}- починить транспорт\n");
				    		strcat(string, "{66CC00}/refill {FFFFFF}- заправить транспорт");
						}
						case JOB_TRUCKER:
						{
						    strcat(string, "{FFFFFF}Дальнобойщик:\n");
				    		strcat(string, "{66CC00}/jskill {FFFFFF}- навыки дальнобойщика\n");
				    		strcat(string, "{66CC00}/tgps {FFFFFF}- места загрузок");
						}
					}
				    ShowPlayerDialog(playerid, D_COMMAND_SHOW, DIALOG_STYLE_MSGBOX, "{7efd7d}По работе", string, "Назад", "Закрыть");
				}
				case 6:
				{
				    if(PI[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не лидер!");
				    string = "\0";
				    strcat(string, "{66CC00}/invite {FFFFFF}- принять игрока\n");
				    strcat(string, "{66CC00}/uninvite {FFFFFF}- уволить игрока\n");
				    strcat(string, "{66CC00}/giverank {FFFFFF}- изменить ранг\n");
				    strcat(string, "{66CC00}/changeskin {FFFFFF}- выбрать служебную одежду\n");
				    strcat(string, "{66CC00}/lpanel {FFFFFF}- меню лидера");
				    ShowPlayerDialog(playerid, D_COMMAND_SHOW, DIALOG_STYLE_MSGBOX, "{7efd7d}Для лидеров", string, "Назад", "Закрыть");
				}
				case 7:
				{
				    if(PI[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации!");
				    string = "\0";
				    if(IsAMayor(playerid))
				    {
				        strcat(string, "{66CC00}/r {FFFFFF}- рация\n");
				        strcat(string, "{66CC00}/rb {FFFFFF}- NonRP чат фракции\n");
				    	strcat(string, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(string, "{66CC00}/db {FFFFFF}- NonRP департамент\n");
				    	strcat(string, "{66CC00}/gov {FFFFFF}- гос. новости\n");
				    	strcat(string, "{66CC00}/find {FFFFFF}- онлайн фракции");
				    }
					else if(PI[playerid][pMember] == TEAM_POLICIA || PI[playerid][pMember] == TEAM_SFPD || PI[playerid][pMember] == TEAM_LVPD
					|| PI[playerid][pMember] == TEAM_FBI)
					{
					    strcat(string, "{66CC00}/r {FFFFFF}- рация\n");
					    strcat(string, "{66CC00}/rb {FFFFFF}- NonRP чат фракции\n");
				    	strcat(string, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(string, "{66CC00}/db {FFFFFF}- NonRP департамент\n");
				    	strcat(string, "{66CC00}/gov {FFFFFF}- гос. новости\n");
				    	strcat(string, "{66CC00}/m {FFFFFF}- служебный мегафон\n");
				    	strcat(string, "{66CC00}/frisk {FFFFFF}- обыскать\n");
				    	strcat(string, "{66CC00}/takegun {FFFFFF}- изъять оружие\n");
				    	strcat(string, "{66CC00}/take {FFFFFF}- изъять лицензии\n");
				    	strcat(string, "{66CC00}/ticket {FFFFFF}- выписать штраф\n");
				    	strcat(string, "{66CC00}/ram {FFFFFF}- взломать дверь дома\n");
				    	strcat(string, "{66CC00}/break {FFFFFF}- дорожное ограждение\n");
				    	strcat(string, "{66CC00}/cuff {FFFFFF}- надеть наручники\n");
				    	strcat(string, "{66CC00}/uncuff {FFFFFF}- снять наручники\n");
				    	strcat(string, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	strcat(string, "{66CC00}/clear {FFFFFF}- снять розыск\n");
				    	strcat(string, "{66CC00}/wanted {FFFFFF}- список разыскиваемых\n");
				    	strcat(string, "{66CC00}/su {FFFFFF}- подать в розыск\n");
				    	strcat(string, "{66CC00}/flight {FFFFFF}- фонарик\n");
				    	strcat(string, "{66CC00}/arrest {FFFFFF}- провести арест\n");
				    	strcat(string, "{66CC00}/unmask {FFFFFF}- снять маску с игрока\n");
				    	strcat(string, "{66CC00}/search {FFFFFF}- найти местоположение игрока");
					}
					else if(PI[playerid][pMember] == TEAM_ARMIYA)
					{
					    strcat(string, "{66CC00}/r {FFFFFF}- рация\n");
					    strcat(string, "{66CC00}/rb {FFFFFF}- NonRP чат фракции\n");
				    	strcat(string, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(string, "{66CC00}/db {FFFFFF}- NonRP департамент\n");
				    	strcat(string, "{66CC00}/gov {FFFFFF}- гос. новости\n");
				    	strcat(string, "{66CC00}/frisk {FFFFFF}- обыскать\n");
				    	strcat(string, "{66CC00}/makegun {FFFFFF}- сделать оружие\n");
				    	strcat(string, "{66CC00}/givevoen {FFFFFF}- выдать военный билет\n");
				    	strcat(string, "{66CC00}/find {FFFFFF}- онлайн фракции");
					}
					else if(PI[playerid][pMember] == TEAM_AUTOSCHOOL)
					{
					    strcat(string, "{66CC00}/r {FFFFFF}- рация\n");
					    strcat(string, "{66CC00}/rb {FFFFFF}- NonRP чат фракции\n");
				    	strcat(string, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(string, "{66CC00}/db {FFFFFF}- NonRP департамент\n");
				    	strcat(string, "{66CC00}/gov {FFFFFF}- гос. новости\n");
				    	strcat(string, "{66CC00}/salelic {FFFFFF}- продать лицензию\n");
				    	strcat(string, "{66CC00}/find {FFFFFF}- онлайн фракции");
					}
					else if(IsANews(playerid))
					{
					    strcat(string, "{66CC00}/r {FFFFFF}- чат фракции\n");
					    strcat(string, "{66CC00}/rb {FFFFFF}- NonRP чат фракции\n");
				    	strcat(string, "{66CC00}/edit {FFFFFF}- меню объявлений\n");
				    	strcat(string, "{66CC00}/npanel {FFFFFF}- цены на sms и объявления\n");
				    	strcat(string, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	if(PI[playerid][pLeader]) strcat(string, "{66CC00}/nbank {FFFFFF}- сейф организации");
					}
					else if(IsAMedic(playerid))
					{
					    strcat(string, "{66CC00}/r {FFFFFF}- чат фракции\n");
					    strcat(string, "{66CC00}/rb {FFFFFF}- NonRP чат фракции\n");
					    strcat(string, "{66CC00}/d {FFFFFF}- департамент\n");
					    strcat(string, "{66CC00}/db {FFFFFF}- NonRP департамент\n");
				    	strcat(string, "{66CC00}/heal {FFFFFF}- провести лечение\n");
				    	strcat(string, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	if(PI[playerid][pRank] > 3) strcat(string, "{FFFF00}/givemed {FFFFFF}- выдать мед.карту");
					}
					else if(IsAGang(playerid))
					{
					    strcat(string, "{66CC00}/f {FFFFFF}- чат фракции\n");
					    strcat(string, "{66CC00}/fb {FFFFFF}- NonRP чат фракции\n");
					    strcat(string, "{66CC00}/robhouse {FFFFFF}- ограбить дом\n");
				    	strcat(string, "{66CC00}/selldrugs {FFFFFF}- продать наркотики\n");
				    	strcat(string, "{66CC00}/makegun {FFFFFF}- сделать оружие\n");
				    	strcat(string, "{66CC00}/sellgun {FFFFFF}- продать оружие\n");
				    	strcat(string, "{66CC00}/sellzone {FFFFFF}- продать территорию\n");
				    	strcat(string, "{66CC00}/capture {FFFFFF}- начать войну за территорию\n");
				    	strcat(string, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	if(PI[playerid][pRank] >= 9) strcat(string, "{66CC00}/close {FFFFFF}- открыть/закрыть склад");
					}
					else if(IsAMafia(playerid))
					{
					    strcat(string, "{66CC00}/f {FFFFFF}- чат фракции\n");
					    strcat(string, "{66CC00}/fn {FFFFFF}- NonRP чат фракции\n");
					    strcat(string, "{66CC00}/tie {FFFFFF}- связать игрока\n");
				    	strcat(string, "{66CC00}/untie {FFFFFF}- развязать игрока\n");
				    	strcat(string, "{66CC00}/bizwar {FFFFFF}- забить стрелу за бизнес\n");
				    	strcat(string, "{66CC00}/bizlist {FFFFFF}- список бизнесов\n");
				    	strcat(string, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	if(PI[playerid][pRank] >= 9) strcat(string, "{66CC00}/close {FFFFFF}- открыть/закрыть склад");
					}
					ShowPlayerDialog(playerid, D_COMMAND_SHOW, DIALOG_STYLE_MSGBOX, "{7efd7d}Организация", string, "Назад", "Закрыть");
				}
	        }
		}
		case D_COMMAND_SHOW:
		{
		    if(!response) return 1;
		    else ShowPlayerDialog(playerid, D_COMMANDSERVER, DIALOG_STYLE_LIST, "{7efd7d}Команды сервера", "Основные\nЧат\nДом\nБизнес\nТранспорт\nПо работе\nДля лидеров\nОрганизация", "Выбрать", "Назад");
		}
		case D_UCPADMIN:
		{
			if(!response) return 1;
			new string[100];
			switch(listitem)
			{
				case 0:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий ник для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Ник", string, "Принять", "Отмена");
					PlayerStats[playerid] = 1;
				}
				case 1:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Уровень", string, "Принять", "Отмена");
					PlayerStats[playerid] = 2;
				}
				case 2:
				{
					format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialog(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Опыт", string, "Принять", "Отмена");
					PlayerStats[playerid] = 3;
				}
				case 3:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Пол", string, "Принять", "Отмена");
					PlayerStats[playerid] = 4;
				}
				case 4:
				{
				    format(string, sizeof(string), "{FFFFFF}Введите уровень дальнобойщика для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Уровень дальнобойщика", string, "Принять", "Отмена");
					PlayerStats[playerid] = 5;
				}
			}
		}
		case D_UCPADMIN2:
		{
			if(!response) return 1;
			new string[100];
			switch(PlayerStats[playerid])
			{
			case 1:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий ник для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Ник", string, "Принять", "Отмена");
						return 1;
					}
					format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE `name` = '%s'", inputtext);
					mysql_tquery(dbHandle, query, "OnPlayerSetName", "is", playerid, inputtext);
				}
			case 2:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Уровень", string, "Принять", "Отмена");
						return 1;
					}
					if(strval(inputtext) < 1 || strval(inputtext) > 100)
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Уровень", string, "Принять", "Отмена");
						return 1;
					}
					SendMes(playerid, COLOR_LIME,"Вы установили уровень игрока %s на %d",GetName(NameStats[playerid]), strval(inputtext));
					SendMes(NameStats[playerid], COLOR_LIME, "Администратор %s установил вам уровень игрока на %d", GetName(playerid), strval(inputtext));
					PI[NameStats[playerid]][pLevel] = strval(inputtext);
					SetPlayerScore(NameStats[playerid], PI[NameStats[playerid]][pLevel]);
					MysqlUpdatePlayerInt(NameStats[playerid], "level", PI[NameStats[playerid]][pLevel]);
					format(string, sizeof(string), "%s изменил уровень %s на %i", GetName(playerid), GetName(NameStats[playerid]), strval(inputtext));
					SendLog("EditStats", string);
				}
			case 3:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Опыт", string, "Принять", "Отмена");
						return 1;
					}
					if(strval(inputtext) < 1 || strval(inputtext) > 1000)
					{
						format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Опыт", string, "Принять", "Отмена");
						return 1;
					}
					SendMes(playerid, COLOR_LIME, "Вы установили опыт игроку %s на %d", GetName(NameStats[playerid]), strval(inputtext));
					SendMes(NameStats[playerid], COLOR_LIME, "Администратор %s установил вам опыт на %d", GetName(playerid), strval(inputtext));
					PI[NameStats[playerid]][pExp] = strval(inputtext);
					MysqlUpdatePlayerInt(NameStats[playerid], "exp", PI[NameStats[playerid]][pExp]);
					format(string, sizeof(string), "%s изменил опыт %s на %i", GetName(playerid), GetName(NameStats[playerid]), strval(inputtext));
					SendLog("EditStats", string);
				}
			case 4:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Пол", string, "Принять", "Отмена");
						return 1;
					}
					if(strval(inputtext) < 1 || strval(inputtext) > 2)
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Пол", string, "Принять", "Отмена");
						return 1;
					}
					SendMes(playerid, COLOR_LIME, "Вы изменили пол игроку %s на %s",GetName(NameStats[playerid]), (strval(inputtext)==1)?("мужской"):("женский"));
					SendMes(NameStats[playerid], COLOR_LIME, "Администратор %s изменил ваш пол на %s", GetName(playerid), (strval(inputtext)==1)?("мужской"):("женский"));
					PI[NameStats[playerid]][pSex] = strval(inputtext);
					MysqlUpdatePlayerInt(NameStats[playerid], "sex", PI[NameStats[playerid]][pSex]);
					format(string, sizeof(string), "%s изменил пол %s на %s", GetName(playerid), GetName(NameStats[playerid]), (strval(inputtext)==1)?("мужской"):("женский"));
					SendLog("EditStats", string);
				}
			case 5:
			    {
			        if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите уровень дальнобойщика для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Уровень дальнобойщика", string, "Принять", "Отмена");
						return 1;
					}
					if(strval(inputtext) < 1)
					{
						format(string, sizeof(string), "{FFFFFF}Введите уровень дальнобойщика для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Уровень дальнобойщика", string, "Принять", "Отмена");
						return 1;
					}
					SendMes(playerid, COLOR_LIME, "Вы изменили уровень дальнобойщика игроку %s на %i",GetName(NameStats[playerid]), strval(inputtext));
					SendMes(NameStats[playerid], COLOR_LIME, "Администратор %s изменил вам уровень дальнобойщика на %i", GetName(playerid), strval(inputtext));
					PI[NameStats[playerid]][pTruckLevel] = strval(inputtext);
					MysqlUpdatePlayerInt(NameStats[playerid], "truckskill", PI[NameStats[playerid]][pTruckLevel]);
			    }
			}
			PlayerStats[playerid] = 0;
		}
	case D_ADDNED:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new Float:X,Float:Y,Float:Z,Float:Angle;
						GetPlayerPos(playerid, X,Y,Z);
 					GetPlayerFacingAngle(playerid,Angle);
						VehTest[playerid] = CreateVehicle(426, X,Y,Z, Angle, random(10), 0, 10000);
						VehTest[cFuel] = 50;
						PutPlayerInVehicle(playerid, VehTest[playerid], 0);
						SendClientMessage(playerid, COLOR_LIGHTRED, "Припаркуйте авто около будущего дома, потом введите: /tpc");
						TPC[playerid] = false;
					}
					case 1: ShowPlayerDialog(playerid, D_ADDNED+4, 2, "Добавить бизнес", "Магазин 24/7\nЗаправка\nМагазин Игрушек\nМагазин Пиротехники\nМагазин Компьютеров\nСауна\nАптека\nСтоловая\nКлуб\nСвободно\nСвободно\nСТО\nМагазин одежды\nКазино\nРыбаловный магазин", "Далее", "Отмена");
					case 2: ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
					case 3: ShowPlayerDialog(playerid, D_ADDNED+5, 0, "Добавить ATM", "Вы хотите начать установку банкомата?", "Да", "Нет");
				}
			}
			return 1;
		}
	case D_ADDNED+1:
		{
			if(response)
			{
				new type, Float:x,Float:y,Float:z;
				if(sscanf(inputtext,"i",type))
				{
					new string[616];
					new string1[150];
					strcat(string,"ВАЖНО: Тип интерьера\n\nПРИМЕР: 1\n\n");
					strcat(string1,"1. Низкий класс\n");
					strcat(string1,"2. Средний класс\n");
					strcat(string1,"3. Высокий класс\n");
					strcat(string1,"4. Квартира\n");
					return ShowPlayerDialog(playerid,D_ADDNED+1,1,"Добавить дом",string,"Выбрать","Закрыть");
				}
				TOTALHOUSE++;
				GetPlayerPos(playerid,x,y,z);
				HouseInfo[TOTALHOUSE][hEntrx] = x;
				HouseInfo[TOTALHOUSE][hEntry] = y;
				HouseInfo[TOTALHOUSE][hEntrz] = z;
				new string[90];
				switch(type)
				{
					case 1: format(string,90,"342.3921,2323.4385,-25.8204,A,5");	// [интерьер 9 звёздочный](меню) int 5
					case 2: format(string,90,"279.7840,1714.9084,1035.5083,C,9");	// [интерьер 2 звёздочный](меню) int 9
					case 3: format(string,90,"2064.6960,1058.7374,1002.0262,B,6");	// [интерьер 9 звёздочный](меню) int 6
				}
				sscanf(coordh,"p<,>ffff",
				HouseInfo[TOTALHOUSE][hCarx],HouseInfo[TOTALHOUSE][hCary],HouseInfo[TOTALHOUSE][hCarz],HouseInfo[TOTALHOUSE][hCarfa]);
				sscanf(string,"p<,>fffsi",
				HouseInfo[TOTALHOUSE][hExitx],HouseInfo[TOTALHOUSE][hExity],HouseInfo[TOTALHOUSE][hExitz],
				HouseInfo[TOTALHOUSE][hDiscript],HouseInfo[TOTALHOUSE][hInt]);
				HouseInfo[TOTALHOUSE][hVirtual] = TOTALHOUSE;
				new tmpvar;
				if(!strcmp("D",HouseInfo[TOTALHOUSE][hDiscript],true)) tmpvar = 5000000;
				if(!strcmp("C",HouseInfo[TOTALHOUSE][hDiscript],true)) tmpvar = 500000;
				if(!strcmp("B",HouseInfo[TOTALHOUSE][hDiscript],true)) tmpvar = 10000000;
				if(!strcmp("A",HouseInfo[TOTALHOUSE][hDiscript],true)) tmpvar = 30000;
				HouseInfo[TOTALHOUSE][hPrice] = tmpvar;
				strmid(HouseInfo[TOTALHOUSE][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				HouseInfo[TOTALHOUSE][hMIcon] = CreateDynamicMapIcon(HouseInfo[TOTALHOUSE][hEntrx], HouseInfo[TOTALHOUSE][hEntry], HouseInfo[TOTALHOUSE][hEntrz], 31, 0,-1,-1,-1,30.0);
				HouseInfo[TOTALHOUSE][hPickup] = CreateDynamicPickup(1273,1, HouseInfo[TOTALHOUSE][hEntrx], HouseInfo[TOTALHOUSE][hEntry], HouseInfo[TOTALHOUSE][hEntrz]);
                new totalstring[512];
				format(totalstring,sizeof(totalstring),"INSERT INTO "T_HOUSE" (id,hEntrx,hEntry,hEntrz,hExitx,hExity,hExitz,carx,cary,carz,carfa,hDiscript,hPrice,hInt,hVirtual)\
				VALUES (%d,'%f','%f','%f','%f','%f','%f','%f','%f','%f','%f','%s',%d,%d,%d)",
				TOTALHOUSE,
				HouseInfo[TOTALHOUSE][hEntrx],HouseInfo[TOTALHOUSE][hEntry],HouseInfo[TOTALHOUSE][hEntrz],
				HouseInfo[TOTALHOUSE][hExitx],HouseInfo[TOTALHOUSE][hExity],HouseInfo[TOTALHOUSE][hExitz],
				HouseInfo[TOTALHOUSE][hCarx],HouseInfo[TOTALHOUSE][hCary],HouseInfo[TOTALHOUSE][hCarz],HouseInfo[TOTALHOUSE][hCarfa],
				HouseInfo[TOTALHOUSE][hDiscript],HouseInfo[TOTALHOUSE][hPrice],HouseInfo[TOTALHOUSE][hInt],HouseInfo[TOTALHOUSE][hVirtual]);
				mysql_tquery(dbHandle, totalstring, "", "");
				SendMes(playerid,COLOR_LIME,"Дом №%d Успешно создан",TOTALHOUSE);
				return 1;
			}
			TPC[playerid] = false;
		}
	case D_ADDNED+4:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: format(boordh,sizeof(boordh),"267.7559,1550.4117,1045.3783,264.7126,1549.4253,1045.3783,6,56,1"); //Магазин "24/7"
			case 1: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,47,2"); // FUEL
			case 2: format(boordh,sizeof(boordh),"-100.4898,1715.9366,1012.9443,-103.5031,1719.0847,1012.9443,5,55,10");//Магазин "Игрушки"
			case 3: format(boordh,sizeof(boordh),"362.8425,-75.1392,1001.5078,377.3217,-67.8903,1001.5151,10,10,11");//Магазин "Пиротехники"
			case 4: format(boordh,sizeof(boordh),"364.9063,-11.7721,1001.8516,369.6516,-6.3217,1001.8589,9,14,12");//Магазин "Компьютеров"
			case 5: format(boordh,sizeof(boordh),"364.9063,-11.7721,1001.8516,369.6516,-6.3217,1001.8589,9,14,13");//Сауна
			case 6: format(boordh,sizeof(boordh),"-250.8868,1296.8453,1013.0979,-251.2342,1300.6338,1013.0979,9,14,14");//Аптека
			case 7: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,2,48,4");
			case 8: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,11,49,5");
			case 9: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,7,18,6");
			case 10: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,5,10,4");
			case 11: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,27,7");//СТО
			case 12: format(boordh,sizeof(boordh),"-1772.9454,1774.0067,2377.4160,-1779.2419,1774.6993,2377.4160,5,45,8");//Магазин одежды
			case 13: format(boordh,sizeof(boordh),"1600.3970, 971.2603, 1819.4727,1613.3817,997.2397,1819.0200,1,25,9"); // Казино
			case 14: format(boordh,sizeof(boordh),"2250.3267,1364.8739,11.6528,2251.7261,1371.2374,11.6528,1,56,15"); // Рыбаловный магазин
			}
			ShowPlayerDialog(playerid, D_HEAL+6, 1, "Бизнес", "ВАЖНО: Название\n\nПРИМЕР: Gas Station", "Принять", "Отмена");
		}
	case D_ADDNED+5:
		{
			if(PlayerLogged[playerid] == false) return 1;
			if(PI[playerid][pAdmin] < ADM_GRAND || AdminLogged[playerid] == false) return 1;
			if(TOTALATM >= MAX_ATM-2) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете больше устанавливать банкоматы!");
			if(GetPVarInt(playerid, "LoadATM") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже устанавливаете банкомат!");
			ShowPlayerDialog(playerid, D_ATM+9, 0, "Добавить банкомат", "Вы хотите начать установку банкомата?", "Да", "Нет");
			return 1;
		}
		case D_JOINHOUSE:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid, "PlayerHouse");
			if(!strcmp(HouseInfo[idx][hOwner], "None", true))
			{
				if(PI[playerid][pCash] < HouseInfo[idx][hPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег!");
				else
				{
					new house = 0;
					for(new i = 1; i <= TOTALHOUSE;i++)
					{
						if(!strcmp(HouseInfo[i][hOwner], GetName(playerid), true)) house++;
					}
					if(house != 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть дом!");
					PI[playerid][pCash] -= HouseInfo[idx][hPrice];
					HouseInfo[idx][hBuyPrice] = HouseInfo[idx][hPrice]/2;
					HouseInfo[idx][hOplata] = 1;
					HouseInfo[idx][hLock] = 1;
					strmid(HouseInfo[idx][hOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
                    new string[256];
					format(string, sizeof(string), "UPDATE "T_HOUSE" SET hOwner = '%s', hOplata = %i, buyprice = %i, hLock = %i WHERE id = '%d' LIMIT 1", HouseInfo[idx][hOwner], 1, HouseInfo[idx][hBuyPrice], HouseInfo[idx][hLock], idx);
					mysql_tquery(dbHandle, string, "", "");
					PI[playerid][pSpawnChange] = 1;
					PI[playerid][cLock] = 1;
					LoadMyCar(playerid);
					UpdateHouse(idx);
					return 1;
				}
			}
			else
			{
				if(HouseInfo[idx][hLock] == 1)
				{
					if(strcmp(GetName(playerid), HouseInfo[idx][hOwner], true) == 0) ShowPlayerDialog(playerid, D_JOB+14, 0, "{7efd7d}Дом", "{FFFFFF}Ваш дом закрыт\n\nВы хотите его открыть?", "Да", "Нет");
					GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
				}
				else
				{
					SetPlayerPos(playerid,HouseInfo[idx][hExitx],HouseInfo[idx][hExity],HouseInfo[idx][hExitz]);
					SetPlayerInterior(playerid,HouseInfo[idx][hInt]);
					SetPlayerVirtualWorld(playerid,HouseInfo[idx][hVirtual]);
				}
			}
		}
		case D_SELLHOUSE:
		{
		    if(!response) return cmd_home(playerid);
			new i = GetPVarInt(playerid, "PlayerHouse");
			strmid(HouseInfo[i][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			PI[playerid][pBank] += HouseInfo[i][hOplata];
			PI[playerid][pSpawnChange] = 0;
			SendMes(playerid, COLOR_LIME, "Подсказка: {FFFFFF}Деньги с домашнего счета переведены на ваш банковский счет (%d Рублей)",HouseInfo[i][hOplata] );
			MysqlUpdateHouseStr(i, "hOwner", "None");
			HouseInfo[i][hLock] = 1;
			SendMes(playerid, COLOR_DARKORANGE, "Вы продали свой дом государству за %d Рублей. Деньги переведены в банк",HouseInfo[i][hBuyPrice]);
			PI[playerid][pBank] += HouseInfo[i][hBuyPrice];
			UpdateHouse(i);
			if(PI[playerid][PlayerCarID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(PI[playerid][PlayerCarID]);
				PI[playerid][PlayerCarID] = INVALID_VEHICLE_ID;
			}
			format(query, sizeof(query), "UPDATE "T_HOUSE" SET  hOwner = '%s', buyprice = 0, hLock = %d, hOplata = 0 WHERE id = '%d' LIMIT 1", HouseInfo[i][hOwner], HouseInfo[i][hLock], i);
			mysql_tquery(dbHandle, query, "", "");
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[i][hVirtual])
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPosEx(playerid, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz]);
				DeletePVar(playerid, "PlayerHouse");
			}
		}
		case D_SELLHOUSE+1:
		{
			if(response)
			{
				if(!IsPlayerConnected(HouseOffer[playerid])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
				if(PlayerLogged[HouseOffer[playerid]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
				if(GetMoney(playerid) < HousePrice[playerid])
				{
					SendMes(HouseOffer[playerid], COLOR_GREY, "У %s недостаточно средств!", GetName(playerid));
					HouseOffer[playerid] = -1;
					HousePrice[playerid] = 0;
					return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег!");
				}
				TransferMoney(-1, HouseOffer[playerid], HousePrice[playerid]);
				format(query, sizeof(query), "UPDATE "T_HOUSE" SET hOwner = '%s', hLock = 1, hOplata = 0 WHERE id = '%d' LIMIT 1", GetName(HouseOffer[playerid]), GetPVarInt(playerid, "PlayerHouse"));
				mysql_tquery(dbHandle, query, "", "");
				format(query, sizeof(query), "UPDATE "T_HOUSE" SET hOwner = '%s', hLock = 1, hOplata = 0 WHERE id = '%d' LIMIT 1", GetName(playerid), GetPVarInt(HouseOffer[playerid], "PlayerHouse"));
				mysql_tquery(dbHandle, query, "", "");
				strmid(HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hOwner],GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				strmid(HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hOwner],GetName(HouseOffer[playerid]), 0, strlen(GetName(HouseOffer[playerid])), MAX_PLAYER_NAME);
				HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hLock] = 1;
				HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hLock] = 1;
				HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hOplata] = 0;
				HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hOplata] = 0;
				SetPVarInt(playerid, "PlayerHouse", GetPVarInt(HouseOffer[playerid], "PlayerHouse"));
				SetPVarInt(HouseOffer[playerid], "PlayerHouse", GetPVarInt(playerid, "PlayerHouse"));
				SendMes(playerid, COLOR_LIME, "Вы обменялись домами с %s. Доплата: %d Рублей", GetName(HouseOffer[playerid]),HousePrice[playerid]);
				SendMes(HouseOffer[playerid], COLOR_LIME, "Вы обменялись домами с %s. Ваша доплата: %d Рублей", GetName(playerid),HousePrice[playerid]);
				HouseOffer[playerid] = -1;
				HousePrice[playerid] = 0;
				PI[playerid][pSpawnChange] = 0;
			}
			else SendMes(HouseOffer[playerid], COLOR_DARKORANGE, "%s отклонил предложение обменяться домами с Вами", GetName(playerid));
		}
	case D_INVITEFRAC:
		{
		    if(!response)
			{
			    DeletePVar(playerid, "offerplayer");
				DeletePVar(playerid, "offerfractionid");
			    return 1;
			}
			new fractionid = GetPVarInt(playerid, "offerfractionid");
			new offer = GetPVarInt(playerid, "offerplayer");
			new mes[128];
			for(new i; i < 8; i++)
			{
				new skinid = Fraction_Skin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes, sizeof(mes), "Скин %d [%d]", i+1, skinid);
				else format(mes, sizeof(mes), "%s\nСкин %d [%d]", mes, i+1, skinid);
			}
			SendClientMessage(playerid, COLOR_BLUE, "Ждите, пока лидер выберет одежду для Вас");
			ShowPlayerDialog(offer, D_INVITESKIN, 2, "{7efd7d}Выбор скина", mes, "Принять", "");
		}
	case D_INVITESKIN:
	    {
	        if(!response) return 1;
	        new actplayerid = GetPVarInt(playerid, "actplayerid");
			new fractionid = GetPVarInt(actplayerid, "offerfractionid");
			new skinid = Fraction_Skin[fractionid][listitem];
			SendMes(actplayerid, COLOR_BLUE, "Вы присоединились к организации \"%s\"", Fraction_Name[fractionid]);
			SendMes(playerid, COLOR_BLUE, "%s принял предложение присоединиться к \"%s\"", GetName(actplayerid), Fraction_Name[fractionid]);
			PI[actplayerid][pMember] = fractionid;
			PI[actplayerid][pRank] = 1;
			PI[actplayerid][pMemberSkin] = skinid;
			SetPlayerSkin(actplayerid, skinid);
			PI[actplayerid][pJob] = 0;
  			ResetPlayerWeaponsAC(actplayerid);
		}
	case D_WEATHER:
		{
			if(!response) return 1;
			SetWeather(listitem+1);
			SendClientMessage(playerid, COLOR_LIME, "Погода установлена");
		}
	case D_FRACMENU:
		{
            if(!response) return DeletePVar(playerid, "actplayerid");
            SetPVarInt(playerid, "actfraction", listitem+1);
            new fractionid = GetPVarInt(playerid, "actfraction");
            if(fractionid >= 13 && fractionid <= 14)
			{
				DeletePVar(playerid, "actplayerid");
				DeletePVar(playerid, "actfraction");
				return 1;
			}
			new mes[128];
			for(new i; i < 8; i++)
			{
				new skinid = Fraction_Skin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes, sizeof(mes), "Скин %d [%d]", i+1, skinid);
				else format(mes, sizeof(mes), "%s\nСкин %d [%d]", mes, i+1, skinid);
			}
			ShowPlayerDialog(playerid, D_LEADERSKIN, 2, "{7efd7d}Выбор скина", mes, "Принять", "Отмена");
		}
	case D_LEADERSKIN:
	    {
			if(!response)
			{
				DeletePVar(playerid, "actplayerid");
				DeletePVar(playerid, "actfraction");
				return 1;
			}
			new actplayerid = GetPVarInt(playerid, "actplayerid");
	        new fractionid = GetPVarInt(playerid, "actfraction");
	        new skinid = Fraction_Skin[fractionid][listitem];
			if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(!PlayerLogged[actplayerid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			switch(fractionid)
			{
			    case TEAM_ARMIYA,TEAM_POLICIA,TEAM_SFPD,TEAM_LVPD: PI[actplayerid][pRank] = 10;
			    case TEAM_FBI: PI[actplayerid][pRank] = 10;
			    case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR,TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL,TEAM_OPGTEST1..TEAM_VAGOS,TEAM_OPGOR..TEAM_RM,TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: PI[actplayerid][pRank] = 10;
			    case TEAM_AUTOSCHOOL: PI[actplayerid][pRank] = 10;
			}
			PI[actplayerid][pLeader] = PI[actplayerid][pMember] = fractionid;
			PI[actplayerid][pJob] = 0;
			PI[actplayerid][pMemberSkin] = skinid;
			SetPlayerSkin(actplayerid, PI[actplayerid][pMemberSkin]);
			new string[128];
			format(string, sizeof(string), "Вы назначили %s лидером организации: %s", GetName(actplayerid), Fraction_Name[fractionid]);
			SendClientMessage(playerid, COLOR_LIME, string);
			format(string, sizeof(string), "Администратор %s[%d] назначил Вас лидером организации: %s", GetName(playerid),playerid, Fraction_Name[fractionid]);
			SendClientMessage(actplayerid, COLOR_BLUE, string);
			format(string, sizeof(string), "[A] %s[%d] назначил %s лидером организации: %s", GetName(playerid),playerid, GetName(actplayerid), Fraction_Name[fractionid]);
			SendAdminMessage(COLOR_GREY, string);
			SendLog("SetLeader", string);
			ResetPlayerWeaponsAC(actplayerid);
			DeletePVar(playerid, "actplayerid");
			DeletePVar(playerid, "actfraction");
	    }
	case D_TEMPLEADER:
		{
			if(!response) return 1;
			new fractionid = listitem+1;
			switch(fractionid)
			{
			    case TEAM_ARMIYA,TEAM_POLICIA,TEAM_SFPD,TEAM_LVPD: PI[playerid][pRank] = 10;
			    case TEAM_FBI: PI[playerid][pRank] = 10;
			    case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR,TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL,TEAM_OPGTEST1..TEAM_VAGOS,TEAM_OPGOR..TEAM_RM,TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: PI[playerid][pRank] = 10;
			    case TEAM_AUTOSCHOOL: PI[playerid][pRank] = 10;
			}
			PI[playerid][pLeader] = PI[playerid][pTempLeader] = PI[playerid][pMember] = fractionid;
			PI[playerid][pJob] = 0;
			PI[playerid][pMemberSkin] = GetPlayerSkin(playerid);
			PI[playerid][pSpawnChange] = 2;
			new string[128];
		    format(string, sizeof(string), "Вы назначили себя времеменным лидером организации: %s", Fraction_Name[fractionid]);
			SendClientMessage(playerid, COLOR_LIME, string);
			format(string, sizeof(string), "[A] %s назначил себя времеменным лидером организации: %s", GetName(playerid), Fraction_Name[fractionid]);
			SendAdminMessage(COLOR_GREY, string);
			SendLog("SetTempLeader", string);
			ResetPlayerWeaponsAC(playerid);
	    }
	case D_FRACMENU+1:
		{
			new targetid = GetPVarInt(playerid, "PlayerRank");
			if(!response) { DeletePVar(playerid, "PlayerRank"); return 1; }
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			if(PI[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
			if(PI[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
			if(PI[targetid][pMember] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
			DeletePVar(playerid, "PlayerRank");
			PI[targetid][pRank] = listitem+1;
			SendMes(targetid,COLOR_BLUE,"%s %s повысил/понизил ваш ранг. Сейчас вы: %s",Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid),Fraction_Rang[PI[targetid][pMember]][PI[targetid][pRank]]);
			SendMes(playerid,COLOR_BLUE,"Вы повысили/понизили ранг %s. Сейчас он/она: %s",GetName(targetid), Fraction_Rang[PI[targetid][pMember]][PI[targetid][pRank]]);
		}
	case D_FRACMENU+2:
		{
			new targetid = GetPVarInt(playerid, "PlayerRank");
			if(!response) { DeletePVar(playerid, "PlayerRank"); return 1; }
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			if(PI[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
			if(PI[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
			DeletePVar(playerid, "PlayerRank");
			PI[targetid][pRank] = listitem+1;
			SendMes(targetid,COLOR_BLUE,"Администратор %s повысил/понизил ваш ранг. Сейчас вы: %s",GetName(playerid),Fraction_Rang[PI[targetid][pMember]][PI[targetid][pRank]]);
			SendMes(playerid,COLOR_LIME,"Вы повысили/понизили ранг %s. Сейчас он/она: %s",GetName(targetid), Fraction_Rang[PI[targetid][pMember]][PI[targetid][pRank]]);
		}
	case D_FRACMENU+7:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: cmd_find(playerid);
				case 1:
				{
				    format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE member = '%i' AND online = '0'", PI[playerid][pMember]);
                    mysql_tquery(dbHandle, query, "OfflineMembersOnFraction", "i", playerid);
				}
				case 2: ShowPlayerDialog(playerid, 798, DIALOG_STYLE_INPUT, "{7efd7d}Уволить игрока", "{FFFFFF}Введите ник игрока, которого Вы хотите уволить:", "Далее", "Отмена");
			}
   		}
	case D_FRACMENU+8:
	    {
	        if(!response) return 1;
	        new actplayerid = GetPVarInt(playerid, "actplayerid");
	        new fractionid = PI[actplayerid][pMember];
	        new skinid = Fraction_Skin[fractionid][listitem];
	        if(skinid == PI[actplayerid][pMemberSkin]) return 1;
	        new mes[128];
			format(mes,sizeof(mes), "%s выдал Вам новую фракционную одежду", GetName(playerid));
			SendClientMessage(actplayerid, COLOR_BLUE, mes);
			format(mes,sizeof(mes), "%s получил новую фракционную одежду", GetName(actplayerid));
			SendClientMessage(playerid, COLOR_BLUE, mes);
	        PI[actplayerid][pMemberSkin] = skinid;
	        SetPlayerSkin(actplayerid, skinid);
			DeletePVar(playerid, "actplayerid");
	    }
	case 798:
	    {
	        if(!response) return cmd_lpanel(playerid);
	    	for(new i = strlen(inputtext); i != 0; --i)
	    	switch(inputtext[i])
			{
				case 'А'..'Я', 'а'..'я', ' ': //
				return SendClientMessage(playerid,COLOR_GREY,"Используйте только английские буквы!");
			}
   			if(!strlen(inputtext) || strlen(inputtext) < 1 || strlen(inputtext) > 40 || IsTextRussian(inputtext))
			{
			    ShowPlayerDialog(playerid, 798, DIALOG_STYLE_INPUT, "{ffffff}Уволить игрока", "Введите ник игрока, которого Вы хотите уволить:", "Далее","Отмена");
		    }
			else
			{
			    format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s' AND online = '0' AND member = '%i' LIMIT 1",inputtext,PI[playerid][pMember]);
                mysql_tquery(dbHandle, query, "OfflineUninviteOnFraction", "i", playerid);
			}
		}
	case D_ATM+9:
		{
			if(!response) return 1;
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			new atm1;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Чтобы выйти, нажмите: ESC и чтобы сохранить, нажмите курсором: СОХРАНИТЬ");
			atm1 = CreateObject(2942, x, y, z-0.35, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "LoadATM", atm1+1);
			EditObject(playerid, atm1);
		}
	case D_ATM+5:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
				    new string[90];
					format(string, 90, "{ffffff}Баланс банковского счёта: {63BD4E}%i Рублей", PI[playerid][pBank]);
					ShowPlayerDialog(playerid, D_HEAL+214, 0, "{7efd7d}Баланс", string, "Назад", "");
				}
				case 1: ShowPlayerDialog(playerid, D_ATM+7, 1, "{7efd7d}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
				case 2: ShowPlayerDialog(playerid, D_ATM+8, 1, "{7efd7d}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
				case 3:
				{
				    if(!TransferReset[playerid])
					{
						if(PI[playerid][pLevel] >= 3) ShowPlayerDialog(playerid, D_LIC+4, 1, "{7efd7d}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
						else SendClientMessage(playerid,COLOR_GREY,"Переводить деньги можно только с 3-го уровня");
					}
					else
					{
					    BankList(playerid);
					    SendClientMessage(playerid, COLOR_GREY, "Переводить деньги можно только раз в минуту.");
					}
				}
				case 4:
				{
					new h = GetPVarInt(playerid, "PlayerHouse");
					if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома!");
					new string[128];
					format(string, sizeof(string), "{FFFFFF}Введите кол-во дней\nДом проплачен на: %d дней", HouseInfo[h][hOplata]);
					ShowPlayerDialog(playerid, D_LIC+5, 1, "{7efd7d}Проплата дома", string, "Принять", "Назад");
				}
				case 5:
				{
					new b = GetPVarInt(playerid, "PlayerBizz");
					if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
					new string[128];
					format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %d Рублей", BizzInfo[b][bMoney]);
					ShowPlayerDialog(playerid, D_HEAL+21, 1, "{7efd7d}Пополнение счета бизнеса", string, "Принять", "Назад");
				}
				case 6:
				{

					new b = GetPVarInt(playerid, "PlayerBizz");
					if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
					new string[128];
					format(string, sizeof(string), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: %d Рублей", BizzInfo[b][bMoney]);
					ShowPlayerDialog(playerid, D_HEAL+213, 1, "{7efd7d}Вывод счета с бизнеса", string, "Принять", "Назад");
				}
			}
		}
	case D_ATM+932:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
				    new string[90];
					format(string, 90, "{ffffff}Баланс банковского счета: {63BD4E}%i Рублей", PI[playerid][pBank]);
					ShowPlayerDialog(playerid, D_ATM+6, 0, "{7efd7d}Баланс", string, "Назад", "");
				}
				case 1: ShowPlayerDialog(playerid, D_ATM+12, 1, "{7efd7d}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
				case 2: ShowPlayerDialog(playerid, D_ATM+11, 1, "{7efd7d}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
				case 3:
				{
					if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома!");
					new string[128];
					format(string, sizeof(string), "{FFFFFF}Введите кол-во дней");
					ShowPlayerDialog(playerid, D_LIC+5, 1, "{7efd7d}Проплата дома", string, "Принять", "Назад");
				}
				case 4:
				{
					if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
					new string[128];
					format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %d Рублей", BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bMoney]);
					ShowPlayerDialog(playerid, D_HEAL+21, 1, "{7efd7d}Пополнение счета бизнеса", string, "Принять", "Назад");
				}
				case 5:
				{
				    new string[150];
				    if(PI[playerid][pPhoneNumber] <= 1)
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет телефона!");
						return ATMList(playerid);
					}
					format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {7efd7d}0%%\n\n{FFFFFF}Текущее состояние счёта: {63BD4E}%d Рублей", PI[playerid][pPhoneBalance]);
					ShowPlayerDialog(playerid, D_ATM+1, 1, "{7efd7d}Пополнение счета телефона", string, "Принять", "Назад");
				}
				case 6:
				{
				    new string[150];
				    format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {63BD4E}%d Рублей", PI[playerid][pCharity]);
				    ShowPlayerDialog(playerid, D_ATM+4, 1, "{7efd7d}Благотворительность", string, "Принять", "Назад");
				}
			}
		}
	case D_ATM+6: return ATMList(playerid);
	case D_HEAL+214: return BankList(playerid);
	case D_ATM+7:
		{
			if(!response) return BankList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_ATM+7, 1, "{7efd7d}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_ATM+7, 1, "{7efd7d}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(GetMoney(playerid) < price) { ShowPlayerDialog(playerid, D_ATM+7, 1, "{7efd7d}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!"); }
			GiveBankMoney(playerid, price, "PutMoney");
			TransferMoney(playerid, -1, price);
			SendMes(playerid, COLOR_LIME, "Вы положили на счет: %i Рублей. На счету: %i Рублей", price, PI[playerid][pBank]);
			return 1;
		}
	case D_ATM+8:
		{
			if(!response) return BankList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_ATM+8, 1, "{7efd7d}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_ATM+8, 1, "{7efd7d}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(PI[playerid][pBank] < price) { ShowPlayerDialog(playerid, D_ATM+8, 1, "{7efd7d}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!"); }
			GiveBankMoney(playerid, -price, "TakeMoney");
			TransferMoney(-1, playerid, price);
			SendMes(playerid, COLOR_LIME, "Вы сняли со счета: %i Рублей. На счету: %i Рублей", price, PI[playerid][pBank]);
			return 1;
		}
    case D_ATM+12:
		{
			if(!response) return ATMList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_ATM+12, 1, "{7efd7d}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_ATM+12, 1, "{7efd7d}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(GetMoney(playerid) < price) { ShowPlayerDialog(playerid, D_ATM+12, 1, "{7efd7d}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!"); }
			GiveBankMoney(playerid, price, "PutMoney");
			TransferMoney(playerid, -1, price);
			SendMes(playerid, COLOR_LIME, "Вы положили на счет: %i Рублей. На счету: %i Рублей", price, PI[playerid][pBank]);
			return 1;
		}
	case D_ATM+11:
		{
			if(!response) return ATMList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_ATM+8, 1, "{7efd7d}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, D_ATM+8, 1, "{7efd7d}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(PI[playerid][pBank] < price) { ShowPlayerDialog(playerid, D_ATM+8, 1, "{7efd7d}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!"); }
			GiveBankMoney(playerid, -price, "TakeMoney");
			TransferMoney(-1, playerid, price);
			SendMes(playerid, COLOR_LIME, "Вы сняли со счета: %i Рублей. На счету: %i Рублей", price, PI[playerid][pBank]);
			return 1;
		}
	case D_NMENU:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new full = 0, CB[16];
					foreach(new i: Player)
					{
						if(PlayerLogged[i] == false || playerid == i) continue;
						if(Ether[i] == true && PI[i][pMember] == PI[playerid][pMember]) full++;
					}
					if(full > 0) return SendClientMessage(playerid, COLOR_GREY, "Эфир занят! В эфире находиться ваш коллега!");
					if(Ether[playerid] == false)
					{
						if(PI[playerid][pMember] == TEAM_SMI && PI[playerid][pNews] != 1) PI[playerid][pNews] = 1;
						else if(PI[playerid][pMember] == TEAM_SFNEWS && PI[playerid][pNews] != 2) PI[playerid][pNews] = 2;
						else if(PI[playerid][pMember] == TEAM_LVNEWS && PI[playerid][pNews] != 3) PI[playerid][pNews] = 3;
						Ether[playerid] = true;
						new string[90];
						format(string, 90, "[F] %s вошел в прямой эфир",GetName(playerid));
						SendFMes(PI[playerid][pMember], COLOR_LIGHTBLUE, string);
					}
					else if(Ether[playerid] == true)
					{
						Ether[playerid] = false;
						new string[90];
						Convert(GetPVarInt(playerid,"InEther"),CB);
						if(EtherSms[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием СМС",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
						if(EtherCall[PI[playerid][pNews]-1] == true) { format(string, 90, "[F] %s выключил прием звонков",GetName(playerid)); SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string); }
						format(string, 90, "[F] %s вышел из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",GetName(playerid), CB, CallNews[PI[playerid][pNews]-1], SmsNews[PI[playerid][pNews]-1]);
						SendFMes(PI[playerid][pMember], COLOR_LIGHTRED, string);
						SmsNews[PI[playerid][pNews]-1] = 0;
						CallNews[PI[playerid][pNews]-1] = 0;
						EtherSms[PI[playerid][pNews]-1] = false;
						EtherCall[PI[playerid][pNews]-1] = false;
						DeletePVar(playerid, "InEther");
						if(Mobile[playerid] != -1) MobileCrash(playerid);
					}
				}
				case 1:
				{
					if(Ether[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					ShowPlayerDialog(playerid, D_NMENU+1, 1, "{7efd7d}Эфир", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
				}
				case 2:
				{
					if(Ether[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					ShowPlayerDialog(playerid, D_NMENU+2, 1, "{7efd7d}Эфир", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
				}
				case 3:
				{
					if(Ether[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					new full = 0;
					full = (PI[playerid][pMember] == TEAM_SMI) ? (0) : (PI[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
					new string[90];
					if(EtherCall[full] == false)
					{
						EtherCall[full] = true;
						format(string, 90, "[F] %s включил прием звонков",GetName(playerid));
						SendFMes(PI[playerid][pMember], COLOR_GREEN, string);
					}
					else
					{
						EtherCall[full] = false;
						format(string, 90, "[F] %s выключил прием звонков",GetName(playerid));
						SendFMes(PI[playerid][pMember], COLOR_RED, string);
					}
				}
				case 4:
				{
					if(Ether[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					new full = 0;
					full = (PI[playerid][pMember] == TEAM_SMI) ? (0) : (PI[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
					new string[90];
					if(EtherSms[full] == false)
					{
						EtherSms[full] = true;
						format(string, 90, "[F] %s включил прием СМС",GetName(playerid));
						SendFMes(PI[playerid][pMember], COLOR_GREEN, string);
					}
					else
					{
						EtherSms[full] = false;
						format(string, 90, "[F] %s выключил прием СМС",GetName(playerid));
						SendFMes(PI[playerid][pMember], COLOR_RED, string);
					}
				}
				case 5: AdvertList(playerid);
			}
		}
	case D_NMENU+1:
		{
			if(!response) return 1;
			new targetid;
			if(sscanf(inputtext, "u",targetid)) ShowPlayerDialog(playerid, D_NMENU+1, 1, "{7efd7d}Эфир", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
			if(targetid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пригласить себя!");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			if(IsPlayerInAnyVehicle(playerid)&&!IsPlayerInVehicle(targetid, GetPlayerVehicleID(playerid)) || !IsPlayerInAnyVehicle(playerid) && !IsPlayerInRangeOfPlayer(10.0, playerid, targetid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
			if(EtherLive[targetid] == true) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в прямом эфире!");
			if(PI[playerid][pMember] == TEAM_SMI && PI[targetid][pNews] != 1)
			{
				SendMes(playerid, COLOR_GREY, "Игрок должен слушать радио: %s", Fraction_Name[TEAM_SMI]);
				return 1;
			}
			else if(PI[playerid][pMember] == TEAM_SFNEWS && PI[targetid][pNews] != 2)
			{
				SendMes(playerid, COLOR_GREY, "Игрок должен слушать радио: %s", Fraction_Name[TEAM_SFNEWS]);
				return 1;
			}
			else if(PI[playerid][pMember] == TEAM_LVNEWS && PI[targetid][pNews] != 3)
			{
				SendMes(playerid, COLOR_GREY, "Игрок должен слушать радио: %s", Fraction_Name[TEAM_LVNEWS]);
				return 1;
			}
			EtherLive[targetid] = true;
			SetPVarInt(targetid, "Etherfrac", PI[playerid][pMember]);
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы пригласили в эфир: %s", GetName(targetid));
			SendMes(targetid, COLOR_LIGHTBLUE, "%s пригласил вас в эфир", GetName(playerid));
		}
	case D_NMENU+2:
		{
			if(!response) return 1;
			new targetid;
			if(sscanf(inputtext, "u",targetid)) ShowPlayerDialog(playerid, D_NMENU+2, 1, "{7efd7d}Эфир", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
			if(targetid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выпроводить себя!");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			if(IsPlayerInAnyVehicle(playerid)&&!IsPlayerInVehicle(targetid, GetPlayerVehicleID(playerid)) || !IsPlayerInAnyVehicle(playerid) && !IsPlayerInRangeOfPlayer(10.0, playerid, targetid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
			if(EtherLive[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в прямом эфире!");
			EtherLive[targetid] = false;
			DeletePVar(targetid, "Etherfrac");
			SendMes(playerid, COLOR_LIGHTRED, "Вы выпроводили из эфира: %s", GetName(targetid));
			SendMes(targetid, COLOR_LIGHTRED, "%s выпроводил вас из эфира", GetName(playerid));
		}
	case D_NMENU+3:
		{
			if(!response) return 1;
			if(listitem < 3)
			{
			    new string[28];
			    format(string, sizeof(string), "Вы слушаете радио: %s",
				(listitem == 0) ? ("ТРК ''Релакс''") : (listitem == 1) ? ("Закрыто") : ("Закрыто"));
				SendClientMessage(playerid, COLOR_WHITE, string);
				PI[playerid][pNews] = listitem+1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы выключили радио");
				PI[playerid][pNews] = 0;
			}
		}
	case D_NMENU+4:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, D_NMENU+9, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за 1 секунду в эфире\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 1 Рублей до 3 Рублей", "Принять", "Отмена");
				case 1: ShowPlayerDialog(playerid, D_NMENU+10, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за СМС\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 10 Рублей до 20 Рублей", "Принять", "Отмена");
				case 2: ShowPlayerDialog(playerid, D_NMENU+11, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за 1 символ объявления\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 5 Рублей до 10 Рублей", "Принять", "Отмена");
			}
		}
	case D_NMENU+5:
		{
			if(!response) return 1;
			DeletePVar(playerid, "AdvertID");
			SetPVarInt(playerid, "AdvertID", listitem+1);
			ShowPlayerDialog(playerid, D_NMENU+6, 2, "{7efd7d}Объявления", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
		}
	case D_NMENU+6:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
   			new full = 0;
			full = (PI[playerid][pMember] == TEAM_SMI) ? (0) : (PI[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
			new string[150];
			switch(listitem)
			{
				case 0:
				{

					format(string, sizeof(string), "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
					ShowPlayerDialog(playerid, D_NMENU+7, 0, "{7efd7d}Объявления", string, "Назад", "");
				}
				case 1:
				{
					format(string, sizeof(string), "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
					ShowPlayerDialog(playerid, D_NMENU+8, 1, "{7efd7d}Объявления", string, "Принять", "Назад");
				}
				case 2:
				{
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
					    AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
					    strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
					    strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
					if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Объявление удалено");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
				case 3:
				{
					if(AdvertTime > gettime())
					{
						DeletePVar(playerid, "AdvertID");
						SendClientMessage(playerid, COLOR_GREY, "Отправлять объявление можно раз в 30 секунд!");
						return AdvertList(playerid);
					}
					format(string, sizeof(string), "%s Отправитель: %s (тел.: %i)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aPhone]);
					SendClientMessageToAll(0x66cc00AA, string);
					format(string, sizeof(string), "   Проверил объявление %s: %s",Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid));
					SendClientMessageToAll(0x339900AA, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
					    AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
					    strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
					    strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
				 	if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					AdvertTime = gettime() + 30;
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
				case 4:
				{
					format(string, sizeof(string), "[AD] %s: %s Редактор: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText], GetName(playerid));
					SendAdminMessage(COLOR_YELLOW, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
					    AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
					    strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
					    strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
					if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Объявление отправлено администрации");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			}

		}
	case D_NMENU+7: ShowPlayerDialog(playerid, D_NMENU+6, 2, "{7efd7d}Объявления", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
	case D_NMENU+8:
		{
			if(!response) return ShowPlayerDialog(playerid, D_NMENU+6, 2, "{7efd7d}Объявления", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
			new full = 0;
			full = (PI[playerid][pMember] == TEAM_SMI) ? (0) : (PI[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
			new text[60];
			if(sscanf(inputtext, "s[60]",text))
			{
			    new string[128];
				format(string, 128, "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
				return ShowPlayerDialog(playerid, D_NMENU+8, 1, "{7efd7d}Объявления", string, "Принять", "Назад");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],text,0,strlen(text),sizeof(text));
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Объявление отредактировано и сохранено");
			ShowPlayerDialog(playerid, D_NMENU+6, 2, "{7efd7d}Объявления", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
		}
	case D_NMENU+9:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_NMENU+9, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за 1 секунду в эфире\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 1 Рублей до 3 Рублей", "Принять", "Отмена");
			if(price < 1 || price > 3) return ShowPlayerDialog(playerid, D_NMENU+9, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за 1 секунду в эфире\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 1 Рублей до 3 Рублей", "Принять", "Отмена");
			CallPrice[PI[playerid][pNews]-1] = price;
			SendMes(playerid, COLOR_LIGHTGREEN, "Цена за 1 секунду в эфире: %i Рублей", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			MysqlUpdateOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+10:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_NMENU+10, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за СМС\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 10 Рублей до 20 Рублей", "Принять", "Отмена");
			if(price < 10 || price > 20) return ShowPlayerDialog(playerid, D_NMENU+10, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за СМС\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 10 Рублей до 20 Рублей", "Принять", "Отмена");
			SmsPrice[PI[playerid][pNews]-1] = price;
			SendMes(playerid, COLOR_LIGHTGREEN, "Цена за СМС: %i Рублей", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			MysqlUpdateOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+11:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_NMENU+11, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за 1 символ объявления\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 5 Рублей до 10 Рублей", "Принять", "Отмена");
			if(price < 5 || price > 10) return ShowPlayerDialog(playerid, D_NMENU+11, 1, "{7efd7d}Панель", "{FFFFFF}Введите цену за 1 символ объявления\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 5 Рублей до 10 Рублей", "Принять", "Отмена");
			AdvertPrice[PI[playerid][pNews]-1] = price;
			SendMes(playerid, COLOR_LIGHTGREEN, "Цена за 1 символ объявления: %i Рублей", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			MysqlUpdateOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+15:
		{
			if(!response) return 1;
			new color[2], model, frac, status, Float:x, Float:y, Float:z, Float:angle;
			if(sscanf(inputtext,"p<,>iiiii",model, color[0], color[1], frac, status)) return ShowPlayerDialog(playerid, D_NMENU+15,1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(model < 400 || model > 611) return ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(color[0] < 0 || color[0] > 252) return ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(color[1] < 0 || color[1] > 252) return ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(frac < 1 || frac > MAX_FRACTIONS-1) return ShowPlayerDialog(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			GetPlayerFacingAngle(playerid,angle);
			GetPlayerPos(playerid, x, y, z);
			new carid = CreateVehicle(model, x, y, z, angle, color[0], color[1], 90000);
			PutPlayerInVehicle(playerid, carid, 0);
			LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			SetPVarInt(playerid, "AddVehicleFrac", carid);
			format(coordv, sizeof(coordv), "%i, %i, %i, %i, %i, %i, %i", model, color[0], color[1], frac,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),status);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Тест транспорт создан. Установить координаты: /vpc");
		}
	case D_LIC+1:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			if(IsPlayerInRangeOfPlayer(15.0, playerid, GetPVarInt(playerid, "LicName")))
			{
				new text[32];
				switch(listitem)
				{
					case 0: text = "водительские права";
					case 1: text = "лицензию на судоходство";
					case 2: text = "лицензию на полеты";
					case 3: text = "лицензию на оружие";
					case 4: text = "патроны";
					case 5: text = "металл";
					case 6: text = "наркотики";
				}
				if(listitem >= 0 && listitem < 4)
				{
				    if(!PI[GetPVarInt(playerid, "LicName")][pLic][listitem]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
					PI[GetPVarInt(playerid, "LicName")][pLic][listitem] = 0;
					if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName")) && listitem < 3) RemoveFromVehicle(GetPVarInt(playerid, "LicName"));
					SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), text);
				}
				else
				{
					if(listitem == 4)
					{
					    if(!PI[GetPVarInt(playerid, "LicName")][pPatron]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет патрон");
						PI[GetPVarInt(playerid, "LicName")][pPatron] = 0;
						SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), text);
					}
					if(listitem == 5)
					{
					    if(!PI[GetPVarInt(playerid, "LicName")][pGunAmount]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет Металла");
						PI[GetPVarInt(playerid, "LicName")][pGunAmount] = 0;
						SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), text);
					}
					if(listitem == 6)
					{
					    if(!PI[GetPVarInt(playerid, "LicName")][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет наркотиков");
						PI[GetPVarInt(playerid, "LicName")][pDrugs] = 0;
						SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), text);
					}
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			DeletePVar(playerid, "LicName");
		}
	case D_LIC+2:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			new text[32];
			switch(listitem)
			{
				case 0: text = "водительские права";
				case 1: text = "лицензию на судоходство";
				case 2: text = "лицензию на полеты";
				case 3: text = "лицензию на оружие";
				case 4: text = "лицензию на бизнес";
			}
			if(listitem == 4 && GetPlayerBizz(GetPVarInt(playerid, "LicName")) == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бизнеса!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы выдали %s %s", text, GetName(GetPVarInt(playerid, "LicName")));
			SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s выдал вам %s",GetName(playerid), text);
			if(listitem == 4)
			{
				new i = GetPVarInt(GetPVarInt(playerid, "LicName"), "PlayerBizz");
				BizzInfo[i][bLic] = 1;
				MysqlUpdateBizzInt(i, "lic", BizzInfo[i][bLic]);
			}
			else PI[GetPVarInt(playerid, "LicName")][pLic][listitem] = 1;
			DeletePVar(playerid, "LicName");
		}
	case D_LIC+3:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			new text[32];
			switch(listitem)
			{
				case 0: text = "водительские права";
				case 1: text = "лицензию на судоходство";
				case 2: text = "лицензию на полеты";
				case 3: text = "лицензию на оружие";
				case 4: text = "патроны";
				case 5: text = "металл";
				case 6: text = "наркотики";
			}
			if(listitem >= 0 && listitem < 4)
			{
			    if(!PI[GetPVarInt(playerid, "LicName")][pLic][listitem]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
				PI[GetPVarInt(playerid, "LicName")][pLic][listitem] = 0;
				if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName")) && listitem < 3) RemoveFromVehicle(GetPVarInt(playerid, "LicName"));
				SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
				SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s забрал у вас %s",GetName(playerid), text);
			}
			else
			{
				if(listitem == 4)
				{
				    if(!PI[GetPVarInt(playerid, "LicName")][pPatron]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет патрон");
					PI[GetPVarInt(playerid, "LicName")][pPatron] = 0;
					SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s забрал у вас %s",GetName(playerid), text);
				}
				if(listitem == 5)
				{
				    if(!PI[GetPVarInt(playerid, "LicName")][pGunAmount]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет Металла");
					PI[GetPVarInt(playerid, "LicName")][pGunAmount] = 0;
					SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s забрал у вас %s",GetName(playerid), text);
				}
				if(listitem == 6)
				{
				    if(!PI[GetPVarInt(playerid, "LicName")][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет наркотиков");
					PI[GetPVarInt(playerid, "LicName")][pDrugs] = 0;
					SendMes(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s забрал у вас %s",GetName(playerid), text);
				}
			}
		}
	case D_LIC+4:
		{
			if(!response) return BankList(playerid);
			new targetid, price;
			if(sscanf(inputtext, "ui", targetid, price)) return ShowPlayerDialog(playerid, D_LIC+4, 1, "{7efd7d}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
			if(!IsPlayerConnected(targetid))
			{
				ShowPlayerDialog(playerid, D_LIC+4, 1, "{7efd7d}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			}
			if(PlayerLogged[targetid] == false)
			{
				ShowPlayerDialog(playerid, D_LIC+4, 1, "{7efd7d}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			}
			if(PI[playerid][pBank] < price)
			{
				ShowPlayerDialog(playerid, D_LIC+4, 1, "{7efd7d}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
			}
			if(price < 1) return ShowPlayerDialog(playerid, D_LIC+4, 1, "{7efd7d}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
			GiveBankMoney(playerid, -price, "Transfer-");
		    GiveBankMoney(targetid, price, "Transfer+");
			new string[128];
			format(string,sizeof(string),"Игрок %s [IP: %s] перевел игроку %s [IP: %s] на счет %d Рублей [%d Рублей]", GetName(playerid), PI[playerid][pIP], GetName(targetid), PI[targetid][pIP], price, PI[targetid][pBank]);
			SendLog("Transfer",string);
			if(price > 3000) SendAdminMessage(COLOR_GREY, string);
			SendMes(playerid, COLOR_WHITE, "Вы перевели %d Рублей игроку %s[%d] на счет", price, GetName(targetid), playerid);
			SendMes(targetid, COLOR_WHITE, "Вам поступил перевод на ваш счет в размере %d Рублей от игрока %s[%d]", price, GetName(playerid), playerid);
			TransferReset[playerid] = 60;
		}
	case D_LIC+5:
		{
			if(!response) return 1;
			new price, string[128];
			new h = GetPVarInt(playerid, "PlayerHouse");
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите кол-во дней\nДом проплачен на: %d дней", HouseInfo[h][hOplata]);
				ShowPlayerDialog(playerid, D_LIC+5, 1, "{7efd7d}Проплата дома", string, "Принять", "Назад");
			}
			if(price < 1 || price > 30)
			{
				format(string, sizeof(string), "{FFFFFF}Введите кол-во дней\nДом проплачен на: %d дней", HouseInfo[h][hOplata]);
				ShowPlayerDialog(playerid, D_LIC+5, 1, "{7efd7d}Проплата дома", string, "Принять", "Назад");
			}
			if(PI[playerid][pBank] < price)
			{
			    SendClientMessage(playerid, COLOR_GREY, "На Вашем счету в банке не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите кол-во дней\nДом проплачен на: %d дней", HouseInfo[h][hOplata]);
				return ShowPlayerDialog(playerid, D_LIC+5, 1, "{7efd7d}Проплата дома", string, "Принять", "Назад");
			}
			if(price + HouseInfo[h][hOplata] > 30) return SendClientMessage(playerid, COLOR_GREY, "Нельзя проплатить дом, больше чем на 30 дней");
			PI[playerid][pBank] -= price*GetHomeOplata(h);
			HouseInfo[h][hOplata] += price;
			MysqlUpdateHouseInt(h, "hOplata", HouseInfo[h][hOplata]);
			SendMes(playerid, COLOR_BLUE, "Вы проплатили аренду своего дома на %d дней", price);
		}
	case D_HOME+3:
	{
	    if(!response) return 1;
		cmd_home(playerid);
	}
	case D_HOME:
		{
			if(!response) return 1;
			new a = GetPVarInt(playerid, "PlayerHouse");
			new klass[32];
			new lock[32];
			if(HouseInfo[a][hDiscript] == 'C')
			{
			    klass = "средний";
			}
			else if(HouseInfo[a][hDiscript] == 'A')
			{
			    klass = "низкий";
			}
			else if(HouseInfo[a][hDiscript] == 'B')
			{
			    klass = "высокий";
			}
			if(HouseInfo[a][hLock] == 1)
			{
			    lock = "{FF0000}закрыт";
			}
			else if(HouseInfo[a][hLock] == 0)
			{
			    lock = "{99cc00}открыт";
			}
			switch(listitem)
			{
				case 0:
				{
				    new string[500];
				    format(string, sizeof(string),
					"{FFFFFF}Тип / название:\t{dfd302}%s{FFFFFF}\n\
					Номер дома:\t\t%d\n\
					Стоимость:\t\t%d руб.\n\
					Дом оплачен на:\t%d/30 дней\n\
					Количество комнат:\t3\n\
					Квартплата:\t\t%d руб в день\n\
					Статус:\t\t\t%s\n\n\
					{89df02}Для открытия панели управления вашим домом\n\
					нажмите кнопку \"Назад\"",
					klass, a, HouseInfo[a][hBuyPrice]*2, HouseInfo[a][hOplata], GetHomeOplata(a),lock);
					SPD(playerid, D_HOME+3, DSM, "{7efd7d}Информация о доме", string, "Назад", "");
					//format(string, sizeof(string), "",a,HouseInfo[a][hOplata],klass,HouseInfo[a][hBuyPrice]*2,lock,GetHomeOplata(a));
				//	SPD(playerid,D_HOME+3,DSM,"{7efd7d}Информация о Доме",string,"Назад","");
				}
				case 1:
				{
					if(HouseInfo[a][hLock] == 1)
					{
						HouseInfo[a][hLock] = 0;
						GameTextForPlayer(playerid, "~g~lock", 5000, 5);
					}
					else
					{
						HouseInfo[a][hLock] = 1;
						GameTextForPlayer(playerid, "~r~lock", 5000, 5);
					}
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					MysqlUpdateHouseInt(a, "hLock", HouseInfo[a][hLock]);
				}
				case 2:
				{
					new string[500];
					format(string, sizeof(string), "{7efd7d}1. {ffffff}Аптечки:\t\t{99cc00}%d штук",HouseInfo[a][hHeal]);
					SPD(playerid,15420,DSL,"{7efd7d}Шкаф",string,"Далее","Назад");
				}
				case 3: ShowPlayerDialog(playerid, D_SELLHOUSE, 0, "{7efd7d}Продажа дома", "{FFFFFF}Вы действительно хотите продать свой дом?\nОт его продажи Вам вернётся только половина стоимости дома", "Принять", "Назад");
			}
		}
	case D_HOME+1:
	    {
	        if(!response) return 1;
			{
			    new a = GetPVarInt(playerid, "PlayerHouse");
			    switch(listitem)
			    {
			        case 0:
			        {
						if(PlayerToPoint(8.0, playerid, HouseInfo[a][hExitx], HouseInfo[a][hExity], HouseInfo[a][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hVirtual])
						{
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							SetPlayerPosEx(playerid, HouseInfo[a][hEntrx], HouseInfo[a][hEntry], HouseInfo[a][hEntrz]);
						}
			        }
      			}
   			}
	    }
	case 15420:
		{
			if(!response) return cmd_home(playerid);
			{
			    switch(listitem)
			    {
			        case 0:
			        {
						SPD(playerid,15421,DSL,"{7efd7d}Аптечка","{7efd7d}1. {ffffff}Взять\n{7efd7d}2. {ffffff}Положить","Далее","Назад");
			        }
			    }
			}
		}
	case 15421:
		{
			if(!response) return cmd_home(playerid);
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            new a = GetPVarInt(playerid, "PlayerHouse");
						if(HouseInfo[a][hHeal] > 0)
						{
							SCM(playerid,COLOR_BLUE,"Вы взяли одну Аптечку.");
							HouseInfo[a][hHeal] -= 1;
							PI[playerid][pAptechka] += 1;
						}
						else
						{
						    SCM(playerid,COLOR_RED,"У Вас нет Аптечки.");
						}
			        }
			        case 1:
			        {
			            new a = GetPVarInt(playerid, "PlayerHouse");
						if(PI[playerid][pAptechka] > 0)
						{
							SCM(playerid,COLOR_BLUE,"Вы положили одну Аптечку.");
							HouseInfo[a][hHeal] += 1;
							PI[playerid][pAptechka] -= 1;
						}
						else
						{
						    SCM(playerid,COLOR_RED,"У Вас нет Аптечки.");
						}
			        }
			    }
			}
		}
	case D_HOME+2:
	    {
	        if(!response) return 1;
	        new a = GetPVarInt(playerid, "PlayerHouse");
	        new vehicleid = GetPlayerVehicleID(playerid);
	        SetVehiclePos(vehicleid, -1616.6018,1579.0420,2005.5146);
			PutPlayerInVehicle(playerid, vehicleid, 0);
			SetVehicleZAngle(vehicleid, 90.9035);
			SetCameraBehindPlayer(playerid);
			LinkVehicleToInterior(vehicleid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, HouseInfo[a][hVirtual]);
			SetVehicleVirtualWorld(vehicleid, HouseInfo[a][hVirtual]);
			return 1;
	    }
	case 15419:
		{
			if(!response) return 1;
			static const list_skins[3] = {287,179,255};
			SetPlayerSkin(playerid, list_skins[listitem]);
			SendClientMessage(playerid, COLOR_GREEN, (listitem == 0) ? ("Вы переоделись в постовую форму!") :
			(listitem == 1) ? ("Вы переоделись в спортивную форму!") : ("Вы переоделись в парадную форму!"));
		}
	case 1543:
		{
			if(!response) return cmd_hmenu(playerid);
			if(listitem == 3)
			{
			    if(!PI[playerid][pMemberSkin]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
				SetPlayerSkin(playerid, PI[playerid][pMemberSkin]);
				SendClientMessage(playerid, COLOR_YELLOW, "Вы надели форму организации");
			}
			else
			{
			    if(!PI[playerid][pSkin][listitem]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет одежды на этой полке");
				PI[playerid][pModel] = PI[playerid][pSkin][listitem];
				SetPlayerSkin(playerid, PI[playerid][pModel]);
				SendClientMessage(playerid, COLOR_YELLOW, "Вы надели одежду из шкафа");
			}
		}
	case D_HEAL+3:
		{
			if(!response) return PhoneMenu(playerid);
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, D_SERVICE+1, 1, "{7efd7d}Вызвать механика", "{FFFFFF}Опишите место где вы находитесь\n{AFAFAF}Сообщение должно состоять из 6 до 20 символов!", "Принять", "Отмена");
				case 1: ShowPlayerDialog(playerid, D_SERVICE+2, 1, "{7efd7d}Вызвать такси", "{FFFFFF}Опишите место где вы находитесь\n{AFAFAF}Сообщение должно состоять из 6 до 20 символов!", "Принять", "Отмена");
				case 2: ShowPlayerDialog(playerid, D_SERVICE+3, 1, "{7efd7d}Вызвать скорую помощь", "{FFFFFF}Опишите место где вы находитесь\n{AFAFAF}Сообщение должно состоять из 6 до 20 символов!", "Принять", "Отмена");
				case 3: ShowPlayerDialog(playerid, D_SERVICE+4, 1, "{7efd7d}Вызвать полицию", "{FFFFFF}Опишите место где вы находитесь\n{AFAFAF}Сообщение должно состоять из 6 до 20 символов!", "Принять", "Отмена");
			}
		}
	case D_SERVICE+1:
		{
		    if(!response)
			{
			    if(PI[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас изъяли телефон!");
				return ShowPlayerDialog(playerid, D_HEAL+3, 2, "{7efd7d}Сервисы", "1. Вызвать механика\n2. Вызвать такси\n3. Вызвать скорую помошь\n4. Вызвать полицию", "Принять", "Назад");
			}
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPVarInt(playerid, "CallMech") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы недавно вызывали механика!");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "В сообщении должно быть от 6 до 20 символов!");
			new full = 0;
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(PI[i][pJob] == JOB_MECHANIC && i != playerid) full++;
			}
			if(!full) SendClientMessage(playerid, COLOR_GREY, "В данный момент нет механиков на дежурстве!");
			else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш запрос послан механикам. Ждите ответа");
			MechanicON[playerid] = true;
			new trr[3];
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
			else trr = "LV";
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(PI[i][pJob] == JOB_MECHANIC)
				{
					SendMes(i, COLOR_WHITE, "%s[%i] {FFFF00}с города {FFFFFF}%s{FFFF00}, вызывает механика, местоположение: {FFFFFF}%s", GetName(playerid), playerid, trr, inputtext);
					SendClientMessage(i, COLOR_YELLOW, "Чтобы принять вызов введите {FFFFFF}/gomechanic");
				}
			}
		}
    case D_SERVICE+2:
		{
		    if(!response)
			{
			    if(PI[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас изъяли телефон!");
				return ShowPlayerDialog(playerid, D_HEAL+3, 2, "{7efd7d}Сервисы", "1. Вызвать механика\n2. Вызвать такси\n3. Вызвать скорую помошь\n4. Вызвать полицию", "Принять", "Назад");
			}
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPVarInt(playerid, "CallTaxi") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы недавно вызывали таксиста!");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "В сообщении должно быть от 6 до 20 символов!");
			new full = 0;
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(PI[i][pJob] == JOB_TAXI && i != playerid) full++;
			}
			if(!full) SendClientMessage(playerid, COLOR_GREY, "В данный момент нет таксистов на дежурстве!");
			else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш запрос послан таксистам. Ждите ответа");
			TaxiON[playerid] = true;
			new trr[3];
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
			else trr = "LV";
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(PI[i][pJob] == JOB_TAXI)
				{
					SendMes(i, COLOR_WHITE, "%s[%i] {FFFF00}с города {FFFFFF}%s{FFFF00}, вызывает такси, местоположение: {FFFFFF}%s", GetName(playerid), playerid, trr, inputtext);
					SendClientMessage(i, COLOR_YELLOW, "Чтобы принять вызов введите {FFFFFF}/gotaxi");
				}
			}
		}
    case D_SERVICE+3:
		{
		    if(!response)
			{
			    if(PI[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас изъяли телефон!");
				return ShowPlayerDialog(playerid, D_HEAL+3, 2, "{7efd7d}Сервисы", "1. Вызвать механика\n2. Вызвать такси\n3. Вызвать скорую помошь\n4. Вызвать полицию", "Принять", "Назад");
			}
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPVarInt(playerid, "CallMedic") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы недавно вызывали скорую помощь!");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "В сообщении должно быть от 6 до 20 символов!");
			new full = 0;
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(IsAMedic(i) && i != playerid) full++;
			}
			if(!full) SendClientMessage(playerid, COLOR_GREY, "В данный момент нет медиков на дежурстве!");
			else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш запрос на медицинскую помощь послан. Ждите ответа");
			MedicON[playerid] = true;
			new trr[3];
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
			else trr = "LV";
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(IsAMedic(i))
				{
					SendMes(i, COLOR_WHITE, "%s[%i] {FFFF00}с города {FFFFFF}%s{FFFF00}, вызывает скорую помощь, местоположение: {FFFFFF}%s", GetName(playerid), playerid, trr, inputtext);
					SendClientMessage(i, COLOR_YELLOW, "Чтобы принять вызов введите {FFFFFF}/calling");
				}
			}
		}
	case D_SERVICE+4:
		{
		    if(!response)
			{
			    if(PI[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас изъяли телефон!");
				return ShowPlayerDialog(playerid, D_HEAL+3, 2, "{7efd7d}Сервисы", "1. Вызвать механика\n2. Вызвать такси\n3. Вызвать скорую помошь\n4. Вызвать полицию", "Принять", "Назад");
			}
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPVarInt(playerid, "CallPolice") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы недавно вызывали полицию!");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "В сообщении должно быть от 6 до 20 символов!");
			new full = 0;
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(IsACop(i) && i != playerid) full++;
			}
			if(!full) SendClientMessage(playerid, COLOR_GREY, "В данный момент нет полицейских на дежурстве!");
			else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш запрос был отправлен полиции. Ждите ответа");
			PoliceON[playerid] = true;
			new trr[3];
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
			else trr = "LV";
			foreach(new i: Player)
			{
				if(PlayerLogged[i] == false) continue;
				if(IsACop(i))
				{
					SendMes(i, COLOR_WHITE, "%s[%i] {FFFF00}с города {FFFFFF}%s{FFFF00}, вызывает полицию, местоположение: {FFFFFF}%s", GetName(playerid), playerid, trr, inputtext);
					SendClientMessage(i, COLOR_YELLOW, "Чтобы принять вызов введите {FFFFFF}/gopolice");
				}
			}
		}
	case D_ARMOURY:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                SetPVarInt(playerid, "TazerGun", 1);
	                GivePlayerWeaponAC(playerid, 23, 50);
	            }
	            case 1:
	            {
	                GivePlayerWeaponAC(playerid, 29, 120);
	            }
	            case 2:
	            {
	                GivePlayerWeaponAC(playerid, 3, 1);
	            }
	        }
		}
	case D_ARMOURY+1:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                SetPVarInt(playerid, "TazerGun", 1);
	                GivePlayerWeaponAC(playerid, 23, 50);
	            }
	            case 1:
	            {
	                GivePlayerWeaponAC(playerid, 24, 35);
	            }
	            case 2:
	            {
	                GivePlayerWeaponAC(playerid, 3, 1);
	            }
	        }
	        SetHealth(playerid, 100);
	        SetArmour(playerid, 100);
		}
	case D_ARMOURY+2:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                SetPVarInt(playerid, "TazerGun", 1);
	                GivePlayerWeaponAC(playerid, 23, 50);
	            }
	            case 1:
	            {
	                GivePlayerWeaponAC(playerid, 24, 35);
	            }
	            case 2:
	            {
	                GivePlayerWeaponAC(playerid, 31, 150);
	            }
	            case 3:
	            {
	                GivePlayerWeaponAC(playerid, 29, 100);
	            }
	            case 4:
	            {
	                GivePlayerWeaponAC(playerid, 34, 25);
	            }
	            case 5:
	            {
	                GivePlayerWeaponAC(playerid, 41, 100);
	            }
	            case 6:
	            {
	                GivePlayerWeaponAC(playerid, 17, 5);
	            }
	            case 7:
	            {
	                GivePlayerWeaponAC(playerid, 3, 1);
	            }
	        }
	        SetHealth(playerid, 100);
	        SetArmour(playerid, 100);
		}
	/*case D_STOPLOAD:
	    {
	        if(!response) return RemoveFromVehicle(playerid);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!vehicleid) return 1;
			if(gVehicleGun[vehicleid][vGunLoading] == false && gVehicleGun[vehicleid][vGunUnloading] == false) return 1;
			gVehicleGun[vehicleid][vGunLoading] = false;
			gVehicleGun[vehicleid][vGunUnloading] = false;
			if(IsValidDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText])) DestroyDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText]);
			DestroyDynamicArea(gVehicleGun[vehicleid][vGunArea]);
			DestroyDynamicPickup(gVehicleGun[vehicleid][vGunPickup]);
			gVehicleGun[vehicleid][vGunArea] = 0;
			gVehicleGun[vehicleid][vGunPickup] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Загрузка / разгрузка завершена");
			print("Itter_Remove(VehicleGun, vehicleid);");
			SetTimerEx("Itter_OPDCInternal_VehicleGun", 0, false, "i", vehicleid);
			return 1;
	    }*/
	case D_HEAL+6:
		{
			if(!response) return 1;
			new name[32];
			if(sscanf(inputtext,"s[32]",name)) return ShowPlayerDialog(playerid, D_HEAL+6, 1, "Бизнес", "ВАЖНО: Название\n\nПРИМЕР: Gas Station", "Принять", "Отмена");
			TOTALBIZZ++;
			sscanf(boordh,"p<,>ffffffiii",
			BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],
			BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],
			BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bMIcon], BizzInfo[TOTALBIZZ][bType]);
			GetPlayerPos(playerid,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
			strmid(BizzInfo[TOTALBIZZ][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			strmid(BizzInfo[TOTALBIZZ][bName], name, 0, strlen(name), 32);
			BizzInfo[TOTALBIZZ][bVirtual] = TOTALBIZZ;
			BizzInfo[TOTALBIZZ][bEnter] = 0;
			BizzInfo[TOTALBIZZ][bTill] = 50;

			new tmpvar, tmpvar2;
			switch(BizzInfo[TOTALBIZZ][bType])
			{
			    case 1: tmpvar = 600000, tmpvar2 = 5000;
			    case 2: tmpvar = 500000, tmpvar2 = 20000;
			    case 3: tmpvar = 340000, tmpvar2 = 3000;
			    case 4: tmpvar = 460000, tmpvar2 = 7000;
			    case 5: tmpvar = 240000, tmpvar2 = 7000;
			    case 6: tmpvar = 800000, tmpvar2 = 20000;
			    case 7: tmpvar = 450000, tmpvar2 = 100000;
			    case 8: tmpvar = 500000, tmpvar2 = 50000;
			    case 9: tmpvar = 2500000, tmpvar2 = 50000;
			    case 10: tmpvar = 300000, tmpvar2 = 5000;
			    case 11: tmpvar = 250000, tmpvar2 = 10000;
			    case 12: tmpvar = 500000, tmpvar2 = 20000;
			    case 13: tmpvar = 150000, tmpvar2 = 5000;
			    case 14: tmpvar = 400000, tmpvar2 = 10000;
			    case 15: tmpvar = 800000, tmpvar2 = 5000;
			}
			BizzInfo[TOTALBIZZ][bPrice] = tmpvar;
			BizzInfo[TOTALBIZZ][bProduct] = tmpvar2;
			new text[20];
			switch(BizzInfo[TOTALBIZZ][bMafia])
			{
			    case TEAM_OPGOR: text = "Русская Мафия";
			    case TEAM_OPGYG: text = "Украинская Мафия";
				case 0: text = "Отсутствует";
			}
            new fee[64];
	        if(BizzInfo[TOTALBIZZ][bEnter] == 0) fee = "Вход свободный";
	        else format(fee, sizeof(fee), "Стоимость входа: {FFFFFF}%d Рублей", BizzInfo[TOTALBIZZ][bEnter]);

			if(BizzInfo[TOTALBIZZ][bType] == 1)
			{
			    new string[200];
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
		   		if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
    				format(string, sizeof(string), "{3497FF}24/7\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}24/7\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 8)
			{
			    new string[200];
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
		   		if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
    				format(string, sizeof(string), "{3497FF}Магазин Одежды\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Магазин Одежды\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 9)
			{
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
			    new string[200];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Казино\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Казино\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 10)
			{
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
                if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				new string[200];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Магазин Игрушек\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Магазин Игрушек\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 11)
			{
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
                if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				new string[200];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Магазин Пиротехники\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Магазин Пиротехники\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 12)
			{
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
                if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				new string[200];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Магазин Компьютеров\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Магазин Компьютеров\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 13)
			{
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
                if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				new string[200];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Сауна\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Сауна\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 14)
			{
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
                if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				new string[200];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Аптека\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Аптека\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 15)
			{
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
                if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				new string[200];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Рыбаловный магазин\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Рыбаловный магазин\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[TOTALBIZZ][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 2)
			{
			    new string[200];
			    BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(1650,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{7efd7d}Заправка\n{99cc00}Заправка продаётся\n{FFFFFF}Цена: {99cc00}%d рублей\n{ffffff}Цена за 1 литр - {7efd7d}%i рублей\n{99cc00}Используйте /fill",BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bTill]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+1.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{99cc00}/buyk - купить канистру\n/fill - заправить транспорт\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Цена за 1 литр бензина: {7efd7d}%i рублей",BizzInfo[TOTALBIZZ][bOwner], BizzInfo[TOTALBIZZ][bTill]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+1.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 7)
			{
			    new string[200];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}СТО\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.",text,BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,-1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}СТО\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s",BizzInfo[TOTALBIZZ][bOwner],text);
					UpdateDynamic3DTextLabelText(LABELBIZZ[TOTALBIZZ],-1,string);
				}
			}
			new totalstring[512];
			format(totalstring, sizeof(totalstring), "INSERT INTO "T_BIZZ" (id, x, y, z, xt, yt, zt,menux,menuy,menuz, vint, virt, owner, name, price, product, type, icon) VALUES (%i, '%f', '%f', '%f', '%f', '%f', '%f','%f', '%f', '%f',%i, %i, '%s', '%s', %i, %i, %i, %i)",
			TOTALBIZZ,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz],BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz], BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz]
			,BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bOwner],BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bProduct], BizzInfo[TOTALBIZZ][bType], BizzInfo[TOTALBIZZ][bMIcon]);
			mysql_tquery(dbHandle, totalstring, "", "");
			SendMes(playerid,COLOR_LIME,"Бизнес номер %d создан",TOTALBIZZ);
			return 1;
		}
	case D_HEAL+9:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid, "PlayerBizz");
			FreezePlayer(playerid, 2000);
			SetPlayerPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
			SetPlayerInterior(playerid,BizzInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizzInfo[idx][bVirtual]);
			SetCameraBehindPlayer(playerid);
			SetTimerEx("PickupBack",3000,0,"i",playerid);
	        pickupentered[playerid] = 1;
		}
	case D_HEAL+10:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz");
			switch(listitem)
			{
			case 0: BizzStats(playerid, i);
			case 1:
				{
					if(BizzInfo[i][bLock] == 0) return SendClientMessage(playerid, COLOR_GREY, "Бизнес уже открыт!");
					if(BizzInfo[i][bProduct] <= 0 || BizzInfo[i][bLic] == 0) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе нет продуктов или нет лицензии!");
					BizzInfo[i][bLock] = 0;
					BizzInfo[i][bLockTime] = 0;
					MysqlUpdateBizzInt(i, "block", BizzInfo[i][bLock]);
					MysqlUpdateBizzInt(i, "locktime", BizzInfo[i][bLockTime]);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Вы открыли бизнес. Всегда следите за состоянием продуктов и лицензией");
					SendClientMessage(playerid, COLOR_LIGHTRED, "В противном случае вы можете потерять бизнес");
				}
			case 2:
				{
				    if(BizzInfo[i][bType] == 1 || BizzInfo[i][bType] == 6 || BizzInfo[i][bType] == 7 || BizzInfo[i][bType] == 8 || BizzInfo[i][bType] == 15)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "В данном типе бизнеса нельзя управлять ценой на товар!");
				    }
				    else
				    {
				        ShowPlayerDialog(playerid, D_HEAL+11, 1, "{7efd7d}Цена", "{ffffff}Введите цену за товар:", "Принять", "Отмена");
				    }
				}
			case 3:
				{
				    if(BizzInfo[i][bType] == 2 || BizzInfo[i][bType] == 7)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "В данном типе бизнеса нельзя управлять ценой за вход!");
				    }
				    else
				    {
				        ShowPlayerDialog(playerid, D_HEAL+12, 1, "{7efd7d}Цена", "{ffffff}Введите цену за вход:", "Принять", "Отмена");
				    }
				}
			case 4: ShowPlayerDialog(playerid, D_HEAL+16, 0, "{7efd7d}Продать бизнес", "{ffffff}Вы хотите продать свой бизнес?\n\n{F04245}Вам вернут только половину стоимости бизнеса!", "Да", "Нет");
			case 5: ShowPlayerDialog(playerid, D_HEAL+27, 1, "{7efd7d}Заказать продукты", "{ffffff}Введите к-во товара, которое хотите заказать {FFFF00}(1ед. = 1 Рублей):", "Принять", "Отмена");
			}
		}
	case D_HEAL+27:
		{
		    if(!response) return cmd_bpanel(playerid);
		    new idx = GetPVarInt(playerid, "PlayerBizz");
		    new prod = strval(inputtext);
		    new price = prod;
		    new string[128];
		    if(BizzInfo[idx][bType] == 1)
		    {
		        if(prod < 0 || prod > 5000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 5 тыс. ед. товара");
		        if(GetMoney(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d Рублей для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d Рублей?", prod, price);
				ShowPlayerDialog(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
		    }
		    if(BizzInfo[idx][bType] == 2)
		    {
		        if(prod < 0 || prod > 20000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 20000 л. бензина");
		        if(GetMoney(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d Рублей для того чтобы заказать %d л. бензина", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d л. бензина за %d Рублей?", prod, price);
				ShowPlayerDialog(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
		    }
		    if(BizzInfo[idx][bType] == 3)
		    {
		        if(prod < 0 || prod > 3000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 3 тыс. ед. товара");
		        if(GetMoney(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d Рублей для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d Рублей?", prod, price);
				ShowPlayerDialog(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
		    }
		    if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5)
		    {
		        if(prod < 0 || prod > 7000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 7 тыс. ед. товара");
		        if(GetMoney(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d Рублей для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d Рублей?", prod, price);
				ShowPlayerDialog(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
		    }
		    if(BizzInfo[idx][bType] == 6)
		    {
		        if(prod < 0 || prod > 20000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 20 тыс. ед. товара");
		        if(GetMoney(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d Рублей для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d Рублей?", prod, price);
				ShowPlayerDialog(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 7)
			{
			    if(prod < 0 || prod > 100000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 100 тыс. ед. товара");
			    if(GetMoney(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d Рублей для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d Рублей?", prod, price);
				ShowPlayerDialog(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 8)
			{
			    if(prod < 0 || prod > 50000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 50 тыс. ед. товара");
			    if(GetMoney(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d Рублей для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d Рублей?", prod, price);
				ShowPlayerDialog(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 9)
			{
			    if(prod < 0 || prod > 50000-BizzInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 50 тыс. ед. товара");
			    if(GetMoney(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d Рублей для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d Рублей?", prod, price);
				ShowPlayerDialog(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
		}
	case D_HEAL+28:
	    {
	        if(!response) return cmd_bpanel(playerid);
	        new idx = GetPVarInt(playerid, "PlayerBizz");
	        new prod = GetPVarInt(playerid, "orderprod");
	        new price = prod;
	        TransferMoney(playerid, -1, price);
			BizzInfo[idx][bProduct] += prod;
			MysqlUpdateBizzInt(idx, "product", BizzInfo[idx][bProduct]);
			SendClientMessage(playerid, COLOR_GREEN, "Товар был доставлен в ваш бизнес");
			SendClientMessage(playerid, COLOR_GREY, "- Временная возможность. Скоро появятся развозчики товаров");
	    }
	case D_HEAL+11:
		{
			if(!response) return 1;
			new price, i = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, D_HEAL+11, 1, "{7efd7d}Цена", "{ffffff}Введите цену за товар:", "Принять", "Отмена");
			if(BizzInfo[i][bType] == 2)
			{
				if(price < 50 || price > 200) return SendClientMessage(playerid, COLOR_GREY, "Неверная цена. Возможно от 50 до 200 Рублей");
			}
			else
			{
			    if(price < 1 || price > 500) return SendClientMessage(playerid, COLOR_GREY, "Неверная цена. Возможно от 1 до 500 Рублей");
			}
			BizzInfo[i][bTill] = price;
			MysqlUpdateBizzInt(i, "till", price);
			SendClientMessage(playerid, COLOR_BLUE, "Новая цена товара установлена");
			return 1;
		}
		case D_HEAL+12:
		{
			if(!response) return 1;
			new price, i = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, D_HEAL+12, 1, "{7efd7d}Цена", "{ffffff}Введите цену за вход:", "Принять", "Отмена");
			if(price < 0 || price > 5000) return SendClientMessage(playerid, COLOR_GREY, "Неверная цена. Возможно от 0 до 5000 Рублей");
			BizzInfo[i][bEnter] = price;
			MysqlUpdateBizzInt(i, "penter", price);
			SendClientMessage(playerid, COLOR_BLUE, "Цена за вход успешно установлена");
			UpdateBizz(i);
			return 1;
		}
	case 1374:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz"), string[128];
			switch(listitem)
			{
			case 0:
				{
				    new price = gGunCosts[0];
					if(GetMoney(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					TransferMoney(playerid, -1, price);
					if(BizzInfo[i][bProduct] > 0)
					{
						BizzInfo[i][bMoney] += price;
						BizzPay[i] += price;
						BizzInfo[i][bProduct] -= price / 3;
						MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
						MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					}
					GivePlayerWeaponAC(playerid, 1, 1);
					format(string, sizeof(string), "Вы купили кастет за %d Рублей", price);
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "%s купил кастет", GetName(playerid));
					SendLog("AmmoLog", string);
					GunShopList(playerid);
				}
			case 1:
				{
				    new price = gGunCosts[1];
					if(GetMoney(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					TransferMoney(playerid, -1, price);
					if(BizzInfo[i][bProduct] > 0)
					{
						BizzInfo[i][bMoney] += price;
						BizzPay[i] += price;
						BizzInfo[i][bProduct] -= price / 3;
						MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
						MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					}
					GivePlayerWeaponAC(playerid, 5, 1);
					format(string, sizeof(string), "Вы купили бейсбольную биту с за %d Рублей", price);
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "%s купил бейсбольную биту", GetName(playerid));
					SendLog("AmmoLog", string);
					GunShopList(playerid);
				}
			case 2:
				{
				    ShowPlayerDialog(playerid, 1375, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для дробовика\nЦена одного патрона - 70 Рублей", "Купить", "Назад");
				}
            case 3:
				{
				    ShowPlayerDialog(playerid, 1381, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета 9mm\nЦена одного патрона - 30 Рублей", "Купить", "Назад");
				}
			case 4:
				{
				    ShowPlayerDialog(playerid, 1376, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пустынного орла\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				}
			case 5:
				{
				    ShowPlayerDialog(playerid, 1377, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для полуавтомата MP5\nЦена одного патрона - 40 Рублей", "Купить", "Назад");
				}
            case 6:
				{
				    ShowPlayerDialog(playerid, 1382, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета-пулемёта Микро-Узи\nЦена одного патрона - 40 Рублей", "Купить", "Назад");
				}
			case 7:
				{
				    ShowPlayerDialog(playerid, 1378, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата AK47\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				}
			case 8:
				{
				    ShowPlayerDialog(playerid, 1379, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для винтовки\nЦена одного патрона - 70 Рублей", "Купить", "Назад");
				}
			case 9:
				{
				    ShowPlayerDialog(playerid, 1380, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата M4A1\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				}
			}
		}
	case 1375:
	    {
	        new i = GetPVarInt(playerid, "PlayerBizz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[2];
			if(ammo < 1 || ammo > 100)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1375, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для дробовика\nЦена одного патрона - 70 Рублей", "Купить", "Назад");
				return 1;
			}
	        if(GetMoney(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				ShowPlayerDialog(playerid, 1375, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для дробовика\nЦена одного патрона - 70 Рублей", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= price / 3;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			GivePlayerWeaponAC(playerid, 25, ammo);
			new string[256];
			format(string, sizeof(string), "Вы купили дробовик с %d патронами за %d Рублей", ammo, price);
			SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "%s купил дробовик (+%d патр.)", GetName(playerid), ammo);
			SendLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
	case 1381:
	    {
	        new i = GetPVarInt(playerid, "PlayerBizz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[3];
			if(ammo < 1 || ammo > 100)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1381, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета 9mm\nЦена одного патрона - 30 Рублей", "Купить", "Назад");
				return 1;
			}
	        if(GetMoney(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				ShowPlayerDialog(playerid, 1381, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета 9mm\nЦена одного патрона - 30 Рублей", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= price / 3;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			GivePlayerWeaponAC(playerid, 22, ammo);
			new string[256];
			format(string, sizeof(string), "Вы купили пистолет 9mm с %d патронами за %d Рублей", ammo, price);
			SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "%s купил пистолет 9mm (+%d патр.)", GetName(playerid), ammo);
			SendLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
	case 1376:
	    {
	        new i = GetPVarInt(playerid, "PlayerBizz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[4];
			if(ammo < 1 || ammo > 100)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1376, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пустынного орла\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				return 1;
			}
	        if(GetMoney(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				ShowPlayerDialog(playerid, 1376, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пустынного орла\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= price / 3;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			GivePlayerWeaponAC(playerid, 24, ammo);
			new string[256];
			format(string, sizeof(string), "Вы купили пустынный орел с %d патронами за %d Рублей", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил пустынный орёл (+%d патр.)", GetName(playerid), ammo);
			SendLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1377:
	    {
	        new i = GetPVarInt(playerid, "PlayerBizz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[5];
			if(ammo < 1 || ammo > 200)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Укажите значение патронов от 1 до 200");
    			ShowPlayerDialog(playerid, 1377, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для полуавтомата MP5\nЦена одного патрона - 30 Рублей", "Купить", "Назад");
				return 1;
			}
	        if(GetMoney(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				ShowPlayerDialog(playerid, 1377, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для полуавтомата MP5\nЦена одного патрона - 30 Рублей", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= price / 3;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			GivePlayerWeaponAC(playerid, 29, ammo);
			new string[256];
			format(string, sizeof(string), "Вы купили полуавтомат МР5 с %d патронами за %d Рублей", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил полуавтомат МР5 (+%d патр.)", GetName(playerid), ammo);
			SendLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1382:
	    {
	        new i = GetPVarInt(playerid, "PlayerBizz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[6];
			if(ammo < 1 || ammo > 100)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1382, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета-пулемёта Микро-Узи\nЦена одного патрона - 40 Рублей", "Купить", "Назад");
				return 1;
			}
	        if(GetMoney(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				ShowPlayerDialog(playerid, 1382, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета-пулемёта Микро-Узи\nЦена одного патрона - 40 Рублей", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= price / 3;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			GivePlayerWeaponAC(playerid, 28, ammo);
			new string[256];
			format(string, sizeof(string), "Вы купили пистолет-пулемёт Микро-Узи с %d патронами за %d Рублей", ammo, price);
			SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "%s купил пистолет-пулемёт Микро-Узи (+%d патр.)", GetName(playerid), ammo);
			SendLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1378:
	    {
	        new i = GetPVarInt(playerid, "PlayerBizz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[7];
			if(ammo < 1 || ammo > 100)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1378, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата AK47\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				return 1;
			}
	        if(GetMoney(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				ShowPlayerDialog(playerid, 1378, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата AK47\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= price / 3;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			GivePlayerWeaponAC(playerid, 30, ammo);
			new string[256];
			format(string, sizeof(string), "Вы купили автомат АК47 с %d патронами за %d  Рублей", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил автомат АК47 (+%d патр.)", GetName(playerid), ammo);
			SendLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1379:
	    {
	        new i = GetPVarInt(playerid, "PlayerBizz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[8];
			if(ammo < 1 || ammo > 100)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1379, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для винтовки\nЦена одного патрона - 70 Рублей", "Купить", "Назад");
				return 1;
			}
	        if(GetMoney(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				ShowPlayerDialog(playerid, 1379, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для винтовки\nЦена одного патрона - 70 Рублей", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= price / 3;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			GivePlayerWeaponAC(playerid, 33, ammo);
			new string[256];
			format(string, sizeof(string), "Вы купили винтовку с %d патронами за %d Рублей", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил винтовку (+%d патр.)", GetName(playerid), ammo);
			SendLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1380:
	    {
	        new i = GetPVarInt(playerid, "PlayerBizz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[9];
			if(ammo < 1 || ammo > 100)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1380, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата M4A1\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				return 1;
			}
	        if(GetMoney(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				ShowPlayerDialog(playerid, 1380, 1, "{7efd7d}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата M4A1\nЦена одного патрона - 60 Рублей", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= price / 3;
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			GivePlayerWeaponAC(playerid, 31, ammo);
			new string[256];
			format(string, sizeof(string), "Вы купили автомат M4A1 с %d патронами за %d  Рублей", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил автомат M4A1 (+%d патр.)", GetName(playerid), ammo);
			SendLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
	case D_HEAL+13:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz");
			if(listitem > 1)
			{
			    switch(listitem)
			    {
				case 2:
					{
					    if(GetMoney(playerid) < 3000) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили фотоаппарат");
						GivePlayerWeaponAC(playerid, 43, 30);
						GiveMoney(playerid,-3000);
						BizzInfo[i][bMoney] += 3000;
						BizzPay[i] += 3000;
					}
				case 3:
					{
					    if(GetMoney(playerid) < 100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					    else if(PI[playerid][pCiggare] >= 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете иметь более 3-х сигорет");
						PI[playerid][pCiggare]++;
						SCM(playerid, COLOR_BLUE, "Вы купили 1 сигарету.");
						GiveMoney(playerid,-100);
						BizzInfo[i][bMoney] += 100;
						BizzPay[i] += 100;
					}
				case 4:
					{
					    if(GetMoney(playerid) < 75) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					    else if(PI[playerid][pSprunk] >= 3) return SendClientMessage(playerid, COLOR_GREY, "В рюкзак вмещается до 3 пепси!");
						PI[playerid][pSprunk]++;
						SCM(playerid, COLOR_BLUE, "Вы купили 1 банку пепси.");
						GiveMoney(playerid,-75);
						BizzInfo[i][bMoney] += 75;
						BizzPay[i] += 75;
					}
			    }
			    if(BizzInfo[i][bProduct] > 0)
			    {
					BizzInfo[i][bProduct] -= gShopProd[listitem];
				    MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				}
			    MagazineList(playerid);
			}
			else
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(GetMoney(playerid) < 5000) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
						else if(PI[playerid][pPhoneNumber]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть мобильный телефон!");
						new telephone = 1000000 + random(8999999);
						new Query[256];
						format(Query, sizeof(Query), "SELECT `name` FROM "T_ACCOUNTS" WHERE `phonenumber`='%i';", telephone);
						mysql_tquery(dbHandle, Query, "MysqlCheckPhoneNumber", "dd", playerid, telephone);
						GiveMoney(playerid,-5000);
						BizzInfo[i][bMoney] += 5000;
						BizzPay[i] += 5000;
			        }
			        case 1:
			        {
			            if(GetMoney(playerid) < 200) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
			            else if(PI[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет мобильного телефона!");
						ShowPlayerDialog(playerid, D_BUYSIM, DIALOG_STYLE_INPUT, "{7efd7d}Покупка SIM-карты", "{FFFFFF}Введите новый шестизначный номер", "Купить", "Закрыть");
						GiveMoney(playerid,-200);
						BizzInfo[i][bMoney] += 200;
						BizzPay[i] += 200;
			        }
			    }
			}
		}
		case D_HEAL+14:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz"), till = BizzInfo[i][bTill], interiorid = GetPlayerInterior(playerid);
			if(PI[playerid][pHunger] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны!");
		    new price = gEateryCosts[listitem];
			if(GetMoney(playerid) < till * price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
			switch(listitem)
			{
			case 0:
				{
				    if(PI[playerid][pSex] == 1)
				    {
						if(interiorid == 5) MeAction(playerid, "съел маленькую пиццу");
						else if(interiorid == 10) MeAction(playerid, "съел бургер");
						else if(interiorid == 9) MeAction(playerid, "съел кусочки курицы");
					}
					else
					{
					    if(interiorid == 5) MeAction(playerid, "съела маленькую пиццу");
						else if(interiorid == 10) MeAction(playerid, "съела бургер");
						else if(interiorid == 9) MeAction(playerid, "съела кусочки курицы");
					}
					if(PI[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 10);
				}
			case 1:
				{
				    if(PI[playerid][pSex] == 1)
				    {
						if(interiorid == 5) MeAction(playerid, "съел среднюю пиццу");
						else if(interiorid == 10) MeAction(playerid, "съел большой бургер");
						else if(interiorid == 9) MeAction(playerid, "съел кусок куринной ножки");
					}
					else
					{
					    if(interiorid == 5) MeAction(playerid, "съела среднюю пиццу");
						else if(interiorid == 10) MeAction(playerid, "съела большой бургер");
						else if(interiorid == 9) MeAction(playerid, "съела кусок куринной ножки");
					}
					if(PI[playerid][pHunger]+20 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 20);
				}
			case 2:
				{
				    if(PI[playerid][pSex] == 1)
				    {
						if(interiorid == 5) MeAction(playerid, "съел большую пиццу");
						else if(interiorid == 10) MeAction(playerid, "съел гамбургер");
						else if(interiorid == 9) MeAction(playerid, "съел куринную ножку");
					}
					else
					{
					    if(interiorid == 5) MeAction(playerid, "съела большую пиццу");
						else if(interiorid == 10) MeAction(playerid, "съела гамбургер");
						else if(interiorid == 9) MeAction(playerid, "съела куринную ножку");
					}
					if(PI[playerid][pHunger]+40 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 40);
				}
			case 3:
				{
				    if(PI[playerid][pSex] == 1)
				    {
						if(interiorid == 5) MeAction(playerid, "съел пиццу в коробке");
						else if(interiorid == 10) MeAction(playerid, "съел гамбургер в упаковке");
						else if(interiorid == 9) MeAction(playerid, "съел курицу в коробке");
					}
					else
					{
					    if(interiorid == 5) MeAction(playerid, "съела пиццу в коробке");
						else if(interiorid == 10) MeAction(playerid, "съела гамбургер в упаковке");
						else if(interiorid == 9) MeAction(playerid, "съела курицу в коробке");
					}
					if(PI[playerid][pHunger]+20 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 20);
				}
			}
			TransferMoney(playerid, -1, till * price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += till * price;
				BizzPay[i] += till * price;
				BizzInfo[i][bProduct] -= gEateryProd[listitem];
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
			ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
			EatList(playerid, i);
		}
	case D_HEAL+15:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz"), till = BizzInfo[i][bTill];
			if(PI[playerid][pHunger] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны!");
			new price = gBarCost[listitem];
			if(GetMoney(playerid) < till * price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
			switch(listitem)
			{
			case 0:
				{
					if(PI[playerid][pSex] == 1) MeAction(playerid, "выпил воды");
					else MeAction(playerid, "выпила воды");
					if(PI[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 10);
				}
			case 1:
				{
					if(PI[playerid][pSex] == 1) MeAction(playerid, "выпил соды");
					else MeAction(playerid, "выпила соды");
					if(PI[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 10);
				}
			case 2:
				{
					if(PI[playerid][pSex] == 1) MeAction(playerid, "выпил кока-колы");
					else MeAction(playerid, "выпила кока-колы");
					if(PI[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 10);
				}
			case 3:
				{
					if(PI[playerid][pSex] == 1) MeAction(playerid, "выпил пиво");
					else MeAction(playerid, "выпила пиво");
					if(PI[playerid][pHunger]+20 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 20);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
				}
			case 4:
				{
					if(PI[playerid][pSex] == 1) MeAction(playerid, "выпил водки");
					else MeAction(playerid, "выпила водки");
					if(PI[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			case 5:
				{
					if(PI[playerid][pSex] == 1) MeAction(playerid, "выпил коньяк");
					else MeAction(playerid, "выпила коньяк");
					if(PI[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			case 6:
				{
				    if(PI[playerid][pSex] == 1) MeAction(playerid, "выпил абсент");
				    else MeAction(playerid, "выпила абсент");
					if(PI[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы полностью наелись!");
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			}
			TransferMoney(playerid, -1, till * price);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoney] += till * price;
				BizzPay[i] += till * price;
				BizzInfo[i][bProduct] -= gBarProd[listitem];
				MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.1, 0, 0, 0, 0, 0, 1);
			if(GetPlayerDrunkLevel(playerid) > 20000) SetPlayerDrunkLevel(playerid, 20000);
			BarList(playerid);
		}
	case D_HEAL+16:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz");
			strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			SendMes(playerid, COLOR_RED, "Вы продали свой бизнес за %i Рублей. Деньги с бизнеса переведены на ваш счет",BizzInfo[i][bPrice]/2);
			PI[playerid][pBank] += BizzInfo[i][bBuyPrice];
			PI[playerid][pBank] += BizzInfo[i][bMoney];
			BizzInfo[i][bLock] = BizzInfo[i][bBuyPrice] = BizzInfo[i][bMoney] = BizzInfo[i][bLic] = BizzInfo[i][bEnter] = BizzInfo[i][bMafia] = 0;
			BizzInfo[i][bTill] = 50;
			switch(BizzInfo[i][bType])
			{
			    case 1: BizzInfo[i][bProduct] = 5000;
			    case 2: BizzInfo[i][bProduct] = 20000;
			    case 3: BizzInfo[i][bProduct] = 3000;
			    case 4: BizzInfo[i][bProduct] = 7000;
			    case 5: BizzInfo[i][bProduct] = 7000;
			    case 6: BizzInfo[i][bProduct] = 20000;
			    case 7: BizzInfo[i][bProduct] = 100000;
			    case 8: BizzInfo[i][bProduct] = 50000;
			    case 9: BizzInfo[i][bProduct] = 50000;
			}
			new totalstring[512];
			format(totalstring, sizeof(totalstring), "UPDATE "T_BIZZ" SET owner='%s', block=%d, money=%d, lic=%d, penter=%d, till=%d, buyprice=%d , product=%d WHERE id = %d",
			BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill], BizzInfo[i][bBuyPrice], BizzInfo[i][bProduct],i);
			mysql_tquery(dbHandle, totalstring, "", "");
			UpdateBizz(i);
		}
	case D_HEAL+17:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(PI[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 5-го уровня!");
					PI[playerid][pJob] = JOB_BUS;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу водитель автобуса");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
			case 1:
				{
					if(PI[playerid][pLevel] < 4) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 4-го уровня!");
					PI[playerid][pJob] = JOB_TAXI;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу водитель такси");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
			case 2:
				{
					if(PI[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 3-го уровня!");
					PI[playerid][pJob] = JOB_MECHANIC;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу автомеханика");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
			case 3:
				{
					if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 2-го уровня!");
					PI[playerid][pJob] = JOB_TRUCKER;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу дальнобойщика");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
			case 4:
				{
					PI[playerid][pJob] = 0;
					SendClientMessage(playerid, COLOR_BLUE, "Вы уволились с работы");
			    }
			}
		}
	case D_HEAL+19:
		{
			new targetid = GetPVarInt(playerid, "PlayerMarriage");
			if(response)
			{
			    new string[128];
				format(string, sizeof(string), "%s и %s вступили в брак", GetName(targetid), GetName(playerid));
				SendClientMessageToAll(COLOR_PURPLE, string);
				strmid(PI[playerid][pWhoMarried], GetName(targetid), 0, strlen(GetName(targetid)), MAX_PLAYER_NAME);
				strmid(PI[targetid][pWhoMarried], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				PI[playerid][pMarried] = PI[targetid][pMarried] = 1;
				SendMes(playerid, COLOR_YELLOW, "Вы приняли предложение связать судьбу с %s", GetName(targetid));
				if(PI[playerid][pSex] == 1) SendMes(targetid, COLOR_GREEN, "%s принял предложение связать судьбу с вами", GetName(playerid));
				else SendMes(targetid, COLOR_GREEN, "%s приняла предложение связать судьбу с вами", GetName(playerid));
			}
			else
			{
				if(PI[playerid][pSex] == 1) SendMes(targetid, COLOR_RED, "%s отклонил предложение связать судьбу с вами", GetName(playerid));
				else SendMes(targetid, COLOR_RED, "%s отклонила предложение связать судьбу с вами", GetName(playerid));
			}
			DeletePVar(playerid, "PlayerMarriage");
		}
	case D_HEAL+20:
		{
			new targetid = GetPVarInt(playerid, "PlayerMarriage");
			if(response)
			{
				strmid(PI[playerid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				strmid(PI[targetid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				PI[playerid][pMarried] = PI[targetid][pMarried] = 0;
				SendMes(playerid, COLOR_YELLOW, "Вы приняли предложение развестись %s", GetName(targetid));
				if(PI[playerid][pSex] == 1) SendMes(targetid, COLOR_GREEN, "%s принял предложение развестись с вами", GetName(playerid));
				else SendMes(targetid, COLOR_GREEN, "%s приняла предложение развестись с вами", GetName(playerid));
			}
			else
			{
				if(PI[playerid][pSex] == 1) SendMes(targetid, COLOR_RED, "%s отклонил предложение развестись с вами", GetName(playerid));
				else SendMes(targetid, COLOR_RED, "%s отклонила предложение развестись с вами", GetName(playerid));
			}
			DeletePVar(playerid, "PlayerMarriage");
		}
	case D_HEAL+21:
		{
			if(!response) return 1;
			new price, string[128];
			new b = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %d Рублей", BizzInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, D_HEAL+21, 1, "{7efd7d}Пополнение счета бизнеса", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %d Рублей", BizzInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, D_HEAL+21, 1, "{7efd7d}Пополнение счета бизнеса", string, "Принять", "Назад");
			}
			if(PI[playerid][pBank] < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %d Рублей", BizzInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, D_HEAL+21, 1, "{7efd7d}Пополнение счета бизнеса", string, "Принять", "Назад");
			}
			PI[playerid][pBank] -= price;
			BizzInfo[b][bMoney] += price;
			MysqlUpdateBizzInt(b, "money", BizzInfo[b][bMoney]);
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы положили на счет бизнеса: %i Рублей. На счете бизнеса: %i Рублей", price, BizzInfo[b][bMoney]);
		}
 	case D_HEAL+213:
		{
			if(!response) return 1;
			new price, string[128];
			new b = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: %d Рублей", BizzInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, D_HEAL+213, 1, "{7efd7d}Вывод счета с бизнеса", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: %d Рублей", BizzInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, D_HEAL+213, 1, "{7efd7d}Вывод счета с бизнеса", string, "Принять", "Назад");
			}
			if(BizzInfo[b][bMoney] < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "На вашем счету в бизнесе не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: %d Рублей", BizzInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, D_HEAL+213, 1, "{7efd7d}Вывод счета с бизнеса", string, "Принять", "Назад");
			}
			BizzInfo[b][bMoney] -= price;
			TransferMoney(-1, playerid, price);
			MysqlUpdateBizzInt(b, "money", BizzInfo[b][bMoney]);
			SendMes(playerid, TEAM_BLUE_COLOR, "Вы вывели со счета бизнеса: %i Рублей. На счете бизнеса: %i Рублей", price, BizzInfo[b][bMoney]);
		}
	case D_ATM+1:
		{
			if(!response) return ATMList(playerid);
			new price, string[150];
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {7efd7d}0%%\n\n{FFFFFF}Текущее состояние счёта: {63BD4E}%d Рублей", PI[playerid][pPhoneBalance]);
				return ShowPlayerDialog(playerid, D_ATM+1, 1, "{7efd7d}Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {7efd7d}0%%\n\n{FFFFFF}Текущее состояние счёта: {63BD4E}%d Рублей", PI[playerid][pPhoneBalance]);
				return ShowPlayerDialog(playerid, D_ATM+1, 1, "{7efd7d}Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(GetMoney(playerid) < price)
			{
			    SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {7efd7d}0%%\n\n{FFFFFF}Текущее состояние счёта: {63BD4E}%d Рублей", PI[playerid][pPhoneBalance]);
				return ShowPlayerDialog(playerid, D_ATM+1, 1, "{7efd7d}Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(PI[playerid][pPhoneBalance] + price > 15000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя положить на баланс телефона более 15000 Рублей");
			PI[playerid][pPhoneBalance] += price;
			TransferMoney(playerid, -1, price);
			SendMes(playerid, COLOR_YELLOW, "SMS: {FFFFFF}Поступление платежа: %i Рублей. Текущее состояние счёта: %i Рублей. {FFFF00}Отправитель: {FFFFFF}Оператор связи", price, PI[playerid][pPhoneBalance]);
			ATMList(playerid);
			return 1;
		}
	case D_ATM+4:
	    {
	        if(!response) return ATMList(playerid);
			new price, string[150];
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {63BD4E}%d Рублей", PI[playerid][pCharity]);
				return ShowPlayerDialog(playerid, D_ATM+4, 1, "{7efd7d}Благотворительность", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {63BD4E}%d Рублей", PI[playerid][pCharity]);
				return ShowPlayerDialog(playerid, D_ATM+4, 1, "{7efd7d}Благотворительность", string, "Принять", "Назад");
			}
			if(GetMoney(playerid) < price)
			{
			    SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {63BD4E}%d Рублей", PI[playerid][pCharity]);
				return ShowPlayerDialog(playerid, D_ATM+4, 1, "{7efd7d}Благотворительность", string, "Принять", "Назад");
			}
			PI[playerid][pCharity] += price;
			MysqlUpdatePlayerInt(playerid, "charity", PI[playerid][pCharity]);
			TransferMoney(playerid, -1, price);
			SendMes(playerid, COLOR_YELLOW, "Вы пожертвовали на благотворительность {FFFFFF}%d Рублей{FFFF00}. Список самых щедрых: {FFFFFF}/charity", price);
			ATMList(playerid);
			return 1;
	    }
	case D_HEAL+26:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid, "PlayerBizz");
			if(GetMoney(playerid) < BizzInfo[idx][bEnter]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств для входа!");
			SetTimerEx("PickupBack",3000,0,"i",playerid);
	        pickupentered[playerid] = 1;
			TransferMoney(playerid, -1, BizzInfo[idx][bEnter]);
			BizzInfo[idx][bMoney] += BizzInfo[idx][bEnter];
			BizzPay[idx] += BizzInfo[idx][bEnter];
			MysqlUpdateBizzInt(idx, "money", BizzInfo[idx][bMoney]);
			FreezePlayer(playerid, 2000);
			SetPlayerPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
			SetPlayerInterior(playerid,BizzInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizzInfo[idx][bVirtual]);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
	case D_LEAVE:
		{
		    if(!response) return 1;
		    new str[89];
		    format(str, sizeof(str), "[Внимание] %s покинул организацию по собственному желанию (/leave)", GetName(playerid));
			SendFMes(PI[playerid][pMember], COLOR_YELLOW, str);
	        LeaveFractionPlayer(playerid);
	        return 1;
		}
	case D_BUYSIM:
	    {
	        if(!response) return 1;
	        if(!isNumeric(inputtext) || strlen(inputtext) != 6 || inputtext[0] == '0')
 			{
	            SendClientMessage(playerid, COLOR_GREY, "Номер должен состоять из 6 цифр. Первая цифра не должны быть \"ноль\"");
				ShowPlayerDialog(playerid, D_BUYSIM, DIALOG_STYLE_INPUT, "{7efd7d}Покупка SIM-карты", "{FFFFFF}Введите новый шестизначный номер", "Купить", "Закрыть");
				return 1;
	        }
			foreach(new i: Player)
			{
			    if(PI[i][pPhoneNumber] == strval(inputtext)) SendClientMessage(playerid, COLOR_GREY, "Такой номер уже используется");
				break;
			}
	        new str[60];
	        format(str, sizeof(str), "SELECT * FROM "T_ACCOUNTS" WHERE phonenumber = '%i'", strval(inputtext));
	        mysql_tquery(dbHandle, str, "OnPlayerSetPhoneNumber", "i", playerid);
	        SetPVarInt(playerid, "CheckNumber", strval(inputtext));
	    }
	case D_PHONE:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0: ShowPlayerDialog(playerid, D_PHONE+1, DIALOG_STYLE_LIST, "{7efd7d}Контакты", "1. Список контактов\n2. Добавить контакт\n3. Удалить контакт", "Выбрать", "Назад");
	            case 1:
				{
				    if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
					if(PI[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас изъяли телефон!");
				   	if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете по телефону!");
				   	if(Phone[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "У вас выключен телефон!");
		  		 	if(Ether[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Действие невозможно!");
					ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад");
				}
				case 2:
				{
					if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
					if(PI[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас изъяли телефон!");
					if(Phone[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "У вас выключен телефон!");
					ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад");
				}
				case 3:
				{
				    if(PI[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас изъяли телефон!");
					ShowPlayerDialog(playerid, D_HEAL+3, 2, "{7efd7d}Сервисы", "1. Вызвать механика\n2. Вызвать такси\n3. Вызвать скорую помошь\n4. Вызвать полицию", "Принять", "Назад");
				}
	        }
	    }
	case D_PHONE+1:
	    {
	        if(!response) return PhoneMenu(playerid);
	        switch(listitem)
	        {
	            case 0:
		        {
		            new string[900], str[100];
				    strcat(string, "{FFFF00}Ник игрока\t\t{FFFF00}Номер\n");
					for(new i; i < 8; i++)
					{
						format(str, sizeof(str), "{FFFFFF}%s\t\t%d\n", (PhoneNumbers[playerid][i]) ? GetNameWithNumber(PhoneNumbers[playerid][i]) : ("Offline/None"), PhoneNumbers[playerid][i]);
						strcat(string, str);
					}
					ShowPlayerDialog(playerid, D_PHONE+7, DIALOG_STYLE_TABLIST_HEADERS, "{7efd7d}Список контактов", string, "Принять", "Назад");
	            }
	            case 1:
				{
				    new string[900], str[100];
				    strcat(string, "{FFFF00}Ник игрока\t\t{FFFF00}Номер\n");
					for(new i; i < 8; i++)
					{
						format(str, sizeof(str), "{FFFFFF}%s\t\t%d\n", (PhoneNumbers[playerid][i]) ? GetNameWithNumber(PhoneNumbers[playerid][i]) : ("Offline/None"), PhoneNumbers[playerid][i]);
						strcat(string, str);
					}
					ShowPlayerDialog(playerid, D_PHONE+6, DIALOG_STYLE_TABLIST_HEADERS, "{7efd7d}Добавить контакт", string, "Выбрать", "Назад");
				}
				case 2:
				{
				    new string[900], str[100];
				    strcat(string, "{FFFF00}Ник игрока\t\t{FFFF00}Номер\n");
					for(new i; i < 8; i++)
					{
						format(str, sizeof(str), "{FFFFFF}%s\t\t%d\n", (PhoneNumbers[playerid][i]) ? GetNameWithNumber(PhoneNumbers[playerid][i]) : ("Offline/None"), PhoneNumbers[playerid][i]);
						strcat(string, str);
					}
					ShowPlayerDialog(playerid, D_PHONE+5, DIALOG_STYLE_TABLIST_HEADERS, "{7efd7d}Удалить контакт", string, "Выбрать", "Назад");
				}
	        }
			return 1;
	    }
	case D_PHONE+5:
	    {
	        if(!response) return ShowPlayerDialog(playerid, D_PHONE+1, DIALOG_STYLE_LIST, "{7efd7d}Контакты", "1. Список контактов\n2. Добавить контакт\n3. Удалить контакт", "Выбрать", "Назад");
	        if(PhoneNumbers[playerid][listitem] == 0) return SendClientMessage(playerid, COLOR_GREY, "Слот для контакта пустой!");
			new str[128];
			format(str, sizeof(str), "Контакт %s | %d удален", GetNameWithNumber(PhoneNumbers[playerid][listitem]), PhoneNumbers[playerid][listitem]);
			SendClientMessage(playerid, COLOR_RED, str);
			PhoneNumbers[playerid][listitem] = 0;
			return 1;
	    }
	case D_PHONE+6:
		{
		    if(!response) return ShowPlayerDialog(playerid, D_PHONE+1, DIALOG_STYLE_LIST, "{7efd7d}Контакты", "1. Список контактов\n2. Добавить контакт\n3. Удалить контакт", "Выбрать", "Назад"), DeletePVar(playerid, "SelectedSlot");
		    SetPVarInt(playerid, "SelectedSlot", listitem);
			ShowPlayerDialog(playerid, D_PHONE+8, DIALOG_STYLE_INPUT, "{7efd7d}Добавление контакта", "{ffffff}Введите номер контакта:", "Добавить", "Назад");
			return 0;
		}
	case D_PHONE+7:
	    {
	        if(!response) return ShowPlayerDialog(playerid, D_PHONE+1, DIALOG_STYLE_LIST, "{7efd7d}Контакты", "1. Список контактов\n2. Добавить контакт\n3. Удалить контакт", "Выбрать", "Назад");
	        else return 1;
	    }
	case D_PHONE+8:
	    {
	        if(!response) return 0;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, D_PHONE+8, DIALOG_STYLE_INPUT, "{7efd7d}Добавление контакта", "{ffffff}Введите номер контакта:", "Добавить", "Назад");
			new str[128], slot = GetPVarInt(playerid, "SelectedSlot");
			format(str, sizeof(str), "Номер %d добавлен в слот %d", strval(inputtext), slot);
			SendClientMessage(playerid, COLOR_GREEN, str);
			PhoneNumbers[playerid][slot] = strval(inputtext);
			return 1;
	    }
	case D_PHONE+2:
	    {
	        if(!response) return PhoneMenu(playerid);
		    new params;
		    if(sscanf(inputtext, "d", params)) return ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад");
		    if(params < 1 || params > 9999999) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Неверный номер телефона!"); }
		    if(params == PI[playerid][pPhoneNumber]) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь позвонить самому себе!"); }
		    if(PI[playerid][pPhoneBalance] < 1) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Пополните счет сим-карты в любом банкомате города! Узнать баланс /callbalance"); }
		    new fullphone, string11[90];
			if(params == LSNEWS_NUMBER)
			{
			    if(Ether[playerid] == true) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Действие невозможно!"); }
				if(PI[playerid][pNews] != 1) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Вы должны переключиться на волну этой студии!"); }
				if(PI[playerid][pNews] < 1) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "News ID Error!"); }
				if(EtherCall[PI[playerid][pNews]-1] == false) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Радио не принимает звонков!"); }
				foreach(new i: Player)
				{
				    if(PlayerLogged[i] == true && (Ether[i] == true) && PI[i][pMember] == TEAM_SMI)
				    {
				        if(Mobile[i] != -1) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже разговаривает по телефону!");
				  		if(PI[i][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Абонент временно недоступен!");
						Mobile[playerid] = i;
					 	SendMes(i, COLOR_WHITE, "Ваc вызывает: %s (%i). Чтобы ответить, введите: /p", GetName(playerid), PI[playerid][pPhoneNumber]);
						format(string11, sizeof(string11), "У %s звонит мобильный телефон", GetName(i));
						ProxDetectorNew(i, 13.0, COLOR_PURPLE, string11);
				  		PlayerPlaySound(i, 23000, 0.0, 0.0, 0.0);
				  		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_WHITE, "Чтобы повесить трубку, введите: /h");
						if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
						CellTime[playerid] = 0;
				    }
				}
			}
			if(params == SFNEWS_NUMBER)
			{
			    if(Ether[playerid] == true) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Действие невозможно!"); }
				if(PI[playerid][pNews] != 2) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Вы должны переключиться на волну этой студии!"); }
				if(PI[playerid][pNews] < 1) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "News ID Error!"); }
				if(EtherCall[PI[playerid][pNews]-1] == false) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Радио не принимает звонков!"); }
				foreach(new i: Player)
				{
				    if(PlayerLogged[i] == true && (Ether[i] == true) && PI[i][pMember] == TEAM_SFNEWS)
				    {
				        if(Mobile[i] != -1) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже разговаривает по телефону!");
				  		if(PI[i][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Абонент временно недоступен!");
						Mobile[playerid] = i;
					 	SendMes(i, COLOR_WHITE, "Ваc вызывает: %s (%i). Чтобы ответить, введите: /p)", GetName(playerid), PI[playerid][pPhoneNumber]);
						format(string11, sizeof(string11), "У %s звонит мобильный телефон", GetName(i));
						ProxDetectorNew(i, 13.0, COLOR_PURPLE, string11);
				  		PlayerPlaySound(i, 23000, 0.0, 0.0, 0.0);
				  		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_WHITE, "Чтобы повесить трубку, введите: /h");
						if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
						CellTime[playerid] = 0;
				    }
				}
			}
			if(params == LVNEWS_NUMBER)
			{
			    if(Ether[playerid] == true) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Действие невозможно!"); }
				if(PI[playerid][pNews] != 3) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Вы должны переключиться на волну этой студии!"); }
				if(PI[playerid][pNews] < 1) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "News ID Error!"); }
				if(EtherCall[PI[playerid][pNews]-1] == false) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Радио не принимает звонков!"); }
				foreach(new i: Player)
				{
				    if(PlayerLogged[i] == true && (Ether[i] == true) && PI[i][pMember] == TEAM_LVNEWS)
				    {
				        if(Mobile[i] != -1) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже разговаривает по телефону!");
				  		if(PI[i][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Абонент временно недоступен!");
						Mobile[playerid] = i;
					 	SendMes(i, COLOR_WHITE, "Ваc вызывает: %s (%i). Чтобы ответить, введите: /p", GetName(playerid), PI[playerid][pPhoneNumber]);
						format(string11, sizeof(string11), "У %s звонит мобильный телефон", GetName(i));
						ProxDetectorNew(i, 13.0, COLOR_PURPLE, string11);
				  		PlayerPlaySound(i, 23000, 0.0, 0.0, 0.0);
				  		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_WHITE, "Чтобы повесить трубку, введите: /h");
						if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
						CellTime[playerid] = 0;
				    }
				}
			}
			foreach(new i: Player)
			{
				if(params == PI[i][pPhoneNumber] && PlayerLogged[i] == true)
				{
					if(Phone[i] == false) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Игрок выключил телефон!"); }
				    if(Ether[i] == true) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Действие невозможно!"); }
					if(Mobile[i] != -1) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Игрок уже разговаривает по телефону!"); }
                    if(PI[i][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Абонент временно недоступен!");
					Mobile[playerid] = i;
			      	SendMes(i, COLOR_WHITE, "Ваc вызывает: %s (%i). Чтобы ответить, введите: /p", GetName(playerid), PI[playerid][pPhoneNumber]);
					format(string11, sizeof(string11), "У %s звонит мобильный телефон", GetName(i));
					ProxDetectorNew(i, 13.0, COLOR_PURPLE, string11);
		            PlayerPlaySound(i, 23000, 0.0, 0.0, 0.0);
		            PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_WHITE, "Чтобы повесить трубку, введите: /h");
					if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
					CellTime[playerid] = 0;
					fullphone++;
				}
			}
			if(fullphone == 0) { ShowPlayerDialog(playerid, D_PHONE+2, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Игрок с данным номером не найден!"); }
			return 1;
	    }
    case D_PHONE+3:
		{
		    if(!response) { DeletePVar(playerid, "PhoneSMS"); return PhoneMenu(playerid); }
		    new params, full;
		    if(sscanf(inputtext, "d", params)) return ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад");
    		if(params < 1 || params > 9999999) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Неверный номер телефона!"); }
			if(params == PI[playerid][pPhoneNumber]) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь писать смс самому себе!"); }
			if(params == LSNEWS_NUMBER || params == SFNEWS_NUMBER || params == LVNEWS_NUMBER) full++;
			foreach(new i: Player)
			{
			    if(params == PI[i][pPhoneNumber] && PlayerLogged[i] == true)
			    {
			        full++;
			        break;
			    }
			}
			if(full == 0) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Игрок с данным номером не найден!"); }
			SetPVarInt(playerid, "PhoneSMS", params);
			SendSMS(playerid);
			return 1;
		}
	case D_PHONE+4:
	    {
	        if(!response) { DeletePVar(playerid, "PhoneSMS"); return ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); }
	        if(strlen(inputtext) == 0) return SendSMS(playerid);
	        if(strlen(inputtext) > 64)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Максимальное количество символов - 64!");
			    return SendSMS(playerid);
			}
			if(IsIpFound(inputtext) || CheckString(inputtext)) return PlayerGetsChatBan(playerid, inputtext);
			new fullsms, params = GetPVarInt(playerid, "PhoneSMS"), string[200];
			if(params == LSNEWS_NUMBER)
			{
			    if(PI[playerid][pNews] != 1) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Вы должны переключиться на волну этой студии!"); }
			    if(EtherSms[PI[playerid][pNews]-1] == false) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Радио не принимает СМС!"); }
			    if(PI[playerid][pPhoneBalance] < SmsPrice[PI[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
			    foreach(new i: Player)
			    {
			        if((Ether[i] == true) && PI[i][pMember] == TEAM_SMI)
			        {
				        PI[playerid][pPhoneBalance] -= SmsPrice[PI[playerid][pNews]-1];
				        FracBank[8] += SmsPrice[PI[playerid][pNews]-1];
				        MysqlUpdateOtherInt("lsnbank", FracBank[8]);
				        PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "SMS: {FFFFFF}%s {FFFF00}Отправитель: {FFFFFF}%s {FFFF00}Тел.: {FFFFFF}%i", inputtext, GetName(playerid), PI[playerid][pPhoneNumber]);
						SendClientMessage(i, COLOR_YELLOW, string);
		    			format(string, sizeof(string), "SMS: {FFFFFF}%s {FFFF00}Получатель: {FFFFFF}ТРК ''Релакс'' {FFFF00}Тел.: {FFFFFF}555", inputtext);
		    			SendClientMessage(playerid, COLOR_YELLOW, string);
		    			SendClientMessage(playerid, COLOR_WHITE, "Ваше сообщение доставлено");
						MeAction(playerid, "достаёт мобильный телефон");
				        break;
      				}
			    }
			}
			if(params == SFNEWS_NUMBER)
			{
			    if(PI[playerid][pNews] != 2) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Вы должны переключиться на волну этой студии!"); }
			    if(EtherSms[PI[playerid][pNews]-1] == false) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Радио не принимает СМС!"); }
			    if(PI[playerid][pPhoneBalance] < SmsPrice[PI[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
			    foreach(new i: Player)
			    {
			        if((Ether[i] == true) && PI[i][pMember] == TEAM_SFNEWS)
			        {
				        PI[playerid][pPhoneBalance] -= SmsPrice[PI[playerid][pNews]-1];
				        FracBank[9] += SmsPrice[PI[playerid][pNews]-1];
				        MysqlUpdateOtherInt("sfnbank", FracBank[9]);
				        PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "SMS: {FFFFFF}%s {FFFF00}Отправитель: {FFFFFF}%s {FFFF00}Тел.: {FFFFFF}%i", inputtext, GetName(playerid), PI[playerid][pPhoneNumber]);
						SendClientMessage(i, COLOR_YELLOW, string);
		    			format(string, sizeof(string), "SMS: {FFFFFF}%s {FFFF00}Получатель: {FFFFFF}Закрыто {FFFF00}Тел.: {FFFFFF}555", inputtext);
		    			SendClientMessage(playerid, COLOR_YELLOW, string);
		    			SendClientMessage(playerid, COLOR_WHITE, "Ваше сообщение доставлено");
						MeAction(playerid, "достаёт мобильный телефон");
				        break;
      				}
			    }
			}
			if(params == LVNEWS_NUMBER)
			{
			    if(PI[playerid][pNews] != 3) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Вы должны переключиться на волну этой студии!"); }
			    if(EtherSms[PI[playerid][pNews]-1] == false) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Радио не принимает СМС!"); }
			    if(PI[playerid][pPhoneBalance] < SmsPrice[PI[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
			    foreach(new i: Player)
			    {
			        if((Ether[i] == true) && PI[i][pMember] == TEAM_LVNEWS)
			        {
				        PI[playerid][pPhoneBalance] -= SmsPrice[PI[playerid][pNews]-1];
				        FracBank[10] += SmsPrice[PI[playerid][pNews]-1];
				        MysqlUpdateOtherInt("lvnbank", FracBank[10]);
				        PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "SMS: {FFFFFF}%s {FFFF00}Отправитель: {FFFFFF}%s {FFFF00}Тел.: {FFFFFF}%i", inputtext, GetName(playerid), PI[playerid][pPhoneNumber]);
						SendClientMessage(i, COLOR_YELLOW, string);
		    			format(string, sizeof(string), "SMS: {FFFFFF}%s {FFFF00}Получатель: {FFFFFF}Закрыто {FFFF00}Тел.: {FFFFFF}555", inputtext);
		    			SendClientMessage(playerid, COLOR_YELLOW, string);
		    			SendClientMessage(playerid, COLOR_WHITE, "Ваше сообщение доставлено");
						MeAction(playerid, "достаёт мобильный телефон");
				        break;
      				}
			    }
			}
			foreach(new i: Player)
			{
				if(params == PI[i][pPhoneNumber] && PlayerLogged[i] == true)
				{
				    if(Phone[i] == false) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Игрок выключил телефон!"); }
				    if(PI[i][pJail] > 0) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Абонент временно недоступен!"); }
					PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "SMS: {FFFFFF}%s {FFFF00}Отправитель: {FFFFFF}%s {FFFF00}Тел.: {FFFFFF}%i", inputtext, GetName(playerid), PI[playerid][pPhoneNumber]);
					SendClientMessage(i, COLOR_YELLOW, string);
					format(string, sizeof(string), "SMS: {FFFFFF}%s {FFFF00}Получатель: {FFFFFF}%s {FFFF00}Тел.: {FFFFFF}%i", inputtext, GetName(i), PI[i][pPhoneNumber]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					PI[playerid][pPhoneBalance] -= 10;
					SendClientMessage(playerid, COLOR_WHITE, "Ваше сообщение доставлено");
					MeAction(playerid, "достаёт мобильный телефон");
					fullsms++;
		   			break;
				}
			}
			if(fullsms == 0) { ShowPlayerDialog(playerid, D_PHONE+3, 1, "{7efd7d}Номер телефона", "{ffffff}Введите номер телефона абонента:", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "Игрок с данным номером не найден!"); }
            DeletePVar(playerid, "PhoneSMS");
			return 1;
	    }
	case D_BREAK:
	    {
	        if(!response) return 1;
		    new Float:X, Float:Y, Float:Z, Float:YZ;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, YZ);
			if(floatabs(Z) > 300 || GetPlayerInterior(playerid) != 0 ||  GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Невозможно установить объект в данном месте");
			switch(listitem)
			{
				case 0:
				{
					SetPVarInt(playerid,"objectcop", CreateObject(2899, X, Y, Z-0.8, 0, 0, YZ));
			        Ships[playerid] = CreateDynamicSphere(X, Y, Z, 3.0, -1, -1, -1);
				}
				case 1: SetPVarInt(playerid,"objectcop", CreateObject(1228, X, Y, Z+0.8, 0, 0, YZ));
				case 2: SetPVarInt(playerid,"objectcop", CreateObject(1237, X, Y, Z-1.0, 0, 0, YZ));
				case 3: SetPVarInt(playerid,"objectcop", CreateObject(1422, X, Y, Z-0.8, 0, 0, YZ));
			}
			//EditObject(playerid, GetPVarInt(playerid, "objectcop"));
			SendClientMessage(playerid, COLOR_GREEN, "Вы установили объект");
	    }
	case D_MAFIA:
	    {
	        if(!response) return 1;
	        switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, D_MAFIA+1, 1, "{7efd7d}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
		  		case 1:	ShowPlayerDialog(playerid, D_MAFIA+2, 1, "{7efd7d}Положить металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
		  		case 2: ShowPlayerDialog(playerid, D_MAFIA+3, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
				case 3: ShowPlayerDialog(playerid, D_MAFIA+4, 1, "{7efd7d}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
				case 4:
				{
				    if(PI[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 5 ранга!");
					ShowPlayerDialog(playerid, D_MAFIA+5, 1, "{7efd7d}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
				}
				case 5:
				{
				    if(PI[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 5 ранга!");
					ShowPlayerDialog(playerid, D_MAFIA+6, 1, "{7efd7d}Взять Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
				}
				case 6:
				{
				    if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна только лидеру!");
					ShowPlayerDialog(playerid, D_MAFIA+7, 1, "{7efd7d}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
				}
				case 7:
				{
				    if(PI[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 5 ранга!");
					ShowPlayerDialog(playerid, D_MAFIA+8, 1, "{7efd7d}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
				}
		  	}
	    }
	case D_MAFIA+1:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_MAFIA+1, 1, "{7efd7d}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_MAFIA+1, 1, "{7efd7d}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(PI[playerid][pPatron] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько патронов!");
			new i = (PI[playerid][pMember] == TEAM_OPGOR) ? (0) : (PI[playerid][pMember] == TEAM_OPGYG) ? (1) : (2);
			PI[playerid][pPatron] -= till;
			MysqlUpdatePlayerInt(playerid, "patron", PI[playerid][pPatron]);
			MafiaPatr[i] += till;
			new Query[56];
			format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET lcnpat=%d,yakpat=%d,rmpat=%d", MafiaPatr[0], MafiaPatr[1], MafiaPatr[2]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад мафии патроны (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] положил на склад мафии %i патрон", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] положила на склад мафии %i патрон", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case 1982:
	{
	    if(!response) return 1;
		new string[300];
	    new till = 0;
	    if(sscanf(inputtext, "i", till)) return SPD(playerid,1982,DSI,"Склад Армии | Взять металл","Введите кол-во кг. металла, которое хотите взять .","Взять","Закрыть");
	    if(till < 0) return SPD(playerid,1982,DSI,"Склад Армии | Взять металл","Введите кол-во кг. металла, которое хотите взять .","Взять","Закрыть");
		if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада армии %i кг. металла", GetName(playerid), playerid, till);
		else format(string, 90, "%s[%d] взяла со склада армии %i кг. металла", GetName(playerid), playerid, till);
		SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
	    gArmyWarehouse[0] -= till;
		SaveWarehouse();
		WHDataUpdate();
		PI[playerid][pGunAmount] += till;
	    return 1;
	}
	case 1983:
	{
	    if(!response) return 1;
	    new string[300];
	    new till = 0;
	    if(sscanf(inputtext, "i", till)) return SPD(playerid,1983,DSI,"Склад Армии | Взять патроны","Введите кол-во шт. патронов, которое хотите взять .","Взять","Закрыть");
	    if(till < 0) return SPD(playerid,1983,DSI,"Склад Армии | Взять патроны","Введите кол-во шт. патронов, которое хотите взять .","Взять","Закрыть");
		if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада армии %i шт. патронов", GetName(playerid), playerid, till);
		else format(string, 90, "%s[%d] взяла со склада армии %i шт. патронов", GetName(playerid), playerid, till);
		SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
	    gArmyWarehouse[1] -= till;
		SaveWarehouse();
		WHDataUpdate();
		PI[playerid][pPatron] += till;
	    return 1;
	}
	case 1984:
	{
	    if(response)
		{
			switch(listitem)
			{
			    case 0:
			    {
			        new string[1000];
			    	format(string, sizeof(string), "{FFFFFF}Статистика: {99cc00}Армия\n{FFFFFF}Патроны: {7efd7d}%d {ffffff}шт.\nМеталл: {7efd7d}%d {ffffff}кг.",gArmyWarehouse[1],gArmyWarehouse[0]);
			    	SPD(playerid,1985,DSM,"{7efd7d}Статистика: {ffffff}Армия",string,"Изменить","Назад");
			    }
				case 1:
				{
			        new string[1000];
			    	format(string, sizeof(string), "{FFFFFF}Статистика: {99cc00}ОПГ 'Ореховское'\n{FFFFFF}Патроны: {7efd7d}%d {ffffff}шт.\nМеталл: {7efd7d}%d {ffffff}кг.\nНаркотики: {7efd7d}%d {ffffff}гр.\nДеньги: {7efd7d}%d {ffffff}руб.\nКол-во бизнесов: {7efd7d}%d {ffffff}шт.",MafiaPatr[0], MafiaEd[0], DrugsBank[TEAM_OPGOR], FracBank[6], MafiaTotalBizz[0]);
			    	SPD(playerid,1986,DSM,"{7efd7d}Статистика: {ffffff}ОПГ 'Ореховское'",string,"Изменить","Назад");
				}
				case 2:
				{
			        new string[1000];
			    	format(string, sizeof(string), "{FFFFFF}Статистика: {99cc00}ОПГ 'Южное'\n{FFFFFF}Патроны: {7efd7d}%d {ffffff}шт.\nМеталл: {7efd7d}%d {ffffff}кг.\nНаркотики: {7efd7d}%d {ffffff}гр.\nДеньги: {7efd7d}%d {ffffff}руб.\nКол-во бизнесов: {7efd7d}%d {ffffff}шт.",MafiaPatr[1], MafiaEd[1], DrugsBank[TEAM_OPGYG], FracBank[5], MafiaTotalBizz[1]);
			    	SPD(playerid,1987,DSM,"{7efd7d}Статистика: {ffffff}ОПГ 'Южное'",string,"Изменить","Назад");
				}
			}
		}
		else { }
	}
	case 1985:
	{
	    if(response)
	    {
	        SPD(playerid,1988,DSL,"{7efd7d}Выбор действия","{7efd7d}1. {ffffff}Установить металл\n{7efd7d}2. {ffffff}Установить патроны","Далее","Назад");
	    }
	    else
		{
	        SPD(playerid,1984,DSL,"{7efd7d}Список организаций","{7efd7d}1. {ffffff}Армия\n{7efd7d}2. {ffffff}Русская Мафия\n{7efd7d}3. {ffffff}Украинская Мафия","Выбрать","Закрыть");
		}
	}
	case 1986:
	{
	    if(response)
	    {
	        SPD(playerid,1992,DSL,"{7efd7d}Выбор действия","{7efd7d}1. {ffffff}Установить металл\n{7efd7d}2. {ffffff}Установить патроны\n{7efd7d}3. {ffffff}Установить деньги\n{7efd7d}4. {ffffff}Установить наркотики","Далее","Назад");
	    }
	    else
		{
	        SPD(playerid,1984,DSL,"{7efd7d}Список организаций","{7efd7d}1. {ffffff}Армия\n{7efd7d}2. {ffffff}Русская Мафия\n{7efd7d}3. {ffffff}Украинская Мафия","Выбрать","Закрыть");
		}
	}
	case 1987:
	{
	    if(response)
	    {
	        SPD(playerid,1997,DSL,"{7efd7d}Выбор действия","{7efd7d}1. {ffffff}Установить металл\n{7efd7d}2. {ffffff}Установить патроны\n{7efd7d}3. {ffffff}Установить деньги\n{7efd7d}4. {ffffff}Установить наркотики","Далее","Назад");
	    }
	    else
		{
	        SPD(playerid,1984,DSL,"{7efd7d}Список организаций","{7efd7d}1. {ffffff}Армия\n{7efd7d}2. {ffffff}Русская Мафия\n{7efd7d}3. {ffffff}Украинская Мафия","Выбрать","Закрыть");
		}
	}
	case 1992:
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                SPD(playerid,1993,DSI,"{7efd7d}Установить металл","{ffffff}Укажите кол-во металла .","Далее","Назад");
	            }
	            case 1:
	            {
	                SPD(playerid,1994,DSI,"{7efd7d}Установить патроны","{ffffff}Укажите кол-во патронов .","Далее","Назад");
	            }
	            case 2:
	            {
	                SPD(playerid,1995,DSI,"{7efd7d}Установить деньги","{ffffff}Укажите кол-во денег .","Далее","Назад");
	            }
	            case 3:
	            {
	                SPD(playerid,1996,DSI,"{7efd7d}Установить наркотики","{ffffff}Укажите кол-во наркотики .","Далее","Назад");
	            }
	        }
	    }
	    else
	    {
	        
	    }
	}
	case 1997:
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                SPD(playerid,1998,DSI,"{7efd7d}Установить металл","{ffffff}Укажите кол-во металла .","Далее","Назад");
	            }
	            case 1:
	            {
	                SPD(playerid,1999,DSI,"{7efd7d}Установить патроны","{ffffff}Укажите кол-во патронов .","Далее","Назад");
	            }
	            case 2:
	            {
	                SPD(playerid,2000,DSI,"{7efd7d}Установить деньги","{ffffff}Укажите кол-во денег .","Далее","Назад");
	            }
	            case 3:
	            {
	                SPD(playerid,2001,DSI,"{7efd7d}Установить наркотики","{ffffff}Укажите кол-во наркотики .","Далее","Назад");
	            }
	        }
	    }
	    else
	    {
	        SPD(playerid,1988,DSL,"{7efd7d}Выбор действия","{7efd7d}1. {ffffff}Установить металл\n{7efd7d}2. {ffffff}Установить патроны","Далее","Назад");
	    }
	}
	case 1998:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,1998,DSI,"{7efd7d}Установить металл","{ffffff}Укажите кол-во металла .","Далее","Назад");
			MafiaEd[1] = till;
			WHDataUpdate();
	    }
	}
	case 1999:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,1999,DSI,"{7efd7d}Установить патроны","{ffffff}Укажите кол-во патронов .","Далее","Назад");
			MafiaPatr[1] = till;
			WHDataUpdate();
	    }
	}
	case 2000:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,2000,DSI,"{7efd7d}Установить деньги","{ffffff}Укажите кол-во денег .","Далее","Назад");
			FracBank[5] = till;
			WHDataUpdate();
	    }
	}
	case 2001:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,2001,DSI,"{7efd7d}Установить наркотики","{ffffff}Укажите кол-во наркотики .","Далее","Назад");
			DrugsBank[TEAM_OPGYG] = till;
			WHDataUpdate();
	    }
	}
	case 1993:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,1993,DSI,"{7efd7d}Установить металл","{ffffff}Укажите кол-во металла .","Далее","Назад");
			MafiaEd[0] = till;
			WHDataUpdate();
	    }
	}
	case 1994:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,1994,DSI,"{7efd7d}Установить патроны","{ffffff}Укажите кол-во патронов .","Далее","Назад");
			MafiaPatr[0] = till;
			WHDataUpdate();
	    }
	}
	case 1995:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,1995,DSI,"{7efd7d}Установить деньги","{ffffff}Укажите кол-во денег .","Далее","Назад");
			FracBank[6] = till;
			WHDataUpdate();
	    }
	}
	case 1996:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,1996,DSI,"{7efd7d}Установить наркотики","{ffffff}Укажите кол-во наркотики .","Далее","Назад");
			DrugsBank[TEAM_OPGOR] = till;
			WHDataUpdate();
	    }
	}
	case 1988:
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                SPD(playerid,1989,DSI,"{7efd7d}Установить металл","{ffffff}Укажите кол-во металла .","Далее","Назад");
	            }
	            case 1:
	            {
	                SPD(playerid,1990,DSI,"{7efd7d}Установить патроны","{ffffff}Укажите кол-во патронов .","Далее","Назад");
	            }
	        }
	    }
	    else
	    {

	    }
	}
	case 1989:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,1989,DSI,"{7efd7d}Установить металл","{ffffff}Укажите кол-во металла .","Далее","Назад");
			gArmyWarehouse[0] = till;
			WHDataUpdate();
	    }
	}
	case 1990:
	{
	    if(response)
	    {
			new till = 0;
			if(sscanf(inputtext, "i", till)) return SPD(playerid,1990,DSI,"{7efd7d}Установить патроны","{ffffff}Укажите кол-во патронов .","Далее","Назад");
			gArmyWarehouse[1] = till;
			WHDataUpdate();
	    }
	}
	case D_MAFIA+2:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_MAFIA+2, 1, "{7efd7d}Положить Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_MAFIA+2, 1, "{7efd7d}Положить Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
			if(PI[playerid][pGunAmount] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько Металл!");
			new i = (PI[playerid][pMember] == TEAM_OPGOR) ? (0) : (PI[playerid][pMember] == TEAM_OPGYG) ? (1) : (2);
			PI[playerid][pGunAmount] -= till;
			MysqlUpdatePlayerInt(playerid, "gunamount", PI[playerid][pGunAmount]);
			MafiaEd[i] += till;
			new Query[53];
			format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET lcned=%d,yaked=%d,rmed=%d", MafiaEd[0], MafiaEd[1], MafiaEd[2]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад мафии Металл (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] положил на склад мафии %i Металл", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] положила на склад мафии %i Металл", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_MAFIA+3:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_MAFIA+3, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_MAFIA+3, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till > GetMoney(playerid) || till < 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег!");
			new i = (PI[playerid][pMember] == TEAM_OPGOR) ? (6) : (PI[playerid][pMember] == TEAM_OPGYG) ? (5) : (7);
            TransferMoney(playerid, -1, till);
			FracBank[i] += till;
			new Query[83];
			format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET yakuzabank=%d,lcnbank=%d,rmbank=%d", FracBank[5], FracBank[6], FracBank[7]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад мафии %d Рублей", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] положил на склад мафии %i Рублей", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] положила на склад мафии %i Рублей", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_MAFIA+4:
		{
	    	if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_MAFIA+4, 1, "{7efd7d}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_MAFIA+4, 1, "{7efd7d}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
			if(PI[playerid][pDrugs] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков!");
			new i = (PI[playerid][pMember] == TEAM_OPGOR) ? (15) : (PI[playerid][pMember] == TEAM_OPGYG) ? (16) : (17);
			PI[playerid][pDrugs] -= till;
			MysqlUpdatePlayerInt(playerid, "drugs", PI[playerid][pDrugs]);
			DrugsBank[i] += till;
			new Query[62];
			format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET yakuzadrugs=%d,lcndrugs=%d,rmdrugs=%d", DrugsBank[TEAM_OPGYG], DrugsBank[TEAM_OPGOR], DrugsBank[TEAM_RM]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад мафии наркотики (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] положил на склад мафии %i грамм наркотиков", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] положила на склад мафии %i грамм наркотиков", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
		}
	case D_MAFIA+5:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_MAFIA+5, 1, "{7efd7d}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			new i = (PI[playerid][pMember] == TEAM_OPGOR) ? (0) : (PI[playerid][pMember] == TEAM_OPGYG) ? (1) : (2);
			if(till < 0 || till > MafiaPatr[i]) return ShowPlayerDialog(playerid, D_MAFIA+5, 1, "{7efd7d}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(PI[playerid][pPatron]+till > 500 && !PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 500 патрон!");
			if(PI[playerid][pPatron]+till > 1000 && PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 1000 патрон!");
			PI[playerid][pPatron] += till;
			MysqlUpdatePlayerInt(playerid, "patron", PI[playerid][pPatron]);
			MafiaPatr[i] -= till;
			new Query[56];
			format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET lcnpat=%d,yakpat=%d,rmpat=%d", MafiaPatr[0], MafiaPatr[1], MafiaPatr[2]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада мафии патроны (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада мафии %i патрон", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] взяла со склада мафии %i патрон", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_MAFIA+6:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_MAFIA+6, 1, "{7efd7d}Взять Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
			new i = (PI[playerid][pMember] == TEAM_OPGOR) ? (0) : (PI[playerid][pMember] == TEAM_OPGYG) ? (1) : (2);
			if(till < 0 || till > MafiaEd[i]) return ShowPlayerDialog(playerid, D_MAFIA+6, 1, "{7efd7d}Взять Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
			if(PI[playerid][pGunAmount]+till > 500 && !PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 500 Металл!");
			if(PI[playerid][pGunAmount]+till > 1000 && PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 1000 Металл!");
			PI[playerid][pGunAmount] += till;
			MysqlUpdatePlayerInt(playerid, "gunamount", PI[playerid][pGunAmount]);
			MafiaEd[i] -= till;
			new Query[53];
			format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET lcned=%d,yaked=%d,rmed=%d", MafiaEd[0], MafiaEd[1], MafiaEd[2]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада мафии Металл (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада мафии %i Металл", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] взяла со склада мафии %i Металл", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_MAFIA+7:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_MAFIA+7, 1, "{7efd7d}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_MAFIA+7, 1, "{7efd7d}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			new i = (PI[playerid][pMember] == TEAM_OPGOR) ? (6) : (PI[playerid][pMember] == TEAM_OPGYG) ? (5) : (7);
			if(till > FracBank[i] || till < 0) return SendClientMessage(playerid, COLOR_GREY, "На складе мафии нет столько денег!");
            TransferMoney(-1, playerid, till);
			FracBank[i] -= till;
			new Query[83];
			format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET yakuzabank=%d,lcnbank=%d,rmbank=%d", FracBank[5], FracBank[6], FracBank[7]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада мафии %d Рублей", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада мафии %i Рублей", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] взяла со склада мафии %i Рублей", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_MAFIA+8:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_MAFIA+8, 1, "{7efd7d}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
			new i = (PI[playerid][pMember] == TEAM_OPGOR) ? (15) : (PI[playerid][pMember] == TEAM_OPGYG) ? (16) : (17);
			if(till < 0 || till > DrugsBank[i]) return ShowPlayerDialog(playerid, D_MAFIA+8, 1, "{7efd7d}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
			if(PI[playerid][pDrugs]+till > 100) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 100 грамм наркотиков!");
			PI[playerid][pDrugs] += till;
			MysqlUpdatePlayerInt(playerid, "drugs", PI[playerid][pDrugs]);
			DrugsBank[i] -= till;
			new Query[62];
			format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET yakuzadrugs=%d,lcndrugs=%d,rmdrugs=%d", DrugsBank[TEAM_OPGYG], DrugsBank[TEAM_OPGOR], DrugsBank[TEAM_RM]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада мафии наркотики (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада мафии %i гр. наркотиков", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] взяла со склада мафии %i гр. наркотиков", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_GANG:
	    {
	        if(!response) return 1;
	        switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, D_GANG+1, 1, "{7efd7d}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
		  		case 1:	ShowPlayerDialog(playerid, D_GANG+2, 1, "{7efd7d}Положить Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
		  		case 2: ShowPlayerDialog(playerid, D_GANG+3, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
				case 3: ShowPlayerDialog(playerid, D_GANG+4, 1, "{7efd7d}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
				case 4:
				{
				    if(PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 4 ранга!");
					ShowPlayerDialog(playerid, D_GANG+5, 1, "{7efd7d}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
				}
				case 5:
				{
				    if(PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 4 ранга!");
					ShowPlayerDialog(playerid, D_GANG+6, 1, "{7efd7d}Взять Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
				}
				case 6:
				{
				    if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна только лидеру!");
					ShowPlayerDialog(playerid, D_GANG+7, 1, "{7efd7d}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
				}
				case 7:
				{
				    if(PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 4 ранга!");
					ShowPlayerDialog(playerid, D_GANG+8, 1, "{7efd7d}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
				}
		  	}
	    }
	case D_GANG+1:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_GANG+1, 1, "{7efd7d}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_GANG+1, 1, "{7efd7d}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(PI[playerid][pPatron] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько патронов!");
			new i = (PI[playerid][pMember] == TEAM_OPGTEST1) ? (0) : (PI[playerid][pMember] == TEAM_BALLAS) ? (1) : (PI[playerid][pMember] == TEAM_RIFA) ? (2) : (PI[playerid][pMember] == TEAM_OPGTEST2) ? (3) : (4);
			PI[playerid][pPatron] -= till;
			MysqlUpdatePlayerInt(playerid, "patron", PI[playerid][pPatron]);
			GangPatr[i] += till;
			new Query[91];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET grovepat=%d,ballaspat=%d,rifapat=%d,aztecpat=%d,vagospat=%d", GangPatr[0], GangPatr[1], GangPatr[2], GangPatr[3], GangPatr[4]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад банды патроны (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] положил на склад банды %i патрон", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] положила на склад банды %i патрон", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_GANG+2:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_GANG+2, 1, "{7efd7d}Положить Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_GANG+2, 1, "{7efd7d}Положить Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
			if(PI[playerid][pGunAmount] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько Металл!");
			new i = (PI[playerid][pMember] == TEAM_OPGTEST1) ? (0) : (PI[playerid][pMember] == TEAM_BALLAS) ? (1) : (PI[playerid][pMember] == TEAM_RIFA) ? (2) : (PI[playerid][pMember] == TEAM_OPGTEST2) ? (3) : (4);
			PI[playerid][pGunAmount] -= till;
			MysqlUpdatePlayerInt(playerid, "gunamount", PI[playerid][pGunAmount]);
			GangEd[i] += till;
			new Query[85];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET groveed=%d,ballased=%d,rifaed=%d,azteced=%d,vagosed=%d", GangEd[0], GangEd[1], GangEd[2], GangEd[3], GangEd[4]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад банды Металл (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] положил на склад банды %i Металл", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] положила на склад банды %i Металл", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_GANG+3:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_GANG+3, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_GANG+3, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till > GetMoney(playerid) || till < 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег!");
			new i = (PI[playerid][pMember] == TEAM_OPGTEST1) ? (0) : (PI[playerid][pMember] == TEAM_BALLAS) ? (1) : (PI[playerid][pMember] == TEAM_RIFA) ? (2) : (PI[playerid][pMember] == TEAM_OPGTEST2) ? (3) : (4);
            TransferMoney(playerid, -1, till);
			FracBank[i] += till;
			new Query[131];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET grovebank=%d,ballasbank=%d,rifabank=%d,aztecbank=%d,vagosbank=%d", FracBank[0], FracBank[1], FracBank[2], FracBank[3], FracBank[4]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад банды %d Рублей", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] положил на склад банды %i Рублей", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] положила на склад банды %i Рублей", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_GANG+4:
		{
	    	if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_GANG+4, 1, "{7efd7d}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_GANG+4, 1, "{7efd7d}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
			if(PI[playerid][pDrugs] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков!");
			new i = (PI[playerid][pMember] == TEAM_OPGTEST1) ? (7) : (PI[playerid][pMember] == TEAM_BALLAS) ? (8) : (PI[playerid][pMember] == TEAM_RIFA) ? (9) : (PI[playerid][pMember] == TEAM_OPGTEST2) ? (10) : (11);
			PI[playerid][pDrugs] -= till;
			MysqlUpdatePlayerInt(playerid, "drugs", PI[playerid][pDrugs]);
			DrugsBank[i] += till;
			new Query[96];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET grovedrugs=%d,ballasdrugs=%d,rifadrugs=%d,aztecdrugs=%d,vagosdrugs=%d", DrugsBank[TEAM_OPGTEST1], DrugsBank[TEAM_BALLAS], DrugsBank[TEAM_RIFA], DrugsBank[TEAM_OPGTEST2], DrugsBank[TEAM_VAGOS]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад банды наркотики (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] положил на склад банды %i грамм наркотиков", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] положила на склад банды %i грамм наркотиков", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
		}
	case D_GANG+5:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_GANG+5, 1, "{7efd7d}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			new i = (PI[playerid][pMember] == TEAM_OPGTEST1) ? (0) : (PI[playerid][pMember] == TEAM_BALLAS) ? (1) : (PI[playerid][pMember] == TEAM_RIFA) ? (2) : (PI[playerid][pMember] == TEAM_OPGTEST2) ? (3) : (4);
			if(till < 0 || till > GangPatr[i]) return ShowPlayerDialog(playerid, D_GANG+5, 1, "{7efd7d}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(PI[playerid][pPatron]+till > 500 && !PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 500 патрон!");
			if(PI[playerid][pPatron]+till > 1000 && PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 1000 патрон!");
			PI[playerid][pPatron] += till;
			MysqlUpdatePlayerInt(playerid, "patron", PI[playerid][pPatron]);
			GangPatr[i] -= till;
			new Query[91];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET grovepat=%d,ballaspat=%d,rifapat=%d,aztecpat=%d,vagospat=%d", GangPatr[0], GangPatr[1], GangPatr[2], GangPatr[3], GangPatr[4]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада банды патроны (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада банды %i патрон", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] взяла со склада банды %i патрон", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_GANG+6:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, D_GANG+6, 1, "{7efd7d}Взять Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
			new i = (PI[playerid][pMember] == TEAM_OPGTEST1) ? (0) : (PI[playerid][pMember] == TEAM_BALLAS) ? (1) : (PI[playerid][pMember] == TEAM_RIFA) ? (2) : (PI[playerid][pMember] == TEAM_OPGTEST2) ? (3) : (4);
			if(till < 0 || till > GangEd[i]) return ShowPlayerDialog(playerid, D_GANG+6, 1, "{7efd7d}Взять Металл", "{FFFFFF}Введите количество Металл:", "Принять", "Отмена");
			if(PI[playerid][pGunAmount]+till > 500 && !PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 500 Металл!");
			if(PI[playerid][pGunAmount]+till > 1000 && PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 1000 Металл!");
			PI[playerid][pGunAmount] += till;
			MysqlUpdatePlayerInt(playerid, "gunamount", PI[playerid][pGunAmount]);
			GangEd[i] -= till;
			new Query[85];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET groveed=%d,ballased=%d,rifaed=%d,azteced=%d,vagosed=%d", GangEd[0], GangEd[1], GangEd[2], GangEd[3], GangEd[4]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада банды Металл (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада банды %i Металл", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] взяла со склада банды %i Металл", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_GANG+7:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_GANG+7, 1, "{7efd7d}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, D_GANG+7, 1, "{7efd7d}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			new i = (PI[playerid][pMember] == TEAM_OPGTEST1) ? (0) : (PI[playerid][pMember] == TEAM_BALLAS) ? (1) : (PI[playerid][pMember] == TEAM_RIFA) ? (2) : (PI[playerid][pMember] == TEAM_OPGTEST2) ? (3) : (4);
			if(till > FracBank[i] || till < 0) return SendClientMessage(playerid, COLOR_GREY, "На складе банды нет столько денег!");
            TransferMoney(-1, playerid, till);
			FracBank[i] -= till;
			new Query[131];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET grovebank=%d,ballasbank=%d,rifabank=%d,aztecbank=%d,vagosbank=%d", FracBank[0], FracBank[1], FracBank[2], FracBank[3], FracBank[4]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада банды %d Рублей", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада банды %i Рублей", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] взяла со склада банды %i Рублей", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_GANG+8:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, D_GANG+8, 1, "{7efd7d}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
			new i = (PI[playerid][pMember] == TEAM_OPGTEST1) ? (7) : (PI[playerid][pMember] == TEAM_BALLAS) ? (8) : (PI[playerid][pMember] == TEAM_RIFA) ? (9) : (PI[playerid][pMember] == TEAM_OPGTEST2) ? (10) : (11);
			if(till < 0 || till > DrugsBank[i]) return ShowPlayerDialog(playerid, D_GANG+8, 1, "{7efd7d}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
			if(PI[playerid][pDrugs]+till > 100) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 100 грамм наркотиков!");
			PI[playerid][pDrugs] += till;
			MysqlUpdatePlayerInt(playerid, "drugs", PI[playerid][pDrugs]);
			DrugsBank[i] -= till;
			new Query[96];
			format(Query, sizeof(Query), "UPDATE "T_GANG" SET grovedrugs=%d,ballasdrugs=%d,rifadrugs=%d,aztecdrugs=%d,vagosdrugs=%d", DrugsBank[TEAM_OPGTEST1], DrugsBank[TEAM_BALLAS], DrugsBank[TEAM_RIFA], DrugsBank[TEAM_OPGTEST2], DrugsBank[TEAM_VAGOS]);
			mysql_tquery(dbHandle, Query, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада банды наркотики (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(PI[playerid][pSex] == 1) format(string, 90, "%s[%d] взял со склада банды %i гр. наркотиков", GetName(playerid), playerid, till);
			else format(string, 90, "%s[%d] взяла со склада банды %i гр. наркотиков", GetName(playerid), playerid, till);
			SendFMes(PI[playerid][pMember], COLOR_YELLOW2, string);
			return 1;
	    }
	case D_JOB+14:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerHouse");
			HouseInfo[i][hLock] = 0;
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~g~unlock", 5000, 5);
			MeAction(playerid, "открывает замок дома");
			MysqlUpdateHouseInt(i, "hLock", HouseInfo[i][hLock]);
			SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
			SetPlayerInterior(playerid,HouseInfo[i][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
			return 1;
		}
	case D_MAIL:
	    {
	        if(!response) return 1;
	        new	code = RandomEx(10000,99999);
			new string[300];
			format(string, sizeof(string), "%s?authkey=%s&email=%s&code=%d", EMAIL_ACTIVE, EMAIL_AUTHKEY, PI[playerid][pMail], code);
			new result = HTTP(0, HTTP_HEAD, string, "","");
			SetPVarInt(playerid, "authcode", code);
			if(!result) return SendClientMessage(playerid, COLOR_RED, "Произошла ошибка при http запросе");
			ShowPlayerDialog(playerid, D_MAIL+1, DIALOG_STYLE_INPUT, "{7efd7d}Потверждение почты", "{FFFFFF}Используйте сюда код который пришёл Вам на почту", "Принять", "Закрыть");
	    }
	case D_MAIL+1:
	    {
	        if(!response) return 1;
	        if(isNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, D_MAIL+1, DIALOG_STYLE_INPUT, "{7efd7d}Потверждение почты", "{FFFFFF}Используйте сюда код который пришёл Вам на почту", "Принять", "Закрыть");
		    if(GetPVarInt(playerid,"authcode") != strval(inputtext)) return ShowPlayerDialog(playerid, D_MAIL+1, DIALOG_STYLE_INPUT, "{7efd7d}Потверждение почты", "{FFFFFF}Используйте сюда код который пришёл Вам на почту\n\n{FF0000}Неверный код, потвердите попытку ввода", "Принять", "Закрыть");
			SendMes(playerid, COLOR_YELLOW, "Вы успешно потвердили свою почту {FFFFFF}'%s'", PI[playerid][pMail]);
			PI[playerid][pMailConfirmed] = 1;
			MysqlUpdatePlayerInt(playerid, "mailconf", PI[playerid][pMailConfirmed]);
			DeletePVar(playerid, "authcode");
	    }
	case D_LICWEAPON:
		{
		    if(!response) return 1;
			if(GetMoney(playerid) < 30000) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
			TransferMoney(playerid, -1, 30000);
			PI[playerid][pLic][3] = 1;
			ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, " ", "\n\n{FFFFFF}Вы успешно оформили лицензию на оружие\nТеперь Вам разрешено использовать оружие\n\n{F04245}За несоблюдение законов и правил обращения с оружием,\nу Вас его могут изъять, вместе с лицензией, а также\nвы можете понести наказание по уголовному кодексу штата\n\n", "Ок", "");
		}
	case D_PASS:
		{
		    if(!response) return 1;
		    PassRegSex[playerid] = listitem;
		    ShowPlayerDialog(playerid, D_PASS+1, DIALOG_STYLE_INPUT, "{7efd7d}Получение паспорта [2/2]", "{FFFFFF}Введите дату Вашего рождения\n{FFFF00}Пример: 1/6/1996", "Принять", "Отмена");
		}
	case D_PASS+1:
	    {
	        if(!response) return 1;
	        new day, month, year, day2, month2, year2;
		    getdate(year, month, day);
            if(sscanf(inputtext, "p</>iii", day2, month2, year2)) return ShowPlayerDialog(playerid, D_PASS+1, DIALOG_STYLE_INPUT, "{7efd7d}Получение паспорта [2/2]", "{FFFFFF}Введите дату Вашего рождения\n{FFFF00}Пример: 1/6/1996", "Принять", "Отмена");
	        new check = year - year2;
			if(check > 50 || check < 1 || day2 > GetMonthDays(year2, month2) || day2 < 1 || month2 > 12 || month2 < 1)
			return ShowPlayerDialog(playerid, D_PASS+1, DIALOG_STYLE_INPUT, "{7efd7d}Получение паспорта [2/2]", "{FFFFFF}Введите дату Вашего рождения\n{FFFF00}Пример: 1/6/1996", "Принять", "Отмена");
			if(check < 18) return ShowPlayerDialog(playerid, D_PASS+1, DIALOG_STYLE_INPUT, "{7efd7d}Получение паспорта [2/2]", "{FFFFFF}Введите дату Вашего рождения\n{FFFF00}Пример: 1/6/1996\n\n{AFAFAF}[Ошибка] Вы должны быть старше 18 лет!", "Принять", "Отмена");
			if(month2 > month || (month2 == month && day2 > day)) check--;
            PI[playerid][pSex] = PassRegSex[playerid];
		    PassInfo[playerid][psDateBirth][0] = day2;
		    PassInfo[playerid][psDateBirth][1] = month2;
		    PassInfo[playerid][psDateBirth][2] = year2;
		    PassInfo[playerid][psDate][0] = day;
		    PassInfo[playerid][psDate][1] = month;
		    PassInfo[playerid][psDate][2] = year;
			PassInfo[playerid][psNumber] = 100000 + random(900000);
			PassInfo[playerid][psSeria] = 1000 + random(9000);
			new string[250];
			format(string, sizeof(string), "INSERT INTO `passports` (`Name`,`Seria`,`Number`,`Sex`,`D_Day`,`D_Month`,`D_Year`,`DB_Day`,`DB_Month`,`DB_Year`,`McState`) VALUE ('%s','%d','%d','%d','%d','%d','%d','%d','%d','%d','-1')",
			GetName(playerid),
			PassInfo[playerid][psSeria],
			PassInfo[playerid][psNumber],
			PassInfo[playerid][psSex],
			PassInfo[playerid][psDate][0],
			PassInfo[playerid][psDate][1],
			PassInfo[playerid][psDate][2],
			PassInfo[playerid][psDateBirth][0],
			PassInfo[playerid][psDateBirth][1],
			PassInfo[playerid][psDateBirth][2]);
			mysql_tquery(dbHandle, string, "", "");
			SendClientMessage(playerid, COLOR_GREEN, "Вы успешно получили паспорт. Чтобы показать, используйте команду /pass");
	    }
	case D_APANEL:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "У вас нет доступа!");
				    new year, month, day, string[100];
				    new current_date = getdate(year, month, day);
					SendClientMessage(playerid, COLOR_BLUE, "VIP игроки:");
					foreach(new i: Player)
					{
						if(!PlayerLogged[i] || !PI[i][pVip]) continue;
						format(string, sizeof(string), "- %s (осталось дней: %i)", GetName(i), PI[i][pVipTime] - current_date);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
	            }
	            case 1: cmd_admins(playerid);
	            case 2:
	            {
	                if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "У вас нет доступа!");
                    mysql_tquery(dbHandle, "SELECT * FROM "T_ADMIN" WHERE level > '0'", "AllAdmins", "i", playerid);
	            }
	            case 3: cmd_ahelp(playerid);
	            case 4:
	            {
	                if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "У вас нет доступа!");
				    new string[350];
				    format(string, sizeof(string), "{ffffff}Телепорт к себе\t\t| %s\n{ffffff}Телепорт себя\t\t\t| %s\n{ffffff}Слежка за собой\t\t| %s\nИнформация",
					(AdminInfo[playerid][admGoto]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
					(AdminInfo[playerid][admGethere]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
					(AdminInfo[playerid][admSpectate]) ? ("{F04245}Запрещена") : ("{63BD4E}Разрешена"));
					ShowPlayerDialog(playerid, D_APANEL+3, 2, "{7efd7d}Настройки администратора", string, "Выбрать", "Назад");
	            }
	            case 5:
				{
				    if(PI[playerid][pAdmin] < ADM_GRAND) return SendClientMessage(playerid, COLOR_GREY, "У вас нет доступа!");
				    new string[256];
				    format(string, sizeof(string), "{ffffff}Удвоение опыта\t\t| %s\n{ffffff}Удвоение доната\t\t| %s\n",
					(!doubling_exp) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
					(!doubling_donate) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"));
					ShowPlayerDialog(playerid, D_APANEL+2, 2, "{7efd7d}Управление сервером", string, "Выбрать", "Назад");
				}
	        }
	    }
	case D_APANEL+2:
	    {
	        if(!response) return cmd_apanel(playerid);
	        switch(listitem)
	        {
	            case 0:
				{
					doubling_exp = (!doubling_exp) ? (1) : (0);
					MysqlUpdateOtherInt("d_exp", doubling_exp);
				}
	            case 1:
	            {
					doubling_donate = (!doubling_donate) ? (1) : (0);
					MysqlUpdateOtherInt("d_donate", doubling_donate);
				}
	        }
	        new string[256];
			format(string, sizeof(string), "{ffffff}Удвоение опыта:\t\t| %s\n{ffffff}Удвоение доната:\t\t| %s\n",
			(!doubling_exp) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
			(!doubling_donate) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"));
			ShowPlayerDialog(playerid, D_APANEL+2, 2, "{7efd7d}Управление сервером", string, "Выбрать", "Назад");
	    }
	case D_APANEL+3:
	    {
	        if(!response) return cmd_apanel(playerid);
	        if(listitem < 3)
	        {
		        new string[350], Query[128];
		        switch(listitem)
		        {
		            case 0:
					{
						AdminInfo[playerid][admGoto] = (!AdminInfo[playerid][admGoto]) ? (1) : (0);
						format(Query, sizeof(Query), "UPDATE "T_ADMIN" SET a_goto='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admGoto], GetName(playerid));
						mysql_tquery(dbHandle, Query, "", "");
					}
		            case 1:
		            {
						AdminInfo[playerid][admGethere] = (!AdminInfo[playerid][admGethere]) ? (1) : (0);
						format(Query, sizeof(Query), "UPDATE "T_ADMIN" SET a_gethere='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admGoto], GetName(playerid));
						mysql_tquery(dbHandle, Query, "", "");
					}
					case 2:
					{
					    AdminInfo[playerid][admSpectate] = (!AdminInfo[playerid][admSpectate]) ? (1) : (0);
					    format(Query, sizeof(Query), "UPDATE "T_ADMIN" SET a_spec='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admGoto], GetName(playerid));
						mysql_tquery(dbHandle, Query, "", "");
					}
		        }
			    format(string, sizeof(string), "{ffffff}Телепорт к себе\t\t| %s\n{ffffff}Телепорт себя\t\t\t| %s\n{ffffff}Слежка за собой\t\t| %s\nИнформация",
				(AdminInfo[playerid][admGoto]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
				(AdminInfo[playerid][admGethere]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
				(AdminInfo[playerid][admSpectate]) ? ("{F04245}Запрещена") : ("{63BD4E}Разрешена"));
				ShowPlayerDialog(playerid, D_APANEL+3, 2, "{7efd7d}Настройки администратора", string, "Выбрать", "Назад");
			}
			else
			{
			    switch(listitem)
				{
				    case 3: ShowPlayerDialog(playerid, D_APANEL+4, 0, "{7efd7d}Информация", "{FFFFFF}Данные запреты действуют только на администраторов младше 5 уровня.", "Назад", "");
				}
			}
	    }
	case D_APANEL+4:
	    {
	        if(response)
	        {
	            new string[350];
	            format(string, sizeof(string), "{ffffff}Телепорт к себе\t\t| %s\n{ffffff}Телепорт себя\t\t\t| %s\n{ffffff}Слежка за собой\t\t| %s\nИнформация",
				(AdminInfo[playerid][admGoto]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
				(AdminInfo[playerid][admGethere]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
				(AdminInfo[playerid][admSpectate]) ? ("{F04245}Запрещена") : ("{63BD4E}Разрешена"));
				ShowPlayerDialog(playerid, D_APANEL+3, 2, "{7efd7d}Настройки администратора", string, "Выбрать", "Назад");
	        }
	    }
	case D_JOB+201:
	    {
	        if(!response) return cmd_menu(playerid);
	        switch(listitem)
	        {
	            case 0: ShowPlayerDialog(playerid, D_JOB+18, 1, "{7efd7d}Смена пароля", "{FFFFFF}Введите ваш действующий пароль:", "Принять", "Отмена");
	            case 1:
	            {
	                SendClientMessage(playerid, COLOR_RED, "Временно недоступно!");
	                /*if(!GetPVarInt(playerid, "authcode"))
	                {
	                	if(PI[playerid][pMailConfirmed]) return SendClientMessage(playerid, COLOR_GREY, "Ваша почта уже потверждена!");
						ShowPlayerDialog(playerid, D_MAIL, DIALOG_STYLE_MSGBOX, "{7efd7d}Потверждение почты", "{FFFFFF}На почту, которую Вы указали при регистрации, отправлен код потверждения.", "Ок", "Закрыть");
					}
					else ShowPlayerDialog(playerid, D_MAIL+1, DIALOG_STYLE_INPUT, "{7efd7d}Потверждение почты", "{FFFFFF}Используйте сюда код который пришёл Вам на почту", "Принять", "Закрыть");*/
	            }
	            case 2:
	            {
	                if(PI[playerid][pCheckCode])
					{
					    PI[playerid][pCheckCode] = 0;
					    MysqlUpdatePlayerInt(playerid,"checkcode",PI[playerid][pCheckCode]);
						PlayerSecurity(playerid);
					}
					else ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "{7efd7d}Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
	            }
	            case 3:
	            {
	                if(PI[playerid][pCheckCode])
	                {
	                    new str[300], mes[30];
	                    switch(PI[playerid][pCheckCode])
	                    {
	                        case 1: mes = "Запрашивается всегда";
	                        case 2: mes = "При несовпадении IP адреса";
	                        case 3: mes = "При несовпадении подсети";
	                    }
	                    format(str, sizeof(str), "{7efd7d}- %s{FFFFFF}\n1. Запрашивать всегда\n2. При несовпадении IP адреса\n3. При несовпадении подсети", mes);
	                	ShowPlayerDialog(playerid, 12423, DIALOG_STYLE_LIST, "{7efd7d}Настройки графического пароля", str, "Выбрать", "Назад");
                	}
                	else SendClientMessage(playerid, COLOR_GREY, "У вас не установлен графический пароль!");
	            }
	        }
	    }
	case 12422:
		{
			if(!response) return PlayerSecurity(playerid);
			new day;
			if(sscanf(inputtext, "i", day)) return ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "{7efd7d}Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
			if(strlen(inputtext) != 4) return ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "{7efd7d}Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
			if(strfind(inputtext, "0", true) != -1)
			{
			    ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "{7efd7d}Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "В графическом пароле нельзя использовать цифру 0");
			}
			PI[playerid][pSecurityCode] = day;
			PI[playerid][pCheckCode] = 2;
			SendMes(playerid, COLOR_LIME, "Ваш новый графический пароль: {ffffff}%i", day);
			SendClientMessage(playerid, COLOR_LIME, "Рекомендуется сделать скриншот. Клавиша: {ffffff}F8");
			MysqlUpdatePlayerInt(playerid,"securitycode",PI[playerid][pSecurityCode]);
			MysqlUpdatePlayerInt(playerid,"checkcode",PI[playerid][pCheckCode]);
		}
	case 12423:
	    {
	        if(!response) return PlayerSecurity(playerid);
			switch(listitem)
			{
				case 1:
				{
					PI[playerid][pCheckCode] = 1;
					SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при каждом заходе на сервер");
				}
				case 2:
				{
				    PI[playerid][pCheckCode] = 2;
				    SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при несовпадении IP адреса");
				}
				case 3:
				{
				    PI[playerid][pCheckCode] = 3;
				    SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при несовпадении подсети");
				}
			}
			MysqlUpdatePlayerInt(playerid,"checkcode",PI[playerid][pCheckCode]);
	    }
	case D_JOB+18:
		{
			if(!response) return 1;
			new password[32];
			if(sscanf(inputtext, "s[32]",password)) return ShowPlayerDialog(playerid, D_JOB+18, 1, "{7efd7d}Смена пароля", "{ffffff}Введите ваш действующий пароль:", "Принять", "Отмена");
			if(strlen(password) < 6 || strlen(password) > 16)
			{
				SendClientMessage(playerid, COLOR_GREY, "Количество символов от 6 до 16!");
				return ShowPlayerDialog(playerid, D_JOB+18, 1, "{7efd7d}Смена пароля", "{ffffff}Введите ваш действующий пароль:", "Принять", "Отмена");
			}
			if(IsTextRussian(password))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, D_JOB+18, 1, "{7efd7d}Смена пароля", "{ffffff}Введите ваш действующий пароль:", "Принять", "Отмена");
			}
			if(!strcmp(password, PI[playerid][pPassword], true)) ShowPlayerDialog(playerid, D_JOB+19, 1, "{7efd7d}Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");
			else
			{
				SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
				Kick(playerid);
			}
		}
	case D_JOB+19:
		{
			if(!response) return 1;
			new password[32];
			if(sscanf(inputtext, "s[32]",password)) return ShowPlayerDialog(playerid, D_JOB+19, 1, "{7efd7d}Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");
			if(strlen(password) < 3 || strlen(password) > 16)
			{
				SendClientMessage(playerid, COLOR_GREY, "Количество символов от 3 до 16!");
				return ShowPlayerDialog(playerid, D_JOB+19, 1, "{7efd7d}Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");
			}
			if(IsTextRussian(password))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, D_JOB+19, 1, "{7efd7d}Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");
			}
			strmid(PI[playerid][pPassword], password, 0, strlen(password), 32);
			SendMes(playerid, COLOR_LIGHTRED, "Ваш новый пароль: {ffffff}'%s' (без кавычек)", inputtext);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Рекомендуется сделать скриншот. Клавиша: {ffffff}F8");
			MysqlUpdatePlayerStr(playerid, "password", PI[playerid][pPassword]);
		}
		case D_JOB+20:
		{
			if(!response) return cmd_menu(playerid);
			new nickname[24];
			if(sscanf(inputtext, "s[24]", nickname)) return ShowPlayerDialog(playerid, D_JOB+20, 1, "{7efd7d}Смена NonRP ника", "{FFFFFF}Введите будущий ник\n\n{F04245}Возможно сменить только если у Вас NonRP ник!", "Принять", "Назад");
			if(strlen(nickname) < 3 || strlen(nickname) > 24) return SendClientMessage(playerid, COLOR_GREY, "Длина ника не может быть меньше трех и больше 24 символов");
            if(IsLoginInvalid(nickname)) return SendClientMessage(playerid, COLOR_GREY, "В нике найдены запрещенные символы/пробелы");
            if(IsTextRussian(nickname)) return SendClientMessage(playerid, COLOR_GREY, "Ник должен содержать только латинские буквы");
			if(strfind(GetName(playerid), "_", true) != -1) return SendClientMessage(playerid, COLOR_GREY, "Менять ник можно только если у вас NonRP ник");
			if(strfind(nickname, "_", true) == -1) return SendClientMessage(playerid, COLOR_GREY, "Новый ник должен быть формата Имя_Фамилия");
			format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", nickname);
			mysql_tquery(dbHandle, query, "OnPlayerChangeName", "is", playerid, nickname);
		}
		case D_JOB+22:
		{
			if(!response) return 1;
			{
			   	PI[playerid][cModel] = 0;
				PI[playerid][cLock] = 1;
				PI[playerid][cColor][0] = PI[playerid][cColor][1] = 0;
				PI[playerid][cClass] = 0;
				PI[playerid][cFuel] = 45;
				PI[playerid][cPaintjob] = 3;
				PI[playerid][cProbeg] = 0.0;
				for(new i = 0; i < 14; i++) PI[playerid][cVehcoms][i] = 0;
				format(PI[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
				PI[playerid][cVehcoms][0],PI[playerid][cVehcoms][1],PI[playerid][cVehcoms][2],
				PI[playerid][cVehcoms][3],PI[playerid][cVehcoms][4],PI[playerid][cVehcoms][5],
				PI[playerid][cVehcoms][6],PI[playerid][cVehcoms][7],PI[playerid][cVehcoms][8],
				PI[playerid][cVehcoms][9],PI[playerid][cVehcoms][10],PI[playerid][cVehcoms][11],
				PI[playerid][cVehcoms][12],PI[playerid][cVehcoms][13]);
				new string[128];
				format(string, sizeof(string), "Вы продали ваше транспортное средство за {7efd7d}%d {7efd7d} рублей", PI[playerid][cCost] / 2);
				SendClientMessage(playerid, COLOR_BLUE, string);
				TransferMoney(-1,playerid,PI[playerid][cCost] / 2);
				PI[playerid][pRegVehicle] = 0;
    			MysqlUpdatePlayerInt(playerid, "veh_reg", PI[playerid][pRegVehicle]);
    			strmid(PI[playerid][pNumberVehicle], "[ HET HOMEPOB ]", 0, strlen("[ HET HOMEPOB ]"), 20);
    			MysqlUpdatePlayerStr(playerid, "veh_number", PI[playerid][pNumberVehicle]);
    			Delete3DTextLabel(VehicleLabel[PI[playerid][PlayerCarID]]);
				format(string, sizeof(string), "Игрок %s продал транспорт %s[%i] за %d Рублей", GetName(playerid), VehicleNames[GetVehicleModel(PI[playerid][PlayerCarID])-400], GetPlayerVehicleID(playerid), PI[playerid][cCost] / 2);
				SendLog("SellCar", string);
				if(PI[playerid][PlayerCarID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicle(PI[playerid][PlayerCarID]);
					PI[playerid][PlayerCarID] = INVALID_VEHICLE_ID;
				}
				PI[playerid][cCost] = 0;
			}
		}
		case D_JOB+24:
		{
			new targetid = GetPVarInt(playerid, "CarPlayer"), price = GetPVarInt(playerid, "CarPrice");
			if(response)
			{
				if(GetMoney(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У %s недостаточно средств!", GetName(playerid));
					DeletePVar(playerid, "CarPrice");
					DeletePVar(playerid, "CarPlayer");
					SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
					return 1;
				}
				SetPVarInt(playerid,"CModel",PI[playerid][cModel]);
				SetPVarInt(playerid,"CClass",PI[playerid][cClass]);
				SetPVarInt(playerid,"CFuel",PI[playerid][cFuel]);
				SetPVarInt(playerid,"CColor1",PI[playerid][cColor][0]);
				SetPVarInt(playerid,"CColor2",PI[playerid][cColor][1]);
				SetPVarInt(playerid,"CCost",PI[playerid][cCost]);
				SetPVarString(playerid,"CVehcom",PI[playerid][cVehcom]);
				SetPVarInt(playerid,"cPaintjob",PI[playerid][cPaintjob]);
				////////////////////////////////////////////////////////////////
				PI[playerid][cModel] = PI[targetid][cModel];
				PI[playerid][cClass] = PI[targetid][cClass];
				PI[playerid][cFuel] = PI[targetid][cFuel];
				PI[playerid][cColor][0] = PI[targetid][cColor][0];
				PI[playerid][cColor][1] = PI[targetid][cColor][1];
				PI[playerid][cCost] = PI[targetid][cCost];
				PI[playerid][cVehcom] = PI[targetid][cVehcom];
				sscanf(PI[playerid][cVehcom], "p<,>a<i>[14]", PI[playerid][cVehcoms]);
				PI[playerid][cPaintjob] = PI[targetid][cPaintjob];
				////////////////////////////////////////////////////////////////
				PI[targetid][cModel] = GetPVarInt(playerid, "CModel");
				PI[targetid][cClass] = GetPVarInt(playerid, "CClass");
				PI[targetid][cFuel] = GetPVarInt(playerid, "CFuel");
				PI[targetid][cColor][0] = GetPVarInt(playerid, "CColor1");
				PI[targetid][cColor][1] = GetPVarInt(playerid, "CColor2");
				PI[targetid][cCost] = GetPVarInt(playerid, "CCost");
				PI[targetid][cVehcom] = GetPVarInt(playerid, "CVehcom");
				sscanf(PI[targetid][cVehcom], "p<,>a<i>[14]",PI[targetid][cVehcoms]);
				PI[targetid][cPaintjob] = GetPVarInt(playerid, "cPaintjob");
				DestroyVehicle(PI[playerid][PlayerCarID]);
				LoadMyCar(playerid);
				DestroyVehicle(PI[targetid][PlayerCarID]);
				LoadMyCar(targetid);
				SendMes(playerid, COLOR_GREEN, "Вы обменялись транспортами с %s'ом. Ваша доплата: %i Рублей", GetName(targetid), price);
				SendMes(targetid, COLOR_GREEN, "%s обменялся транспортами с вами. Доплата игрока: %i Рублей", GetName(playerid), price);
				SaveAccount(playerid);
				SaveAccount(targetid);
				TransferMoney(playerid, -1, price);
				TransferMoney(-1, targetid, price);
				PI[playerid][pRegVehicle] = PI[targetid][pRegVehicle] = 0;
    			MysqlUpdatePlayerInt(playerid, "veh_reg", PI[playerid][pRegVehicle]);
    			strmid(PI[playerid][pNumberVehicle], "[ HET HOMEPOB ]", 0, strlen("[ HET HOMEPOB ]"), 20);
    			MysqlUpdatePlayerStr(playerid, "veh_number", PI[playerid][pNumberVehicle]);
    			MysqlUpdatePlayerInt(targetid, "veh_reg", PI[targetid][pRegVehicle]);
    			strmid(PI[targetid][pNumberVehicle], "[ HET HOMEPOB ]", 0, strlen("[ HET HOMEPOB ]"), 20);
    			MysqlUpdatePlayerStr(targetid, "veh_number", PI[targetid][pNumberVehicle]);
			}
			else SendMes(targetid, COLOR_RED, "%s отклонил предложение обменяться транспортом с вами", GetName(playerid));
			DeletePVar(playerid, "CarPrice");
			DeletePVar(playerid, "CarPlayer");
		}
	case D_JOB+30:
		{
            if(response)
			{
                strmid(PI[playerid][pReferal], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				if(strlen(inputtext) < 1 || strlen(inputtext) > MAX_PLAYER_NAME) return ShowPlayerDialog(playerid, D_JOB+30, 1, "{7efd7d}Реферал", "{ffffff}Введите имя игрока, приглосившего Вас на сервер\nЕсли Вас никто не приглашал, то нажмите \"Пропустить\"\n\n{7efd7d}Если Вы достигните 5 уровня,\nто Ваш реферал получит 50 000 рублей", "Ок", "Пропустить");
				if(IsTextRussian(inputtext) || IsLoginInvalid(inputtext))
				{
					SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
					return ShowPlayerDialog(playerid, D_JOB+30, 1, "{7efd7d}Реферал", "{ffffff}Введите имя игрока, приглосившего Вас на сервер\nЕсли Вас никто не приглашал, то нажмите \"Пропустить\"\n\n{7efd7d}Если Вы достигните 5 уровня,\nто Ваш реферал получит 50 000 рублей", "Ок", "Пропустить");
				}
				SetPVarString(playerid, "Drug", inputtext);
				new Query[128];
				format(Query, sizeof(Query), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s' LIMIT 1", inputtext);
				mysql_tquery(dbHandle, Query, "OnPlayerReferal", "i", playerid);
			}
			else
			{
				SetPVarInt(playerid, "ReferalReg", 1);
			}
		}
	case D_JOB+31:
		{
			if(!response) return 1;
			ClothesRound[playerid] = 2;
			InShopSkin[playerid] = GetPlayerVirtualWorld(playerid);
			SpawnPlayer(playerid);
		}
	case D_JOB+38:
		{
			if(!response) return 1;
			new Float:x, Float:y, Float:z, Float:fa, shop = GetPVarInt(playerid, "InShop");
			switch(shop)
			{
			case 1: x=2010.7631, y=1887.6563, z=15.5638, fa=5.0665;
			case 2: x=2010.7631, y=1887.6563, z=15.5638, fa=5.0665;
			}
			if(PI[playerid][SalonCarID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][SalonCarID]);
			DeletePVar(playerid, "InShop");
			TogglePlayerControllable(playerid,true);
			for(new i; i < 16; i++)
			{
			    PlayerTextDrawHide(playerid,AvtosalonTD[playerid][i]);
			}
		    CancelSelectTextDraw(playerid);
			SetPlayerPos(playerid,x,y,z);
			SetPlayerFacingAngle(playerid,fa);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid, COLOR_RED, "Вы отменили покупку транспорта");
		}
	case D_JOB+54:
		{
			if(!response) return 1;
			new color[2];
			if(sscanf(inputtext, "p<,>ii",color[0], color[1])) return ShowPlayerDialog(playerid, D_JOB+54, 1, "{7efd7d}Цвета транспорта", "{FFFFFF}Введите первый и второй цвет транспорта через запятую:", "Принять", "Отмена");
			if(color[0] < 0 || color[0] > 252)
			{
				ShowPlayerDialog(playerid, D_JOB+54, 1, "{7efd7d}Цвета транспорта", "{FFFFFF}Введите первый и второй цвет транспорта через запятую:", "Принять", "Отмена");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 252!");
			}
			if(color[1] < 0 || color[1] > 252)
			{
				ShowPlayerDialog(playerid, D_JOB+54, 1, "{7efd7d}Цвета транспорта", "{FFFFFF}Введите первый и второй цвет транспорта через запятую:", "Принять", "Отмена");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 252!");
			}
			ChangeVehicleColor(GetPlayerVehicleID(playerid), color[0], color[1]);
			for(new i = 0; i < 2; i++) colors[playerid][i] = color[i];
			return 1;
		}
		case D_JOB+55:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, D_JOB+55, 1, "{7efd7d}Проезд", "{ffffff}Введите стоимость проезда:", "Принять", "Отмена");
			if(price < 5 || price > 100)
			{
				SendClientMessage(playerid, COLOR_GREY, "Цена проезда от 5 до 100!");
				return ShowPlayerDialog(playerid, D_JOB+55, 1, "{7efd7d}Проезд", "{ffffff}Введите стоимость проезда:", "Принять", "Отмена");
			}
			SetPVarInt(playerid, "PriceBus", price);
			ShowPlayerDialog(playerid, D_JOB+56, 2, "{7efd7d}Маршрут", "Автовокзал - Лесопилка\nАвтовокзал - Мэрия\nАвтовокзал - Новый район\nАвтовокзал - Автошкола", "Принять", "Отмена");
		}
		case D_JOB+56:
		{
			if(!response) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			PI[playerid][BusCarID] = vehicleid;
			TransferMoney(playerid, -1, 200);
			new name[30];
			switch(listitem)
			{
				case 0: name = "Автовокзал - Лесопилка";
				case 1: name = "Автовокзал - Мэрия";
				case 2: name = "Автовокзал - Новый район";
				case 3: name = "Автовокзал - Автошкола";
				case 4: name = "ЖДЛС - Шахта";
			}
			new string[128];
			SetPVarInt(playerid, "TypeBus", listitem+1);
			format(string, 90, "%s\n{FFFFFF}Стоимость проезда: {63BD4E}%i Рублей", name, GetPVarInt(playerid, "PriceBus"));
			if(!IsValidDynamic3DTextLabel(BusText3D[playerid])) BusText3D[playerid] = CreateDynamic3DTextLabel(string, 0xffa500FF, 0.0, 0.0, 3.0, 20.0, INVALID_PLAYER_ID, vehicleid);
			pPressed[playerid] = 0;
			new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus");
			switch(type)
			{
				case 1: SetPlayerRaceCheckpoint(playerid,0,BatirevoUgniy[i][0],BatirevoUgniy[i][1],BatirevoUgniy[i][2],BatirevoUgniy[i][3],BatirevoUgniy[i][4],BatirevoUgniy[i][5],5.0);
				case 2: SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
				case 3: SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
				case 4: SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
				case 5: SetPlayerRaceCheckpoint(playerid,0,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
			}
			return 1;
		}
		case D_JOB+57:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+57, 1, "{7efd7d}Тариф", "{ffffff}Введите стоимость проезда:", "Принять", "Отмена");
			if(price < 1 || price > 100)
			{
				SendClientMessage(playerid, COLOR_GREY, "Цена проезда от 1 до 100");
				return ShowPlayerDialog(playerid, D_JOB+57, 1, "{7efd7d}Тариф", "{ffffff}Введите стоимость проезда:", "Принять", "Отмена");
			}
			new string[90];
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали работу таксиста");
			SetPVarInt(playerid, "PriceTaxi", price);
			format(string, 90, "Тариф: {63BD4E}%i Рублей", price);
			if(!IsValidDynamic3DTextLabel(TaxiText3D[playerid])) TaxiText3D[playerid] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 1.24, 40.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			return 1;
		}
	case D_JOB+58:
		{
			if(!response) return RemoveFromVehicle(playerid);
			ShowPlayerDialog(playerid, D_JOB+55, 1, "{7efd7d}Проезд", "{FFFFFF}Введите стоимость проезда:", "Принять", "Отмена");
			return 1;
		}
	case D_JOB+59:
		{
		    if(!response) return RemoveFromVehicle(playerid);
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		    new vehicleid = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid, COLOR_GREEN, "Вы арендовали такси");
			PI[playerid][TaxiCarID] = vehicleid;
			TransferMoney(playerid, -1, 200);
			return 1;
		}
	case D_JOB+66:
		{
			if(!response) return RemoveFromVehicle(playerid);
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		    new vehicleid = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid, COLOR_GREEN, "Вы арендовали транспорт");
			PI[playerid][MechanicCarID] = vehicleid;
			TransferMoney(playerid, -1, 200);
			return 1;
		}
	case D_JOB+67:
		{
			new targetid = GetPVarInt(playerid, "PlayerMech"), price = GetPVarInt(playerid, "MechanicPrice");
			if(response)
			{
				if(GetPlayerState(playerid) == 2)
				{
					if(GetMoney(playerid) < price)
					{
						SendMes(targetid,COLOR_LIGHTBLUE, "У игрока %s недостаточно средств", GetName(playerid));
						DeletePVar(playerid, "PlayerMech");
						DeletePVar(playerid, "MechanicPrice");
						return 1;
					}
					SendMes(playerid,COLOR_LIGHTBLUE, "Автомеханик %s отремонтировал ваше авто за %d", GetName(targetid),price);
					SendMes(targetid,COLOR_LIGHTBLUE, "Вы отремонтировали авто %s за %d Рублей", GetName(playerid),price);
					SetVehicleHealth(GetPlayerVehicleID(playerid),1000);
					RepairVehicle(GetPlayerVehicleID(playerid));
					DeletePVar(playerid, "PlayerMech");
					DeletePVar(playerid, "MechanicPrice");
					TransferMoney(playerid,-1,price);
					TransferMoney(-1,targetid,price);
				}
				else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы должны находиться в транспорте!");
			}
			else
			{
				SendMes(targetid, COLOR_LIGHTBLUE, "%s отклонил предложение починить транспорт за %i Рублей", GetName(playerid), price);
				DeletePVar(playerid, "PlayerMech");
				DeletePVar(playerid, "MechanicPrice");
			}
		}
	case D_JOB+177:
		{
			if(!response) return cmd_menu(playerid);
			switch(listitem)
			{
			case 0:
			    {
					if(PI[playerid][pImprove][0] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приобрели данное улучшение!");
					if(PI[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GREY, "Необходим 5 уровень и 50000 Рублей");
					if(GetMoney(playerid) < 50000) return SendClientMessage(playerid, COLOR_GREY, "Необходим 5 уровень и 50000 Рублей");
					TransferMoney(playerid, -1, 50000);
					PI[playerid][pImprove][0] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Ваша выносливость была улучшена");
				}
			case 1:
				{
					if(PI[playerid][pImprove][1] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже приобрели данное улучшение!");
					if(PI[playerid][pLevel] < 8) return SendClientMessage(playerid, COLOR_GREY, "Необходим 8 уровень и 75000 Рублей");
					if(GetMoney(playerid) < 75000) return SendClientMessage(playerid, COLOR_GREY, "Необходим 8 уровень и 75000 Рублей");
					TransferMoney(playerid, -1, 75000);
					PI[playerid][pImprove][1] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Теперь Вы можете самостоятельно увольняться с организации (/leave)");
				}
			case 2:
				{
					if(PI[playerid][pImprove][2] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже приобрели данное улучшение!");
					if(PI[playerid][pLevel] < 11) return SendClientMessage(playerid, COLOR_GREY, "Необходим 11 уровень и 100000 Рублей");
					if(GetMoney(playerid) < 100000) return SendClientMessage(playerid, COLOR_GREY, "Необходим 11 уровень и 100000 Рублей");
					TransferMoney(playerid, -1, 100000);
					PI[playerid][pImprove][2] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Ваш рюкзак стал вместительнее");
				}
			case 3:
			    {
			        if(PI[playerid][pImprove][3] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже приобрели данное улучшение!");
					if(PI[playerid][pLevel] < 15) return SendClientMessage(playerid, COLOR_GREY, "Необходим 15 уровень и 125000 Рублей");
					if(GetMoney(playerid) < 125000) return SendClientMessage(playerid, COLOR_GREY, "Необходим 15 уровень и 125000 Рублей");
					TransferMoney(playerid, -1, 125000);
					PI[playerid][pImprove][3] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Теперь Ваш транспорт не будет глохнуть при столкновениях");
			    }
			case 4:
			    {
			        new string_dialogue[841], string[340];
			        format(string, sizeof(string), "{FFFFFF}Выносливость - способность организма к продолжительному выполнению какой-либо работы\nбез заметного снижения работоспособности. С данным улучшением, при голоде,\nВаше здоровье будет гораздо дольше держаться, по сравнению с невыносливым человеком.");
					strcat(string_dialogue, string);
					strcat(string_dialogue, "\n\n");
					format(string, sizeof(string), "{FFFFFF}Решительность - это индивидуальное качество воли человека, связанное со способностью и умением\nсамостоятельно и своевременно принимать ответственные решения и упорно реализовывать их в реальной деятельности.\nДанное улучшение позволит Вам самостоятельно, без каких-либо просьб, увольняться из организации - {FF9900}/leave.");
					strcat(string_dialogue, string);
					strcat(string_dialogue, "\n\n");
					format(string, sizeof(string), "{FFFFFF}Рюкзак - это улучшение рюкзака позволит Вам носить больше количества предметов.");
					strcat(string_dialogue, string);
					strcat(string_dialogue, "\n\n");
					format(string, sizeof(string), "{FFFFFF}Мастер вождения - став мастером вождения, двигатель транспорта под Вашим управлением\nбольше не будет глохнуть при различных ударах.");
					strcat(string_dialogue, string);
					ShowPlayerDialog(playerid, D_JOB+178, 0, "{7efd7d}Помощь", string_dialogue, "Закрыть", "Назад");
			    }
			}
		}
	case D_JOB+178:
		{
		    if(!response)
			{
			    new string[300];
				format(string, sizeof(string), "%s\n%s\n%s\n%s\n{FFFFFF}Помощь",
				(PI[playerid][pImprove][0] != 1) ? ("{FFFFFF}Выносливость\t\t| {F04245}Не имеется (5 уровень и 50.000 Рублей)") : ("{FFFFFF}Выносливость\t\t| {63BD4E}Куплено"),
				(PI[playerid][pImprove][1] != 1) ? ("{FFFFFF}Решительность\t| {F04245}Не имеется (8 уровень и 75.000 Рублей)") : ("{FFFFFF}Решительность\t| {63BD4E}Куплено (/leave)"),
				(PI[playerid][pImprove][2] != 1) ? ("{FFFFFF}Рюкзак\t\t\t| {F04245}Не имеется (11 уровень и 100.000 Рублей)") : ("{FFFFFF}Рюкзак\t\t\t| {63BD4E}Куплено"),
				(PI[playerid][pImprove][3] != 1) ? ("{FFFFFF}Мастер вождения\t| {F04245}Не имеется (15 уровень и 125.000 Рублей)") : ("{FFFFFF}Мастер вождения\t| {63BD4E}Куплено"));
				return ShowPlayerDialog(playerid, D_JOB+177, DIALOG_STYLE_LIST, "{7efd7d}Улучшения персонажа", string, "Выбрать", "Назад");
			}
		}
	case D_JOB+179:
	    {
			if(!response) return cmd_donate(playerid);
			if(PI[playerid][pCredits] < 20) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			new nickname[24];
			if(sscanf(inputtext, "s[24]", nickname)) return ShowPlayerDialog(playerid, D_JOB+179, 1, "{7efd7d}Смена ника", "{FFFFFF}Введите будущий ник:", "Принять", "Назад");
			if(strlen(nickname) < 3 || strlen(nickname) > 24) return SendClientMessage(playerid, COLOR_GREY, "Длина ника не может быть меньше трех и больше 24 символов");
            if(IsLoginInvalid(nickname)) return SendClientMessage(playerid, COLOR_GREY, "В нике найдены запрещенные символы/пробелы");
            if(IsTextRussian(nickname)) return SendClientMessage(playerid, COLOR_GREY, "Ник должен содержать только латинские буквы");
			if(strfind(nickname, "_", true) == -1) return SendClientMessage(playerid, COLOR_GREY, "Новый ник должен быть формата Имя_Фамилия");
			format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", nickname);
			mysql_tquery(dbHandle, query, "OnPlayerChangeDonateName", "is", playerid, nickname);
	    }
	case D_JOB+128:
		{
			if(!response) return true;
			new fuel;
			new bizz = BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bTill];
			if(sscanf(inputtext, "i",fuel)) return ShowPlayerDialog(playerid, D_JOB+128, DIALOG_STYLE_INPUT, "{7efd7d}Топливо", "{FFFFFF}Введите количество литров топлива:", "Принять", "Отмена");
			if(fuel < 1 || fuel > 150)
			{
				SendClientMessage(playerid, COLOR_GREY, "Топлива от 1 до 150 литров!");
				return ShowPlayerDialog(playerid, D_JOB+128, DIALOG_STYLE_INPUT, "{7efd7d}Топливо", "{FFFFFF}Введите количество литров топлива:", "Принять", "Отмена");
			}
			if(fuel+Fuel[GetPlayerVehicleID(playerid)] > 150)
			{
				SCM(playerid, COLOR_GREY, "В бак столько не влезает. Максимум: 150 литров!");
				return ShowPlayerDialog(playerid, D_JOB+128, DIALOG_STYLE_INPUT, "{7efd7d}Топливо", "{FFFFFF}Введите количество литров топлива:", "Принять", "Отмена");
			}
			if(fuel*bizz > GetMoney(playerid))
			{
				SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
				return ShowPlayerDialog(playerid, D_JOB+128, DIALOG_STYLE_INPUT, "{7efd7d}Топливо", "{FFFFFF}Введите количество литров топлива:", "Принять", "Отмена");
			}
			new price = fuel*bizz;
			TransferMoney(playerid, -1, price);
			if(BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] > 0)
			{
				BizzPay[GetPVarInt(playerid, "FuelBizzID")] += price/2;
				BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bMoney] += price/2;
				BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] -= fuel;
				MysqlUpdateBizzInt(BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bID], "product", BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct]);
			}
			DeletePVar(playerid, "FuelBizzID");
			SendClientMessage(playerid, COLOR_BLUE, "Вы заправили свой транспорт!");
			Fuel[GetPlayerVehicleID(playerid)] += fuel;
			return true;
		}
		case D_JOB+130:
		{
			new targetid = GetPVarInt(playerid, "MechanicPlayer"), price = GetPVarInt(playerid, "MechanicPrice");
			if(response)
			{
				if(GetPlayerState(playerid) == 2)
				{
					if(GetMoney(playerid) < price)
					{
						SendMes(targetid,COLOR_LIGHTBLUE, "У игрока %s недостаточно средств", GetName(playerid));
						DeletePVar(playerid, "MechanicPlayer");
						DeletePVar(playerid, "MechanicPrice");
						return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
					}
					if(Fuel[GetPlayerVehicleID(playerid)] >= 150)
					{
						SendClientMessage(targetid, COLOR_BLUE, "У игрока достаточно бензина в баке");
						DeletePVar(playerid, "MechanicPlayer");
						DeletePVar(playerid, "MechanicPrice");
						return SendClientMessage(playerid, COLOR_GREY, "У вас достаточно бензина в баке");
					}
					TransferMoney(playerid, -1, price);
					PI[playerid][pBank] += price;
					SendMes(playerid, COLOR_BLUE, "Автомеханик %s заправил ваш транспорт за %i Рублей", GetName(targetid), price);
					SendMes(targetid, COLOR_BLUE, "Вы заправили транспорт %s за %i Рублей", GetName(playerid), price);
					Fuel[GetPlayerVehicleID(playerid)] = 150;
				}
				else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы должны находиться в транспорте!");
			}
			else
			{
				SendMes(targetid, COLOR_LIGHTBLUE, "%s отклонил предложение заправить транспорт за %i Рублей", GetName(playerid), price);
				DeletePVar(playerid, "MechanicPlayer");
				DeletePVar(playerid, "MechanicPrice");
			}
		}
		case D_JOB+131:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
	            {
			        new price, bank;
					if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+133, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
					if(price < 1 || price > GetMoney(playerid))
					{
						SendMes(playerid, COLOR_GREY, "Количество доллларов от 1 до %i!", GetMoney(playerid));
						return ShowPlayerDialog(playerid, D_JOB+133, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
					}
					if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+132, 1, "{7efd7d}Снять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Назад");
					if(PI[playerid][pMember] == TEAM_SMI) bank = FracBank[8];
					if(PI[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
					if(PI[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
					new sbank = bank+price;
					SendMes(playerid, COLOR_BLUE, "Вы положили %i Рублей в сейф. Теперь в сейфе: %i Рублей", price, sbank);
					TransferMoney(playerid, -1, price);
					if(PI[playerid][pMember] == TEAM_SMI) MysqlUpdateOtherInt("lsnbank", FracBank[8]),FracBank[8]+=price;
					if(PI[playerid][pMember] == TEAM_SFNEWS) MysqlUpdateOtherInt("sfnbank", FracBank[9]),FracBank[9]+=price;
					if(PI[playerid][pMember] == TEAM_LVNEWS) MysqlUpdateOtherInt("lvnbank", FracBank[10]),FracBank[10]+=price;
				}
			case 1:
			   	{
			   		if(PlayerLogged[playerid] == false) return 1;
			      	if(PI[playerid][pLeader] > 0)
			        {
						new price, bank;
						if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+132, 1, "{7efd7d}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
						if(PI[playerid][pMember] == TEAM_SMI) bank = FracBank[8];
						if(PI[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
						if(PI[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
						if(price < 1 || price > bank)
						{
							SendMes(playerid, COLOR_GREY, "Количество денег от 1 до %i!", bank);
							return ShowPlayerDialog(playerid, D_JOB+132, 1, "{7efd7d}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
						}
						SendMes(playerid, COLOR_BLUE, "Вы взяли %i Рублей из сейфа. Остаток: %i Рублей", price, bank-price);
						TransferMoney(-1, playerid, price);
						if(PI[playerid][pMember] == TEAM_SMI) MysqlUpdateOtherInt("lsnbank", FracBank[8]),FracBank[8]-=price;
						if(PI[playerid][pMember] == TEAM_SFNEWS) MysqlUpdateOtherInt("sfnbank", FracBank[9]),FracBank[9]-=price;
						if(PI[playerid][pMember] == TEAM_LVNEWS) MysqlUpdateOtherInt("lvnbank", FracBank[10]),FracBank[10]-=price;
					}
				}
			}
		}
	case D_JOB+132:
		{
			if(PlayerLogged[playerid] == false) return 1;
          	if(PI[playerid][pLeader] > 0)
	        {
				new price, bank;
				if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+132, 1, "{7efd7d}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
				if(PI[playerid][pMember] == TEAM_SMI) bank = FracBank[8];
				if(PI[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
				if(PI[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
				if(price < 1 || price > bank)
				{
					SendMes(playerid, COLOR_GREY, "Количество денег от 1 до %i!", bank);
					return ShowPlayerDialog(playerid, D_JOB+132, 1, "{7efd7d}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
				}
				SendMes(playerid, COLOR_BLUE, "Вы взяли %i Рублей из сейфа. Остаток: %i Рублей", price, bank-price);
				TransferMoney(-1, playerid, price);
				if(PI[playerid][pMember] == TEAM_SMI) MysqlUpdateOtherInt("lsnbank", FracBank[8]),FracBank[8]-=price;
				if(PI[playerid][pMember] == TEAM_SFNEWS) MysqlUpdateOtherInt("sfnbank", FracBank[9]),FracBank[9]-=price;
				if(PI[playerid][pMember] == TEAM_LVNEWS) MysqlUpdateOtherInt("lvnbank", FracBank[10]),FracBank[10]-=price;
			}
         	else SendClientMessage(playerid,COLOR_GREY,"Вы не лидер");
			return 1;
		}
	case D_JOB+133:
		{
			new price, bank;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+133, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
			if(price < 1 || price > GetMoney(playerid))
			{
				SendMes(playerid, COLOR_GREY, "Количество доллларов от 1 до %i!", GetMoney(playerid));
				return ShowPlayerDialog(playerid, D_JOB+133, 1, "{7efd7d}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
			}
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+132, 1, "{7efd7d}Снять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Назад");
			if(PI[playerid][pMember] == TEAM_SMI) bank = FracBank[8];
			if(PI[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
			if(PI[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
			new sbank = bank+price;
			SendMes(playerid, COLOR_BLUE, "Вы положили %i Рублей в сейф. Теперь в сейфе: %i Рублей", price, sbank);
			TransferMoney(playerid, -1, price);
			if(PI[playerid][pMember] == TEAM_SMI) MysqlUpdateOtherInt("lsnbank", FracBank[8]),FracBank[8]+=price;
			if(PI[playerid][pMember] == TEAM_SFNEWS) MysqlUpdateOtherInt("sfnbank", FracBank[9]),FracBank[9]+=price;
			if(PI[playerid][pMember] == TEAM_LVNEWS) MysqlUpdateOtherInt("lvnbank", FracBank[10]),FracBank[10]+=price;
			return 1;
		}
	case D_JOB+136:
		{
			if(!response) return 1;
	   		switch(listitem)
	   		{
	      		case 0: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
			    case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_PISS);
			    case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			    case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			    case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			    case 5: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
			    case 6: ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,1,0,0,0,0,1);
				case 7: ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,1,0,0,0,0,1);
				case 8: ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,1,0,0,0,0,1);
				case 9: ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,1,0,0,0,0,1);
				case 10: ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,1,0,0,0,0,1);
				case 11: ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,1,0,0,0,0,1);
				case 12: ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1,1,0,0,0,0,1);
				case 13: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
				case 14: ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,0,0,0,1,0,1);
				case 15: ApplyAnimation(playerid,"BEACH","ParkSit_W_Loop",4.1,1,0,0,1,0,1);
				case 16: ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,0,0,1,0,1);
				case 17: ApplyAnimation(playerid,"BEACH","ParkSit_M_loop",4.1,1,0,0,1,0,1);
				case 18: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,1,0,0,1,0,1);
				case 19: ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,1,0,0,1,0,1);
				case 20: ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0,1);
				case 21: ApplyAnimation(playerid,"ON_LOOKERS","WAVE_LOOP",4.1,1,1,1,0,0,1);
				case 22: ApplyAnimation(playerid,"BENCHPRESS","GYM_BP_CELEBRATE",4.1,1,1,1,0,0,1);
				case 23: ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,0,0,0,0,1);
				case 24: ApplyAnimation(playerid,"DEALER","DEALER_DEAL",4.1,0,0,0,0,0,1);
				case 25: ApplyAnimation(playerid,"DEALER","DEALER_IDLE_01",4.1,0,0,0,0,0,1);
				case 26: ApplyAnimation(playerid,"DEALER","DEALER_IDLE_03",4.1,0,0,0,0,0,1);
				case 27: ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,0,0,0,0,1);
				case 28: ApplyAnimation(playerid,"RYDER","RYD_Die_PT1",4.1,1,1,0,0,0,1);
				case 29: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
		    }
		    SetPVarInt(playerid, "Animation", 1);
			TextDrawShowForPlayer(playerid, AnimDraw);
			return 1;
		}
	case D_JOB+139:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid, D_JOB+140, 2, "{7efd7d}Важные места", "1. Автошкола\n2. Автовокзал пгт.Батырево\n3. Автовокзал г.Южный\n4. Получение номеров\n5. Автосалон", "Телепорт", "Назад");
			    case 1: ShowPlayerDialog(playerid, D_JOB+141, 2, "{7efd7d}Базы организаций", "1. Поселковый совет\n2. Полиция\n3. СМП-Б\n4. Армия\n5. ТРК ''Релакс''\n6. ОПГ 'Ореховское'\n7. ОПГ 'Южное'", "Телепорт", "Назад");
			    case 2: ShowPlayerDialog(playerid, D_JOB+142, 2, "{7efd7d}Развлечения", "1. Казино г.Южный", "Телепорт", "Назад");
			}
		}
	case D_JOB+140:
		{
			if(!response) return cmd_tp(playerid);
			new Float:X, Float:Y, Float:Z, intid = 0, worldid = 0;
			switch(listitem)
			{
                case 0: X = 1910.8342, Y = 2246.6099, Z = 15.7139;
				case 1: X = 1822.7073, Y = 2528.3684, Z = 15.6825;
			    case 2: X = 2244.0876, Y = -1737.0630, Z = 21.9800;
			    case 3: X = 1913.5951, Y = 2183.2444, Z = 15.7060;
			    case 4: X = 2009.4171, Y = 1540.7598, Z = 15.9405;
			}
			if (GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
			else SetPlayerPos(playerid, X, Y, Z);
			SetPlayerInterior(playerid, intid);
			SetPlayerVirtualWorld(playerid, worldid);
			GameTextForPlayer(playerid, "~y~TELEPORT", 2000, 5);
		}
    case D_JOB+141:
		{
		    if(!response) return cmd_tp(playerid);
			new Float:X, Float:Y, Float:Z, intid = 0, worldid = 0;
			switch(listitem)
			{
				case 0: X = 1827.3363, Y = 2095.9475, Z = 15.8414;
				case 1: X = 1906.5253, Y = 2183.5979, Z = 15.7060;
				case 2: X = 2125.7617, Y = 1862.0254, Z = 12.0359;
				case 3: X = 1444.8033, Y = 1683.6339, Z = 15.3236;
				case 4: X = 1812.0859, Y = 2047.1595, Z = 15.8694;
				case 5: X = 2323.8096, Y = 1369.1804, Z = 11.5656;
				case 6: X = 2406.9766, Y = -1730.1833, Z = 21.8594;
			}
			if (GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
			else SetPlayerPos(playerid, X, Y, Z);
			SetPlayerInterior(playerid, intid);
			SetPlayerVirtualWorld(playerid, worldid);
			GameTextForPlayer(playerid, "~y~TELEPORT", 2000, 5);
		}
	//________________________________________Сдача на права________________________
		case D_ASH:
		{
		    if(!response) return false;
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(PI[playerid][pCarA] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас уже есть права категории A.");
		            if(PI[playerid][pCash] < 4000) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас не хватает денег для сдачи экзамена.");
		            SetPVarInt(playerid, "LESSON", 1), PI[playerid][pCash] -= 4000, SendClientMessage(playerid, COLOR_BLUE, "Вы начали практическую часть категории A! Выйдете во вдор и сядьте в транспорт.");
				}
				case 1:
				{
				    if(PI[playerid][pCarB] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас уже есть права категории B.");
					if(PI[playerid][pCash] < 5000) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас не хватает денег для сдачи экзамена.");
				    SetPVarInt(playerid, "LESSON", 2), PI[playerid][pCash] -= 5000, SendClientMessage(playerid, COLOR_BLUE, "Вы начали практическую часть категории B! Выйдете во вдор и сядьте в транспорт.");
				}
				case 2:
				{
				    if(PI[playerid][pCarC] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас уже есть права категории C.");
	                if(PI[playerid][pCash] < 5500) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас не хватает денег для сдачи экзамена.");
	                SetPVarInt(playerid, "LESSON", 3), PI[playerid][pCash] -= 5500, SendClientMessage(playerid, COLOR_BLUE, "Вы начали практическую часть категории C! Выйдете во вдор и сядьте в транспорт.");
                }
		        case 3:
		        {
		            if(PI[playerid][pCarD] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас уже есть права категории D.");
	                if(PI[playerid][pCash] < 6500) return SendClientMessage(playerid, COLOR_GRAD1, "У Вас не хватает денег для сдачи экзамена.");
	                SetPVarInt(playerid, "LESSON", 4), PI[playerid][pCash] -= 6500, SendClientMessage(playerid, COLOR_BLUE, "Вы начали практическую часть категории D! Выйдете во вдор и сядьте в транспорт.");
				}
			}
			return true;
		}
    case D_JOB+142:
		{
		    if(!response) return cmd_tp(playerid);
			new Float:X, Float:Y, Float:Z, intid = 0, worldid = 0;
			switch(listitem)
			{
			case 0: X = 2350.1479, Y = -2142.3879, Z = 21.9583;
			}
			if (GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
			else SetPlayerPos(playerid, X, Y, Z);
			SetPlayerInterior(playerid, intid);
			SetPlayerVirtualWorld(playerid, worldid);
			GameTextForPlayer(playerid, "~y~TELEPORT", 2000, 5);
		}
    case SelectSpawn:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
		        {
                    PI[playerid][pSpawnChange] = 0;
		            SpawnPlayer(playerid);
				}
				case 1:
				{
				    if(!GetPlayerHouse(playerid)) return ShowPlayerDialog(playerid, SelectSpawn, DIALOG_STYLE_LIST, "{7efd7d}Выбор спавна", "{7efd7d}1. {ffffff}Hа вокзале\n{7efd7d}2. {ffffff}Дома\n{7efd7d}3. {ffffff}В квартире\n{7efd7d}4. {ffffff}На базе орзанизации", "Выбор", ""), SendClientMessage(playerid, COLOR_DARKORANGE, "У вас нет дома!");
					PI[playerid][pSpawnChange] = 1;
					SpawnPlayer(playerid);
				}
				case 2:
				{
				    if(!GetPlayerPorchHouse(playerid)) return ShowPlayerDialog(playerid, SelectSpawn, DIALOG_STYLE_LIST, "{7efd7d}Выбор спавна", "{7efd7d}1. {ffffff}Hа вокзале\n{7efd7d}2. {ffffff}Дома\n{7efd7d}3. {ffffff}В квартире\n{7efd7d}4. {ffffff}На базе орзанизации", "Выбор", ""), SendClientMessage(playerid, COLOR_DARKORANGE, "У вас нет квартиры!");
				    PI[playerid][pSpawnChange] = 4;
				    SpawnPlayer(playerid);
                }
		        case 3:
		        {
					if(PI[playerid][pMember] == 0) return ShowPlayerDialog(playerid, SelectSpawn, DIALOG_STYLE_LIST, "{7efd7d}Выбор спавна", "{7efd7d}1. {ffffff}Hа вокзале\n{7efd7d}2. {ffffff}Дома\n{7efd7d}3. {ffffff}В квартире\n{7efd7d}4. {ffffff}На базе орзанизации", "Выбор", ""), SendClientMessage(playerid, COLOR_DARKORANGE, "Вы не состоите в организации!");
					PI[playerid][pSpawnChange] = 2;
					SpawnPlayer(playerid);
				}
				case 4:
				{
                    PI[playerid][pSpawnChange] = 3;
                    SpawnPlayer(playerid);
                }
			}
			return true;
		}
    case ArendTruckerDialog:
		{
			if(!response) return true;
			switch(listitem)
			{
			    case 0:
			    {
					SPD(playerid,2034,DSM,"{7efd7d}Аренда ГАЗЕЛЬ","{FFFFFF}Вы действительно хотите арендовать это авто за {99cc00}800 {ffffff}руб.","Аренда","Закрыть");
			    }
			    case 1:
			    {
					if(PI[playerid][pTruckLevel] >= 5)
					{
						SPD(playerid,2035,DSM,"{7efd7d}Аренда ЗИЛ","{FFFFFF}Вы действительно хотите арендовать это авто за {99cc00}3400 {ffffff}руб.","Аренда","Закрыть");
					}
					else
					{
					    SCM(playerid,COLOR_RED,"Ваш уровень дальнобойщика мал");
					}
			    }
			    case 2:
			    {
					if(PI[playerid][pTruckLevel] >= 12)
					{
						SPD(playerid,2036,DSM,"{7efd7d}Аренда КАМАЗ","{FFFFFF}Вы действительно хотите арендовать это авто за {99cc00}4600 {ffffff}руб.","Аренда","Закрыть");
					}
					else
					{
					    SCM(playerid,COLOR_RED,"Ваш уровень дальнобойщика мал");
					}
			    }
			    case 3:
			    {
					if(PI[playerid][pTruckLevel] >= 20)
					{
						SPD(playerid,2037,DSM,"{7efd7d}Аренда КАЗ","{FFFFFF}Вы действительно хотите арендовать это авто за {99cc00}7200 {ffffff}руб.","Аренда","Закрыть");
					}
					else
					{
					    SCM(playerid,COLOR_RED,"Ваш уровень дальнобойщика мал");
					}
			    }
			}
  		}
	case 2034:
	{
	    if(!response) return 1;
		if(PI[playerid][pCash] < 800) return SendClientMessage(playerid, COLOR_DARKORANGE, "Не достаточно денег для аренды!");
		GiveMoney(playerid, -800);
		SetPVarInt(playerid, "TruckerJob", 1);
		SetPVarInt(playerid, "TruckerJobRazgruzka", 1);
		SetPVarInt(playerid, "TruckerJobTimeGoToCar", 45);
		SetPVarInt(playerid, "TruckerJobFuel", 1);
		PI[playerid][TruckerCarID] = TruckerCar[playerid];
		TruckerCar[playerid] = CreateVehicleEx(609,1782.4370,2288.6248,15.8706,92.7287, 202,0,45);
		return SendClientMessage(playerid,COLOR_DARKORANGE,"У вас есть 45 секунд что бы взять грузовик");
	}
	case 2035:
	{
	    if(!response) return 1;
		if(PI[playerid][pCash] < 3400) return SendClientMessage(playerid, COLOR_DARKORANGE, "Не достаточно денег для аренды!");
		GiveMoney(playerid, -3400);
		SetPVarInt(playerid, "TruckerJob", 1);
		SetPVarInt(playerid, "TruckerJobRazgruzka", 1);
		SetPVarInt(playerid, "TruckerJobTimeGoToCar", 45);
		SetPVarInt(playerid, "TruckerJobFuel", 1);
		PI[playerid][TruckerCarID] = TruckerCar[playerid];
		TruckerGruz[playerid] = CreateVehicleEx(584,1787.2621,2301.4082,17.3791,90.7446, 202,0,45);
		TruckerCar[playerid] = CreateVehicleEx(403,1782.4370,2288.6248,15.8706,92.7287, 202,0,45);
		return SendClientMessage(playerid,COLOR_DARKORANGE,"У вас есть 45 секунд что бы взять грузовик");
	}
	case 2036:
	{
	    if(!response) return 1;
		if(PI[playerid][pCash] < 4600) return SendClientMessage(playerid, COLOR_DARKORANGE, "Не достаточно денег для аренды!");
		GiveMoney(playerid, -4600);
		SetPVarInt(playerid, "TruckerJob", 1);
		SetPVarInt(playerid, "TruckerJobRazgruzka", 1);
		SetPVarInt(playerid, "TruckerJobTimeGoToCar", 45);
		SetPVarInt(playerid, "TruckerJobFuel", 1);
		PI[playerid][TruckerCarID] = TruckerCar[playerid];
		TruckerGruz[playerid] = CreateVehicleEx(584,1787.2621,2301.4082,17.3791,90.7446, 202,0,45);
		TruckerCar[playerid] = CreateVehicleEx(514,1782.4370,2288.6248,15.8706,92.7287, 202,0,45);
		return SendClientMessage(playerid,COLOR_DARKORANGE,"У вас есть 45 секунд что бы взять грузовик");
	}
	case 2037:
	{
	    if(!response) return 1;
		if(PI[playerid][pCash] < 7200) return SendClientMessage(playerid, COLOR_DARKORANGE, "Не достаточно денег для аренды!");
		GiveMoney(playerid, -7200);
		SetPVarInt(playerid, "TruckerJob", 1);
		SetPVarInt(playerid, "TruckerJobRazgruzka", 1);
		SetPVarInt(playerid, "TruckerJobTimeGoToCar", 45);
		SetPVarInt(playerid, "TruckerJobFuel", 1);
		PI[playerid][TruckerCarID] = TruckerCar[playerid];
		TruckerGruz[playerid] = CreateVehicleEx(584,1787.2621,2301.4082,17.3791,90.7446, 202,0,45);
		TruckerCar[playerid] = CreateVehicleEx(515,1782.4370,2288.6248,15.8706,92.7287, 202,0,45);
		return SendClientMessage(playerid,COLOR_DARKORANGE,"У вас есть 45 секунд что бы взять грузовик");
	}
 case D_adm:
		{
			if(!response) return 1;
			new string[144];
			switch(GetPVarInt(playerid,"adm"))
			{
				case 1:
				{
					if(!strlen(inputtext)|| !strcmp(inputtext, "qwerty", true) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || strfind(inputtext, "=", true) != -1)
						return ShowPlayerDialog(playerid, D_adm, DIALOG_STYLE_PASSWORD, "{7efd7d}Регистрация администратора", "{FFFFFF}Введите пароль, который будет от панели администратора\n\n{63BD4E}Примечание:\n\t- Пароль должен состоять из латинских букв и цифр\n\t- Размер пароля от 6 до 15 символов", "Принять", "Отмена");
					SetPVarString(playerid, "inputtext", inputtext);
					format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE `name` = '%s'", GetName(playerid));
					mysql_tquery(dbHandle, string, "admReg", "is", playerid, GetName(playerid));
				}
				case 0:
				{
					if(!strlen(inputtext)) return ShowPlayerDialog(playerid, D_adm, DIALOG_STYLE_PASSWORD, "{7efd7d}Доступ администратора", "{FFFFFF}Введите Ваш пароль от панели администратора.", "Принять", "Отмена");
					mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE `name` = '%s' AND `password` = '%e'", GetName(playerid), inputtext);
					mysql_tquery(dbHandle, string, "admAuth", "is", playerid, inputtext);
				}
			}
			return 1;
		 }
	}
	return 1;
}


@_ShowPorchFlats(playerid);
@_ShowPorchFlats(playerid)
{
	new rows, fields;
	new cost, h_days, owner[MAX_PLAYER_NAME+1];
	cache_get_data(rows, fields);
	if(rows)
	{
		new string[41 + (38+MAX_PLAYER_NAME)*sizeof(PorchFlatsCoord)] = "Номер\t\tСтоимость\t\tОплачено\t\tСтатус\n";
		for(new idx = 1; idx < sizeof(PorchFlatsCoord); idx++)
		{	
			cache_get_row(idx-1, 0, owner, dbHandle, MAX_PLAYER_NAME+1); 
			cost = cache_get_row_int(idx-1, 1, dbHandle);
			h_days = cache_get_row_int(idx-1, 2, dbHandle);
			if(!strcmp(owner, "none", true)) owner = "{00FF00}Свободен";
			format(string, sizeof string, "%s{FFFFFF}\n№ %d\t\t%d\t\t\t%d дн.\t\t\t{FF0000}%s",string, idx, cost, h_days, owner);
		} 
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFE726}Список квартир", string, "Закрыть", "");
	}
	
}

forward ReFill(playerid);
public ReFill(playerid)
{
	new string[32];
	Fuel[GetPlayerVehicleID(playerid)]++;
	SetPVarInt(playerid, "Filling", GetPVarInt(playerid, "Filling") + 1);
	format(string,32,"~g~filling ~w~%i ~g~liters",GetPVarInt(playerid, "Filling"));
	GameTextForPlayer(playerid, string, 600, 6);
	if(GetPVarInt(playerid, "Refueling") <= GetPVarInt(playerid, "Filling"))
	{
		KillTimer(ReFuelTimer[playerid]);
		DeletePVar(playerid, "Refueling");
		DeletePVar(playerid, "Filling");
		TogglePlayerControllable(playerid, true);
	}
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
    if(PlayerLogged[playerid] == false) return 0;
	return 1;
}
stock GetPlayerCar(playerid)
{
	new car;
	if(PI[playerid][cModel] > 0) car = PI[playerid][cModel];
	else car = 0;
	return car;
}
stock DestroyVehicleOP(vehicleid)
{
	if(!IsValidVehicle(vehicleid)) return 0;
	return (DestroyVehicle(vehicleid));
}
stock CancelFlyMode(playerid)
{
	DeletePVar(playerid, "FlyMode");
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);

	DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	return 1;
}
stock FlyMode(playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);

	TogglePlayerSpectating(playerid, true);
	AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);

	SetPVarInt(playerid, "FlyMode", 1);
	noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;
	return 1;
}
stock GetMoveDirectionFromKeys(ud, lr)
{
        new direction = 0;
        if(lr < 0)
        {
                if(ud < 0) direction = MOVE_FORWARD_LEFT;
                else if(ud > 0) direction = MOVE_BACK_LEFT;
                else direction = MOVE_LEFT;
        }
        else if(lr > 0)
        {
                if(ud < 0) direction = MOVE_FORWARD_RIGHT;
                else if(ud > 0) direction = MOVE_BACK_RIGHT;
                else direction = MOVE_RIGHT;
        }
        else if(ud < 0) direction = MOVE_FORWARD;
        else if(ud > 0) direction = MOVE_BACK;
        return direction;
}
//--------------------------------------------------
stock MoveCamera(playerid)
{
        new Float:FV[3], Float:CPR[3];
        GetPlayerCameraPos(playerid, CPR[0], CPR[1], CPR[2]);
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);

        if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;

        new Float:speed = MOVE_SPEED * noclipdata[playerid][accelmul];

        new Float:X, Float:Y, Float:Z;
        GetNextCameraPosition(noclipdata[playerid][mode], CPR, FV, X, Y, Z);
        MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);

        noclipdata[playerid][lastmove] = GetTickCount();
        return 1;
}
//--------------------------------------------------
stock GetNextCameraPosition(move_mode, Float:CPR[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
    #define OFFSET_X (FV[0]*6000.0)
        #define OFFSET_Y (FV[1]*6000.0)
        #define OFFSET_Z (FV[2]*6000.0)
        switch(move_mode)
        {
                case MOVE_FORWARD:
                {
                        X = CPR[0]+OFFSET_X;
                        Y = CPR[1]+OFFSET_Y;
                        Z = CPR[2]+OFFSET_Z;
                }
                case MOVE_BACK:
                {
                        X = CPR[0]-OFFSET_X;
                        Y = CPR[1]-OFFSET_Y;
                        Z = CPR[2]-OFFSET_Z;
                }
                case MOVE_LEFT:
                {
                        X = CPR[0]-OFFSET_Y;
                        Y = CPR[1]+OFFSET_X;
                        Z = CPR[2];
                }
                case MOVE_RIGHT:
                {
                        X = CPR[0]+OFFSET_Y;
                        Y = CPR[1]-OFFSET_X;
                        Z = CPR[2];
                }
                case MOVE_BACK_LEFT:
                {
                        X = CPR[0]+(-OFFSET_X - OFFSET_Y);
                         Y = CPR[1]+(-OFFSET_Y + OFFSET_X);
                         Z = CPR[2]-OFFSET_Z;
                }
                case MOVE_BACK_RIGHT:
                {
                        X = CPR[0]+(-OFFSET_X + OFFSET_Y);
                         Y = CPR[1]+(-OFFSET_Y - OFFSET_X);
                         Z = CPR[2]-OFFSET_Z;
                }
                case MOVE_FORWARD_LEFT:
                {
                        X = CPR[0]+(OFFSET_X  - OFFSET_Y);
                        Y = CPR[1]+(OFFSET_Y  + OFFSET_X);
                        Z = CPR[2]+OFFSET_Z;
                }
                case MOVE_FORWARD_RIGHT:
                {
                        X = CPR[0]+(OFFSET_X  + OFFSET_Y);
                        Y = CPR[1]+(OFFSET_Y  - OFFSET_X);
                        Z = CPR[2]+OFFSET_Z;
                }
        }
}
stock appreport(playerid)
{
	new str[25];
	format(str,sizeof(str),"%d",AdminInfo[playerid][admReport]);
	TextDrawSetString(tdapanel_TD_TD[9],str);
	return true;
}
CMD:aunblock(playerid, params[])
{
    if(PI[playerid][pAdmin] < 5) return true;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
   	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, 0xFFCC00FF, "Информация | {ffffff}Введите: /aunblock [id]");
	else if(PI[params[0]][pAdmin] == 0) return SendClientMessage(playerid,COLOR_RED,"Ошибка | {ffffff}Данный игрок не имеет прав администратора!");
	else if(AdminInfo[params[0]][admDostup] == 0) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Игрок имеет права администратора на все 100 процентов!");
	AdminInfo[params[0]][admDostup] = 0;
	new string[256];
	format(string,sizeof(string), "Вы успешно сняли блокировку с Администратора %s",GetName(params[0]));
	SendClientMessage(playerid,-1,string);
	format(string,sizeof(string), "Администратор %s успешно снял блокировку с Вас",GetName(playerid));
	SendClientMessage(params[0],-1,string);
	return true;
}

CMD:afly(playerid,params[])
{
    if(PI[playerid][pAdmin] < 1) return true;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    SetPVarInt(playerid,"spawn_ac",1);

	if(GetPVarType(playerid, "FlyMode"))
	{
	    new inter, world, Float:X, Float:Y, Float:Z, Float:FA;
	    GetPlayerHealth(playerid,PI[playerid][pHeal]);
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, FA);
		inter = GetPlayerInterior(playerid);
		world = GetPlayerVirtualWorld(playerid);
		SetPVarFloat(playerid, "SpecX", X);
		SetPVarFloat(playerid, "SpecY", Y);
		SetPVarFloat(playerid, "SpecZ", Z);
		SetPVarFloat(playerid, "SpecFA", FA);
		SetPVarInt(playerid, "SpecInt", inter);
		SetPVarInt(playerid, "SpecWorld", world);

		CancelFlyMode(playerid);
	}
	else
	{
		SetPVarInt(playerid, "SpecBool", 1);
		FlyMode(playerid);
	}
	return true;
}
CMD:givemoney(playerid,params[])
{
	new string[555];
	if(PI[playerid][pAdmin] < 6) return true;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
 	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    else if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, 0xFFCC00FF, "Информация | {ffffff}Введите: /givemoney [id] [money]");
    else if(params[1] >= 2000000) return SendClientMessage(playerid,COLOR_RED,"Ошибка | {ffffff}Выдавать деньги игрок можно до 2000000 виртов!");
	else if(params[1] < 1) return SendClientMessage(playerid,COLOR_RED,"Ошибка | {ffffff}Выдавать деньги игроку можно от 1 вирта");
    GiveMoney(params[0],params[1]);
    format(string,sizeof(string),"Вы успешно выдали %d вирт(ов) игроку %s[%d]",params[1],PI[params[0]][pName],params[0]);
    SendClientMessage(playerid,-1,string);
    format(string,sizeof(string),"Администратор %s[%d] выдал вам %d вирт(ов)",PI[playerid][pName],playerid,params[1]);
    SendClientMessage(params[0],-1,string);
    format(string,sizeof(string),"[A] Администратор %s выдал игроку %s %d вирт(ов)",PI[playerid][pName],PI[params[0]][pName],params[1]);
    SendAdminMessage(COLOR_GREY,string);
	return true;
}
CMD:checkpos(playerid)
{
	new string[144];
	new Float:x,Float:y,Float:z,Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid,a);
	format(string,sizeof(string),"x = %f y = %f z = %f Angle = %f",x,y,z,a);
	SendClientMessage(playerid,-1,string);
	return true;
}
CMD:car(playerid)
{
    if(PI[playerid][cModel] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет машины!");
    ShowPlayerDialog(playerid,D_FIXCAR,DIALOG_STYLE_LIST,"{7efd7d}Личный транспорт","\
    {ffffff}1. {6EF83C}Открыть{ffffff}/{F81414}Закрыть\n\
    2. Доставить транспорт к дому\t\t\t\t\t{ea9f07}[5000 руб.]\n\
    3. Продать транспорт","Далее","Закрыть");
	return true;
}

CMD:po4ta(playerid)
{
	SetPlayerPos(playerid, 378.8298,2898.8540,1.7750);
	SendClientMessage(playerid, -1, "[DEBUG] Успешный спавн");
	return 1;
}
CMD:tpcor(playerid, params[])
{
	new Float:x, Float:y, Float:z;
	if(PI[playerid][pAdmin] >= 6)
	{
		if(sscanf(params, "p<,>fff", x, y, z)) return SendClientMessage(playerid, COLOR_WHITE, "• {ffcf00}[ Подсказка ] {ffffff}Введите: /tpcor x,y,z");
		SetPlayerPos(playerid, x, y, z);
	}
	return true;
}
CMD:tools(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(toolsbuy[playerid] != 0)
	{
		SPD(playerid,1457,DSM,"{7efd7d}Игрушки","{FFFFFF}Вы действительно хотите достать игрушку?\nПримечание: В интерьере она не появится.","Далее","Выход");
	}
	return 1;
}
CMD:endtools(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
    if(vehgame[playerid]) DestroyVehicle(GetPlayerVehicleID(playerid));
    return 1;
}
//для рыбалки
CMD:fishinfo(playerid)
{
    return ShowFishingInfo(playerid);
//	return 1;
}
      
CMD:rod(playerid)
{
	if(fishing_rod_state[playerid] == 0)
	return SendClientMessage(playerid, -1, "У Вас нет удочки!");
	if(fishing_rod_state[playerid] == 1)
	{
		fishing_rod_state[playerid] = 2;
		return SetPlayerAttachedObject(playerid, FISHING_ROD_ATTACHID, 18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
	}
	if(fishing_busy[playerid])
	return SendClientMessage(playerid, -1, "Вы ловите рыбу. Чтобы завершить рыбалку, используйте /fish");
	fishing_rod_state[playerid] = 1;
	return RemovePlayerAttachedObject(playerid, FISHING_ROD_ATTACHID);
//	return 1;
}
CMD:fish(playerid)
{
	if(fishing_busy[playerid])
	{
		KillTimer(fishing_timer[playerid]);
		fishing_busy[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
		GameTextForPlayer(playerid, "~w~Fishing ~r~stopped", 3000, 3);
		return SendClientMessage(playerid, -1, "Рыбалка остановлена");
	}
	if(!VaildFishingPlace(playerid) || IsPlayerInAnyVehicle(playerid))
	return SendClientMessage(playerid, -1, "В этом месте запрещена рыбалка!");
	if(fishing_bait[playerid] < 1)
	return SendClientMessage(playerid, -1, "У Вас нет приманок в запасе!");
	if(fishing_line[playerid] < 1)
	return SendClientMessage(playerid, -1, "У Вас нет лесок в запасе!");
	if(fishing_rod_state[playerid] != 2)
	return SendClientMessage(playerid, -1, "Возмите удочку в руки! (/rod)");
	TogglePlayerControllable(playerid, 0);
	ApplyAnimation(playerid, "SWORD", "sword_block", 50.0, 0, 1, 0, 1, 1);
	fishing_busy[playerid] = 1;
	KillTimer(fishing_timer[playerid]);
	fishing_timer[playerid] = SetTimerEx("FishTimer", 30000, false, "i", playerid);
	SendClientMessage(playerid, -1, "Вы начали рыбачить!");
	GameTextForPlayer(playerid,"~w~Fishing ~g~started", 49000, 3);
	return 1;
}
CMD:vorota(playerid)
{
	if(PI[playerid][pMember] == 12 && PI[playerid][pRank] >= 3 && IsPlayerInRangeOfPoint(playerid, 20, 1891.6719, 1722.8536, 17.1609))
	{
		if(ope == 1)
		{
	    	MoveDynamicObject(vorota,  1891.6719, 1722.8536, 17.1609,  1, 0.0000, 0.0000, -90.0000);
	    	ope = 0;
	    	SCM(playerid,COLOR_RED,"Вы закрыли ворота!");
		}
		else
		{
		    MoveDynamicObject(vorota,  1891.6719, 1734.4736, 17.1609,  1, 0.0000, 0.0000, -90.0000);
		    ope = 1;
		    SCM(playerid,COLOR_BLUE,"Вы открыли ворота");
		}
	}
	if(PI[playerid][pMember] == 15 && PI[playerid][pRank] >= 3 && IsPlayerInRangeOfPoint(playerid, 25, 2318.7249,1355.9940,11.6223))
	{
        if(opgslacko == 0)
        {
        	MoveDynamicObject(opgslack,  2322.3835, 1356.8104, 11.2509,  1, 0.0000, 0.0000, 0.0000); //Открыт
        	opgslacko = 1;
        	SCM(playerid,COLOR_BLUE,"Вы открыли шлакбаум");
        	
		}
		else
		{
		    MoveDynamicObject(opgslack,  2322.5293, 1356.8224, 11.2509,  1, 0.0000, -90.0000, 0.0000); //Закрыт
            opgslacko = 0;
            SCM(playerid,COLOR_RED,"Вы закрыли шлакбаум!");
		}
	}
	return 1;
}
CMD:buyk(playerid)
{
	new till = BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bTill]*4;
    if(PI[playerid][pRepcar][0] == 1) return SendClientMessage(playerid, COLOR_GREY, "У вас уже имеется канистра!");
    if(GetMoney(playerid) < till) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
    TransferMoney(playerid, -1, till);
    if(BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] > 0)
    {
	    BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bMoney] += till;
	    BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] -= 10;
	    BizzPay[GetPVarInt(playerid, "FuelBizzID")] += till;
	    MysqlUpdateBizzInt(GetPVarInt(playerid, "FuelBizzID"), "money", BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bMoney]);
	    MysqlUpdateBizzInt(GetPVarInt(playerid, "FuelBizzID"), "product", BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct]);
    }
    PI[playerid][pRepcar][0] = 1;
    SendMes(playerid, COLOR_BLUE,"Вы купили канистру за %i Рублей!", till);
    DeletePVar(playerid,"FuelBizzID");
	return 1;
}
CMD:en(playerid)
{
    if(IsPlayerInAnyVehicle(playerid))
    {
	    new vehicleid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,(Engine[vehicleid])?(false):(true),lights,alarm,doors,bonnet,boot,objective);
		Engine[vehicleid] = (Engine[vehicleid])?(false):(true);
    }
    return 1;
}
CMD:tp(playerid)
{
	if(PI[playerid][pAdmin] < ADM_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowPlayerDialog(playerid, D_JOB+139, DIALOG_STYLE_LIST, "{7efd7d}Телепорт", "1. Важные места\n2. Базы организаций\n3. Развлечения", "Выбрать", "Отмена");
	return 1;
}
CMD:getmet(playerid,params[])
{
    if(PI[playerid][pMember] == 12)
    {
		if(IsPlayerInRangeOfPoint(playerid, 3, 1421.5254,1674.1588,15.4835))
		{
			SPD(playerid,1982,DSI,"{7efd7d}Склад Армии | Взять металл","{ffffff}Введите кол-во кг. металла, которое хотите взять .","Взять","Закрыть");
		}
    }
    else
    {
        SCM(playerid,COLOR_RED,"У Вас нет доступа!");
    }
	return 1;
}
CMD:getammo(playerid,params[])
{
    if(PI[playerid][pMember] == 12)
    {
		if(IsPlayerInRangeOfPoint(playerid, 3, 1421.5254,1674.1588,15.4835))
		{
		    SPD(playerid,1983,DSI,"{7efd7d}Склад Армии | Взять патроны","{ffffff}Введите кол-во шт. патронов, которое хотите взять .","Взять","Закрыть");
		}
    }
    else
    {
        SCM(playerid,COLOR_RED,"У Вас нет доступа!");
    }
	return 1;
}
CMD:advert(playerid)
{
    if(PI[playerid][pAdmin] < ADM_GRAND) return 1;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    AdvertiseTimer();
    return 1;
}
CMD:mynumber(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 10, 1919.7196,2186.2964,2.4198))
	{
		if(PI[playerid][PlayerCarID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_DARKORANGE, "У вас нет автомобиля!");
		if(PI[playerid][pRegVehicle] == 1) return SendClientMessage(playerid, COLOR_DARKORANGE, "У вас уже имеется номерной знак на этом авто!");
		new number[20], string[200];
		Delete3DTextLabel(VehicleLabel[PI[playerid][PlayerCarID]]);
		for(new i; i != 6; i++)
	    {
			if(!i) number[i] = random('M' - 'A') + 'A';
			if(i >= 1 && i <=3) number[i] = random('9' - '0') + '0';
			if(i > 3) number[i] = random('M' - 'A') + 'A';
	    }
		strmid(PI[playerid][pNumberVehicle], number, 0, strlen(number), 20);
		PI[playerid][pRegVehicle] = 1;
		new stringnumber1[60];
		format(stringnumber1, sizeof(stringnumber1), "%s", PI[playerid][pNumberVehicle]);
		VehicleLabel[PI[playerid][PlayerCarID]] = Create3DTextLabel(stringnumber1, 0xFFFFFFFF, 0, 0, 0, 10.0, 0);
		Attach3DTextLabelToVehicle(VehicleLabel[PI[playerid][PlayerCarID]], PI[playerid][PlayerCarID], 0, 0, 0.2);
		GiveMoney(playerid, -2000);
		format(string, sizeof(string), "Вы получили гос.номера {FFFFFF}\"%s\" {0099FF}на свой транспорт %s", number, VehicleNames[GetVehicleModel(PI[playerid][PlayerCarID])-400]);
		SendClientMessage(playerid, COLOR_BLUE, string);
		format(string, sizeof(string), "[Пункт выдачи номеров] %s[%i] зарегистрировал номер на авто [%s]", GetName(playerid), number);
		foreach(new i: Player)
	    {
			if(PlayerLogged[i] == false) continue;
			if(IsACop(i)) SendClientMessage(i, 0x3399FFFF, string);
	    }
		MysqlUpdatePlayerInt(playerid, "veh_reg", PI[playerid][pRegVehicle]);
		MysqlUpdatePlayerStr(playerid, "veh_number", PI[playerid][pNumberVehicle]);
	}
	return 1;
}
CMD:givevoen(playerid, params[])
{
	if(PI[playerid][pMember] != TEAM_ARMIYA) return 1;
    else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /givevoen [id]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pVoennik]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже имеется военный билет!");
	else if(PI[params[0]][pMember] != TEAM_ARMIYA) return SendClientMessage(playerid, COLOR_GREY, "Игрок не служит в армии!");
	else if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	if(PI[playerid][pMember] == TEAM_ARMIYA && PI[playerid][pRank] >= 11)
	{
        PI[params[0]][pVoennik] = 1;
		SendClientMessage(params[0], COLOR_LIME, "Вам выдали военный билет! Теперь вы сможете работать в Полиции!");
		SendClientMessage(playerid, COLOR_GREEN, "Вы выдали военный билет!");
	}
    else SendClientMessage(playerid, COLOR_GREY, "Вы не можете выдавать военный билет!");
    return 1;
}

CMD:settp(playerid)
{
    if(PI[playerid][pAdmin] < ADM_MODER) return 1;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    if(Teleport == 0)
    {
        GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]); // Записываем координаты
        TeleportInfo[0] = GetPlayerInterior(playerid); // Записываем интерьер
        TeleportInfo[1] = GetPlayerVirtualWorld(playerid); // Записываем виртуальный мир
        Teleport = 1;
        new string[120];
        format(string, sizeof(string), "[A] %s[%d] установил точку телепорта для игроков. {0abf12}ТП включен.", GetName(playerid), playerid);
        SendAdminMessage(COLOR_GREY, string);
    }
    else
    {
		new string[120];
		format(string, sizeof(string), "[A] %s[%d] удалил точку телепорта для игроков. {c16e38}ТП отключен.", GetName(playerid), playerid);
		SendAdminMessage(COLOR_GREY, string);
		Teleport = 0;
		return true;
    }
    return true;
}
CMD:gotomp(playerid)
{
    if(PI[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Заключённым нельзя телепортироваться");
    if(Teleport == 0) return true;
    else
    SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
    SetPlayerInterior(playerid, TeleportInfo[0]);
    SetPlayerVirtualWorld(playerid, TeleportInfo[1]);
    return true;
}

CMD:sethp(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /sethp [id игрока] [кол-во жизней]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	PI[params[0]][pHeal] = params[1];
	PI[params[0]][pHealthS] = params[1];
	SetHealth(params[0], params[1]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель здоровья на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] изменил показатель здоровья игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:sethunger(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /sethunger [id игрока] [кол-во сытости]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] > 100 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Количество сытости от 0 до 100!");
	SetHunger(params[0], params[1]);
	MysqlUpdatePlayerInt(params[0], "hunger", PI[params[0]][pHunger]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель сытости на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] изменил показатель сытости игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:setam(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setam [id игрока] [кол-во брони]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] > 100 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Количество брони от 0 до 100!");
	SetArmour(params[0], params[1]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель брони на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] изменил показатель брони игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:cc(playerid) return cmd_clearchat(playerid);
CMD:clearchat(playerid)
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    for(new i = 0; i < 100; i++) SendClientMessageToAll(COLOR_WHITE, "");
    new string[64];
	format(string, sizeof(string),  "[A] %s[%i] очистил чат",GetName(playerid),playerid);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:object(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /object [id игрока]");
	else if(PlayerLogged[params[0]] == false) return 1;
 	objectplayerid = params[0];
	ShowPlayerDialog(playerid,8420,DIALOG_STYLE_LIST,"{7efd7d}Выдать объект игроку","1. Шляпа курицы\n2. Огонек на голову\n3. Мигалка на голову\n4. Черная маска\n5. Бандана №1\n6. Бандана №2\n7. Бандана №3\n8. Бандана №4\n9. Бандана №5\n10. Маска дракона\n11. Лазер на голову\n12. Комплект всемогущий\n13. Попугай на плечо\n14. Яркий свет\n15. Большой М4 в руку\n16. Пенис\n17. Костюм попугая\n18. Удалить все объекты","Выбрать","Закрыть");
	return 1;
}

CMD:setname(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(set_name == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не предлагал сменить ник!");
	else if(!strcmp(PlayerName[set_name], "None", true)) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не предлагал сменить ник!");
	if(GetPlayerHouse(set_name))
	{
		new i = GetPVarInt(set_name, "PlayerHouse");
		if(!strcmp(HouseInfo[i][hOwner], GetName(set_name), true))
		{
			format(HouseInfo[i][hOwner], MAX_PLAYER_NAME, PlayerName[set_name]);
			MysqlUpdateHouseStr(i, "hOwner", PlayerName[set_name]);
		}
	}
	if(GetPlayerBizz(set_name))
	{
		new i = GetPVarInt(set_name, "PlayerBizz");
		if(!strcmp(BizzInfo[i][bOwner], GetName(set_name), true))
		{
			format(BizzInfo[i][bOwner], MAX_PLAYER_NAME, PlayerName[set_name]);
			MysqlUpdateBizzStr(i, "owner", PlayerName[set_name]);
			UpdateBizz(i);
		}
	}
	new string[128];
	format(string, sizeof(string), "[A] Заявку одобрил администратор %s", GetName(playerid));
	SendAdminMessage(COLOR_GREY, string);
	format(string, sizeof(string), "[NonRP] %s одобрил смену NonRP ника %s на %s", GetName(playerid), GetName(set_name), PlayerName[set_name]);
	SendLog("SetName", string);
	format(string, sizeof(string), "%s изменил NonRP имя на %s", GetName(set_name), PlayerName[set_name]);
	SendClientMessageToAll(COLOR_YELLOW, string);
	format(query, sizeof(query),"UPDATE "T_ACCOUNTS" SET name='%s' WHERE name='%s'", PlayerName[set_name], GetName(set_name));
	mysql_tquery(dbHandle, query, "", "");
	if(PI[set_name][pAdmin])
	{
		format(query, sizeof(query), "UPDATE "T_ADMIN" SET name='%s' WHERE name='%s'", PlayerName[set_name], GetName(set_name));
		mysql_tquery(dbHandle, query, "", "");
	}
	format(query, sizeof(query), "INSERT INTO `historyname` (`idacca`, `Name`) VALUE ('%d', '%s')", PI[set_name][pID], PlayerName[set_name]);
	mysql_tquery(dbHandle, query, "", "");
	format(GetName(set_name), MAX_PLAYER_NAME, PlayerName[set_name]);
	SetPlayerName(set_name, PlayerName[set_name]);
	SendMes(set_name, COLOR_GREEN, "Ваше новое имя: {ffffff}%s", PlayerName[set_name]);
	SendClientMessage(set_name, COLOR_GREEN, "Обязательно нужно сделать скриншот. Клавиша: {ffffff}F8");
	SendClientMessage(set_name, COLOR_GREEN, "Пропишите свой новый ник в окне {ffffff}SA:MP");
	strmid(PlayerName[set_name], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	Kick(set_name);
	set_name = -1;
	return 1;
}

CMD:tie(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы в наручниках, вы не можете связывать!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /tie [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new Float:possed[4];
	GetPlayerPos(params[0],possed[0],possed[1],possed[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 1, possed[0],possed[1],possed[2])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от данного игрока");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете связать себя!");
	if(PlayerTied[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан!");
	new string[100];
	SendMes(playerid, 0x6495EDFF, "Вы связали %s", GetName(params[0]));
	if(PI[playerid][pSex] == 1)
	{
		SendMes(params[0], 0x6495EDFF, "%s связал Вас", GetName(playerid));
		format(string, sizeof(string), "связал %s", GetName(params[0]));
	}
	else
	{
	    SendMes(params[0], 0x6495EDFF, "%s связала Вас", GetName(playerid));
		format(string, sizeof(string), "связала %s", GetName(params[0]));
	}
	MeAction(playerid, string);
	GameTextForPlayer(playerid, "~r~tieted", 5000, 5);
	GameTextForPlayer(params[0], "~r~tieted", 5000, 5);
	TogglePlayerControllable(params[0], 0);
	PlayerTied[params[0]] = true;
	return 1;
}

CMD:untie(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /untie [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new Float:possed[4];
	GetPlayerPos(params[0],possed[0],possed[1],possed[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 4, possed[0],possed[1],possed[2])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от данного игрока");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете развязать себя!");
	if(!PlayerTied[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан!");
	new string[100];
	SendMes(playerid, 0x6495EDFF, "Вы развязали %s", GetName(params[0]));
	if(PI[playerid][pSex] == 1)
	{
		SendMes(params[0], 0x6495EDFF, "%s развязал Вас", GetName(playerid));
		format(string, sizeof(string), "развязал %s", GetName(params[0]));
	}
	else
	{
	    SendMes(params[0], 0x6495EDFF, "%s развязала Вас", GetName(playerid));
		format(string, sizeof(string), "развязала %s", GetName(params[0]));
	}
	MeAction(playerid, string);
	GameTextForPlayer(playerid, "~g~untied", 5000,5);
	GameTextForPlayer(params[0], "~g~untied", 5000,5);
	TogglePlayerControllable(params[0], 1);
	PlayerTied[params[0]] = false;
	return 1;
}

CMD:spawn(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /spawn [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] заспавнил игрока %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	ShowPlayerDialog(params[0], SelectSpawn, DIALOG_STYLE_LIST, "{7efd7d}Выбор спавна", "{7efd7d}1. {ffffff}Hа вокзале\n{7efd7d}2. {ffffff}Дома\n{7efd7d}3. {ffffff}В квартире\n{7efd7d}4. {ffffff}На базе орзанизации", "Выбор", "");
	return 1;
}

CMD:jet(playerid,  params[])
{
	if(PI[playerid][pAdmin] >= 5)
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "/jet [ID: Игрока]");
    SetPlayerSpecialAction(params[0],SPECIAL_ACTION_USEJETPACK);
    return 1;
}

CMD:g(playerid, params[]) return cmd_goto(playerid, params);
CMD:goto(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /goto [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN && AdminInfo[params[0]][admGoto]) return SendClientMessage(playerid, COLOR_GREY, "Телепорт к этому администратору запрещён");
	new Float:plocx,Float:plocy,Float:plocz;
 	GetPlayerPos(params[0], plocx, plocy, plocz);
	if(GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid), plocx+2, plocy+2, plocz);
	else SetPlayerPos(playerid, plocx+2, plocy+2, plocz);
    SetPVarInt(playerid, "AntiBreik", 3);
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] телепортировался к игроку %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	GameTextForPlayer(playerid, "~y~TELEPORT", 2000, 5);
	return 1;
}

CMD:up(playerid)
{
    new Float:plocx,Float:plocy,Float:plocz;
    if(PI[playerid][pAdmin] < ADM_MODER) return 1;
    GetPlayerPos(playerid, plocx, plocy, plocz);
    SetPlayerPos(playerid, plocx, plocy, plocz+2);
	return 1;
}

CMD:down(playerid)
{
    new Float:plocx,Float:plocy,Float:plocz;
    if(PI[playerid][pAdmin] < ADM_MODER) return 1;
    GetPlayerPos(playerid, plocx, plocy, plocz);
    SetPlayerPos(playerid, plocx, plocy, plocz-2);
	return 1;
}

CMD:left(playerid)
{
    new Float:plocx,Float:plocy,Float:plocz;
    if(PI[playerid][pAdmin] < ADM_MODER) return 1;
    GetPlayerPos(playerid, plocx, plocy, plocz);
    SetPlayerPos(playerid, plocx, plocy-2, plocz);
	return 1;
}

CMD:right(playerid)
{
    new Float:plocx,Float:plocy,Float:plocz;
    if(PI[playerid][pAdmin] < ADM_MODER) return 1;
    GetPlayerPos(playerid, plocx, plocy, plocz);
    SetPlayerPos(playerid, plocx, plocy+2, plocz);
	return 1;
}

CMD:gveh(playerid, params[]) return cmd_gotoveh(playerid, params);
CMD:gotoveh(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, -1, "Введите: /gotoveh [id транспорта]");
	new Float:x, Float:y, Float:z;
	GetVehiclePos(params[0], x, y, z);
	SetPlayerPos(playerid, x+2, y+2, z);
	return 1;
}

CMD:getveh(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, -1, "Введите: /getveh [id транспорта]");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetVehiclePos(playerid, x+2, y+2, z);
	return 1;
}

CMD:gethere(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /gethere [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN && AdminInfo[params[0]][admGethere]) return SendClientMessage(playerid, COLOR_GREY, "Телепорт этого администратора запрещён");
	new Float:plocx, Float:plocy, Float:plocz;
	GetPlayerPos(playerid, plocx, plocy, plocz);
	if(GetPlayerState(params[0]) == 2) SetVehiclePos(GetPlayerVehicleID(params[0]), plocx, plocy, plocz);
	else SetPlayerPos(params[0], plocx, plocy, plocz);
	SetPVarInt(params[0], "AntiBreik", 3);
	SetPlayerVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
	SetPlayerInterior(params[0], GetPlayerInterior(playerid));
	if(InHospital[params[0]]) InHospital[params[0]] = false;
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] телепортировал Вас к себе", GetName(playerid), playerid);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] телепортировал игрока %s[%d] к себе", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:settime(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /settime [время]");
	else if(params[0] < 0 || params[0] > 23) return SendClientMessage(playerid, COLOR_GREY, "Время от 0 до 23!");
	SetWorldTime(params[0]);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] изменил время на %i часа", GetName(playerid), playerid, params[0]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:setweather(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(TextResetCMD[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowPlayerDialog(playerid, D_WEATHER, 2, "Погода", "\
		1. Разные версии синих небес/облаков\n\
		2. Разные версии синих небес/облаков\n\
		3. Разные версии синих небес/облаков\n\
		4. Разные версии синих небес/облаков\n\
		5. Разные версии синих небес/облаков\n\
		6. Разные версии синих небес/облаков\n\
		7. Разные версии синих небес/облаков\n\
		8. Гроза\n\
		9. Пасмурно и туман\n\
		10. Ясное синее небо\
	", "Принять", "Отмена");
	return 1;
}

CMD:msg(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /msg [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
	new string[128];
	format(string, sizeof(string), "Администратор %s: %s", GetName(playerid), params[0]);
 	SendClientMessageToAll(0xFFCD00ff, string);
 	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
 	SendLog("MsgLog",string);
	return 1;
}

CMD:a(playerid,params[])
{
	if(PI[playerid][pAdmin] < 2) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /a [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	new string[128];
	static const Admin_Names[6][32] = {"","","","","",""};
	format(string, sizeof(string), "[A]%s %s[%d]: %s", Admin_Names[PI[playerid][pAdmin]-1], GetName(playerid), playerid, params[0]);
	SendAdminMessage(COLOR_LIME, string);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}
CMD:sc(playerid,params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /sc [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	new string[128];
	format(string, sizeof(string), "[SC] %s[%d]: %s", GetName(playerid), playerid, params[0]);
	SendSAdminMessage(COLOR_YELLOW2, string);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:v(playerid,params[])
{
	if(!PI[playerid][pVip]) return SendClientMessage(playerid, COLOR_GREY, "Вы не имеете VIP статус");
	else if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /v [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "[VIP] %s[%d]: %s", GetName(playerid), playerid, params[0]);
	SendVipMessage(COLOR_LIME, string);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:b(playerid, params[])
{
	if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /b [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "(( %s[%i]: %s ))", GetName(playerid), playerid, params);
	ProxDetector(20.0, playerid, string, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF);
	SetPlayerChatBubble(playerid, params, 0xCCCC99FF, 20.0, 7000);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:s(playerid, params[])
{
    if(PI[playerid][pTime] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны играть на сервере более 1 часа!");
	else if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /s [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "[S] %s кричит: %s", GetName(playerid), params[0]);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"RIOT","RIOT_shout",4.1,0,0,0,0,1);
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i)) continue;
		new Float:rdist, c;
		rdist = GetPlayerDistanceToPlayer(playerid, i);
		if(!PlayerLogged[i] || rdist > 13.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
		switch(floatround(rdist))
		{
			case 0..3: c = 0xFFFFFFFF;
			case 4..8: c = 0xCCCCCCFF;
			case 9..13: c = 0xAAAAAAFF;
			default: c = 0x888888FF;
		}
		SendClientMessage(i, c, string);
	}
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:w(playerid, params[])
{
	if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /w [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "%s шепчет: %s", GetName(playerid), params[0]);
	ProxDetector(1.2,playerid, string, 0xBDB76BFF, 0xBDB76BFF, 0xBDB76BFF, 0xBDB76BFF, 0xBDB76BFF);
	SetPlayerChatBubble(playerid,params[0],COLOR_WHITE,1.2,10000);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:gov(playerid, params[])
{
	if(!IsTheMember(PI[playerid][pMember])) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(!IsAbleToGosNewsRank(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Канал гос. новостей не доступен для Вас!");
	else if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /gov [текст]");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "[Гос. новости] %s: %s", GetName(playerid), params[0]);
	SendClientMessageToAll(0x4466CCFF, string);
	return 1;
}

CMD:ans(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "us[128]", params[0],params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /ans [id игрока] [текст]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid,COLOR_RED,"Ошибка | {ffffff}Вы не можете отвечать на репорт самому себе!");
	new string[144];
	format(string, sizeof(string), "Админинстратор %s[%d] для %s[%d]: %s | Приятной игры на House-RP.", PI[playerid][pName],playerid,PI[params[0]][pName],params[0], params[1]);
	SendClientMessage(params[0], 0xFF9945FF, string);
	format(string, sizeof(string), "Админинстратор %s[%d] для %s[%d]: %s | Приятной игры на House-RP.", PI[playerid][pName],playerid,PI[params[0]][pName],params[0], params[1]);
	SendAdminMessage(0xFF9945FF, string);
	AdminInfo[playerid][admReport]++;
	appreport(playerid);
	ShowPlayerDialog(params[0],D_REPUTATION,DIALOG_STYLE_MSGBOX,"{7efd7d}Оценка Администрации","{ffffff}Оцените ответ администратора кнопками ниже","Хорошо","Плохо");
	SetPVarInt(params[0],"id",playerid);
	return 1;
}

CMD:freeze(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_GREY, "Введите: /freeze [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(FreezePlayer[params[0]] == true) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок уже заморожен");
	new string[128];
	format(string, sizeof(string), "[A] %s[%i] заморозил %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	format(string, sizeof(string), "Администратор %s заморозил Вас", GetName(playerid));
	SendClientMessage(params[0], COLOR_RED, string);
	TogglePlayerControllable(params[0], 0);
	FreezePlayer[params[0]] = true;
	return 1;
}

CMD:unfreeze(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_GREY, "Введите: /unfreeze [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(FreezePlayer[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не заморожен");
	new string[128];
	format(string, sizeof(string), "[A] %s[%i] разморозил %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	format(string, sizeof(string), "Администратор %s разморозил Вас", GetName(playerid));
	SendClientMessage(params[0], COLOR_RED, string);
	TogglePlayerControllable(params[0], 1);
	FreezePlayer[params[0]] = false;
	return 1;
}

CMD:kick(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(GetPVarInt(playerid, "kick") > gettime())
	{
	    if(clickadm[playerid] == 10)
		{
		    AdminInfo[playerid][admDostup] = 1;
		    clickadm[playerid] = 0;
		}
		else clickadm[playerid]++;
	}
	else if(sscanf(params, "uS()[32]", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /kick [id игрока] [причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
   	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    else if(PI[playerid][pAdmin] <= PI[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
    else if(IsIpFound(params[1]) || CheckString(params[1])) return AdminAntisliv(playerid, params[1]);
    new string[128];
	if(strlen(params[1])) format(string, sizeof(string), "Администратор %s кикнул игрока %s. Причина: %s", GetName(playerid), GetName(params[0]), params[1]);
	else format(string, sizeof(string), "Администратор %s кикнул игрока %s.", GetName(playerid), GetName(params[0]));
	SendAdminMessageToAll(COLOR_DARKORANGE, string);
	SendLog("Kick",string);
	Kick(params[0]);
	SetPVarInt(playerid,"kick",gettime()+180);
	return 1;
}

CMD:skick(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /skick [id игрока]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	if(PI[playerid][pAdmin] <= PI[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] тихо кикнул игрока %s [ID:%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	SendLog("Skick", string);
	Kick(params[0]);
	return 1;
}

CMD:stats(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /stats [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	ShowPlayerStatsDialog(playerid, params[0]);
	return 1;
}

CMD:makestat(playerid, params[])
{
    if(PI[playerid][pAdmin] < 5) GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /makestat [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
		NameStats[playerid] = params[0];
		ShowPlayerDialog(playerid, D_UCPADMIN, DIALOG_STYLE_LIST, GetName(params[0]), "Ник\nУровень\nОпыт\nПол\nУровень дальнобойщика", "Принять", "Отмена");
	}
	return 1;
}

CMD:sban(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ids[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /sban [id игрока] [кол-во дней] [причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    else if(PI[playerid][pAdmin] <= PI[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
    else if(IsIpFound(params[2]) || CheckString(params[2])) return AdminAntisliv(playerid, params[2]);
	else if(params[1] > 30 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Количество дней от 1 до 30!");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] тихо забанил игрока %s на %d дней. Причина: %s", GetName(playerid), playerid, GetName(params[0]),params[1], params[2]);
	SendAdminMessage(COLOR_GREY,string);
	new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + params[1]*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
	format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', %d, %d, '%s')", GetName(params[0]), GetName(playerid), PI[params[0]][pIP], data, params[1], unbandate, params[2]);
	mysql_tquery(dbHandle, query, "", "");
	Kick(params[0]);
	return 1;
}

CMD:getip(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /getip [id игрока]");
	new string[128];
	format(string, sizeof(string), "[%s] IP: %s - RegIP: %s - LastIP: %s", GetName(params[0]), PI[params[0]][pIP], PI[params[0]][pRegIP], PI[params[0]][pLastIP]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:pgetip(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "s[16]", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /pgetip [ip адрес]");
	new string[128];
	format(string, sizeof(string), "- - - - Совпадение с: %s. - - - -", params[0]);
    SendClientMessage(playerid, COLOR_LIME, string);
	foreach(new i: Player)
  	{
  	    new playerip[16];
  	    if(i != playerid && PlayerLogged[i])
  	    {
		    GetPlayerIp(i, playerip, sizeof(playerip));
		    if(GetString(playerip, params[0]))
		    {
				format(string, sizeof(string), "- %s[%d]", GetName(i), i, playerip);
				SendClientMessage(playerid, COLOR_LIME, string);
		    }
		}
	}
	return 1;
}

CMD:saveacc(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	SaveAcc();
	SendClientMessage(playerid, COLOR_GREY, "Все аккаунты успешно сохранены системой.");
	return 1;
}

CMD:ban(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(sscanf(params, "udS()[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /ban [id игрока] [кол-во дней] [Причина]");
	else if(GetPVarInt(playerid, "ban") > gettime())
	{
	    if(clickadm[playerid] == 10)
		{
		    AdminInfo[playerid][admDostup] = 1;
		    clickadm[playerid] = 0;
		}
		else clickadm[playerid]++;
	}
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] > 30 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Количество дней от 1 до 30!");
	else if(PI[playerid][pAdmin] <= PI[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
	else if(IsIpFound(params[2]) || CheckString(params[2])) return AdminAntisliv(playerid, params[2]);
	PI[params[0]][pSpawnChange] = 0;
	new string[128];
	if(strlen(params[2])) format(string, sizeof(string), "Администратор %s забанил игрока %s на %d дней. Причина: %s", GetName(playerid), GetName(params[0]), params[1], params[2]);
	else format(string, sizeof(string), "Администратор %s забанил игрока %s на %d дней.", GetName(playerid), GetName(params[0]), params[1]);
	SendAdminMessageToAll(COLOR_DARKORANGE, string);
	new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + params[1]*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
	format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', %d, %d, '%s')", GetName(params[0]), GetName(playerid), PI[params[0]][pIP], data, params[1], unbandate, params[2]);
	mysql_tquery(dbHandle, query, "", "");
	SendClientMessage(params[0], COLOR_YELLOW, "Ваш аккаунт заблокирован! Обязательно сделайте скриншот данного сообщения или Ваша жалоба не будет принята!");
	ResetPlayerWeaponsAC(params[0]);
	Kick(params[0]);
	SetPVarInt(playerid, "kick", gettime()+180);
	return 1;
}

CMD:offban(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME], countday, reason[32];
	if(sscanf(params, "s[24]is[24]", playername, countday, reason)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /offban [ник игрока] [кол-во дней] [Причина]");
	else if(CheckExceptionName(playername)) return AttemptRemoveChiefAdmin(playerid);
	else if(IsIpFound(reason) || CheckString(reason)) return AdminAntisliv(playerid, reason);
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /ban");
	else if(countday > 30 || countday < 1) return SendClientMessage(playerid, COLOR_GREY, "Количество дней от 1 до 30!");
    mysql_tquery(dbHandle, "SET NAMES 'cp1251'", "", "");
	mysql_tquery(dbHandle, "SET CHARACTER SET 'cp1251'", "", "");
	format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s'", playername);
	mysql_tquery(dbHandle, query, "OnPlayerOffban", "isis", playerid, playername, countday, reason);
	return 1;
}

CMD:cmd(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(sscanf(params, "ds[90]", params[0], params[1],params[2])) return SendClientMessage(playerid, COLOR_GREY, "{DAA520}*Подсказка* {FFFFFF}Введите: /cmd [ID игрока] [Команда] [Текст]");
	new mess[100];format(mess, sizeof(mess), "%s", params[1]);CallLocalFunction("OnPlayerCommandText", "is", params[0], mess);
	new string[128];
	format(string, sizeof(string),"{00FFFF}[A] Aдминистратор %s выполнил команду %s за игрока %s", GetName(playerid), params[1], GetName(params[0]));
	SendAdminMessage(COLOR_GREY, string);
    return 1;
}

CMD:offwarn(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME], reason[32];
	if(sscanf(params, "s[24]s[24]", playername, reason)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /offwarn [ник игрока] [Причина]");
	else if(CheckExceptionName(playername)) return AttemptRemoveChiefAdmin(playerid);
	else if(IsIpFound(reason) || CheckString(reason)) return AdminAntisliv(playerid, reason);
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /warn");
	format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s'", playername);
	mysql_tquery(dbHandle, query, "OnPlayerOffwarn", "iss", playerid, playername, reason);
	return 1;
}

CMD:warn(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(GetPVarInt(playerid, "warn") > gettime())
	{
 		if(clickadm[playerid] == 10)
		{
		    AdminInfo[playerid][admDostup] = 1;
		    clickadm[playerid] = 0;
		}
		else clickadm[playerid]++;
	}
	else if(sscanf(params, "us", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /warn [id игрока] [Причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[playerid][pAdmin] <= PI[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
	else if(IsIpFound(params[1]) || CheckString(params[1])) return AdminAntisliv(playerid, params[1]);
	PI[params[0]][pWarn]++;
	new string[128];
	if(PI[params[0]][pWarn] < 3) format(string, sizeof(string), "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s", GetName(playerid), GetName(params[0]), PI[params[0]][pWarn], params[1]);
	else
	{
	    new data[15], unbandate;
		PI[params[0]][pWarn] = 0;
		format(string, sizeof(string), "Администратор %s забанил игрока %s (3 предупреждения). Причина: %s", GetName(playerid), GetName(params[0]), params[1]);
		getdate(years, months, days);
		unbandate = gettime() + 7*86400;
		format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
		format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', 7, %d, '%s')", GetName(params[0]), GetName(playerid), PI[params[0]][pIP], data, unbandate, params[1]);
		mysql_tquery(dbHandle, query, "", "");
	}
	SendAdminMessageToAll(COLOR_GREY, string);
	LeaveFractionPlayer(params[0]);
	PI[params[0]][pSpawnChange] = 0;
	format(string, sizeof(string), "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s", GetName(playerid), GetName(params[0]), PI[params[0]][pWarn], params[1]);
	SendLog("WarnLog",string);
	Kick(params[0]);
	SetPVarInt(playerid, "warn", gettime()+180);
	return 1;
}

CMD:unwarn(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /unwarn [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pWarn] == 0) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока нет предупреждений!");
	PI[params[0]][pWarn]--;
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] снял Вам 1 предупреждение", GetName(playerid), playerid);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] снял 1 предупреждение игроку %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:delacc(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[32]", playername) && !GetPVarInt(playerid, "deleting_account")) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /delacc [ник игрока]");
	else if(CheckExceptionName(playername)) return AttemptRemoveChiefAdmin(playerid);
	else if(sscanf(params, "s[32]", playername) && !GetPVarInt(playerid, "deleting_account"))
	{
		DeletePVar(playerid, "deleting_account");
		SendClientMessage(playerid, COLOR_GREY, "Вы отменили удаление аккаунта");
		return 1;
	}
	format(query, sizeof(query), "SELECT `id`,`level` FROM "T_ACCOUNTS" WHERE `name`='%s'", playername);
	mysql_tquery(dbHandle, query, "OnPlayerDeleteAccount", "is", playerid, playername);
	return 1;
}

CMD:unban(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "s[32]", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /unban [имя игрока]");
	format(query, sizeof(query), "SELECT * FROM bans WHERE name = '%s'", params[0]);
	mysql_tquery(dbHandle, query, "OnPlayerUnban", "is", playerid, params[0]);
	return 1;
}

CMD:banip(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /banip [ip адрес]");
	new string[100];
	format(string, sizeof(string), "[A] %s заблокировал IP адрес %s", GetName(playerid), params);
	SendAdminMessageEx(COLOR_GREY, string, 4);
	format(string, sizeof(string), "banip %s", params);
	SendRconCommand(string);
	return 1;
}

CMD:unbanip(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /unbanip [ip адрес]");
	new string[100];
	format(string, sizeof(string), "[A] %s разблокировал IP адрес %s", GetName(playerid), params);
	SendAdminMessageEx(COLOR_GREY, string, 4);
	format(string, sizeof(string), "unbanip %s", params);
	SendRconCommand(string);
	return 1;
}

CMD:engine(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 0;
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsAPlane(vehicleid)) return 0;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(vehicleid,(Engine[vehicleid])?(false):(true),lights,alarm,doors,bonnet,boot,objective);
	Engine[vehicleid] = (Engine[vehicleid])?(false):(true);
	return 1;
}

CMD:hgps(playerid, params[])
{
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		if(strcmp(GetName(playerid),HouseInfo[i][hOwner], true) == 0)
		{
			SetPlayerRaceCheckpoint(playerid,1, HouseInfo[i][hEntrx],HouseInfo[i][hEntry],HouseInfo[i][hEntrz],0.0,0.0,0.0, 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Ваш дом обозначен на карте {FF0000}красной меткой");
			SetPVarInt(playerid, "Home", 1);
		}
	}
	return 1;
}

CMD:unmute(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /unmute [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pMuted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бан чата!");
	PI[params[0]][pMuted] = 0;
	SendClientMessage(params[0], 0x66CC00FF, "Доступ в чат восстановлен");
	new string[100];
	format(string, sizeof(string), "Администратор %s снял затычку у %s",GetName(playerid),GetName(params[0]));
	SendAdminMessageToAll(COLOR_DARKORANGE, string);
	return 1;
}

CMD:mute(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(GetPVarInt(playerid, "mute") > gettime())
	{
	    if(clickadm[playerid] == 10)
		{
		    AdminInfo[playerid][admDostup] = 1;
		    clickadm[playerid] = 0;
		}
		else clickadm[playerid]++;
	}
	else if(sscanf(params, "udS()[64]", params[0], params[1], params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /mute [id игрока] [Время] [Причина]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pMuted] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже имеет бан чата!");
	else if(params[1] > 300 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Время от 1 до 300 минут!");
	else if(IsIpFound(params[2]) || CheckString(params[2])) return AdminAntisliv(playerid, params[2]);
	PI[params[0]][pMuted] = params[1]*60;
	new string[128];
	if(strlen(params[2])) format(string, sizeof(string), "Администратор %s выдал бан чата %s на %d минут. Причина: %s",GetName(playerid), GetName(params[0]), params[1], params[2]);
	else format(string, sizeof(string), "Администратор %s выдал бан чата %s на %d минут.",GetName(playerid), GetName(params[0]), params[1]);
	SendAdminMessageToAll(COLOR_DARKORANGE, string);
	SendClientMessage(params[0], 0xCECECEFF, "Время до окончания бана чата: {CCCC00}/time");
	SetPVarInt(playerid, "mute", gettime()+180);
	return 1;
}

CMD:prison(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "iis[64]", params[0], params[1],  params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /prison [id игрока] [время в минутах] [причина]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в деморгане!");
	else if(params[1] < 1 || params[1] > 180) return SendClientMessage(playerid, COLOR_GREY, "Количество минут от 1 до 180!");
	ResetPlayerWeaponsAC(params[0]);
	PI[params[0]][pJailTime] = params[1] * 60;
	if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
	{
		new cuffer = pCuff[params[0]][pCuffer];
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0], 0);
		pCuff[params[0]][pCuffer] = INVALID_PLAYER_ID;
		pCuff[params[0]][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
	}
	SetPlayerVirtualWorld(params[0], 1);
	new string[128];
	format(string, sizeof(string), "Администратор %s посадил Вас в деморган (%s)", GetName(playerid), params[2]);
	SendClientMessage(params[0], COLOR_GREEN, string);
	format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", PI[playerid][pJailTime]);
	GameTextForPlayer(params[0], string, 3000, 3);
	format(string, sizeof(string), "[A] %s[%i] посадил %s[%i] в деморган на %i минут (%s)", GetName(playerid), playerid, GetName(params[0]), params[0], params[1], params[2]);
	SendAdminMessage(COLOR_GREY, string);
	SetPlayerInterior(params[0], 0);
	SetPlayerPos(params[0],5494.0488,1245.3721,23.1886);
	SetPlayerFacingAngle(params[0], 270.0000);
	PI[params[0]][pJail] = 4;
	return 1;
}

CMD:unjail(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /unjail [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pJail] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в деморгане!");
	PI[params[0]][pJailTime] = 1;
	ResetPlayerWeaponsAC(params[0]);
	new string[100];
	format(string, sizeof(string), "[A] %s[%i] выпустил из деморгана %s[%i]",GetName(playerid),playerid,GetName(params[0]),params[0]);
	format(string, sizeof(string), "Администратор %s[%i] вытащил вас из деморгана.",GetName(playerid),playerid);
	SendAdminMessage(COLOR_GREY, string);
    PI[params[0]][pSpawnChange] = 0;
    SpawnPlayer(playerid);
	return 1;
}

CMD:jail(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(GetPVarInt(playerid, "jail") > gettime())
	{
 		if(clickadm[playerid] == 10)
		{
		    AdminInfo[playerid][admDostup] = 1;
		    clickadm[playerid] = 0;
		}
		else clickadm[playerid]++;
	}
	else if(sscanf(params, "uiis[64]", params[0], params[1], params[2],  params[3])) return SendClientMessage(playerid, VAGOS_COLOR, ">> Информация {ffffff}Введите: /jail [id игрока] [1/2] [минуты] [причина]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в тюрьме!");
	else if(params[1] < 1 || params[1] > 2) return SendClientMessage(playerid, COLOR_GREY, "Номер тюрьмы от 1 до 2!"); // 3 номер тюрьмы удалил
	else if(params[2] < 1 || params[2] > 180) return SendClientMessage(playerid, COLOR_GREY, "Количество минут от 1 до 180!");
	ResetPlayerWeaponsAC(params[0]);
	PI[params[0]][pJailTime] = params[2]*60;// * 60
	if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
	{
		new cuffer = pCuff[params[0]][pCuffer];
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0], 0);
		pCuff[params[0]][pCuffer] = INVALID_PLAYER_ID;
		pCuff[params[0]][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
	}
	SetPlayerVirtualWorld(params[0], 1);
	new string[128];
	format(string, sizeof(string), "Администратор %s посадил игрока %s в Деморган. Причина: %s", GetName(playerid), GetName(params[0]), params[3]);
	SendClientMessageToAll(COLOR_DARKORANGE, string);
	format(string, sizeof(string), "[A] %s [%i] посадил в тюрьму %s [%i] на %i минут (%s)", GetName(playerid), playerid, GetName(params[0]), params[0], params[2], params[3]);
	SendAdminMessage(COLOR_GREY, string);
	switch(params[1])
	{
	    case 1:
	    {
            FreezePlayer(playerid, 2000);
	        SetPlayerInterior(params[0], 0);
			SetPlayerPos(params[0],2005.1991,2518.5088,1016.3376);
			SetPlayerFacingAngle(params[0], 263.0160);
			PI[params[0]][pJail] = 1;
			SetPlayerWantedLevel(params[0], 0);
	    }
	    case 2:
	    {
            FreezePlayer(playerid, 2000);
	        SetPlayerInterior(params[0], 0);
			SetPlayerPos(params[0],2005.0565,2534.3826,1016.3376);
			SetPlayerFacingAngle(params[0], 1.0);
			PI[params[0]][pJail] = 2;
			SetPlayerWantedLevel(params[0], 0);
	    }
	}
	return 1;
}
CMD:drive(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, ">> Информация {ffffff}Введите: /drive [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в тюрьме!");
	ResetPlayerWeaponsAC(params[0]);
	PI[params[0]][pJailTime] = 10*60;// * 60
	if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
	{
		new cuffer = pCuff[params[0]][pCuffer];
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0], 0);
		pCuff[params[0]][pCuffer] = INVALID_PLAYER_ID;
		pCuff[params[0]][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
	}
	SetPlayerVirtualWorld(params[0], 1);
	new string[128];
	format(string, sizeof(string), "Администратор %s посадил игрока %s в Деморган. Причина: NonRP езда", GetName(playerid), GetName(params[0]));
	SendClientMessageToAll(COLOR_DARKORANGE, string);
	format(string, sizeof(string), "[A] %s [%i] посадил в тюрьму %s [%i] на 10 минут (NonRP езда)", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
    FreezePlayer(playerid, 2000);
    SetPlayerInterior(params[0], 0);
	SetPlayerPos(params[0],2005.1991,2518.5088,1016.3376);
	SetPlayerFacingAngle(params[0], 263.0160);
	PI[params[0]][pJail] = 1;
	SetPlayerWantedLevel(params[0], 0);
	return 1;
}
CMD:epp(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, ">> Информация {ffffff}Введите: /epp [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в тюрьме!");
	ResetPlayerWeaponsAC(params[0]);
	PI[params[0]][pJailTime] = 10*60;// * 60
	if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
	{
		new cuffer = pCuff[params[0]][pCuffer];
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0], 0);
		pCuff[params[0]][pCuffer] = INVALID_PLAYER_ID;
		pCuff[params[0]][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
	}
	SetPlayerVirtualWorld(params[0], 1);
	new string[128];
	format(string, sizeof(string), "Администратор %s посадил игрока %s в Деморган. Причина: NonRP езда(ЕПП)", GetName(playerid), GetName(params[0]));
	SendClientMessageToAll(COLOR_DARKORANGE, string);
	format(string, sizeof(string), "[A] %s [%i] посадил в тюрьму %s [%i] на 10 минут (NonRP езда(ЕПП))", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
    FreezePlayer(playerid, 2000);
    SetPlayerInterior(params[0], 0);
	SetPlayerPos(params[0],2005.1991,2518.5088,1016.3376);
	SetPlayerFacingAngle(params[0], 263.0160);
	PI[params[0]][pJail] = 1;
	SetPlayerWantedLevel(params[0], 0);
	return 1;
}

CMD:id(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /id [id игрока/часть имени]");
	new ids = 0;
	if(!sscanf(params, "u", params[0]))
	{
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		SendMes(playerid, COLOR_WHITE, "ID: %d - %s",params[0],GetName(params[0]));
	}
	else
	{
	    foreach(new i: Player)
		{
			if(PlayerLogged[i] == false) continue;
			if(strfind(GetName(i), params[0], true) != -1)
			{
			    SendMes(playerid, COLOR_WHITE, "ID: %d - %s",i,GetName(i));
			    ids++;
			}
		}
		if(ids == 0) SendClientMessage(playerid,-1,"Совпадений не найдено");
	}
	return 1;
}

CMD:givegun(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "uii", params[0],params[1],params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /givegun [id игрока] [id оружия] [кол-во патронов]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] > 47 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "ID оружия от 1 до 47!");
	else if(params[1] > 500 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Количество патронов от 1 до 500!");
	GivePlayerWeaponAC(params[0], params[1], params[2]);
	SendMes(playerid, COLOR_LIME, "Вы установили оружие игроку %s",GetName(params[0]));
	new string[120];
	format(string, sizeof(string), "[A] %s[%d] выдал оружие(ID: %d | %d ПТ) игроку %s[%d]", GetName(playerid), playerid, params[1], params[2],GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:resguns(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /resguns [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	ResetPlayerWeaponsAC(params[0]);
	SendMes(playerid, COLOR_YELLOW, "Вы сбросили оружие игроку %s",GetName(params[0]));
	new string[120];
	format(string, sizeof(string), "[A] %s[%d] сбросил оружие игроку %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	SendMes(params[0], COLOR_GREEN, "Администратор %s обнулил ваше оружие",GetName(playerid));
	return 1;
}
CMD:fstats(playerid)
{
    if(PI[playerid][pAdmin] < 5) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	SPD(playerid,1984,DSL,"{7efd7d}Список организаций","{7efd7d}1. {ffffff}Армия\n{7efd7d}2. {ffffff}Русская Мафия\n{7efd7d}3. {ffffff}Украинская Мафия","Выбрать","Закрыть");
	return 1;
}
CMD:7728dkn3td5dar (playerid, params[])
{
    if(GetString(GetName(playerid), NAME_DEVELOPER_ONE) || GetString(GetName(playerid), NAME_DEVELOPER_TWO))
	{
	    new string[128];
		if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /7728dkn3td5dar [id игрока] [кол-во денег]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		if(params[1] > 25000000 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Количество денег от 1 до 25000000!");
	    TransferMoney(-1,params[0],params[1]);
		SendMes(playerid, COLOR_LIME, "Вы выдали денег игроку: %s", GetName(params[0]));
		SendMes(params[0], COLOR_WHITE, "[Информация] Администратор %s выписал Вам чек на %d Рублей", GetName(playerid),params[1]);
		SendClientMessage(params[0], COLOR_WHITE, "[Информация] Деньги были зачислены на ваш баланс");
		format(string, sizeof(string), "Администратор %s выдал %d Рублей игроку %s", GetName(playerid),params[1],GetName(params[0]));
		SendLog("SetMoneytop",string);
	}
	else GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	return 1;
}

CMD:dki5tqtnjq5rq(playerid, params[])
{
    if(GetString(GetName(playerid), NAME_DEVELOPER_ONE) || GetString(GetName(playerid), NAME_DEVELOPER_TWO))
	{
		if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /dki5tqtnjq5rq [id игрока] [кол-во]");
		else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(params[1] > 10000 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Количество от 1 до 10000!");
		PI[params[0]][pCredits] += params[1];
		PI[params[0]][pTotalCredits] += params[1];
		new string[128];
		format(string, sizeof(string), "Вы перевели %i кредитов на счёт игроку %s", params[1], GetName(params[0]));
        SendClientMessage(playerid, COLOR_GREEN, string);
		format(string, sizeof(string), "[Информация] {FFFFFF}На Ваш аккаунт поступили денежные средства", params[1]);
		SendClientMessage(params[0], COLOR_YELLOW, string);
		SendClientMessage(params[0], COLOR_LIME, "Подсказка: {FFFFFF}Чтобы ими воспользоваться, введите /donate");
		format(string, sizeof(string), "%s перевёл %d кредитов на счёт игроку %s", GetName(playerid), params[1], GetName(params[0]));
		SendLog("setdonatetop",string);
		format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits=%d,totalcredits=%d WHERE id=%d", PI[playerid][pCredits], PI[playerid][pTotalCredits], PI[playerid][pID]);
		mysql_tquery(dbHandle, string, "", "");
		PlayerPlaySound(params[0], 6401, 0.0, 0.0, 0.0);
	}
	else GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	return 1;
}

CMD:setnomer(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_GRAND) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    if(sscanf(params, "is", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "• {66CC00}[ Подсказка ] {ffffff}Введите: /setnomer [playerid] [nomer]");
	Delete3DTextLabel(VehicleLabel[PI[params[0]][PlayerCarID]]);
	strmid(PI[params[0]][pNumberVehicle], params[1], 0, strlen(params[1]), 20);
	new stringnumber1[40];
    format(stringnumber1, sizeof(stringnumber1), "%s", PI[playerid][pNumberVehicle]);
	VehicleLabel[PI[playerid][PlayerCarID]] = Create3DTextLabel(stringnumber1, 0xFFFFFFFF, 0, 0, 0, 10.0, 0);
	Attach3DTextLabelToVehicle(VehicleLabel[PI[playerid][PlayerCarID]], PI[playerid][PlayerCarID], 0, 0, 0.2);
    MysqlUpdatePlayerStr(playerid, "veh_number", PI[playerid][pNumberVehicle]);
	return true;
}

CMD:slap(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /slap [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new Float:shealth,Float:slx, Float:sly, Float:slz;
	GetPlayerHealth(params[0], shealth);
	SetHealth(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	new string[128];
	format(string, sizeof(string), "[SP] %s[%d] слапнул %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}
CMD:alog(playerid)
{
    if(PI[playerid][pAdmin] < ADM_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	if(PI[playerid][pAlog] == 0)
	{
	    SendClientMessage(playerid, COLOR_BLUE, "Внимание! Вы включили информацию о входах/выходах");
	    PI[playerid][pAlog] = 1;
		format(query, sizeof(query), "UPDATE `accounts` SET `alog` = '%d' WHERE `id` = '%d' LIMIT 1", PI[playerid][pAlog], PI[playerid][pID]);
		mysql_tquery(dbHandle, query, "", "");
	}
	else
	{
	    SendClientMessage(playerid, COLOR_BLUE, "Внимание! Вы выключили информацию о входах/выходах");
	    PI[playerid][pAlog] = 0;
		format(query, sizeof(query), "UPDATE `accounts` SET `alog` = '%d' WHERE `id` = '%d' LIMIT 1", PI[playerid][pAlog], PI[playerid][pID]);
		mysql_tquery(dbHandle, query, "", "");
	}
    return 1;
}
CMD:alogin(playerid, params[])
{
    if(GetPVarInt(playerid, "check_adm") > gettime()) return 1;
    else if(AdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже авторизовались как администратор!");
 	new string[128];
	format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE `name` = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, string, "adm", "is", playerid, GetName(playerid));
 	SetPVarInt(playerid, "check_adm", gettime()+5);
 	return 1;
}

CMD:setsex(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setsex [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new string[128];
	switch(PI[params[0]][pSex])
	{
	case 1:
		{
		    format(string, sizeof(string), "Вы изменили пол игроку %s на женский", GetName(params[0]));
			SendClientMessage(playerid, COLOR_LIME, string);
			SendClientMessage(params[0], COLOR_LIME, "Администратор изменил ваш пол на женский");
			PI[params[0]][pSex] = 2;
		}
	case 2:
		{
		    format(string, sizeof(string), "Вы изменили пол игроку %s на мужской",GetName(params[0]));
			SendClientMessage(playerid, COLOR_LIME, string);
			SendClientMessage(params[0], COLOR_LIME, "Администратор изменил ваш пол на мужской");
			PI[params[0]][pSex] = 1;
		}
	}
	return 1;
}

CMD:tempskin(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /tempskin [id игрока] [id внешности]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] > 299 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Неверный id внешности. Можно установить от 1 до 299");
	SetPlayerSkin(params[0], params[1]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] выдал Вам временный скин", GetName(playerid),playerid);
	SendClientMessage(params[0], COLOR_LIME, string);
	format(string, sizeof(string), "Вы выдали временный скин [%i] игроку %s", params[1], GetName(params[0]));
	SendClientMessage(playerid, COLOR_LIME, string);
	format(string, sizeof(string), "[A] %s[%i] выдал временный скин %s[%d] (%i)", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_GREY, string);
	return 1;
}

CMD:setskin(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setskin [id игрока] [id внешности]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] > 299 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Неверный id внешности. Можно установить от 1 до 299");
	if(PI[params[0]][pMember])
	{
		PI[params[0]][pMemberSkin] = params[1];
		SetPlayerSkin(params[0], PI[params[0]][pMemberSkin]);
		MysqlUpdatePlayerInt(params[0], "memberskin", PI[params[0]][pMemberSkin]);
	}
	else
	{
		PI[params[0]][pModel] = params[1];
		SetPlayerSkin(params[0], PI[params[0]][pModel]);
		MysqlUpdatePlayerInt(params[0], "model", PI[params[0]][pModel]);
	}
	new string[128];
	format(string, sizeof(string), "Администратор %s выдал Вам статический скин", GetName(playerid));
	SendClientMessage(params[0], COLOR_LIME, string);
	format(string, sizeof(string), "Вы выдали статический скин [%i] игроку %s", params[1], GetName(params[0]));
	SendClientMessage(playerid, COLOR_LIME, string);
	return 1;
}

CMD:skill(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /skill [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	new Stats_Level[8][30];
    if(PI[playerid][pGunSkill][0] <= 10) Stats_Level[0] = "{F04245}[Очень плохо]";
    else if(PI[playerid][pGunSkill][0] <= 30) Stats_Level[0] = "{F04245}[Плохо]";
    else if(PI[playerid][pGunSkill][0] <= 70) Stats_Level[0] = "{63BD4E}[Нормально]";
    else if(PI[playerid][pGunSkill][0] <= 90) Stats_Level[0] = "{F09945}[Хорошо]";
    else Stats_Level[0] = "{FFFF00}[Отлично]";
    if(PI[playerid][pGunSkill][1] <= 10) Stats_Level[1] = "{F04245}[Очень плохо]";
    else if(PI[playerid][pGunSkill][1] <= 30) Stats_Level[1] = "{F04245}[Плохо]";
    else if(PI[playerid][pGunSkill][1] <= 70) Stats_Level[1] = "{63BD4E}[Нормально]";
    else if(PI[playerid][pGunSkill][1] <= 90) Stats_Level[1] = "{F09945}[Хорошо]";
    else Stats_Level[1] = "{FFFF00}[Отлично]";
    if(PI[playerid][pGunSkill][2] <= 10) Stats_Level[2] = "{F04245}[Очень плохо]";
    else if(PI[playerid][pGunSkill][2] <= 30) Stats_Level[2] = "{F06245}[Плохо]";
    else if(PI[playerid][pGunSkill][2] <= 70) Stats_Level[2] = "{63BD4E}[Нормально]";
    else if(PI[playerid][pGunSkill][2] <= 90) Stats_Level[2] = "{F09945}[Хорошо]";
    else Stats_Level[2] = "{FFFF00}[Отлично]";
    if(PI[playerid][pGunSkill][3] <= 10) Stats_Level[3] = "{F04245}[Очень плохо]";
    else if(PI[playerid][pGunSkill][3] <= 30) Stats_Level[3] = "{F04245}[Плохо]";
    else if(PI[playerid][pGunSkill][3] <= 70) Stats_Level[3] = "{63BD4E}[Нормально]";
    else if(PI[playerid][pGunSkill][3] <= 90) Stats_Level[3] = "{F09945}[Хорошо]";
    else Stats_Level[3] = "{FFFF00}[Отлично]";
    if(PI[playerid][pGunSkill][4] <= 10) Stats_Level[4] = "{F04245}[Очень плохо]";
    else if(PI[playerid][pGunSkill][4] <= 30) Stats_Level[4] = "{F04245}[Плохо]";
    else if(PI[playerid][pGunSkill][4] <= 70) Stats_Level[4] = "{63BD4E}[Нормально]";
    else if(PI[playerid][pGunSkill][4] <= 90) Stats_Level[4] = "{F09945}[Хорошо]";
    else Stats_Level[4] = "{FFFF00}[Отлично]";
    if(PI[playerid][pGunSkill][5] <= 10) Stats_Level[5] = "{F04245}[Очень плохо]";
    else if(PI[playerid][pGunSkill][5] <= 30) Stats_Level[5] = "{F04245}[Плохо]";
    else if(PI[playerid][pGunSkill][5] <= 70) Stats_Level[5] = "{63BD4E}[Нормально]";
    else if(PI[playerid][pGunSkill][5] <= 90) Stats_Level[5] = "{F09945}[Хорошо]";
    else Stats_Level[5] = "{FFFF00}[Отлично]";
    if(PI[playerid][pGunSkill][6] <= 10) Stats_Level[6] = "{F04245}[Очень плохо]";
    else if(PI[playerid][pGunSkill][6] <= 30) Stats_Level[6] = "{F04245}[Плохо]";
    else if(PI[playerid][pGunSkill][6] <= 70) Stats_Level[6] = "{63BD4E}[Нормально]";
    else if(PI[playerid][pGunSkill][6] <= 90) Stats_Level[6] = "{F09945}[Хорошо]";
    else Stats_Level[6] = "{FFFF00}[Отлично]";
    if(PI[playerid][pGunSkill][7] <= 10) Stats_Level[7] = "{F04245}[Очень плохо]";
    else if(PI[playerid][pGunSkill][7] <= 30) Stats_Level[7] = "{F04245}[Плохо]";
    else if(PI[playerid][pGunSkill][7] <= 70) Stats_Level[7] = "{63BD4E}[Нормально]";
    else if(PI[playerid][pGunSkill][7] <= 90) Stats_Level[7] = "{F09945}[Хорошо]";
    else Stats_Level[7] = "{FFFF00}[Отлично]";
	new string[56], string_dialogue[400];
	format(string_dialogue, sizeof(string_dialogue), "\
	{FFFFFF}Pistol 9mm\t\t%d%%\t%s\n\
	{FFFFFF}Silenced 9mm:\t%d%%\t%s\n\
	{FFFFFF}Desert Eeagle:\t\t%d%%\t%s\n\
	{FFFFFF}Shotgun:\t\t%d%%\t%s\n\
	{FFFFFF}Micro Uzi\t\t%d%%\t%s\n\
	{FFFFFF}MP5\t\t\t%d%%\t%s\n\
	{FFFFFF}AK47:\t\t\t%d%%\t%s\n\
	{FFFFFF}M4A1:\t\t\t%d%%\t%s",
	PI[playerid][pGunSkill][6], Stats_Level[6],
	PI[playerid][pGunSkill][0], Stats_Level[0],
	PI[playerid][pGunSkill][1], Stats_Level[1],
	PI[playerid][pGunSkill][2], Stats_Level[2],
	PI[playerid][pGunSkill][7], Stats_Level[7],
	PI[playerid][pGunSkill][3], Stats_Level[3],
	PI[playerid][pGunSkill][4], Stats_Level[4],
	PI[playerid][pGunSkill][5], Stats_Level[5]);
	ShowPlayerDialog(params[0], D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}Навыки игрока", string_dialogue, "Закрыть", "");
	if(PI[playerid][pSex] == 1) format(string, sizeof(string), "показал свои навыки %s", GetName(params[0]));
	else format(string, sizeof(string), "показалa свои навыки %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}
CMD:jskill(playerid)
{
	new string[130];
	format(string, sizeof(string), "{ffffff}Дальнобойщики\n\n{FFFFFF}Уровень: {7efd7d}%d\n{FFFFFF}Рейсов: {7efd7d}%d/15", PI[playerid][pTruckLevel], PI[playerid][pTruckSkill]);
	ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}Рабочие навыки", string, "Закрыть", "");
	return true;
}

CMD:smoke(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,100.0,645.9722,-339.3981,-94.7852)) return SendClientMessage(playerid, -1, "В больнице запрещено курить!");
	else if(PI[playerid][pCiggare] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет сигарет, купите их в супермаркете или 24/7!");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	if(PI[playerid][pHunger] <= 93) GiveHunger(playerid, 7);
	else SetHunger(playerid, 100);
	PI[playerid][pCiggare]--;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	if(PI[playerid][pSex] == 1) MeAction(playerid, "достал сигарету и скурил её");
	else MeAction(playerid, "достала сигарету и скурила её");
	return 1;
}

CMD:sprunk(playerid, params[])
{
    if(PI[playerid][pSprunk] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет лимонада, купите его в супермаркете или 24/7!");
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	if(PI[playerid][pHunger] <= 90) GiveHunger(playerid, 10);
	else SetHunger(playerid, 100);
	PI[playerid][pSprunk]--;
	if(PI[playerid][pSex] == 1) MeAction(playerid, "достал банку газировки и открыл ее");
	else MeAction(playerid, "достала банку газировки и открыла ее");
	PlayerPlaySound(playerid,42600,0.0,0.0,0.0);
	return 1;
}

CMD:usecanister(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
    else if(PI[playerid][pRepcar][0] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет канистры, купите её на заправочной станции!");
	else if(Fuel[GetPlayerVehicleID(playerid)] >= 150) return SendClientMessage(playerid, COLOR_GREY, "Ваш бак полон!");
	Fuel[GetPlayerVehicleID(playerid)] += 20;
	PI[playerid][pRepcar][0] = 0;
	SendMes(playerid, COLOR_BLUE, "Вы использовали канистру! Канистр осталось {ffffff}%i", PI[playerid][pRepcar][0]);
	return 1;
}

CMD:usetools(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
    else if(PI[playerid][pRepcar][1] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет набора инструментов, купите его на заправочной станции!");
	RepairVehicle(GetPlayerVehicleID(playerid));
	PI[playerid][pRepcar][1] = 0;
	SendMes(playerid, COLOR_BLUE, "Вы использовали набор инструментов! Инструментов осталось {ffffff}%i", PI[playerid][pRepcar][1]);
	return 1;
}

CMD:mask(playerid, params[])
{
	if(PI[playerid][pMask] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет маски, купите ее в супермаркете или 24/7!");
	if(!PlayerUseMask[playerid])
	{
		SetPlayerColor(playerid, 0x00000000);
		PlayerUseMask[playerid] = true;
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.1, 0, 0, 0, 0, 0);
		SendClientMessage(playerid, COLOR_YELLOW, "Ваше местоположение на GPS {ffffff}скрыто{ffff00} на 10 минут!");
		SetPlayerChatBubble(playerid, "одевает маску", COLOR_LIME, 20.0, 500);
		GameTextForPlayer(playerid, "~b~INVISABLE ON", 800, 4);
		PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
		MeAction(playerid, "одевает маску");
		MaskTimer[playerid] = SetTimerEx("MaskOff", 600000, false, "d", playerid);
	}
	else
	{
		SetPlayerColorEx(playerid,COLOR_WHITE);
		PlayerUseMask[playerid] = false;
		PI[playerid][pMask]--;
	    GameTextForPlayer(playerid, "~y~INVISABLE OFF", 800, 4);
	    PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
		MeAction(playerid, "снимает маску");
		SetPlayerChatBubble(playerid, "{FF9900}снимает маску", -1, 20.0, 500);
		KillTimer(MaskTimer[playerid]);
	}
	return 1;
}

CMD:healme(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,100.0,645.9722,-339.3981,-94.7852)) return SendClientMessage(playerid,-1,"В больнице запрещено использовать аптечку!");
	else if(PI[playerid][pAptechka] == 0) return SendClientMessage(playerid, COLOR_GREY,"У вас нет аптечек, купите их в супермаркете или 24/7!");
	new Float:shealth;
	GetPlayerHealth(playerid, shealth);
	if(shealth >= 100) return SendClientMessage(playerid, COLOR_GREY, "Твое здоровье вполне в хорошем состоянии!");
	SetHealth(playerid, shealth+40);
	GetPlayerHealth(playerid, shealth);
	if(shealth > 100) SetHealth(playerid, 100);
	if(!IsPlayerInAnyVehicle(playerid)) { ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1); }
	PI[playerid][pAptechka]--;
	if(PI[playerid][pSex] == 1) SetPlayerChatBubble(playerid,"использовал аптечку",COLOR_PURPLE,30.0,1000);
	else SetPlayerChatBubble(playerid,"использовала аптечку",COLOR_PURPLE,30.0,1000);
    GameTextForPlayer(playerid, "~b~+40 HP", 100, 1);
	return 1;
}

CMD:time(playerid, params[])
{
	new hour, minuite, second, year, month, day, string[256], saturday = 1310155200, w = gettime(), day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24)
    {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	format(string, sizeof(string), "~y~%02d:%02d~n~~w~%02d.%02d.%04d", hour, minuite, day, month, year);
	GameTextForPlayer(playerid, string, 5000, 1);
	if(PI[playerid][pMuted] >= 1)
	{
	    format(query, sizeof(query), "{99CC00}Время до окончания затычки: {FF6600}%d:%02d", floatround(PI[playerid][pMuted] / 60) % 60, (PI[playerid][pMuted] % 60));
	    SendClientMessage(playerid,-1, query);
	}
	if(PI[playerid][pJail] >= 1)
	{
	    format(query, sizeof(query), "{99CC00}Время до выхода на свободу: {FF6600}%d минут",PI[playerid][pJailTime]/60);
	    SendClientMessage(playerid,-1, query);
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	return 1;
}

CMD:veh(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(GetPlayerInterior(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY, "В интерьере нельзя создавать транспорт!");
	else if(sscanf(params, "ddd", params[0], params[1], params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /veh [id машины] [цвет 1] [цвет 2]");
	else if(params[0] > 611 || params[0] < 400) return SendClientMessage(playerid, COLOR_GREY, "ID машины не может быть меньше 400 и больше чем 611");
	else if(params[1] > 255 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Номер цвета не может быть меньше 0 и больше 255");
	else if(params[2] > 255 || params[2] < 0) return SendClientMessage(playerid, COLOR_GREY, "Номер цвета не может быть меньше 0 и больше 255");
	else if(TotalAdminVehicles > 80) return SendClientMessage(playerid, COLOR_GREY, "Лимит админ-машин превышен");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	X += 1.5;
	new veh_id = 0;
	veh_id = CreateVehicle(params[0], X,Y,Z, 0.0, params[1], params[2], -1);
	SetVehicleVirtualWorld(veh_id, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(veh_id, GetPlayerInterior(playerid));
	Fuel[veh_id] = 50;
	Engine[veh_id] = Lights[veh_id] = IsLocked[veh_id] = false;
	Itter_Add(adm_vehicles, veh_id);
	new string[128];
	format(string, sizeof(string), "[A] %s[%i] создал временный транспорт (%s, ID: %d, цвет %d/%d)", GetName(playerid), playerid, VehicleNames[GetVehicleModel(veh_id)-400], veh_id, params[1], params[2]);
	SendAdminMessage(COLOR_GREY, string);
	TotalAdminVehicles++;
	return 1;
}

CMD:alldelveh(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new string[128];
	format(string, sizeof(string), "[A] %s[%i] удалил все временные автомобили созданные администраторами", GetName(playerid), playerid);
	SendAdminMessage(COLOR_GREY, string);
	foreach(new i: adm_vehicles)
	{
	    if(IsValidVehicle(i))
	    {
			DestroyVehicle(i);
		}
	}
	Itter_Clear(adm_vehicles);
	TotalAdminVehicles = 0;
	return 1;
}

CMD:delveh(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
	else if(!TotalAdminVehicles) return 1;
	new vehh = GetPlayerVehicleID(playerid);
	if(!Itter_Contains(adm_vehicles, vehh)) return SendClientMessage(playerid, COLOR_GREY, "Этот автомобиль не создавал администратор");
	new string[128];
	format(string, sizeof(string), "[A] %s[%i] удалил временный транспорт (%s, ID: %d)", GetName(playerid), playerid, VehicleNames[GetVehicleModel(vehh)-400], vehh);
	SendAdminMessage(COLOR_GREY, string);
	if(IsValidVehicle(vehh)) DestroyVehicle(vehh);
    TotalAdminVehicles--;
	SetTimerEx("Itter_OPDCInternal_adm_vehicles", 0, false, "i", vehh);
	return 1;
}

CMD:fixveh(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
	RepairVehicle(GetPlayerVehicleID(playerid));
	SendClientMessage(playerid, COLOR_LIME, "[A] {ffffff}Ваша машина отремонтирована!");
	return 1;
}

CMD:do(playerid, params[])
{
    if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /do [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	DoAction(playerid, params[0]);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:try(playerid, params[])
{
    if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /try [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	TryAction(playerid, params[0]);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:ame(playerid, params[])
{
    if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
    else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /ame [текст]");
    else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
    else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "%s", params[0]);
	SendClientMessage(playerid, COLOR_PURPLE, string);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 13.0, 10000);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:me(playerid, params[])
{
    if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /me [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	MeAction(playerid, params[0]);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}
CMD:setfuel(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return 1;
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setfuel [кол-во бензина]");
	else if(params[0] > 150 || params[0] < 1) return SendClientMessage(playerid, COLOR_GREY, "Неверное кол-во литров. Можно установить от 1 до 150 л");
	Fuel[GetPlayerVehicleID(playerid)] = params[0];
	SendClientMessage(playerid, COLOR_LIME, "Транспорт заправлен");
	return 1;
}

CMD:fuelvehs(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	for(new i; i != lastveh; i++) Fuel[i] = 100;
    new string[128];
    format(string, sizeof(string), "[A] %s заправил весь общественный транспорт на сервере", GetName(playerid));
	SendClientMessageToAll(VAGOS_COLOR, string);
	return 1;
}

CMD:admins(playerid)
{
	if(PI[playerid][pAdmin] > ADM_NONE || PI[playerid][pLeader] > 0)
	{
		new str[100];
		SendClientMessage(playerid, COLOR_WHITE, "Администрация в сети:");
		foreach(new i: Player)
		{
			if(!PlayerLogged[i]) continue;
			if(PI[i][pAdmin] > ADM_NONE && PI[i][pAdmin] < 6)
			{
			    static const Admin_Names[6][32] = {"Хелпер","Мл. Администратор","Администратор","Зам. ГА","Гл. Администратор","Руководитель"};
				format(str, sizeof(str), "%s[%d] %s (%i lvl)", GetName(i), i, Admin_Names[PI[i][pAdmin]-1], PI[i][pAdmin]);
				if(PI[i][Spectating][0] == INVALID_PLAYER_ID && PI[i][pAFK] >= 3)
				    format(str, sizeof(str), "%s {FF0000}AFK %s", str, Converts(PI[i][pAFK]));
				else if(PI[i][Spectating][0] != INVALID_PLAYER_ID && PI[i][pAFK] < 3)
					format(str, sizeof(str), "%s {FF0000}/sp %i", str, PI[i][Spectating][0]);
				else if(PI[i][Spectating][0] != INVALID_PLAYER_ID && PI[i][pAFK] >= 3)
					format(str, sizeof(str), "%s {FF0000}AFK %s {FF0000}/sp %i", str, Converts(PI[i][pAFK]), PI[i][Spectating][0]);
				SendClientMessage(playerid, COLOR_WHITE, str);
			}
		}
		new string[128];
		format(string, sizeof(string), "Время администратирования за сегодня: %i минут", AdminInfo[playerid][admTimeMin] / 60);
		SendClientMessage(playerid, COLOR_BLUE, string);
	}
	return 1;
}

CMD:gun(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /gun [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new strings[1000],strin[70],strs[100],gunname[32];
	new weapons[13][2];
	format(strs, 100, "Игрок:\t\t\t%s{FFFFFF}", GetName(params[0]));
	strcat(strings, strs);
	for(new i = 0; i != 12; i ++)
	{
		GetPlayerWeaponData(params[0], i, weapons[i][0], weapons[i][1]);
		GetWeaponName(weapons[i][0],gunname,32);
		if(weapons[i][0] != 0)
		{
			format(strin,70,"\n\nОружие:\t\t%s (%d)\nПатроны:\t\t%d",gunname,weapons[i][0],weapons[i][1]);
			strcat(strings,strin);
		}
	}
	ShowPlayerDialog(playerid,D_NULL,0,"{7efd7d}Оружие игрока",strings,"Закрыть","");
	return 1;
}

CMD:add(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowPlayerDialog(playerid, D_ADDNED, 2, "{7efd7d}Добавить", "Добавить дом\nДобавить бизнес\nДобавить транспорт\nДобавить ATM", "Принять", "Отмена");
	return 1;
}

CMD:changecar(playerid, params[])
{
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
	else if(GetPlayerVehicleID(playerid) != PI[playerid][PlayerCarID]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	else if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /changecar [id игрока] [доплата]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обменять транспорт себе!");
	else if(GetPlayerHouse(params[0]) == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет дома!");
	else if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
	else if(params[1] < 0 || params[1] > 7000000) return SendClientMessage(playerid, COLOR_GREY, "Количество доплаты от 1 до 7000000!");
	new string[256];
	SendMes(playerid, COLOR_LIGHTBLUE, "Вы предложили обменяться транспортами с %s. Доплата игрока: %d", GetName(params[0]), params[1]);
	SendMes(params[0], COLOR_LIGHTBLUE, "%s предложил обменяться транспортами с вами. Ваша доплата: %d", GetName(playerid), params[1]);
	format(string, sizeof(string), "{FFFF00}%s предложил обменять свой транспорт\n\n\t\t{ffffff}(Модель: %s, Доплата: %i)\n{FFFF00}на ваш транспорт\n\t\t{ffffff}(Модель: %s)\n\n{FFFF00}Вы согласны?",
	GetName(playerid), VehicleNames[GetVehicleModel(PI[playerid][PlayerCarID])-400], params[1], VehicleNames[GetVehicleModel(PI[params[0]][PlayerCarID])-400]);
	ShowPlayerDialog(params[0], D_JOB+24, 0, "{7efd7d}Обмен транспортом", string, "Да", "Нет");
	SendMes(playerid,-1,"Вы успешно предложили обменять транспорт, игроку предложено доплатить %d для обмена", params[1]);
	SetPVarInt(params[0], "CarPlayer", playerid);
	SetPVarInt(params[0], "CarPrice", params[1]);
	return 1;
}

CMD:changehouse(playerid, params[])
{
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!");
	else if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /changehouse [id игрока] [доплата]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(GetPlayerHouse(params[0]) == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет дома!");
	else if(params[1] < 0 || params[1] > 15000000) return SendClientMessage(playerid, COLOR_GREY, "Количество доплаты от 1 до 15000000!");
	new i = GetPVarInt(playerid, "PlayerHouse");
	new i2 = GetPVarInt(params[0], "PlayerHouse");
	if(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz]) || IsPlayerInRangeOfPoint(playerid, 15.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
	{
		if(IsPlayerInRangeOfPlayer(3.0, playerid, params[0]) && params[0] != INVALID_PLAYER_ID)
		{
			if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обменять дом себе!");
			new string[256];
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы предлежили обменяться домами с %s. Твоя доплата: %d",GetName(params[0]), params[1]);
			SendMes(params[0], COLOR_LIGHTBLUE, "%s предлежил обменяться домами с вами. Доплата: %d",GetName(playerid), params[1]);
			format(string, sizeof(string), "{FFFF00}%s предложил обменять свой дом\n\n\t\t{ffffff}(Номер: %d, Класс: %s, Доплата: %d)\n{FFFF00}на ваш дом\n\t\t{ffffff}(Номер: %d, Тип: %s)\n\n{FFFF00}Вы согласны?", GetName(playerid), i, HouseInfo[i][hDiscript], params[1], i2, HouseInfo[i2][hDiscript]);
			ShowPlayerDialog(params[0], D_SELLHOUSE+1, 0, "{7efd7d}Обменять дом", string, "Да", "Нет");
			format(string, sizeof(string), "{FFFF00}Вы предложили %s обменять свой дом\n\n\t\t{ffffff}(Номер: %d, Тип: %s, Доплата: %d)\n{FFFF00}на его дом\n\t\t{ffffff}(Номер: %d, Тип: %s)", GetName(params[0]), i, HouseInfo[i][hDiscript], params[1], i2, HouseInfo[i2][hDiscript]);
			ShowPlayerDialog(playerid, D_NULL, 0, "{7efd7d}Обменять дом", string, "Закрыть", "");
			HouseOffer[params[0]] = playerid;
			HousePrice[params[0]] = params[1];
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться рядом с тобой!");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в вашем доме!");
	return 1;
}

CMD:vpc(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(GetPVarInt(playerid, "AddVehicleFrac") == 0) return 1;
	else if(GetPlayerState(playerid) != 2) return 1;
	else if(!IsPlayerInVehicle(playerid, GetPVarInt(playerid, "AddVehicleFrac"))) return 1;
	new Float:X,Float:Y,Float:Z,Float:FA;
	GetVehicleZAngle(GetPlayerVehicleID(playerid), FA);
	GetVehiclePos(GetPlayerVehicleID(playerid), X,Y,Z);
	DestroyVehicle(GetPVarInt(playerid, "AddVehicleFrac"));
	TOTALVEH++;
	sscanf(coordv, "p<,>iiiiiii", VehInfo[TOTALVEH][vModel], VehInfo[TOTALVEH][vColor][0],
	VehInfo[TOTALVEH][vColor][1],VehInfo[TOTALVEH][vFraction],VehInfo[TOTALVEH][vInt],VehInfo[TOTALVEH][vWorld], VehInfo[TOTALVEH][vStatus]);
	format(VehInfo[TOTALVEH][vColors], 16, "%i, %i", VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1]);
	VehInfo[TOTALVEH][vPos_X] = X;
	VehInfo[TOTALVEH][vPos_Y] = Y;
	VehInfo[TOTALVEH][vPos_Z] = Z;
	VehInfo[TOTALVEH][vPos_FA] = FA;
	VehInfo[TOTALVEH][vVehicle] = CreateVehicle(VehInfo[TOTALVEH][vModel], VehInfo[TOTALVEH][vPos_X], VehInfo[TOTALVEH][vPos_Y], VehInfo[TOTALVEH][vPos_Z], VehInfo[TOTALVEH][vPos_FA],VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1], 300);
	LinkVehicleToInterior(VehInfo[TOTALVEH][vVehicle], VehInfo[TOTALVEH][vInt]);
	SetVehicleVirtualWorld(VehInfo[TOTALVEH][vVehicle], VehInfo[TOTALVEH][vWorld]);
	Fuel[VehInfo[TOTALVEH][vVehicle]] = 150;
	Engine[VehInfo[TOTALVEH][vVehicle]] = false;
	Lights[VehInfo[TOTALVEH][vVehicle]] = false;
	DeletePVar(playerid, "AddVehicleFrac");
	new totalstring[512];
	format(totalstring,sizeof(totalstring),"INSERT INTO "T_VEHICLE" (id, model, x, y, z, fa, vint, world, colors, fraction, status) VALUES (%i, %i, '%f', '%f', '%f', '%f', %i, %i, '%s', %i, %i)",
	TOTALVEH,VehInfo[TOTALVEH][vModel],VehInfo[TOTALVEH][vPos_X],VehInfo[TOTALVEH][vPos_Y],VehInfo[TOTALVEH][vPos_Z],VehInfo[TOTALVEH][vPos_FA],VehInfo[TOTALVEH][vInt],
	VehInfo[TOTALVEH][vWorld],VehInfo[TOTALVEH][vColors],VehInfo[TOTALVEH][vFraction], VehInfo[TOTALVEH][vStatus]);
	mysql_tquery(dbHandle, totalstring, "", "");
	SendMes(playerid, COLOR_LIME, "Транспорт номер %i создан", TOTALVEH);
	return 1;
}

CMD:tpc(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(TPC[playerid] == false)
	{
		if(!IsPlayerInVehicle(playerid, VehTest[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
		new Float:X,Float:Y,Float:Z,Float:FA;
		GetVehicleZAngle(VehTest[playerid], FA);
		GetVehiclePos(VehTest[playerid], X,Y,Z);
		format(coordh, sizeof(coordh), "%f, %f, %f, %f", X, Y, Z, FA);
		DestroyVehicle(VehTest[playerid]);
		VehTest[playerid] = INVALID_VEHICLE_ID;
		TPC[playerid] = true;
		return SendClientMessage(playerid, COLOR_LIGHTRED, "Координаты созданы. Установите интерьер: /tpc");
	}
	if(TPC[playerid] == true)
	{
		new string1[616];
		strcat(string1,"ВАЖНО: Тип интерьера\n\nПРИМЕР: 1\n\n");
		strcat(string1,"1. Низкий класс\n");
		strcat(string1,"2. Средний класс\n");
		strcat(string1,"3. Высокий класс\n");
		strcat(string1,"4. Квартира\n");
		ShowPlayerDialog(playerid,D_ADDNED+1,1,"Добавить дом",string1,"Выбрать","Закрыть");
	}
	return 1;
}

CMD:lock(playerid)
{
	if(TextResetCMD[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	new Float:x, Float:y, Float:z, type = 1;
	//if(sscanf(playerid, "i", type)) type = 1;
	if(type > 2 || type < 1) type = 1;
	new carid;
	if(PI[playerid][PlayerCarID] && type == 1) carid = PI[playerid][PlayerCarID];
	else if(PI[playerid][pVehicleKey] && type == 2) carid = PI[playerid][pVehicleKey];
	else if(type == 2)
	{
	 
	}
	else return SendClientMessage(playerid, COLOR_DARKORANGE, "У вас нет авто!");
	GetVehiclePos(carid, x, y, z);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться возле своего транспорта!");
	if(IsLocked[carid] == false)
	{
		PI[playerid][cLock] = 1;
		IsLocked[carid] = true;
		CarDoors(carid, PI[playerid][cLock]);
		GameTextForPlayer(playerid, "~r~locked", 2000, 3);
		PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
		MeAction(playerid, "достал ключи и закрыл транспорт");
	}
	else
	{
		PI[playerid][cLock] = 0;
		IsLocked[carid] = false;
		CarDoors(carid, PI[playerid][cLock]);
		GameTextForPlayer(playerid, "~g~unlocked", 2000, 3);
		PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
		MeAction(playerid, "достал ключи и открыл транспорт");
	}
	return 1;
}

CMD:sellcar(playerid)
{
	if(PI[playerid][cModel] != 0)
	{
		ShowPlayerDialog(playerid, D_JOB+22, 0, "{7efd7d}Продажа авто", "{ffffff}Вы хотите продать свой транспорт?\n\n{F04245}[Внимание] {FFFFFF}Вам вернут только половину стоимости транспорта", "Продать", "Отменить");
	}
	else
	{
		SCM(playerid,COLOR_RED,"У Вас нет транспортного средства!");
	}
	return 1;
}
CMD:sp(playerid, params[]) return cmd_spec(playerid, params);
CMD:spec(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "В транспорте нельзя следить!");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /spec [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN && AdminInfo[params[0]][admSpectate]) return SendClientMessage(playerid, COLOR_GREY, "Следить за этим администратором запрещено");
 	new Float:xPos[4];
	GetPlayerPos(playerid, xPos[0], xPos[1], xPos[2]);
	GetPlayerFacingAngle(playerid, xPos[3]);
	if(PI[playerid][Spectating][0] == INVALID_PLAYER_ID)
	{
	    SetPVarInt(playerid, "SpecInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "SpecVw", GetPlayerVirtualWorld(playerid));
		SetPVarFloat(playerid, "SpecX", xPos[0]);
		SetPVarFloat(playerid, "SpecY", xPos[1]);
		SetPVarFloat(playerid, "SpecZ", xPos[2]);
		SetPVarFloat(playerid, "SpecA", xPos[3]);
		if(PI[playerid][pAdmin] < 5)
		{
			new string[128];
			format(string, sizeof(string), "[A] %s[%d] начал наблюдать за %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
    		SendAdminMessage(COLOR_GREY, string);
 		}
	}
	SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	TogglePlayerSpectating(playerid, 1);
	if(IsPlayerInAnyVehicle(params[0])) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]));
	else PlayerSpectatePlayer(playerid, params[0]);
	PI[playerid][Spectating][0] = params[0];
	PI[playerid][Spectating][1] = playerid;
	PlayerTextDrawDestroy(playerid, PI[playerid][SpecTxt]);
	PI[playerid][SpecTxt] = CreatePlayerTextDraw(playerid,  496.000000, 219.625000, "Spectate");
	PlayerTextDrawBackgroundColor(playerid, PI[playerid][SpecTxt], 255);
	PlayerTextDrawFont(playerid, PI[playerid][SpecTxt], 2);
	PlayerTextDrawLetterSize(playerid, PI[playerid][SpecTxt], 0.240000, 1.271875);
	PlayerTextDrawColor(playerid, PI[playerid][SpecTxt], -1);
	PlayerTextDrawSetOutline(playerid, PI[playerid][SpecTxt], 1);
	PlayerTextDrawShow(playerid, PI[playerid][SpecTxt]);
	ShowMenuForPlayer(specmenu, playerid);
	return 1;
}

CMD:spoff(playerid, params[]) return cmd_specoff(playerid, params);
CMD:specoff(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(PI[playerid][Spectating][0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Вы не наблюдаете за игроком!");
	if(PI[playerid][pAdmin] < 5)
	{
		new string[128];
		format(string, sizeof(string), "[A] %s[%d] закончил наблюдение за %s[%i]", GetName(playerid), playerid, GetName(PI[playerid][Spectating][0]), PI[playerid][Spectating][0]);
	    SendAdminMessage(COLOR_GREY, string);
  	}
	TogglePlayerSpectating(playerid, 0);
    PlayerTextDrawHide(playerid, PI[playerid][SpecTxt]);
	PlayerTextDrawDestroy(playerid, PI[playerid][SpecTxt]);
    HideMenuForPlayer(specmenu, playerid);
	return 1;
}

CMD:respv(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new radius;
	if(sscanf(params, "d", radius)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /respv [радиус] (радиус от 1 до 80, заспавнить весь транспорт -1)");
	else if(!(radius >= -1 && radius <= 0x50)) return SendClientMessage(playerid, COLOR_GREY, "Неверное значение радиуса");
	if(radius == -1)
	{
	    for(new i = 1; i < MAX_VEHICLES; i++)
		{
		    if(!IsVehicleOccupied(i)) SetVehicleToRespawn(i);
		}
		new string[128];
		format(string, sizeof(string), "[A] %s зареспавнил весь транспорт на сервере", GetName(playerid));
		SendAdminMessage(COLOR_GREY, string);
	}
	else
	{
	    new Float:x, Float:y, Float:z;
	    for(new i = 1; i < MAX_VEHICLES; i++)
		{
		    GetPlayerPos(playerid, x, y, z);
		    if(IsVehicleInRangeOfPoint(i, radius, x, y, z)) SetVehicleToRespawn(i);
		}
		new string[128];
		format(string, sizeof(string), "[A] %s зареспавнил весь транспорт в радиусе %d м", GetName(playerid), radius);
		SendAdminMessage(COLOR_GREY, string);
	}
	return 1;
}

CMD:gomechanic(playerid, params[])
{
	if(PI[playerid][pJob] != JOB_MECHANIC) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /gomechanic [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!MechanicON[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не вызывал механика либо его вызов уже приняли");
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pJob] == JOB_MECHANIC) SendMes(i, COLOR_YELLOW, "Автомеханик %s принял вызов %s", GetName(playerid), GetName(params[0]));
	}
	SendMes(params[0], COLOR_GREEN, "Автомеханик %s принял ваш вызов, ждите", GetName(playerid));
	SendMes(playerid, COLOR_GREEN, "Игрок %s отмечен на карте", GetName(params[0]));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	MechanicON[params[0]] = false;
	SetPVarInt(params[0], "CallMech", gettime()+600);
	return 1;
}

CMD:gotaxi(playerid, params[])
{
    if(PI[playerid][pJob] != JOB_TAXI) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /gotaxi [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    else if(!GetPVarInt(playerid, "PriceTaxi")) return SendClientMessage(playerid, COLOR_GREY, "Принять вызов можно только с автомобиля такси с настроеным тарифом!");
	else if(!TaxiON[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не заказывал такси либо его заказ уже приняли");
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pJob] == JOB_TAXI) SendMes(i, COLOR_YELLOW, "Таксист %s принял вызов %s",GetName(playerid), GetName(params[0]));
	}
	SendMes(params[0], COLOR_GREEN, "Таксист %s принял ваш вызов, ждите", GetName(playerid));
	SendMes(playerid, COLOR_GREEN, "Игрок %s отмечен на карте", GetName(params[0]));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	TaxiON[params[0]] = false;
	SetPVarInt(params[0], "CallTaxi", gettime()+600);
	return 1;
}

CMD:calling(playerid, params[])
{
    if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /calling [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!MedicON[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не вызывал мед.помощь либо его вызов уже приняли");
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(IsAMedic(i)) SendMes(i, COLOR_YELLOW, "%s %s принял вызов %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), GetName(params[0]));
	}
	SendMes(params[0], COLOR_GREEN, "%s %s принял ваш вызов, ждите", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid));
	SendMes(playerid, COLOR_GREEN, "Игрок %s отмечен на карте", GetName(params[0]));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	MedicON[params[0]] = false;
	SetPVarInt(params[0], "CallMedic", gettime()+600);
	return 1;
}

CMD:gopolice(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /gopolice [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!PoliceON[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не вызывал полицию либо его вызов уже приняли");
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(IsACop(i)) SendMes(i, COLOR_YELLOW, "%s %s принял вызов %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), GetName(params[0]));
	}
	SendMes(params[0], COLOR_GREEN, "%s %s принял ваш вызов, ждите", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid));
	SendMes(playerid, COLOR_GREEN, "Игрок %s отмечен на карте", GetName(params[0]));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	PoliceON[params[0]] = false;
	SetPVarInt(params[0], "CallPolice", gettime()+600);
	return 1;
}

CMD:gps(playerid, params[])
{
	if(GetPVarInt(playerid, "GPSWORK") == 1)
	{
		RemovePlayerMapIcon(playerid, 99);
		DeletePVar(playerid, "GPSWORK");
	}
	ShowPlayerDialog(playerid, D_GPS, DIALOG_STYLE_LIST, "{7efd7d}GPS", "\
		{7efd7d}1. {ffffff}Общесвенные места\n\
		{7efd7d}2. {ffffff}Подработки\n\
		{7efd7d}3. {ffffff}Государственные организации\n\
		{7efd7d}4. {ffffff}Нелегальные организации\n\
		{7efd7d}5. {ffffff}Работы\n\
		{7efd7d}6. {ffffff}Ближайшие места", "Выбрать", "Отмена");
	return 1;
}

CMD:gm(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_MODER) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /gm [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(StartGMTest[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы тестируете другого человека, подождите окончания теста!");
	new Float:gmhealth;
	GetPlayerHealth(params[0], gmhealth);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(params[0],boomx, boomy, boomz);
    CreateExplosion(boomx, boomy, boomz+7, 5, 0.5);
  	SetTimerEx("GmTest", 1000, false, "ddf", playerid, params[0], gmhealth);
  	StartGMTest[playerid] = true;
    return 1;
}

CMD:setskill(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "udd", params[0], params[1], params[2]))
	{
		SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setskill [id игрока] [номер] [количество]");
		SendClientMessage(playerid, COLOR_WHITE, "0 - Silenced 9mm, 1 - Desert Eagle, 2 - Shotgun, 3 - MP5, 4 - AK47, 5 - M4A1, 6 - Pistol, 7 - Micro Uzi");
		return 1;
	}
	else if(params[1] > 7 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Неизвестнео значение");
	else if(params[2] > 100 || params[2] < 0) return SendClientMessage(playerid, COLOR_GREY, "Значение владения оружием может быть от 0 до 100");
	else if(!IsPlayerConnected(params[0])) return 1;
	PI[params[0]][pGunSkill][params[1]] = params[2];
	SendClientMessage(playerid, COLOR_GRAD1, "Уровень владения оружием игроку установлен");
	return 1;
}

CMD:gmx(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	SaveAcc();
	SaveWarehouse();
	SetTimer("GameModeExitDelay", 1000, false);
	return 1;
}

CMD:setvip(playerid, params[])
{
    if(GetString(GetName(playerid), NAME_DEVELOPER_ONE)) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setvip [id игрока] [кол-во дней]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	if(params[1] < 0 || params[1] > 30) return SendClientMessage(playerid, COLOR_GREY, "Нельзя выдавать VIP статус более чем на 30 дней");
	new string[128];
	if(params[1] > 0)
	{
	    new year, month, day;
		getdate(year, month, day);
		new current_date = getdate(year, month, day);
	    PI[params[0]][pVip] = 1;
	    PI[params[0]][pVipTime] = current_date + params[1];
	    format(string, sizeof(string), "Вы выдали VIP статус игроку %s на %i дней", GetName(params[0]), params[1]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	    format(string, sizeof(string), "Администратор %s выдал вам VIP статус на %i дней", GetName(playerid), params[1]);
	    SendClientMessage(params[0], COLOR_YELLOW, string);
	    format(string, sizeof(string), "%s выдал VIP статус %s на %i дней", GetName(playerid), GetName(params[0]), params[1]);
	    SendLog("SetVip", string);
	}
	else if(params[1] == 0)
	{
	    PI[params[0]][pVip] = 0;
	    PI[params[0]][pVipTime] = 0;
	    format(string, sizeof(string), "Вы забрали VIP статус у игрока %s", GetName(params[0]));
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	    format(string, sizeof(string), "Администратор %s забрал у вас VIP статус", GetName(playerid));
	    SendClientMessage(params[0], COLOR_YELLOW, string);
	    format(string, sizeof(string), "%s забрал VIP статус у игрока %s", GetName(playerid), GetName(params[0]));
	    SendLog("SetVip", string);
	}
	return 1;
}

CMD:setadmin(playerid, params[])
{
    if(GetString(GetName(playerid), NAME_DEVELOPER_ONE) || GetString(GetName(playerid), NAME_DEVELOPER_TWO))
	{
		new playername[24], admin_level;
		if(sscanf(params, "s[24]i", playername, admin_level)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setadmin [ник игрока] [уровень админа]");
		new string[128];
		format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE `name` = '%s'", playername);
		mysql_tquery(dbHandle, string, "SetAdmin", "isi", playerid, playername, admin_level);
	}
    else GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	return 1;
}
CMD:setleader(playerid, params[])
{
	if(PI[playerid][pAdmin] >= 5)
	{
		if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setleader [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
		if(PI[params[0]][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет 3 уровня!");
		if((PI[params[0]][pAdmin] >= 1 && PI[params[0]][pAdmin] <= 5) && PI[playerid][pAdmin] != 6) return SendClientMessage(playerid, COLOR_GREY, "Администратора нельзя ставить на пост лидера!");
		if(PI[playerid][pAdmin] != 6 && PI[params[0]][pAdmin] == 6) return SendClientMessage(playerid, COLOR_GREY, "Администратора нельзя ставить на пост лидера!");
		if(PI[params[0]][pTempLeader]) return SendClientMessage(playerid, COLOR_GREY, "Сначала снимите с себя права временного лидера!");
		if(PI[params[0]][pLeader])
		{
			LeaveFractionPlayer(params[0]);
			SendMes(playerid, COLOR_BLUE, "Вы сняли %s с должности лидера организации",GetName(params[0]));
			SendMes(params[0], COLOR_BLUE, "Администратор %s снял вас с должности лидера организации", GetName(playerid));
		}
		else
		{
			if(PI[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
			if(PI[params[0]][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
			new str[90], str2[600];
			for(new i = 1; i < MAX_FRACTIONS; i++)
			{
				format(str, sizeof(str), "№%i - %s\n", i, Fraction_Name[i]);
				strcat(str2, str);
			}
			SetPVarInt(playerid, "actplayerid", params[0]);
			ShowPlayerDialog(playerid, D_FRACMENU, 2, "{7efd7d}Организации", str2, "Принять", "Отмена");
		}
	}
	else GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	return 1;
}

CMD:templeader(playerid)
{
	if(GetString(GetName(playerid), NAME_DEVELOPER_ONE))
	{
		if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
		if(PI[playerid][pTempLeader])
		{
			if(PI[playerid][pTempLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не являетесь временным лидером!");
			LeaveFractionPlayer(playerid);
			PI[playerid][pTempLeader] = 0;
			SendClientMessage(playerid, COLOR_BLUE, "Вы сняли себя с должности временного лидера организации");
		}
		else
		{
			new str[90], str2[600];
			for(new i = 1; i < MAX_FRACTIONS; i++)
			{
				format(str, sizeof(str), "№%i - %s\n", i, Fraction_Name[i]);
				strcat(str2, str);
			}
			ShowPlayerDialog(playerid, D_TEMPLEADER, 2, "{7efd7d}Организации", str2, "Принять", "Отмена");
		}
	}
	else GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	return 1;
}

CMD:f(playerid, params[])
{
	if(PI[playerid][pMember] >= 7 && PI[playerid][pMember] <= 11 || PI[playerid][pMember] >= 13 && PI[playerid][pMember] <= 17)
	{
		if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
		else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /f [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new string[128], mesid[128];
		format(string, sizeof(string), "[F] %s %s: %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), params[0]);
		format(mesid, sizeof(mesid), "[F] %s %s[%d]: %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), playerid, params[0]);
		SendFMes(PI[playerid][pMember], 0x4682B4AA, string);
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
		#if DEBUG_STATUS == true
			printf("[F] [%s] %s %s: %s",Fraction_Name[PI[playerid][pMember]],Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]],GetName(playerid),params[0]);
		#endif
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:fb(playerid, params[])
{
	if(PI[playerid][pMember] >= 7 && PI[playerid][pMember] <= 11 || PI[playerid][pMember] >= 13 && PI[playerid][pMember] <= 17)
	{
		if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
		else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /fb [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "(( [F] %s %s[%d]: %s ))", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), playerid, params[0]);
		SendFMes(PI[playerid][pMember], 0x4682B4AA, mesid);
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
		#if DEBUG_STATUS == true
			printf("[F] [%s] %s %s: %s", Fraction_Name[PI[playerid][pMember]], Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), params[0]);
		#endif
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:r(playerid, params[])
{
	if(IsACop(playerid) || PI[playerid][pMember] == TEAM_ARMIYA || IsAMedic(playerid) || IsAMayor(playerid) || PI[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
		else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /r [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new string[128], mesid[128];
		format(string, sizeof(string), "[R] %s %s: %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), params[0]);
		format(mesid, sizeof(mesid), "[R] %s %s[%d]: %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), playerid, params[0]);
		SendFMes(PI[playerid][pMember], 0x5da130FF, string);
		SetPlayerChatBubble(playerid,"сообщает в рацию",COLOR_PURPLE,30.0,10000);
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
		#if DEBUG_STATUS == true
			printf("[R] [%s] %s %s: %s", Fraction_Name[PI[playerid][pMember]], Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), params[0]);
		#endif
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:rb(playerid, params[])
{
	if(IsACop(playerid) || PI[playerid][pMember] == TEAM_ARMIYA || IsAMedic(playerid) || IsAMayor(playerid) || PI[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
		else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /rb [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "(( [R] %s %s[%d]: %s ))", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), playerid, params[0]);
		SendFMes(PI[playerid][pMember], 0x5da130FF, mesid);
		SetPlayerChatBubble(playerid,"сообщает в рацию",COLOR_PURPLE,30.0,10000);
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
		#if DEBUG_STATUS == true
			printf("[R] [%s] %s %s: %s", Fraction_Name[PI[playerid][pMember]], Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), params[0]);
		#endif
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:d(playerid, params[])
{
	if(IsACop(playerid) || PI[playerid][pMember] == TEAM_ARMIYA || IsAMedic(playerid) || IsAMayor(playerid) || PI[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
		else if(GetPVarInt(playerid,"dep") > gettime()) return SendClientMessage(playerid, 0xFF7979AA, "Следующее сообщение вы сможете отправить через 15 секунд!");
		else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /d [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[D] [%s] %s %s[%d]: %s", Fraction_Name[PI[playerid][pMember]], Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), playerid, params[0]);
		SendDMes(0x007FFFFF, mesid);
		SetPlayerChatBubble(playerid,"сообщает в депортамент",COLOR_PURPLE,30.0,10000);
		SetPVarInt(playerid,"dep",gettime() + 15);
		#if DEBUG_STATUS == true
			printf("[D] [%s] %s %s: %s", Fraction_Name[PI[playerid][pMember]], Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), params[0]);
        #endif
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:db(playerid, params[])
{
	if(IsACop(playerid) || PI[playerid][pMember] == TEAM_ARMIYA || IsAMedic(playerid) || IsAMayor(playerid) || PI[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
		else if(GetPVarInt(playerid,"dep") > gettime()) return SendClientMessage(playerid, 0xFF7979AA, "Следующее сообщение вы сможете отправить через 15 секунд!");
		else if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /db [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "(( [D] [%s] %s %s[%d]: %s ))", Fraction_Name[PI[playerid][pMember]], Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), playerid, params[0]);
		SendDMes(0x007FFFFF, mesid);
		SetPVarInt(playerid,"dep",gettime() + 15);
		#if DEBUG_STATUS == true
			printf("(( [D] [%s] %s %s: %s ))", Fraction_Name[PI[playerid][pMember]], Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), params[0]);
        #endif
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:find(playerid)
{
	if(PI[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new full, string[150], string_dialogue[2048], text[20];
    strcat(string_dialogue, "{FFFF00}ID\tУровень\tТелефон\tРанг\tИмя игрока\n\n");
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(PI[i][pMember] == PI[playerid][pMember])
		{
		    if(PI[i][pPhoneNumber] <= 1) format(text, sizeof(text), "None\t\t");
			else format(text, sizeof(text), "%i\t\t", PI[i][pPhoneNumber]);
		    format(string, sizeof(string),"{FFFFFF}%i\t%i\t\t%s%i\t%s\n", i, PI[i][pLevel], text, PI[i][pRank], GetName(i));
			strcat(string_dialogue, string);
			full++;
		}
	}
	ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}Члены организации в сети", string_dialogue, "Закрыть", "");
	return 1;
}

CMD:leaders(playerid)
{
	new full, str[150], string[2048], text[20];
	strcat(string, "{FFFF00}Организация - Должность - Имя игрока - Телефон\n\n");
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(PI[i][pLeader] > 0)
		{
		    if(PI[i][pPhoneNumber] <= 1) format(text, sizeof(text), "None");
			else format(text, sizeof(text), "%i", PI[i][pPhoneNumber]);
			format(str, sizeof(str),"{FFFFFF}%s - %s - %s - %s\n", Fraction_Name[PI[i][pLeader]], Fraction_Rang[PI[i][pMember]][PI[i][pRank]], GetName(i), text);
			strcat(string, str);
			full++;
		}
	}
	ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}Лидеры организаций в сети", string, "Закрыть", "");
	return 1;
}

CMD:invite(playerid, params[])
{
	if(IsAbleToInvite(playerid))
	{
		new targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /invite [id игрока]");
		else if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(PI[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
		else if(PI[targetid][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
		else if(PI[targetid][pWarn] > 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока предупреждение!");
		else if(IsPlayerInAnyVehicle(targetid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
		else if(!IsPlayerInRangeOfPlayer(8.0, playerid, targetid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(PI[targetid][pLevel] < 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет 1 уровня!");
		SendMes(playerid,COLOR_BLUE,"Вы предложили %s присоединиться в вашу организацию",GetName(targetid));
		new string[128];
		format(string,sizeof(string),"%s %s предлагает вам присоединиться к \"%s\"\n\nВы согласны?",Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), Fraction_Name[PI[playerid][pMember]]);
		ShowPlayerDialog(targetid, D_INVITEFRAC, 0, "{7efd7d}Вступление во фракцию",string,"Да","Нет");
		SetPVarInt(targetid, "offerfractionid", PI[playerid][pMember]);
		SetPVarInt(targetid, "offerplayer", playerid);
		SetPVarInt(playerid, "actplayerid", targetid);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:changeskin(playerid, params[])
{
    if(IsAbleToInvite(playerid))
    {
        new targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /changeskin [id игрока]");
		else if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(PI[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
		else if(PI[targetid][pMember] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
        else if(GetPlayerDistanceToPlayer(playerid,targetid) > 5.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(targetid)) return SendClientMessage(playerid,COLOR_GREY,"Вы далеко друг от друга");
        else if(PI[targetid][pRank] > PI[playerid][pRank]) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
        SetPVarInt(playerid, "actplayerid", targetid);
		new fractionid = PI[playerid][pMember];
        new mes[128];
		for(new i; i < 8; i++)
		{
			new skinid = Fraction_Skin[fractionid][i];
			if(!skinid) break;
			if(!i) format(mes, sizeof(mes), "Скин %d [%d]", i+1, skinid);
			else format(mes, sizeof(mes), "%s\nСкин %d [%d]", mes, i+1, skinid);
		}
		ShowPlayerDialog(playerid, D_FRACMENU+8, 2, "{7efd7d}Выбор скина", mes, "Принять", "");
    }
    else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:leave(playerid, params[])
{
	if(PI[playerid][pImprove][1] || PI[playerid][pVip])
	{
		if(PI[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в организации!");
		else if(PI[playerid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не должны быть лидером!");
		else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не должны находиться в транспорте!");
		new string[256];
		format(string, 256, "{FFFFFF}Вы состоите в организации: \"%s\",\nи вы хотите покинуть её по собственному желанию.\nПри этом все Ваши достижения в организации останутся позади.\n\nВы уверены что хотите уволится из организации?",Fraction_Name[PI[playerid][pMember]]);
		ShowPlayerDialog(playerid, D_LEAVE, 0, "{FF6600}Предупреждение", string, "Да", "Нет");
	}
	else SendClientMessage(playerid, COLOR_GREY, "У Вас не развита саморешительность или вы не имеете VIP статус");
	return 1;
}

CMD:quitjob(playerid, params[])
{
    if(!PI[playerid][pVip]) return SendClientMessage(playerid, COLOR_GREY, "Вы не имеете VIP статус");
    else if(!PI[playerid][pJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы нигде не работаете!");
	PI[playerid][pJob] = 0;
	SendClientMessage(playerid, COLOR_BLUE, "Вы уволились с работы");
	return 1;
}

CMD:uninvite(playerid, params[])
{
	if(IsAbleToUninvite(playerid))
	{
		new targetid, reason[32];
		if(sscanf(params, "us[32]", targetid, reason)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /uninvite [id игрока] [причина]");
		else if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(PI[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
		else if(PI[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
		else if(PI[targetid][pMember] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
		else if(playerid == targetid) return SendClientMessage(playerid, COLOR_GREY, "Самого себя нельзя уволить!");
		SendMes(playerid, COLOR_BLUE, "Вы уволили %s из организации. Причина: %s",GetName(targetid),reason);
		SendMes(targetid, COLOR_BLUE, "%s %s уволил Вас из организации. Причина: %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]],GetName(playerid),reason);
		LeaveFractionPlayer(targetid);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:auninvite(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new targetid, reason[32];
	if(sscanf(params, "us[32]", targetid, reason)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /auninvite [id игрока] [причина]");
	else if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
	else if(PI[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
	SendMes(playerid, COLOR_WHITE, "Вы уволили %s из организации. Причина: %s",GetName(targetid),reason);
	SendMes(targetid, COLOR_DARKORANGE, "Администратор %s уволил Вас из организации. Причина: %s",GetName(playerid),reason);
	LeaveFractionPlayer(targetid);
	return 1;
}

CMD:giverank(playerid, params[])
{
	if(IsAbleToGiverank(playerid))
	{
	    new targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /giverank [id игрока]");
		else if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(targetid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете дать себе ранг!");
		else if(PI[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
		else if(PI[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
		else if(!IsPlayerInRangeOfPlayer(8.0, playerid, targetid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(PI[targetid][pMember] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок находиться в другой организации!");
		new str[45], str2[765], full = 0;
		for(new i = 1; i < MAX_RANGS; i++)
		{
			if(!strcmp(Fraction_Rang[PI[playerid][pMember]][i+1], "None", true)) break;
			format(str, sizeof(str), "Ранг №%i - %s\n", i, Fraction_Rang[PI[playerid][pMember]][i]);
			strcat(str2, str);
			full++;
		}
		if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Обратитесь к администрации!");
		SetPVarInt(playerid, "PlayerRank", targetid);
		ShowPlayerDialog(playerid, D_FRACMENU+1, 2, "{7efd7d}Ранг", str2, "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:agiverank(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new targetid;
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /agiverank [id игрока]");
	else if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[targetid] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в организации!");
	else if(PI[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
	new str[45], str2[765], full = 0;
	for(new i = 1; i < MAX_RANGS; i++)
	{
		if(!strcmp(Fraction_Rang[PI[targetid][pMember]][i+1], "None", true)) break;
		format(str, sizeof(str), "Ранг №%i - %s\n", i, Fraction_Rang[PI[targetid][pMember]][i]);
		strcat(str2, str);
		full++;
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Обратитесь к администрации!");
	SetPVarInt(playerid, "PlayerRank", targetid);
	ShowPlayerDialog(playerid, D_FRACMENU+2, 2, "{7efd7d}Ранг", str2, "Принять", "Отмена");
	return 1;
}

CMD:lpanel(playerid)
{
	if(PI[playerid][pLeader] < 1) return 1;
   	ShowPlayerDialog(playerid, D_FRACMENU+7, 2, "{7efd7d}Панель лидера", "{ffffff}Члены организации\t\t{63BD4E}[Online]{ffffff}\nЧлены организации\t\t{F04245}[Offline]{ffffff}\nУволить игрока\t\t{F04245}[Offline]", "Выбрать", "Отмена");
	return 1;
}

CMD:salelic(playerid, params[])
{
	if(PI[playerid][pMember] != TEAM_AUTOSCHOOL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /salelic [id игрока] [id лицензии (1-водительские,2-водные,3-воздушные,4-оружие,5-бизнес)]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerInRangeOfPlayer(10.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	new bool:dostup;
	switch(params[1])
	{
		case 1:	if(PI[params[0]][pLic][0]) dostup = true;
		case 2: if(PI[params[0]][pLic][1]) dostup = true;
		case 3: if(PI[params[0]][pLic][2]) dostup = true;
		case 4: if(PI[params[0]][pLic][3]) dostup = true;
		case 5:
		{
		    new i = GetPVarInt(params[0], "PlayerBizz");
			if(BizzInfo[i][bLic]) dostup = true;
		}
	}
	if(params[1] == 5 && !GetPlayerBizz(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бизнеса!");
	if(dostup == true) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть данная лицензия");
	new type[24], price;
	switch(params[1])
	{
		case 1: type = "водительские права", price = 1000;
		case 2: type = "лицензию на судоходство", price = 3000;
		case 3: type = "лицензию на полеты", price = 10000;
		case 4: type = "лицензию на оружие", price = 30000;
		case 5: type = "лицензию на бизнес", price = 50000;
	}
	new string[144];
	format(string, sizeof(string), "Вы предложили %s купить %s. Цена: %i Рублей", GetName(params[0]), type, price);
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "%s предложил Вам купить %s. Цена: %i Рублей", GetName(playerid), type, price);
	SendClientMessage(params[0], COLOR_BLUE, string);
	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	SetPVarInt(params[0], "sellexamlic", 1);
	SetPVarInt(params[0], "changelic", params[1]);
	SetPVarInt(params[0], "idselllic", playerid);
	return 1;
}

CMD:givelic(playerid, params[])
{
    if(PI[playerid][pAdmin] < 6) return 1;
    else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    else if(sscanf(params,"ddd", params[0],params[1],params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /givelic [id игрока] [Индетификатор - 1(A),2(B),3(C),4(D] [Значение - 1(Выдать),2(Забрать)");
    else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
    else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new amount = params[2];
	switch(params[1])
	{
		case 1:
		{
			PI[params[0]][pCarA] = amount;
			SendClientMessage(playerid, COLOR_WHITE, "Вы выдали категорю A");
			SendClientMessage(params[0],COLOR_WHITE,"Администратор выдал вам категорию на вождение - A");
		}
		case 2:
		{
			PI[params[0]][pCarB] = amount;
			SendClientMessage(playerid, COLOR_WHITE, "Вы выдали категорю B");
			SendClientMessage(params[0],COLOR_WHITE,"Администратор выдал вам категорию на вождение - B");
		}
		case 3:
		{
			PI[params[0]][pCarC] = amount;
			SendClientMessage(playerid, COLOR_WHITE, "Вы выдали категорю C");
			SendClientMessage(params[0],COLOR_WHITE,"Администратор выдал вам категорию на вождение - C");
		}
		case 4:
		{
			PI[params[0]][pCarD] = amount;
			SendClientMessage(playerid, COLOR_WHITE, "Вы выдали категорю D");
			SendClientMessage(params[0],COLOR_WHITE,"Администратор выдал вам категорию на вождение - D");
		}
	}
	return 1;
}

CMD:agl(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return 1;
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /agl [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	ShowPlayerDialog(playerid, D_LIC+2, 2, "{7efd7d}Выдача лицензий", "{7efd7d}1. {FFFFFF}Выдать водительские права\n{7efd7d}2. {FFFFFF}Выдать лицензию на судоходство\n{7efd7d}3. {FFFFFF}Выдать лицензию на полеты\n{7efd7d}4. {FFFFFF}Выдать лицензию на оружие\n{7efd7d}5. {FFFFFF}Выдать лицезнию на бизнес", "Выдать", "Отмена");
	SetPVarInt(playerid, "LicName", params[0]);
	return 1;
}

CMD:takegun(playerid, params[])
{
	if((PI[playerid][pMember] == TEAM_POLICIA || PI[playerid][pMember] == TEAM_SFPD || PI[playerid][pMember] == TEAM_LVPD || PI[playerid][pMember] == TEAM_FBI) && PI[playerid][pRank] >= 6)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /take [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
      	ResetPlayerWeaponsAC(params[0]);
	  	SendMes(playerid, COLOR_LIME, "Вы забрали оружие у %s",GetName(params[0]));
	  	SendMes(params[0], COLOR_LIME, "%s забрал у вас оружие",GetName(playerid));
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:take(playerid, params[])
{
	if((PI[playerid][pMember] == TEAM_POLICIA || PI[playerid][pMember] == TEAM_SFPD || PI[playerid][pMember] == TEAM_LVPD || PI[playerid][pMember] == TEAM_FBI) && PI[playerid][pRank] >= 6)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /take [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		ShowPlayerDialog(playerid, D_LIC+1, 2, "{7efd7d}Отобрать лицензии", "{7efd7d}1. {FFFFFF}Отобрать водительские права\n{7efd7d}2. {FFFFFF}Отобрать лицензию на судоходство\n{7efd7d}3. {FFFFFF}Отобрать лицензию на полеты\n{7efd7d}4. {FFFFFF}Отобрать лицензию на оружие\n{7efd7d}5. {FFFFFF}Отобрать патроны\n{7efd7d}6. {FFFFFF}Отобрать металл\n{7efd7d}7. {FFFFFF}Отобрать наркотики", "Отобрать", "Отмена");
		SetPVarInt(playerid, "LicName", params[0]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:atake(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return 1;
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /atake [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	ShowPlayerDialog(playerid, D_LIC+3, 2, "{7efd7d}Отобрать лицензии", "{7efd7d}1. {FFFFFF}Отобрать водительские права\n{7efd7d}2. {FFFFFF}Отобрать лицензию на судоходство\n{7efd7d}3. {FFFFFF}Отобрать лицензию на полеты\n{7efd7d}4. {FFFFFF}Отобрать лицензию на оружие\n{7efd7d}5. {FFFFFF}Отобрать патроны\n{7efd7d}6. {FFFFFF}Отобрать металл\n{7efd7d}7. {FFFFFF}Отобрать наркотики", "Отобрать", "Отмена");
	SetPVarInt(playerid, "LicName", params[0]);
	return 1;
}

CMD:radio(playerid, params[])
{
	ShowPlayerDialog(playerid, D_NMENU+3, 2, "{7efd7d}Радио", "Радио №1 - ТРК ''Релакс''\nРадио №2 - Закрыто\nРадио №2 - Закрыто\n{AFAFAF}Выключить", "Принять", "Отмена");
	return 1;
}

CMD:edit(playerid, params[])
{
	if(!IsANews(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	AdvertList(playerid);
	return 1;
}
CMD:news(playerid, params[])
{
	if(!IsANews(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	NewsPanel(playerid);
	return 1;
}
CMD:ad(playerid, params[])
{
	if(PI[playerid][pMuted] > 0) return SendClientMessage(playerid, 0xff6600AA, "Доступ в чат заблокирован. Узнать время до окончания бана чата {66cc33}/time");
	else if(PI[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона или SIM-карты!");
	PI[playerid][pNews] = 1;
	if(TOTALADVERT[PI[playerid][pNews]-1] >= 15) return SendClientMessage(playerid, COLOR_GREY, "Линия заполнена, обратитесь позже!");
	else if(sscanf(params, "s[60]", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, ">> Информация {ffffff}Введите: /ad [текст]");
	else if(GetMoney(playerid) < strlen(params[0])*AdvertPrice[PI[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
	TOTALADVERT[PI[playerid][pNews]-1]++;
	strmid(AdvertInfo[TOTALADVERT[PI[playerid][pNews]-1]][PI[playerid][pNews]-1][aText],params[0],0,strlen(params[0]),128);
	strmid(AdvertInfo[TOTALADVERT[PI[playerid][pNews]-1]][PI[playerid][pNews]-1][aName],GetName(playerid),0,strlen(GetName(playerid)),MAX_PLAYER_NAME);
	AdvertInfo[TOTALADVERT[PI[playerid][pNews]-1]][PI[playerid][pNews]-1][aPhone] = PI[playerid][pPhoneNumber];
	TransferMoney(playerid, -1, strlen(params[0]) * AdvertPrice[PI[playerid][pNews]-1]);
	if(PI[playerid][pNews] == 1)
	{
		FracBank[8] += strlen(params[0]) * AdvertPrice[PI[playerid][pNews]-1];
		MysqlUpdateOtherInt("lsnbank", FracBank[8]);
		SendFMes(TEAM_SMI, COLOR_LIME, "[R] В редакцию поступило новое объявление!");
	}
	SendClientMessage(playerid, COLOR_BLUE, "Ваше объявление было отправлено на обработку");
	return 1;
}

CMD:npanel(playerid, params[])
{
	if(IsANews(playerid)) ShowPlayerDialog(playerid, D_NMENU+4, 2, "{7efd7d}Панель", "- Установить цену за звонок\n- Установить цену за СМС\n- Установить цену за объявление", "Принять", "Отмена");
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}


CMD:sms(playerid, params[]) return SendClientMessage(playerid, COLOR_GREY, "Используйте команду /phone");

CMD:c(playerid, params[]) return cmd_call(playerid, params);
CMD:call(playerid, params[]) return SendClientMessage(playerid, COLOR_GREY, "Используйте команду /phone");

CMD:p(playerid) return cmd_pickup(playerid);
CMD:pickup(playerid)
{
	if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете по телефону!");
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(Mobile[i] == playerid)
		{
			if(Ether[playerid] == true) CallNews[PI[playerid][pNews]-1]++, EtherCalled[i] = true;
			Mobile[playerid] = i;
			SendMes(i, COLOR_GRAD2, "%s поднял трубку мобильного", GetName(playerid));
			PI[i][pPhoneBalance] -= 10;
			MeAction(playerid, "ответил на звонок");
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			return 1;
		}
	}
	return 1;
}

CMD:h(playerid) return cmd_hangup(playerid);
CMD:hangup(playerid)
{
	if(Mobile[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не разговариваете по телефону!");
	new callerid = Mobile[playerid];
	SendClientMessage(callerid, COLOR_GRAD2, "Абонент положил трубку");
	SetPlayerSpecialAction(callerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	CellTime[callerid] = -1;
	CellTime[playerid] = -1;
	Mobile[callerid] = -1;
	if(EtherCalled[playerid] == true) EtherCalled[playerid] = false;
	if(EtherCalled[callerid] == true) EtherCalled[callerid] = false;
	SendClientMessage(playerid,  COLOR_GRAD2, "Вы положили трубку");
	Mobile[playerid] = -1;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	DeletePVar(playerid, "CallTime");
	DeletePVar(callerid, "CallTime");
	return 1;
}

CMD:togphone(playerid, params[])
{
    if(PI[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона или SIM-карты!");
    if(Phone[playerid])
    {
        Phone[playerid] = false;
        SendClientMessage(playerid, COLOR_RED, "Вы выключили телефон");
        SetPlayerChatBubble(playerid, "выключил телефон", COLOR_PURPLE, 13.0, 10000);
    }
    else
    {
        Phone[playerid] = true;
        SendClientMessage(playerid, COLOR_GREEN, "Вы включили телефон");
        SetPlayerChatBubble(playerid, "включил телефон", COLOR_PURPLE, 13.0, 10000);
    }
	return 1;
}

CMD:phone(playerid)
{
    if(PI[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона или SIM-карты!");
	PhoneMenu(playerid);
	return 1;
}

CMD:number(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /number [id/имя игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не владеет телефоном или у него нет SIM-карты!");
	new string[128];
	format(string, sizeof(string), "Номер игрока %s[%d]: {33CCFF}%i", GetName(params[0]), params[0], PI[params[0]][pPhoneNumber]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:bpanel(playerid)
{
	if(GetPlayerBizz(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
	ShowPlayerDialog(playerid, D_HEAL+10, 2, "{7efd7d}Панель управления бизнесом", "1. Информация о бизнесе\n2. Открыть бизнес\n3. Установить цену за товар\n4. Установить цену за вход\n5. Продать бизнес\n6. Заказать продукты", "Принять", "Отмена");
	return 1;
}

CMD:setbizprod(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return 1;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /setbizprod [количество продуктов]");
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			BizzInfo[idx][bProduct] = params[0];
			MysqlUpdateBizzInt(idx, "product", params[0]);
			SendMes(playerid, COLOR_WHITE, "Вы заменили бизнесу {7efd7d}%s {ffffff}продуктов на {7efd7d}%d",BizzInfo[idx][bName], BizzInfo[idx][bProduct]);
		}
	}
	return 1;
}

CMD:buybiz(playerid, params[])
{
	if(GetPlayerBizz(playerid) == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете бизнесом!");
	new full, full_;
	new string[512];
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			full++;
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
			{
				full_++;
				if(PI[playerid][pCash] < BizzInfo[idx][bPrice]) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				else
				{
					PI[playerid][pCash] -= BizzInfo[idx][bPrice];
					BizzInfo[idx][bBuyPrice] = BizzInfo[idx][bPrice] / 2;
					BizzInfo[idx][bProduct] = 100;
					BizzInfo[idx][bMoney] = BizzInfo[idx][bBuyPrice] / 2000;
					BizzInfo[idx][bEnter] = 0;
					BizzInfo[idx][bTill] = 50;
					SendMes(playerid, COLOR_WHITE, "Вы купили бизнес {7efd7d}%s {ffffff}за {7efd7d}%i {ffffff}Рублей. У вас осталось: {7efd7d}%i {ffffff}Рублей", BizzInfo[idx][bName], BizzInfo[idx][bPrice], PI[playerid][pCash]);
					SendMes(playerid, COLOR_LIME, "Подсказка: {FFFFFF}Аренда бизнеса оплачена на 1 час (%i Рублей), не забывайте регулярно следить за его балансом.", BizzInfo[idx][bMoney]);
					SendClientMessage(playerid, COLOR_LIME, "Подсказка: {FFFFFF}Приобретите лицензию на ваш бизнес, если в течении 12 часов этого не будет, он будет продан государству!");
					strmid(BizzInfo[idx][bOwner],GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
					format(string, sizeof(string), "UPDATE "T_BIZZ" SET owner = '%s', buyprice = %i , product = %i, money = %i WHERE id = '%d' LIMIT 1", BizzInfo[idx][bOwner], BizzInfo[idx][bBuyPrice], BizzInfo[idx][bProduct],BizzInfo[idx][bMoney], idx);
					mysql_tquery(dbHandle, string, "", "");
					UpdateBizz(idx);
				}
			}
			else full_++;
		}
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится рядом с бизнесом!");
	if(full_ == 0) return SendClientMessage(playerid, COLOR_GREY, "Бизнес уже имеет владельца!");
	return 1;
}

CMD:play(playerid, params[])
{
    if(PI[playerid][pMusic] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет плеера!");
	ShowPlayerDialog(playerid, 9345, DIALOG_STYLE_LIST, "{7efd7d}Выберите радиостанцию", "1. Радио Шансон\n2. Наше Радио\n3. Радио Рекорд\n4. Зайцев.FM (Pop)\n5. Зайцев.FM (RnB)\n6. Выключить радио", "Выбор", "Выход");
	return 1;
}

CMD:home(playerid) return cmd_hmenu(playerid);
CMD:hmenu(playerid)
{
	if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома!");
	new i = GetPVarInt(playerid, "PlayerHouse");
	if(strcmp(GetName(playerid), HouseInfo[i][hOwner], true) == 0)
	{
	    new string[400];
	    format(string, sizeof(string), "{7efd7d}\
		1. {ffffff}Информация\n\
		{7efd7d}2. {ffffff}Открыть/Закрыть\n\
		{7efd7d}3. {ffffff}Шкаф\n\
		{7efd7d}4. {ffffff}Продать Дом");
		ShowPlayerDialog(playerid, D_HOME, 2, "{7efd7d}Панель управления домом", string, "Далее", "Отмена");
	}
	return 1;
}
CMD:gethouse(playerid, params[])
{
	if(PI[playerid][pAdmin] != 6) return GameTextForPlayer(playerid, "~r~Команда не найдена", 3000, 3);
	else if(sscanf(params, "i",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "• {ffcf00}[ Подсказка ] {ffffff}Введите: /asellhouse [Номер Дома]");
	new i = params[0];
	new klass[32];
	new lock[32];
	if(HouseInfo[i][hDiscript] == 'C')
	{
	    klass = "средний";
	}
	else if(HouseInfo[i][hDiscript] == 'A')
	{
	    klass = "низкий";
	}
	else if(HouseInfo[i][hDiscript] == 'B')
	{
	    klass = "высокий";
	}
	if(HouseInfo[i][hLock] == 1)
	{
	    lock = "{FF0000}закрыт";
	}
	else if(HouseInfo[i][hLock] == 0)
	{
	    lock = "{99cc00}открыт";
	}
	new string[500];
	format(string, sizeof(string), "{FFFFFF}Дом №{99cc00}\t\t%d\n\n{FFFFFF}Оплачен на:\t{99cc00}%d дней\n{FFFFFF}Класс:{99cc00}\t\t%s\n{FFFFFF}Стоимость:\t{99cc00}%d рублей\n{ffffff}Состояние:\t%s\n{ffffff}Цена за сутки:{99cc00}\t%d",i,HouseInfo[i][hOplata],klass,HouseInfo[i][hBuyPrice]*2,lock,GetHomeOplata(i));
	SPD(playerid,D_HOME+3,DSM,"{7efd7d}Информация о Доме",string,"Назад","");
	return 1;
}
CMD:getbizstats(playerid, params[])
{
	new full = 0;
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx],BizzInfo[i][bEntry],BizzInfo[i][bEntrz]))
		{
			if(!strcmp(BizzInfo[i][bOwner],"None",true)) return SendClientMessage(playerid, COLOR_GREY, "Бизнес не имеет владельца!");
			BizzStats(playerid, i);
			full++;
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с бизнесом!");
	return 1;
}

CMD:bizlist(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	SendClientMessage(playerid, COLOR_GREEN, "Завоеванные бизнесы:");
	new string[128];
	for(new h = 0; h < MAX_BIZZ; h++)
	{
		new mafiapay = BizzPay[h] / 10;
		switch(PI[playerid][pMember])
		{
			case TEAM_OPGYG:
			{
				if(BizzInfo[h][bMafia] == TEAM_OPGYG)
				{
				    format(string, sizeof(string), "- %s, прибыль: %d", BizzInfo[h][bName], mafiapay);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
				}
			}
			case TEAM_OPGOR:
			{
				if(BizzInfo[h][bMafia] == TEAM_OPGOR)
				{
				    format(string, sizeof(string), "- %s, прибыль: %d", BizzInfo[h][bName], mafiapay);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
				}
			}
		}
	}
	return 1;
}

CMD:bizwar(playerid, params[])
{
	new factionm = 0;
	new playerposed;
	if(PI[playerid][pLeader] != 0) factionm = PI[playerid][pLeader];
	else if(PI[playerid][pMember] != 0 && PI[playerid][pLeader] == 0) factionm = PI[playerid][pMember];
	else factionm = 0;
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(startwar == 1) return SendClientMessage(playerid, COLOR_GREY, "Война уже начата!");
	if(FrakCDm[factionm] > 0) return SendClientMessage(playerid, COLOR_GREY, "Следующий захват возможен через час!");
	for(new h = 0; h < MAX_BIZZ; h++)
	{
        if(PI[playerid][pMember] == TEAM_OPGOR && PI[playerid][pRank] >= 7 || PI[playerid][pMember] == TEAM_OPGYG && PI[playerid][pRank] >= 7)
		{
			if(IsPlayerInRangeOfPoint(playerid, 6.0, BizzInfo[h][bEntrx],BizzInfo[h][bEntry],BizzInfo[h][bEntrz]))
    		{
    		    new string[64];
    		    playerposed = 1;
    			if(BizzInfo[h][bMafia] == PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Бизнес принадлежит вам!");
				if(war > 0)
				{
					format(string, sizeof(string), "Войну можно начать через %d сек", war);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				if(BizzInfo[h][bMafia] == 0)
				{
					BizzInfo[h][bMafia] = PI[playerid][pMember];
					switch(BizzInfo[h][bMafia])
					{
					   	case TEAM_OPGOR: MafiaTotalBizz[0]++;
					   	case TEAM_OPGYG: MafiaTotalBizz[1]++;
					}
					SendFMes(PI[playerid][pMember], AZTECAS_COLOR, "[F] Ваша мафия захватила новый бизнес!");
					MysqlUpdateBizzInt(h, "mafia", BizzInfo[h][bMafia]);
					UpdateBizz(h);
					return 1;
				}
				if(BizzInfo[h][bMafia] > 0)
				{
					BizzInfo[h][bMafia] = PI[playerid][pMember];
					switch(BizzInfo[h][bMafia])
					{
					   	case TEAM_OPGOR: MafiaTotalBizz[0]++;
					   	case TEAM_OPGYG: MafiaTotalBizz[1]++;
					}
					SendFMes(PI[playerid][pMember], AZTECAS_COLOR, "[F] Ваша мафия захватила новый бизнес!");
					MysqlUpdateBizzInt(h, "mafia", BizzInfo[h][bMafia]);
					UpdateBizz(h);
					return 1;
				}
			}
		}
	}
	if(playerposed == 0) SendClientMessage(playerid, COLOR_GREY, "Вы находитесь далеко от бизнеса!");
    return 1;
}
CMD:break(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Полиции/ФБР");
    else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
    if(GetPVarInt(playerid,"objectcop"))
    {
        DestroyObject(GetPVarInt(playerid,"objectcop"));
		DeletePVar(playerid, "objectcop");
		SendClientMessage(playerid, COLOR_RED, "Вы убрали установленный объект");
        if(Ships[playerid]) DestroyDynamicArea(Ships[playerid]);
		return 1;
    }
    ShowPlayerDialog(playerid, D_BREAK, DIALOG_STYLE_LIST, "{7efd7d}Установка объекта", "Шипы\nОграждение №1\nОграждение №2\nОграждение №3", "Выбрать", "Отмена");
    return 1;
}

CMD:flight(playerid, params[])
{
    if(IsACop(playerid) || PI[playerid][pMember] == TEAM_ARMIYA)
	{
	   if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Нельзя использовать в машине.");
       else if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /flight [тип 1-2]");
       if(params[0] == 0)
       {
           if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		   if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		   SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы спрятали фонарик в карман.");
       }
       else if(params[0] == 1)
	   {
	       if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	       if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	       SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы достали фонарик малой дальности!");
	       SetPlayerAttachedObject(playerid, 1, 18656, 5, 0.1, 0.038, -0.1, -90.0, 180.0, 0.0, 0.03, 0.03, 0.03);
	       return SetPlayerAttachedObject(playerid, 2, 18641, 5, 0.1, 0.02, -0.05, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
       }
       else if(params[0] == 2)
       {
	       if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	       if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	       SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы достали фонарик повышенной дальности!");
	       SetPlayerAttachedObject(playerid, 1, 18656, 5, 0.1, 0.038, -0.01, -90.0, 180.0, 0.0, 0.03, 0.1, 0.03);
	       return SetPlayerAttachedObject(playerid, 2, 18641, 5, 0.1, 0.02, -0.05, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
       }
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:su(playerid, params[]) return cmd_suspect(playerid, params);
CMD:suspect(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "us", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /suspect [id игрока] [причина]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
	else if(IsACop(params[0]) || PI[params[0]][pMember] == TEAM_ARMIYA) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент/военный!");
	else if(PI[playerid][pMember] != TEAM_FBI && PI[params[0]][pWanted] >= 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете дать более 3-ех звезд!");
	else if(PI[playerid][pMember] == TEAM_FBI && PI[params[0]][pWanted] >= 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете дать более 6-ти звезд!");
	PI[params[0]][pWanted]++;
	if(PI[params[0]][pWanted]-1 == 0) PI[params[0]][pWantedTime] = 1800 + random(300);
	SetPlayerWantedLevel(params[0],PI[params[0]][pWanted]);
	SetPlayerCriminal(params[0], GetName(playerid), params[1]);
	return 1;
}

CMD:frisk(playerid, params[])
{
	if(IsACop(playerid) || PI[playerid][pMember] == TEAM_ARMIYA)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /frisk [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обыскать себя!");
		else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		SendMes(playerid, COLOR_WHITE, "Имущество %s", GetName(params[0]));
		SendMes(playerid, COLOR_GREY, "- %s", (PI[params[0]][pPatron]) ? ("Патроны") : ("Пусто"));
		SendMes(playerid, COLOR_GREY, "- %s", (PI[params[0]][pGunAmount]) ? ("Металл") : ("Пусто"));
		SendMes(playerid, COLOR_GREY, "- %s", (PI[params[0]][pDrugs]) ? ("Наркотики") : ("Пусто"));
		new string[100];
		if(PI[playerid][pSex] == 1) format(string, sizeof(string), "достал перчатки и обыскал %s", GetName(params[0]));
		else format(string, sizeof(string), "достала перчатки и обыскала %s", GetName(params[0]));
		MeAction(playerid, string);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "iis", params[0], params[1], params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /ticket [id игрока] [сумма] [причина]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(params[1] < 1 || params[1] > 10000) return SendClientMessage(playerid, COLOR_GREY, "Сумма штрафа от 1 Рублей до 10000 Рублей");
	SendMes(playerid, COLOR_BLUE, "Вы выписали штраф %s в размере %d Рублей. Причина: %s", GetName(params[0]), params[1], params[2]);
	SendMes(params[0], COLOR_BLUE, "Офицер %s выписал вам штраф в размере %d Рублей. Причина: %s", GetName(playerid), params[1], params[2]);
	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	SetPVarInt(params[0], "TicketPlayer", playerid);
	SetPVarInt(params[0], "TicketSumma", params[1]);
	SetPVarInt(params[0], "KeyTicket", 1);
	return 1;
}

CMD:canceldice(playerid)
{
    if(KostiName[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Вы не предлагали никому игру!");
	Predlog[playerid] = Predlog[KostiName[playerid]] =
	KostiMoney[playerid] = KostiMoney[KostiName[playerid]] =
	ZapretDice[playerid] = ZapretDice[KostiName[playerid]] = 0;
	SendClientMessage(KostiName[playerid], COLOR_RED, "Игрок отказался от ставки!");
	SendClientMessage(playerid, COLOR_RED, "Вы отказались играть!");
	KostiName[KostiName[playerid]] = KostiName[playerid] = INVALID_PLAYER_ID;
	return true;
}

CMD:dice(playerid, params[])
{
    if(!IsPlayerInRangeOfPoint(playerid,70.0,1599.6793,985.3690,1819.0200)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в казино!");
    else if(KostiMoney[playerid] != 0 || ZapretDice[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вам уже предложили игру!");
    else if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, ">> Информация {ffffff}Введите: /dice [id игрока] [ставка]");
    else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    else if(params[1] < 500 || params[1] > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Минимальная ставка 500 рублей, максимальная 5 000 000 рублей");
    else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "В данный момент игрок не может играть!");
	else if(!ProxDetectorS(6.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами!");
    else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Самому себе нельзя предлагать игру");
    else if(PI[params[0]][pAdmin] > 0) return SendClientMessage(playerid, COLOR_DARKORANGE, "Игра с Администраторами запрещена!");
    new string[128];
    format(string, sizeof(string), "Вы предложили %s бросить кости. Ставка: %i", GetName(params[0]), params[1]);
    SendClientMessage(playerid, COLOR_BLUE, string);
    format(string, sizeof(string), "%s предлагает бросить кости. Ставка: %i", GetName(playerid), params[1]);
    SendClientMessage(params[0], COLOR_BLUE, string);
    SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
    ZapretDice[playerid] = ZapretDice[params[0]] = 1;
    KostiName[playerid] = params[0];
    KostiName[params[0]] = playerid;
    KostiMoney[params[0]] = params[1];
    KostiMoney[playerid] = params[1];
    Predlog[playerid] = 1;
    return 1;
}
CMD:hunger(playerid)
{
	new string[256], Stats_Level[40];
	switch(PI[playerid][pHunger])
	{
	    case 81..100: Stats_Level = "{63BD4E}[Вы сыты]";
	    case 51..80: Stats_Level = "{CCFF00}[Вы сыты]";
	    case 31..50: Stats_Level = "{FDE910}[Вы немного проголодались]";
	    case 16..30: Stats_Level = "{FF8800}[Вы голодны]";
	    case 0..15: Stats_Level = "{FF0600}[Вы очень голодны]";
	}
	format(string, sizeof(string), "{FFFFFF}%d%% %s\n\n{FFFFFF}Пополнить сытость можно в любой закусочной штата\nЕсли долго не есть ваше здоровье начнет ухудшаться", PI[playerid][pHunger], Stats_Level);
	ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}Уровень сытости игрока", string, "Закрыть", "");
	return 1;
}

CMD:mm(playerid) return cmd_menu(playerid);
CMD:mn(playerid) return cmd_menu(playerid);
CMD:mainmenu(playerid) return cmd_menu(playerid);
CMD:menu(playerid)
{
    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
	ShowPlayerDialog(playerid, D_MAINMENU, DIALOG_STYLE_LIST, "{7efd7d}Игровое меню", "\
		{7efd7d}1. {FFFFFF}Статистика персонажа\n\
		{7efd7d}2. {FFFFFF}Команды сервера\n\
		{7efd7d}3. {FFFFFF}Пожаловаться на игрока\n\
		{7efd7d}4. {FFFFFF}Связь с администрацией\n\
		{7efd7d}5. {FFFFFF}Настройки игрока\n\
		{7efd7d}6. {FFFFFF}Безопасность\n\
		{7efd7d}7. {FFFFFF}Улучшения персонажа\n\
		{7efd7d}8. {FFFFFF}Смена NonRP ника\n\
		{7efd7d}9. {7efd7d}Дополнительные привелегии", "Выбрать", "Отмена");
	return 1;
}

CMD:viphelp(playerid)
{
	if(!PI[playerid][pVip]) return SendClientMessage(playerid, COLOR_GREY, "Вы не имеете VIP статус");
	new str[68], string[576];
	new year, month, day;
	new current_date = getdate(year, month, day);
	new time_left = PI[playerid][pVipTime] - current_date;
	format(str, sizeof(str), "{FFFF00}Вы владеете VIP статусом. Осталось дней: %i\n\n", time_left);
	strcat(string, str);
	strcat(string, "{FFFFFF}Ниже приведены ваши преимущества.\n");
	strcat(string, "1) Ускоренное лечение в больнице\n");
	strcat(string, "2) Удаление тюнинга с личного транспорта (/removetuning)\n");
	strcat(string, "3) Возможность покинуть организацию самому (/leave)\n");
	strcat(string, "4) Каждую 4-ую зарплату +1 респект\n");
	strcat(string, "5) Прокачка скиллов в 2 раза быстрей\n");
	strcat(string, "6) Проявление чувства голода у персонажа в 2 раза реже\n");
	strcat(string, "7) Уменьшенное время на отправку вопроса/жалобы\n");
	strcat(string, "8) Возможность уволиться с работы не на месте устройства (/quitjob)\n");
	strcat(string, "9) Возможность общаться с остальными VIP игроками в VIP чате (/v)");
	ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}VIP статус", string, "Закрыть", "");
	return 1;
}

CMD:ahelp(playerid)
{
    if(PI[playerid][pAdmin] < ADM_MODER) return 0;
    else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    if(PI[playerid][pAdmin] >= ADM_MODER)
		SendClientMessage(playerid, COLOR_WHITE, "Команды администратора:");
	if(PI[playerid][pAdmin] >= ADM_MODER)
		SendClientMessage(playerid, 0x43f79aFF, "1) /sc /alogin /apanel /afk /spec /specoff /slap /mute /unmute /goto /ans /tp");
	if(PI[playerid][pAdmin] >= ADM_SUPER_MODER)
		SendClientMessage(playerid, 0x43f79aFF, "2) /a /get /offget /msg /gun /kick /skick /warn /stats /resguns /spawn /gotoveh /prison /unjail /jail /freeze /unfreeze /sethp");
	if(PI[playerid][pAdmin] >= ADM_ADMIN)
		SendClientMessage(playerid, 0x43f79aFF, "3) /templeader /clearchat /gethere /ban /offban /adivorce /atake /setweather /givegun /setam /sethunger /getip /pgetip");
	if(PI[playerid][pAdmin] >= ADM_SUPER_ADMIN)
		SendClientMessage(playerid, 0x43f79aFF, "4) /offwarn /veh /delveh /alldelveh /tempskin /setfuel /unban /settime /unwarn /respv /banip /unbanip /amusic");
	if(PI[playerid][pAdmin] >= ADM_GRAND_ADMIN)
		SendClientMessage(playerid, 0x43f79aFF, "5) /object /setname /delacc /setsex /setskin /auninvite /agiverank /agl /setbizprod /gcontrol /tempzone /aunblock /makestat /sban");
	if(PI[playerid][pAdmin] >= ADM_GRAND_ADMIN)
		SendClientMessage(playerid, 0x43f79aFF, "5) /getip /fstats /add /jet /setleader");
	return 1;
}

CMD:apanel(playerid)
{
	if(PI[playerid][pAdmin] < ADM_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
   	ShowPlayerDialog(playerid, D_APANEL, 2, "{7efd7d}Панель администратора", "\
   	{ffffff}VIP игроки\t\t\t{63BD4E}[Online]\n\
 	{ffffff}Список администрации\t{63BD4E}[Online]\n\
 	{ffffff}Весь список администрации\n\
 	{ffffff}Команды администратора\n\
 	{ffffff}Настройки администратора\t{7efd7d}[4LVL+]\n\
  	{ffffff}Управление сервером\
	", "Выбрать", "Отмена");
	return 1;
}

CMD:get(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return 1;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /get [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new string[64], string_dialogue[512];
	format(string, sizeof(string), "{7efd7d}Номер аккаунта:\t%i\n", PI[params[0]][pID]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "{7efd7d}Рег.дата:\t%s\n", PI[params[0]][pRegData]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "{7efd7d}Рег.IP:\t%s\n", PI[params[0]][pRegIP]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "{7efd7d}Последний IP:\t%s\n", PI[params[0]][pLastIP]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "{7efd7d}Уровень:\t\t%i\n", PI[params[0]][pLevel]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "{7efd7d}Наличные:\t\t%i\n", PI[params[0]][pCash]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "{7efd7d}Банк:\t%i\n", PI[params[0]][pBank]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "{7efd7d}Донат:\t\t\t%i\n", PI[params[0]][pCredits]);
	strcat(string_dialogue, string);
	ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, GetName(params[0]), string_dialogue, "Закрыть", "");
	return 1;
}

CMD:offget(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_SUPER_MODER) return 1;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", playername)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /offget [имя игрока]");
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /get");
	format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s'", playername);
	mysql_tquery(dbHandle, query, "OnPlayerOffget", "is", playerid, playername);
	return 1;
}

CMD:amusic(playerid,params[])
{
    if(PI[playerid][pAdmin] < ADM_SUPER_ADMIN) return 1;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    new radio[256], distance;
	if(MUSICACTIVE == true)
	{
	    foreach(new i: Player)
		{
		    if(!PlayerLogged[i] || activemusic[i] == false) continue;
		    activemusic[i] = false;
			StopAudioStreamForPlayer(i);
		}
		format(radio, sizeof radio, "[A] %s[%d] выключил музыку", GetName(playerid), playerid);
		SendAdminMessage(COLOR_GREY, radio);
		MUSICACTIVE = false;
	    return 1;
	}
	if(sscanf(params, "s[256]d", radio, distance)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /amusic [url] [дистанция]");
	if(strlen(radio) < 10 || strlen(radio) > 256) return SendClientMessage(playerid, COLOR_GREY, "Неверное количество символов в URL!");
	if(distance < 2 || distance > 300) return SendClientMessage(playerid, COLOR_GREY, "Неверно указана дистанция!");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	MUSICACTIVE = true;
	MUSICX = X;
	MUSICY = Y;
	MUSICZ = Z;
	MUSICDIST = distance;
	strmid(MUSICURL, radio, 0, strlen(radio), 256);
	activemusic[playerid] = true;
	foreach(new i: Player) { PlayAudioStreamForPlayer(i, radio, X, Y, Z, distance, 1); }
	format(radio, sizeof radio, "[A] %s[%d] поставил музыку (дистанция %d м)", GetName(playerid), playerid, distance);
    SendAdminMessage(COLOR_GREY, radio);
	return true;
}

CMD:unmask(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта команда!");
    if(UnMaskReset[playerid] > 0) return 1;
	UnMaskReset[playerid] = 3;
	foreach(new i: Player)
	{
 		if(!PlayerLogged[i]) continue;
 		if(pCuff[i][pCuffee] == i)
 		{
			if(!PlayerUseMask[i]) continue;
			if(ProxDetectorS(2.0, playerid, i) && GetPlayerFaceToPlayer(playerid, i, 30.0))
			{
				new string[100];
				PlayerUseMask[i] = false;
				format(string, sizeof(string), "Вы сняли маску с игрока %s", GetName(i));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s снял с вас маску", GetName(playerid));
				SendClientMessage(i, COLOR_GREY, string);
				format(string, sizeof(string), "снял маску с игрока %s", GetName(i));
				MeAction(playerid, string);
				break;
			}
	    }
	    else SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в наручниках");
    }
	return 1;
}

CMD:cuff(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(PlayerTied[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы связаны, вы не можете одеть наручники!");
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /cuff [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете надеть наручники на себя!");
	else if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок Полицейский/Агент/Военный!");
	else if(pCuff[params[0]][pCuffee] == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках!");
	else if(PI[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находится в розыске");
	if(GetPVarInt(params[0], "Tazer") > 0)
	{
		SetPVarInt(params[0], "Tazer", 0);
		TogglePlayerControllable(params[0], 1);
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
	}
	SendMes(playerid, COLOR_BLUE, "Вы надели наручники на %s", GetName(params[0]));
	if(PI[playerid][pSex] == 1) SendMes(params[0], COLOR_BLUE, "%s надел на вас наручники!", GetName(playerid));
	else SendMes(params[0], COLOR_BLUE, "%s надела на вас наручники!", GetName(playerid));
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	pCuff[params[0]][pCuffee] = pCuff[playerid][pCuffee] = params[0];
	pCuff[params[0]][pCuffer] = pCuff[playerid][pCuffer] = playerid;
	GameTextForPlayer(playerid, "~r~cuffed", 5000, 5);
	GameTextForPlayer(params[0], "~r~cuffed", 5000, 5);
	new string[64];
	if(PI[playerid][pSex] == 1) format(string, sizeof(string), "надел наручники на %s", GetName(params[0]));
	else format(string, sizeof(string), "надела наручники на %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

CMD:uncuff(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /uncuff [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять наручники с себя!");
	else if(pCuff[params[0]][pCuffer] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в наручниках!");
	SendMes(playerid, COLOR_BLUE, "Вы сняли наручники с %s", GetName(params[0]));
	if(PI[playerid][pSex] == 1) SendMes(params[0], COLOR_BLUE, "%s снял с вас наручники", GetName(playerid));
	else SendMes(params[0], COLOR_BLUE, "%s сняла с вас наручники", GetName(playerid));
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(params[0], 0);
	pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[playerid][pCuffee] = pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
	GameTextForPlayer(playerid, "~g~uncuffed", 5000, 5);
	GameTextForPlayer(params[0], "~g~uncuffed", 5000, 5);
	TogglePlayerControllable(params[0], 1);
	new string[64];
	if(PI[playerid][pSex] == 1) format(string, sizeof(string), "снял наручники с %s", GetName(params[0]));
	else format(string, sizeof(string), "сняла наручники с %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

CMD:search(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /search [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!PI[params[0]][pWanted]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находится в розыске!");
	if(GetPVarInt(playerid, "findplayer") == 1)
	{
		DeletePVar(playerid, "findplayer");
		SendClientMessage(playerid, COLOR_BLUE, "Вы отключили метку на карте");
		DisablePlayerRaceCheckpoint(playerid);
	}
	else
	{
		SetPVarInt(playerid, "findplayer", 1);
		new string[51];
		format(string, sizeof(string), "Вы отметили на карте %s[%i]", GetName(params[0]));
		SendClientMessage(playerid, COLOR_BLUE, string);
		new Float:pos[3];
		GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
		SetPlayerRaceCheckpoint(playerid, 1, pos[0], pos[1], pos[2], 0.0, 0.0, 0.0, 5.0);
	}
	return 1;
}

CMD:arrest(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(PI[playerid][pMember] == TEAM_POLICIA && IsPlayerInRangeOfPoint(playerid, 5.0,1941.8322,2160.4539,15.7060))
	{
		if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /arrest [id игрока] [минуты]");
		else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(PI[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
		else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете арестовать самого себя!");
		else if(IsACop(params[0]) || PI[params[0]][pMember] == TEAM_ARMIYA) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент/военный!");
		else if(PI[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы 1 уровень розыска!");
		else if(params[1] < 1 || params[1] > 60) return SendClientMessage(playerid, COLOR_GREY, "Количество минут от 1 до 60!");
		ResetPlayerWeaponsAC(params[0]);
		PI[params[0]][pJailTime] = params[1];
		PI[params[0]][pWanted] = 0;
		if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
		{
			new cuffer = pCuff[params[0]][pCuffer];
			SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0], 0);
			pCuff[params[0]][pCuffer] = INVALID_PLAYER_ID;
			pCuff[params[0]][pCuffee] = INVALID_PLAYER_ID;
			pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
			pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		}
		SendMes(playerid, COLOR_BLUE, "Вы посадили в камеру %s[%i] на %i секунд", GetName(params[0]), params[0], params[1]*60);
		SendMes(params[0], COLOR_BLUE, "%s %s[%i] посадил вас в камеру на %i секунд", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), playerid, params[1]*60);
		SetPlayerInterior(params[0], 0);
		SetPlayerPos(params[0],1445.6836,1572.6676,1016.7194);
		SetPlayerFacingAngle(params[0], 0.0);
		PI[params[0]][pJail] = 1;
		PI[params[0]][pJail] = 1;
		SetPlayerWantedLevel(params[0], 0);
		TogglePlayerControllable(params[0], 1);
	}
	return 1;
}

CMD:m(playerid, params[]) return cmd_megaphone(playerid, params);
CMD:megaphone(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
	new full = 0;
	for(new i = 1; i <= TOTALVEH; i++)
	{
		if(VehInfo[i][vVehicle] == GetPlayerVehicleID(playerid) && (i >= 38 && i <= 85 || i >= 94 && i <= 111 || i == 159 || i >= 162 && i <= 166 || i >= 171 && i <= 179))
		{
			if(isnull(params)) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /megaphone [текст]");
			new string[128];
			format(string, sizeof(string), "[Мегафон] %s %s: %s",Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]],GetName(playerid),params[0]);
			ProxDetectorNew(playerid, 45.0, COLOR_YELLOW, string);
			full++;
			break;
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в специализированном транспорте!");
	return 1;
}

CMD:clear(playerid, params[])
{
	if(!IsACop(playerid) || PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
	new full = 0;
	for(new i = 1; i <= TOTALVEH; i++)
	{
		if(VehInfo[i][vVehicle] == GetPlayerVehicleID(playerid) && (i >= 38 && i <= 85 || i >= 94 && i <= 111 || i == 159 || i >= 162 && i <= 166 || i >= 171 && i <= 179))
		{
			if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /clear [id игрока]");
			else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять себе розыск!");
			else if(!PI[params[0]][pWanted]) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться в розыске!");
			else if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы сняли уровни розыска с %s'а", GetName(params[0]));
			SendMes(params[0], COLOR_LIGHTBLUE, "Офицер %s снял с вас уровни розыска", GetName(playerid));
			new string[128];
			format(string, sizeof(string), "Офицер %s зашел(ла) в базу данных полиции", GetName(playerid));
			ProxDetectorNew(playerid, 13.0, COLOR_PURPLE, string);
			PI[params[0]][pWanted] = 0;
			SetPlayerWantedLevel(params[0], 0);
			full++;
			break;
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в специализированном транспорте!");
	return 1;
}

CMD:ram(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new full = 0;
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz]))
		{
			SendMes(playerid, COLOR_LIGHTRED, "Вы выбили дверь дома (Владелец: %s)", HouseInfo[i][hOwner]);
			if(PI[playerid][pSex] == 1) MeAction(playerid, "выбил дверь дома");
			else MeAction(playerid, "выбила дверь дома");
			SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
			SetPlayerInterior(playerid,HouseInfo[i][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
			full++;
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с домом!");
	return 1;
}

CMD:lic(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /lic [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	new string[100], string_dialogue[120];
	format(string, sizeof(string), "{7efd7d}Лицензии %s", GetName(playerid));
	format(string_dialogue, sizeof(string_dialogue), "{FFFFFF}\
	Категория A: %s\n\
	Категория B: %s\n\
	Категория C: %s\n\
	Категория D: %s",
	(!PI[playerid][pCarA]) ? ("Нет"):("Есть"),
	(!PI[playerid][pCarB]) ? ("Нет"):("Есть"),
	(!PI[playerid][pCarC]) ? ("Нет"):("Есть"),
	(!PI[playerid][pCarD]) ? ("Нет"):("Есть"));
	ShowPlayerDialog(params[0], D_NULL, DIALOG_STYLE_MSGBOX, string, string_dialogue, "Закрыть", "");
	if(PI[playerid][pSex] == 1) format(string, sizeof(string), "показал свои лицензии %s", GetName(params[0]));
	else format(string, sizeof(string), "показала свои лицензии %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

CMD:pass(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /pass [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	new text[20], mtext[MAX_PLAYER_NAME];
	if(PI[playerid][pMarried] == 0) format(mtext, sizeof(mtext), "Нет");
	else format(mtext, sizeof(mtext), "%s", PI[playerid][pWhoMarried]);
	if(PI[playerid][pPhoneNumber] <= 1) format(text, sizeof(text), "Не имеется");
	else format(text, sizeof(text), "%i", PI[playerid][pPhoneNumber]);
	new string[64], string_dialogue[500];
	strcat(string_dialogue, "{FFFFFF}");
	format(string, sizeof(string), "Имя: %s\n", GetName(playerid));
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Проживание в штате: %i\n", PI[playerid][pLevel]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Серия: %i\n", PassInfo[playerid][psSeria]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Номер: %i\n", PassInfo[playerid][psNumber]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Телефон: %s\n", text);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Брак: %s\n", mtext);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Военный билет: %s\n", (PI[playerid][pVoennik]) ? ("Имеется") : ("Не имеется"));
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Организация: %s\n", Fraction_Name[PI[playerid][pMember]]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Должность: %s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]]);
	strcat(string_dialogue, string);
	ShowPlayerDialog(params[0], D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}Паспорт", string_dialogue, "Закрыть", "");
	if(PI[playerid][pSex] == 1) format(string, sizeof(string), "показал свой паспорт %s", GetName(params[0]));
	else format(string, sizeof(string), "показалa свой паспорт %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

CMD:med(playerid, params[])
{
    if(!IsValidPassport(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет этого документа");
    else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /med [id игрока]");
    else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
    new med_status[25], gender_text[8];
	switch(PassInfo[playerid][mcState])
	{
	    case -1: return SendClientMessage(playerid, COLOR_GREY, "У вас нет мед. карты");
	   	case 0: med_status = "не определен";
	   	case 1: med_status = "психически не здоров(-а)";
	   	case 2: med_status = "наблюдаются отклонения";
	   	case 3: med_status = "полностью здоровый(-ая)";
	}
	if(PI[playerid][pSex] == 1) gender_text = "Мужчина";
	else if(PI[playerid][pSex] == 2) gender_text = "Женщина";
	new string[64], string_dialogue[300];
	strcat(string_dialogue, "{FFFFFF}");
	format(string, sizeof(string), "Имя: %s\n", GetName(playerid));
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Возраст: %d\n", PI[playerid][pAge]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Пол: %s\n", gender_text);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Статус: %s\n", med_status);
	strcat(string_dialogue, string);
	ShowPlayerDialog(params[0], D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}Мед. карта", string_dialogue, "Закрыть", "");
	if(PI[playerid][pSex] == 1) format(string, sizeof(string), "показал свою мед. карту %s", GetName(params[0]));
	else format(string, sizeof(string), "показалa свою мед. карту %s", GetName(params[0]));
	MeAction(playerid, string);
	return true;
}

CMD:givemed(playerid, params[])
{
	if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточно высок для этого");
    if(sscanf(params, "ui", params[0], params[1]))
	{
		SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /givemed [id игрока] [статус]");
		SendClientMessage(playerid, COLOR_GREEN, "Допустимые статусы:");
		SendClientMessage(playerid, COLOR_GREY, "-1. Нет мед. карты");
		SendClientMessage(playerid, COLOR_GREY, " 0. Не определен");
		SendClientMessage(playerid, COLOR_GREY, " 1. Психически не здоров(а)");
		SendClientMessage(playerid, COLOR_GREY, " 2. Наблюдаются отклонения");
		SendClientMessage(playerid, COLOR_GREY, " 3. Полностью здоровый(ая)");
		return 1;
	}
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
    else if(!IsValidPassport(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нет паспорта");
    new Med[25];
    PassInfo[params[0]][mcState] = params[1];
	switch(PassInfo[params[0]][mcState])
	{
	    case -1: Med = "нет мед. карты";
	    case 0: Med = "не определен";
	    case 1: Med = "психически не здоров(-а)";
	    case 2: Med = "наблюдаются отклонения";
	    case 3: Med = "полностью здоровый(-ая)";
	}
    new string[128];
    format(string, sizeof(string), "%s %s выдал Вам медицинскую карту: {FFFFFF}%s", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid), Med);
    SendClientMessage(params[0], COLOR_GREEN, string);
    format(string, sizeof(string), "Вы выдали медицинскую карту %s: {FFFFFF}%s", GetName(params[0]), Med);
    SendClientMessage(playerid, COLOR_GREEN, string);
    format(string, sizeof(string), "UPDATE `passports` SET `McState` = '%d' WHERE `Name` = '%s'", PassInfo[params[0]][mcState], GetName(params[0]));
    mysql_tquery(dbHandle, string, "", "");
	return 1;
}

CMD:eject(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
	else if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорт!");
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /eject [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь выкинуть себя!");
	else if(!IsPlayerInVehicle(params[0],GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться в вашем транспорте!");
	SendMes(playerid, COLOR_LIGHTBLUE, "Вы выкинули из транспорта %s", GetName(params[0]));
	SendMes(params[0], COLOR_LIGHTBLUE, "%s выкинул вас из транспорта", GetName(playerid));
	new string[100];
	format(string, sizeof(string), "выкинул из транспорта %s", GetName(params[0]));
	MeAction(playerid, string);
	RemoveFromVehicle(params[0]);
	return 1;
}

CMD:payday(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	PayDay();
	return 1;
}

CMD:gcontrol(playerid, params[])
{
    if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return 1;
    else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
    else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowDialogGhetto(playerid);
	return 1;
}

CMD:pay(playerid, params[])
{
    if(GetPVarInt(playerid, "payer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	else if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /pay [id игрока] [сумма]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать деньги самому себе");
	else if(!ProxDetectorS(3.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(params[1] < 1 || GetMoney(playerid) < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
	else if(PI[playerid][pLevel] == 1 && params[1] > 10) return SendClientMessage(playerid, COLOR_GREY, "Игроки ниже 2 уровня могут передавать только по 200 Рублей");
	else if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN && params[1] > 10000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать больше 10000 Рублей");
	TransferMoney(playerid, params[0], params[1]);
	new string[128];
	format(string,sizeof(string),"%s передал игроку %s %d Рублей", GetName(playerid), GetName(params[0]), params[1]);
	SendLog("PayLog",string);
	SendMes(params[0], COLOR_GREY, "Игрок %s передал вам %d Рублей", GetName(playerid), params[1]);
	SendMes(playerid, COLOR_GREY, "Вы передали %d Рублей игроку %s", params[1], GetName(params[0]));
	if(PI[playerid][pSex] == 1) format(string, sizeof(string), "достал деньги из кармана и передал их %s", GetName(params[0]));
	else format(string, sizeof(string), "достала деньги из кармана и передала их %s", GetName(params[0]));
	MeAction(playerid, string);
	ApplyAnimation(playerid, "DEALER", "shop_pay", 4.1, 0, 1, 1, 0, 0, 1);
	SetPVarInt(playerid, "payer", gettime()+2);
	return 1;
}

CMD:heal(playerid, params[])
{
	if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /heal [id игрока]");
	else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете вылечить себя!");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(GetPVarInt(params[0], "lechenie") > 0) SendClientMessage(playerid, COLOR_GREY, "Пациент уже проходит курс лечения!");
	new Float:shealth;
	GetPlayerHealth(params[0], shealth);
	SendMes(playerid, COLOR_BLUE, "Вы предложили %s вылечиться за 500 Рублей", GetName(params[0]));
	SendMes(params[0], COLOR_BLUE, "%s %s предложил Вам вылечиться за 500 Рублей", Fraction_Rang[PI[playerid][pMember]][PI[playerid][pRank]], GetName(playerid));
	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	SetPVarInt(params[0], "PlayerHeal", playerid);
	SetPVarInt(params[0], "MoneyHeal", 500);
	SetPVarInt(params[0], "KeyHeal", 1);
    if(PlayerDied[params[0]] == true)
	{
		SetPVarInt(params[0], "lechenie", 0);
		PlayerDied[params[0]] = false;
	}
	return 1;
}

CMD:canceltune(playerid)
{
	if(!GetPVarInt(playerid, "UsedCTO")) return 0;
    new bizzid = GetPVarInt(playerid,"CTObizzid");
//	if(GetPlayerState(playerid) != 2) return CheatKick(playerid, 12221);
	new pveh = GetPlayerVehicleID(playerid);
	SetVehiclePos(pveh,BizzInfo[bizzid][bEntrx],BizzInfo[bizzid][bEntry],BizzInfo[bizzid][bEntrz]);
	DeletePVar(playerid,"UsedCTO");
    SetPVarInt(playerid, "AntiBreik", 3);
	SetVehicleZAngle(pveh,270.9845);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetVehicleVirtualWorld(pveh,0);
	LinkVehicleToInterior(pveh,0);
	PutPlayerInVehicle(playerid, pveh, 0);
	TogglePlayerControllable(playerid,true);
	SetCameraBehindPlayer(playerid);
	return 1;
}

CMD:cancel(playerid)
{
	ShowPlayerDialog(playerid, D_HEAL+132, DIALOG_STYLE_LIST, "text", "text", "Выбрать", "Закрыть");
	return 1;
}

CMD:healing(playerid, params[])
{
	new full = 0;
	for(new i = 1; i < TOTALHOUSE; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 60.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
		{
			if(HouseInfo[i][hVirtual] == GetPlayerVirtualWorld(playerid))
			{
				if(HouseInfo[i][hHeal] == 0) return SendClientMessage(playerid, COLOR_GREY, "В доме нет аптечек!");
				new Float:shealth;
				GetPlayerHealth(playerid, shealth);
				if(shealth >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не нуждаетесь в лечении!");
				HouseInfo[i][hHeal]--;
				MysqlUpdateHouseInt(i, "hHeal", HouseInfo[i][hHeal]);
				SetHealth(playerid, shealth+25);
				GetPlayerHealth(playerid, shealth);
				if(shealth > 100) SetHealth(playerid, 100);
				SendMes(playerid, COLOR_BLUE, "Вы использовали 1 аптечку. Осталось %i аптечек", HouseInfo[i][hHeal]);
				MeAction(playerid, "использовал аптечку");
				full++;
			}
		}
	}
	if(full == 0) SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в доме!");
	return 1;
}

CMD:afk(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_MODER) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new list,full,str[100],sttr[2000];
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pAFK] >= 3) list++;
	}
	format(str,sizeof(str),"{FF6347}Всего в AFK - %i игрок(ов)\n\n",list);
	strcat(sttr, str);
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pAFK] >= 3)
		{
			format(str,sizeof(str),"{ffffff}%s[%i] - {FF6347}AFK: %s\n",GetName(i), i, Converts(PI[i][pAFK]));
			strcat(sttr, str);
			full++;
		}
	}
	if(full == 0) strcat(sttr, "{ffffff}Информация не найдена");
	ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"{ffffff}AFK",sttr,"Закрыть","");
	return 1;
}

CMD:wanted(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new full, str[150], sttr[2000];
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pWanted] > 0)
		{
			format(str,sizeof(str),"{ffff00}%s - {ffffff}Звезд: {ffff00}%i, {ffffff}обвинение: {ffff00}%s, {ffffff}доложил: {ffff00}%s\n",GetName(i), PI[i][pWanted], PI[i][pWantedReason], PI[i][pWantedWho]);
			strcat(sttr, str);
			full++;
		}
	}
	if(full == 0) strcat(sttr, "Информация не найдена");
	ShowPlayerDialog(playerid,D_NULL,DIALOG_STYLE_MSGBOX,"Внимание, в розыске!",sttr,"Закрыть","");
	return 1;
}

CMD:wedding(playerid, params[])
{
	if(PI[playerid][pMarried] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже связаны узами брака!");
	else if(!IsPlayerInRangeOfPoint(playerid,20.0,-1983.3154,1118.0847,53.1254)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться у церкви!");
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /wedding [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заключить брак сам с собой!");
	else if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(PI[params[0]][pMarried] == 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан узами брака!");
	new string[128];
	format(string, sizeof(string), "Вы предложили %s заключить брачный договор", GetName(params[0]));
	SendClientMessage(playerid, COLOR_BLUE, string);
	if(PI[playerid][pSex] == 1)
	{
	    format(string, sizeof(string), "%s предложил Вам заключить брачный договор", GetName(playerid));
		SendClientMessage(params[0], COLOR_BLUE, string);
		format(string, sizeof(string), "{FFFFFF}%s предложил Вам заключить брачный договор\n\nВы согласны?", GetName(playerid));
		ShowPlayerDialog(params[0], D_HEAL+19, 0, "{FF6666}Свадьба", string, "Да", "Нет");
	}
	else
	{
	    format(string, sizeof(string), "%s предложила Вам заключить брачный договор", GetName(playerid));
		SendClientMessage(params[0], COLOR_BLUE, string);
	    format(string, sizeof(string), "{FFFFFF}%s предложила Вам заключить брачный договоре\n\nВы согласны?", GetName(playerid));
		ShowPlayerDialog(params[0], D_HEAL+19, 0, "{FF6666}Свадьба", string, "Да", "Нет");
	}
	SetPVarInt(params[0], "PlayerMarriage", playerid);
	return 1;
}

CMD:divorce(playerid, params[])
{
	if(PI[playerid][pMarried] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не связаны узами брака!");
	else if(!IsPlayerInRangeOfPoint(playerid, 5.0,-2023.3407,1096.9977,18.0524)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться у церкви!");
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /divorce [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь разорвать брак сам с собой!");
	else if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	if(!strcmp(GetName(params[0]), PI[playerid][pWhoMarried], true))
	{
	    new string[128];
	    format(string, sizeof(string), "Вы предложили %s развестисть", GetName(params[0]));
	    SendClientMessage(playerid, COLOR_BLUE, string);
	    if(PI[playerid][pSex] == 1)
	    {
	        format(string, sizeof(string), "%s предложил Вам развестись", GetName(playerid));
	        SendClientMessage(params[0], COLOR_BLUE, string);
	        format(string, sizeof(string), "{FFFFFF}%s предложил Вам развестись\n\nВы согласны?", GetName(playerid));
			ShowPlayerDialog(params[0], D_HEAL+20, 0, "{F04245}Развод", string, "Да", "Нет");
	    }
	    else
	    {
	        format(string, sizeof(string), "%s предложила Вам развестись", GetName(playerid));
	        SendClientMessage(params[0], COLOR_BLUE, string);
	        format(string, sizeof(string), "{FFFFFF}%s предложила Вам развестись\n\nВы согласны?", GetName(playerid));
			ShowPlayerDialog(params[0], D_HEAL+20, 0, "{F04245}Развод", string, "Да", "Нет");
	    }
		SetPVarInt(params[0], "PlayerMarriage", playerid);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не связам узами брака с вами!");
	return 1;
}

CMD:donate(playerid)
{
    new string[500];
	if(doubling_donate)
	    format(string, sizeof(string), "\
			{7efd7d}1. Информация\n\
			{7efd7d}2. Проверить зачисления\n\
			3. Получение игровой валюты {63BD4E}(Акция X2)\n\
			4. VIP статус {0099FF}(100 кредитов)\n\
			5. Снятие предупреждения {0099FF}(50 кредитов)\n\
			6. Смена ника {0099FF}(20 кредитов)\n\
			7. Приобрести все навыки владения оружием {0099FF}(100 кредитов)\n\
			8. Приобрести все лицензии {0099FF}(150 кредитов)\n\
			9. Приобрести все навыки стиля боя {0099FF}(50 кредитов)\
		");
	else
	    format(string, sizeof(string), "\
			{7efd7d}1. Информация\n\
			{7efd7d}2. Проверить зачисления\n\
			3. Получение игровой валюты\n\
			4. VIP статус {0099FF}(100 кредитов)\n\
			5. Снятие предупреждения {0099FF}(50 кредитов)\n\
			6. Смена ника {0099FF}(20 кредитов)\n\
			7. Приобрести все навыки владения оружием {0099FF}(100 кредитов)\n\
			8. Приобрести все лицензии {0099FF}(150 кредитов)\n\
			9. Приобрести все навыки стиля боя {0099FF}(50 кредитов)\
		");
	ShowPlayerDialog(playerid, D_DONATE, DIALOG_STYLE_LIST, "{7efd7d}Дополнительно", string, "Далее", "Назад");
	return 1;
}

CMD:adivorce(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /adivorce [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(PI[params[0]][pMarried] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан узами брака!");
	new targetid;
	sscanf(PI[params[0]][pWhoMarried], "u", targetid);
	if(IsPlayerConnected(targetid))
	{
		SendMes(targetid, COLOR_GREEN, "Администратор %s развел тебя с %s", GetName(playerid), PI[targetid][pWhoMarried]);
		strmid(PI[targetid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
		PI[targetid][pMarried] = 0;
	}
	else
	{
		format(query,sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'",PI[params[0]][pWhoMarried]);
		mysql_tquery(dbHandle, query, "OnPlayerDivorce", "i", params[0]);
	}
	SendMes(playerid, COLOR_LIME, "Вы развели игрока %s и %s", GetName(params[0]), PI[params[0]][pWhoMarried]);
	SendMes(params[0], COLOR_GREEN, "Администратор %s развел тебя с %s", GetName(playerid), PI[targetid][pWhoMarried]);
	strmid(PI[params[0]][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	PI[params[0]][pMarried] = 0;
	return 1;
}

forward OnPlayerDivorce(targetid);
public OnPlayerDivorce(targetid)
{
    new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		format(query,sizeof(query), "UPDATE "T_ACCOUNTS" SET married = 0, whomarried = None WHERE name = '%s'",PI[targetid][pWhoMarried]);
		mysql_tquery(dbHandle, query, "", "");
	}
	return 1;
}

CMD:tgps(playerid)
{
    if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "GPS-навигатор не может установить соединение со спутником. Выйдите на улицу.");
   	if(UseGPS[playerid])
	{
		SendClientMessage(playerid, COLOR_RED, "Вы отменили GPS");
	   	DisablePlayerRaceCheckpoint(playerid);
	   	UseGPS[playerid] = false;
	   	return 1;
	}
	ShowPlayerDialog(playerid, 10008, DIALOG_STYLE_LIST, "{7efd7d}Дальнобойщики", "1. База грузовиков\n2. Склад угля\t\t{AFAFAF}(закупка:  Рублей2 за кг)\n{FFFFFF}2. Склад древесины\t{AFAFAF}(закупка:  Рублей2 за кг)", "Выбрать", "Отмена");
	return 1;
}

CMD:removetuning(playerid, params[])
{
	if(!PI[playerid][pVip]) return SendClientMessage(playerid, COLOR_GREY, "Вы не имеете VIP статус");
	else if(GetPlayerHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в транспорте!");
	else if(GetPlayerVehicleID(playerid) != PI[playerid][PlayerCarID]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	for(new i = 0; i < 14; i++) PI[playerid][cVehcoms][i] = 0;
	PI[playerid][cPaintjob] = 3;
	SetPVarInt(playerid, "removetuning", 1);
	format(PI[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	PI[playerid][cVehcoms][0],PI[playerid][cVehcoms][1],PI[playerid][cVehcoms][2],
	PI[playerid][cVehcoms][3],PI[playerid][cVehcoms][4],PI[playerid][cVehcoms][5],
	PI[playerid][cVehcoms][6],PI[playerid][cVehcoms][7],PI[playerid][cVehcoms][8],
	PI[playerid][cVehcoms][9],PI[playerid][cVehcoms][10],PI[playerid][cVehcoms][11],
	PI[playerid][cVehcoms][12],PI[playerid][cVehcoms][13]);
	SendClientMessage(playerid, COLOR_GREY, "Тюнинг успешно удален!");
	SetVehicleToRespawn(PI[playerid][PlayerCarID]);
	Air_Get_Pos(playerid);
    Air_Gettime(playerid, 4);
	return 1;
}

CMD:nbank(playerid, params[])
{
	if(IsANews(playerid) && PI[playerid][pLeader]) BankFracEnter(playerid);
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:anim(playerid, params[]) return cmd_animlist(playerid, params);
CMD:animlist(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нельзя использовать анимации");
	new string[500], animid;
	if(sscanf(params, "i", animid))
	{
		new anims[][] =
		{
			{"1. Руки вверх\n2. Справлять нужду\n3. Танец (1)\n4. Танец (2)\n5. Танец (3)\n6. Танец (4)\n7. Танец (5)\n8. Танец (6)\n9. Танец (7)\n10. Танец (8)\n11. Танец (9)\n12. Танец(10)\n13. Курить\n14. Возмущение\n15. Присесть (1)\n16. Присесть (2)\n17. Присесть (3)\n18. Присесть (4)\n19. Лежать (1)\n20. Лежать (2)\n21. Жест рукой (1)\n22. Жест рукой (2)\n"},
			{"23. Читать рэп\n24. Зивать\n25. Диллер (1)\n26. Диллер (2)\n27. Диллер (3)\n28. Диллер (4)\n29. Пьяная походка\n30. Рука лицо"}
		};
		string = "";
		format(string, sizeof(string), "%s%s", anims[0], anims[1]);
		ShowPlayerDialog(playerid,D_JOB+136,DIALOG_STYLE_LIST, "{7efd7d}Анимации", string, "Выбрать", "Отмена");
	}
	switch(animid)
	{
	    case 0:
	    {
		    new animss[][] =
			{
				{"1. Руки вверх\n2. Справлять нужду\n3. Танец (1)\n4. Танец (2)\n5. Танец (3)\n6. Танец (4)\n7. Танец (5)\n8. Танец (6)\n9. Танец (7)\n10. Танец (8)\n11. Танец (9)\n12. Танец(10)\n13. Курить\n14. Возмущение\n15. Присесть (1)\n16. Присесть (2)\n17. Присесть (3)\n18. Присесть (4)\n19. Лежать (1)\n20. Лежать (2)\n21. Жест рукой (1)\n22. Жест рукой (2)\n"},
				{"23. Читать рэп\n24. Зивать\n25. Диллер (1)\n26. Диллер (2)\n27. Диллер (3)\n28. Диллер (4)\n29. Пьяная походка\n30. Рука лицо"}
			};
			string = "";
			format(string, sizeof(string), "%s%s", animss[0], animss[1]);
			ShowPlayerDialog(playerid,D_JOB+136,DIALOG_STYLE_LIST, "{7efd7d}Анимации", string, "Выбрать", "Отмена");
			return 1;
		}
		case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
		case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_PISS);
	    case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
	    case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
	    case 5: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
	    case 6: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
	    case 7: ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,1,0,0,0,0,1);
		case 8: ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,1,0,0,0,0,1);
		case 9: ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,1,0,0,0,0,1);
		case 10: ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,1,0,0,0,0,1);
		case 11: ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,1,0,0,0,0,1);
		case 12: ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,1,0,0,0,0,1);
		case 13: ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1,1,0,0,0,0,1);
		case 14: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
		case 15: ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,0,0,0,1,0,1);
		case 16: ApplyAnimation(playerid,"BEACH","ParkSit_W_Loop",4.1,1,0,0,1,0,1);
		case 17: ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,0,0,1,0,1);
		case 18: ApplyAnimation(playerid,"BEACH","ParkSit_M_loop",4.1,1,0,0,1,0,1);
		case 19: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,1,0,0,1,0,1);
		case 20: ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,1,0,0,1,0,1);
		case 21: ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0,1);
		case 22: ApplyAnimation(playerid,"ON_LOOKERS","WAVE_LOOP",4.1,1,1,1,0,0,1);
		case 23: ApplyAnimation(playerid,"BENCHPRESS","GYM_BP_CELEBRATE",4.1,1,1,1,0,0,1);
		case 24: ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,0,0,0,0,1);
		case 25: ApplyAnimation(playerid,"DEALER","DEALER_DEAL",4.1,0,0,0,0,0,1);
		case 26: ApplyAnimation(playerid,"DEALER","DEALER_IDLE_01",4.1,0,0,0,0,0,1);
		case 27: ApplyAnimation(playerid,"DEALER","DEALER_IDLE_03",4.1,0,0,0,0,0,1);
		case 28: ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,0,0,0,0,1);
		case 29: ApplyAnimation(playerid,"RYDER","RYD_Die_PT1",4.1,1,1,0,0,0,1);
		case 30: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
	}
	SetPVarInt(playerid, "Animation", 1);
	TextDrawShowForPlayer(playerid, AnimDraw);
	return 1;
}

CMD:fstyle(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /fstyle [стиль от 1 до 3]");
	switch(params[0])
	{
	    case 1:
	    {
	        if(PI[playerid][pSportExp] >= 1000)
			{
			    PI[playerid][pFightStyle] = 5;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				SendClientMessage(playerid, COLOR_GREEN, "Вы изменили свой стиль боя на {FFFFFF}бокс");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы еще не выучили этот стиль боя!");
	    }
	    case 2:
	    {
	        if(PI[playerid][pSportExp] >= 3000)
			{
			    PI[playerid][pFightStyle] = 6;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				SendClientMessage(playerid, COLOR_GREEN, "Вы изменили свой стиль боя на {FFFFFF}кунг-фу");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы еще не выучили этот стиль боя!");
	    }
	    case 3:
	    {
	        if(PI[playerid][pSportExp] >= 6000)
			{
			    PI[playerid][pFightStyle] = 7;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				SendClientMessage(playerid, COLOR_GREEN, "Вы изменили свой стиль боя на {FFFFFF}кикбокс");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы еще не выучили этот стиль боя!");
	    }
	}
	return 1;
}

CMD:tempzone(playerid, params[])
{
	if(PI[playerid][pAdmin] < ADM_GRAND_ADMIN) return 1;
	else if(AdminInfo[playerid][admDostup] == 1) return SendClientMessage(playerid, COLOR_RED,"Ошибка | {ffffff}Ваши админ-права заблокированы по подозрению, для разблокировки - обратитесь к старшей администрации.");
	else if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /tempzone [id банды]");
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(IsPlayerToSquare(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			GZInfo[i][gFrak] = params[0];
			GangZoneStopFlashForAll(GangZone[i]);
			GangZoneHideForAll(GangZone[i]);
			GangZoneShowForAll(GangZone[i],GetGangZoneColor(i));
			SaveGZ(i);
			break;
		}
	}
	return 1;
}
CMD:hi(playerid, params[])
{
 	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /hi [id игрока]");
 	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Вы не можете пожать руку самому себе!");
	if(!IsPlayerInRangeOfPlayer(2.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	new Float:angle, string[64];
	GetPlayerFacingAngle(playerid, angle);
	SetPlayerFacingAngle(params[0], angle + 180);
	format(string, sizeof(string), "пожал руку %s", GetName(params[0]));
	MeAction(playerid, string);
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);
	if(!IsPlayerInAnyVehicle(params[0])) ApplyAnimation(params[0],"GANGS","hndshkfa",4.0,0,0,0,0,0);
	return 1;
}

CMD:drugs(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid,100.0,645.9722,-339.3981,-94.7852)) return SendClientMessage(playerid,-1,"В больнице опасно принимать наркотики!");
	if(PI[playerid][pDrugs] <= 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет наркотиков!");
	if(GetPVarInt(playerid, "DrugsTime") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Употреблять наркотики можно раз в 2 минуты!");
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /drugs [кол-во 1-3]");
	new string[128];
	if(params[0] > 3)
	{
	    format(string, sizeof(string), "Кол-во наркотиков от 1 до 3, сейчас у Вас %i грамм", PI[playerid][pDrugs]);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	new Float:health;
	GetPlayerHealth(playerid, health);
	SetHealth(playerid, health+params[0]*20);
	GetPlayerHealth(playerid, health);
	if(health > 120) return SendClientMessage(playerid, -1, "Вам плохо от наркотиков, пожалуйста подождите");
	PI[playerid][pDrugs] -= params[0];
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	format(string, sizeof(string), "Вы употребили %i грамм(a) порошка", params[0]);
	SendClientMessage(playerid, COLOR_PURPLE, string);
	SetTimerEx("DrugEffectGone", 60000, false, "i", playerid);
	SetPVarInt(playerid, "DrugsTime", gettime()+60);
	if(PI[playerid][pSex] == 1) MeAction(playerid, "достал пакетик и употребил наркотик");
	else MeAction(playerid, "достала пакетик и употребила наркотик");
	SetPlayerTime(playerid,17,0);
	SetPlayerDrunkLevel(playerid, 3000);
	SetPlayerWeather(playerid, -68);
	return 1;
}

CMD:dropdrugs(playerid, params[])
{
	if(PI[playerid][pDrugs] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет наркотиков!");
	PI[playerid][pDrugs] = 0;
	if(PI[playerid][pSex] == 1) MeAction(playerid, "скинул пакетик с неизвестным содержимым");
	else MeAction(playerid, "скинула пакетик с неизвестным содержимым");
	return 1;
}

CMD:selldrugs(playerid, params[])
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Продажа наркотиков доступна со 2 ранга!");
	new full = 0;
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(IsPlayerToSquare(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
		{
			if(sscanf(params, "uii", params[0], params[1], params[2])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /selldrugs [id игрока] [грамм] [цена]");
			else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			else if(params[1] < 1 || params[1] > 100) return SendClientMessage(playerid, COLOR_GREY, "Количество грамм от 1 до 100!");
			else if(params[2] < 1 || params[2] > 10000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 10000 Рублей!");
            else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			else if(PI[playerid][pDrugs] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько наркотиков!");
			SendMes(playerid, COLOR_BLUE, "Вы предложили %s купить наркотики (Грамм: %i). Цена: %i Рублей", GetName(params[0]), params[1], params[2]);
			SendMes(params[0], COLOR_BLUE, "%s предложил Вам купить наркотики (Грамм: %i). Цена: %i Рублей", GetName(playerid), params[1], params[2]);
			SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
			SetPVarInt(params[0], "KeyDrugs", 1);
			SetPVarInt(params[0], "PlayerDrugs", playerid);
			SetPVarInt(params[0], "PlayerDrugsKG", params[1]);
			SetPVarInt(params[0], "DrugsPrice", params[2]);
			full++;
			break;
		}
	}
	return 1;
}

CMD:sellgun(playerid, params[])
{
	if(!IsAGang(playerid)) return 1;
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 3 ранга и выше!");
	new full = 0;
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(IsPlayerToSquare(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && ZoneOnBattle[i] == 0)
		{
			if(GZInfo[i][gFrak] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Продавать оружие можно только на своих зонах!");
			else if(sscanf(params, "uiii", params[0], params[1], params[2], params[3])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /sellgun [id игрока] [id оружия] [патроны] [цена]");
			else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			if(params[1] == 24 || params[1] == 25 || params[1] == 29 || params[1] == 23 || params[1] == 30 || params[1] == 31 || params[1] == 33)
			{
				if(params[2] < 1 || params[2] > 500) return SendClientMessage(playerid, COLOR_GREY, "Количество патронов от 1 до 500!");
				if(params[3] < 1 || params[3] > 20000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 20000 доллара(ов)!");
				if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
				if(PI[playerid][pPatron] < params[2]) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
				SendMes(playerid, COLOR_BLUE, "Вы предложили %s купить оружие %s (%i) с %i патронами. Цена: %i Рублей", GetName(params[0]), WeaponNames[params[1]], params[1], params[2], params[3]);
				SendMes(params[0], COLOR_BLUE, "%s предложил Вам купить оружие %s (%i) с %i патронами. Цена: %i Рублей", GetName(playerid), WeaponNames[params[1]], params[1], params[2], params[3]);
				SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
				SetPVarInt(params[0], "KeyGun", 1);
				SetPVarInt(params[0], "PlayerGun", playerid);
				SetPVarInt(params[0], "PlayerGun_", params[1]);
				SetPVarInt(params[0], "PlayerGAmmo", params[2]);
				SetPVarInt(params[0], "PlayerGPrice", params[3]);
				full++;
				break;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Неверный ID оружия! ID оружия: 23, 24, 25, 29, 30, 31, 33");
		}
	}
	return 1;
}

CMD:makegun(playerid, params[])
{
	if(!IsAGang(playerid) && !IsAArmy(playerid) && !IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
	ShowMakeGunList(playerid);
	return 1;
}
CMD:giveguns(playerid, params[])
{
	if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /giveguns [id игрока] [количество]");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Неверное количество!");
	else if(PI[playerid][pGunAmount] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько Металл!");
	else if(PI[params[0]][pGunAmount]+params[1] > 500 && !PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не может взять Металл!");
	else if(PI[params[0]][pGunAmount]+params[1] > 1000 && PI[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не может взять Металл!");
	PI[playerid][pGunAmount] -= params[1];
	PI[params[0]][pGunAmount] += params[1];
	new string[128];
	format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET gunamount=%i,gunamount=%i WHERE id=%i LIMIT 1", PI[playerid][pGunAmount], PI[params[0]][pGunAmount], PI[playerid][pID]);
	mysql_tquery(dbHandle, string, "", "");
	string = "\0";
	format(string, sizeof(string), "передал единицы оружия %s", GetName(params[0]));
	MeAction(playerid, string);
	format(string, sizeof(string), "Вы передали %s %d Металл", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "%s передал Вам %d Металл", GetName(playerid), params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	return 1;
}
CMD:repair(playerid, params[])
{
	if(PI[playerid][pJob] == JOB_MECHANIC)
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем эвакуатора!");
		new carid = GetPlayerVehicleID(playerid);
		if(carid >= mechanic[0] && carid <= mechanic[1] || GetVehicleModel(carid) == 525)
		{
			if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /repair [id игрока] [цена]");
			else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			else if(params[1] < 1 || params[1] > 1000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 1000 Рублей!");
			else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			else if(GetPlayerState(params[0]) != 2) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться за рулем транспорта!");
			else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь починить машину себе!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы предложили %s починить его транспорт за %i Рублей", GetName(params[0]), params[1]);
			SendMes(params[0], COLOR_LIGHTBLUE, "%s преложил вам починить ваш транспорт за %i Рублей", GetName(playerid), params[1]);
			new string[100];
			format(string, sizeof(string), "%s преложил вам починить ваш транспорт за %i Рублей\n\nВы согласны?", GetName(playerid), params[1]);
			ShowPlayerDialog(params[0], D_JOB+67, 0, "Автомеханик", string, "Да", "Нет");
			SetPVarInt(playerid, "MechVehID", GetPlayerVehicleID(params[0]));
			SetPVarInt(params[0], "PlayerMech", playerid);
			SetPVarInt(params[0], "MechanicPrice", params[1]);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в эвакуаторе!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}
CMD:refill(playerid, params[])
{
	if(PI[playerid][pJob] == JOB_MECHANIC)
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем эвакуатора!");
		new carid = GetPlayerVehicleID(playerid);
		if(carid >= mechanic[0] && carid <= mechanic[1] || GetVehicleModel(carid) == 525)
		{
			if(sscanf(params, "ui", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "• [ Подсказка ] {ffffff}Введите: /refill [id игрока] [цена]");
			else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(PlayerLogged[params[0]] == false) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			else if(params[1] < 1 || params[1] > 5000) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 5000 Рублей!");
			else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			else if(GetPlayerState(params[0]) != 2) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться за рулем транспорта!");
			else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заправить себе машин!");
			SendMes(playerid, COLOR_LIGHTBLUE, "Вы предложили %s заправить его транспорт за %i Рублей", GetName(params[0]), params[1]);
			SendMes(params[0], COLOR_LIGHTBLUE, "%s преложил вам заправить ваш транспорт за %i Рублей", GetName(playerid), params[1]);
			new string[100];
			format(string, sizeof(string), "%s преложил вам заправить ваш транспорт за %i Рублей\n\nВы согласны?", GetName(playerid), params[1]);
			ShowPlayerDialog(params[0], D_JOB+130, 0, "Автомеханик", string, "Да", "Нет");
			SetPVarInt(params[0], "MechanicPlayer", playerid);
			SetPVarInt(params[0], "MechanicPrice", params[1]);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в эвакуаторе!");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}
CMD:fill(playerid, params[])
{
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится за рулем!");
	if(Fuel[GetPlayerVehicleID(playerid)] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Ваш бак полон!");
	if(GetPVarInt(playerid, "Refueling") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже заправляетесь!");
	new full;
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])
				&& BizzInfo[i][bType] == 2)
		{
			ShowPlayerDialog(playerid, D_JOB+128, 1,"{7efd7d}Топливо", "{ffffff}Введите кол-во литров топлива:", "Заправить", "Отмена");
			full++;
			SetPVarInt(playerid, "FuelBizzID", i);
		}
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится у заправки!");
	return true;
}
CMD:end(playerid, params[])
{
	if(PI[playerid][pJob] != JOB_BUS) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем автобуса!");
	new carid = GetPlayerVehicleID(playerid);
	if(carid >= buscar[0] && carid <= buscar[1])
	{
		if(GetPVarInt(playerid, "PriceBus") > 0)
		{
		    new CB[16];
		    Convert(PI[playerid][pBusTime], CB);
			SendMes(playerid, COLOR_BLUE, "Рабочий день завершен. Вами заработано: %i Рублей. Время рейса: %s", GetPVarInt(playerid, "BusMoney"), CB);
			SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты (PayDay).");
			PI[playerid][pPayCheck] += GetPVarInt(playerid, "BusMoney");
			DeletePVar(playerid, "BusTime");
			DeletePVar(playerid, "TypeBus");
			DeletePVar(playerid, "PriceBus");
			DeletePVar(playerid, "BusStop");
			DeletePVar(playerid, "BusMoney");
			PI[playerid][pBusTime] = 0;
			pPressed[playerid] = 0;
			if(IsValidDynamic3DTextLabel(BusText3D[playerid])) DestroyDynamic3DTextLabel(BusText3D[playerid]);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);
			return 1;
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в автобусе!");
	return 1;
}
CMD:fare(playerid, params[])
{
	if(PI[playerid][pJob] != JOB_TAXI) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем такси!");
	new carid = GetPlayerVehicleID(playerid);
	if(carid >= taxicar[0] && carid <= taxicar[1])
	{
		if(GetPVarInt(playerid, "PriceTaxi") > 0)
		{
			SendMes(playerid, COLOR_BLUE, "Рабочий день завершен. Вами заработано: %i Рублей", GetPVarInt(playerid, "TaxiMoney"));
			SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
			DeletePVar(playerid, "PriceTaxi");
			DeletePVar(playerid, "TaxiMoney");
			if(IsValidDynamic3DTextLabel(TaxiText3D[playerid])) DestroyDynamic3DTextLabel(TaxiText3D[playerid]);
			return 1;
		}
		ShowPlayerDialog(playerid, D_JOB+57, 1, "{7efd7d}Тариф", "{ffffff}Введите стоимость проезда:", "Принять", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в такси!");
	return 1;
}
stock ProxDetectorS(Float:radi, playerid, targetid)
{
    new Float:p[3];
    if(!IsPlayerConnected(playerid)) return 0;
    if(!IsPlayerConnected(targetid)) return 0;
    if(!GetPlayerPos(targetid, p[0], p[1], p[2])) return 0;
	if(!IsPlayerInRangeOfPoint(playerid, radi, p[0], p[1], p[2])) return 0;
	return 1;
}

forward GameModeExitDelay();
public GameModeExitDelay()
{
	GameModeExit();
}

stock GetNearestVehicle(playerid)
{
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		if(GetVehicleModel(i))
		{
			new Float:Xx, Float:Yy, Float:Zz;
			GetVehiclePos(i, Xx, Yy, Zz);
			if(PlayerToPoint(8.0, playerid, Xx, Yy, Zz)) return i;
		}
	}
	return 1;
}

stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(!PI[playerid][pAdmin])
	{
		AcStruct[playerid][CheckMapTP] = 1;
		AcStruct[playerid][MapTPLastPick] = GetTickCount();
		AcStruct[playerid][MapTP][0] = fX;
		AcStruct[playerid][MapTP][1] = fY;
		AcStruct[playerid][MapTP][2] = fZ;
	}
	else if(PI[playerid][pAdmin] && AdminLogged[playerid] == true)
	{
	    SetPlayerPosFindZ(playerid, fX, fY, fZ);
	}
	return 1;
}

stock HospitalHealth(playerid)
{
    if(GetPVarInt(playerid, "lechenie") == 1)
    {
       if(PI[playerid][pHeal] < 99.00)
       {
			if(PI[playerid][pVip])
			{
			    PI[playerid][pHeal] += 3;
			    GameTextForPlayer(playerid,"~w~+ 3 HP",300,4);
				SetHealth(playerid,PI[playerid][pHeal]);
			}
			else
			{
			    PI[playerid][pHeal] += 1;
			    GameTextForPlayer(playerid,"~w~+ 1 HP",300,4);
			    SetHealth(playerid,PI[playerid][pHeal]);
			}
			PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
       }
       else
	   {
           SetPVarInt(playerid, "lechenie", 0);
           PlayerDied[playerid] = false;
           SendClientMessage(playerid, 0x6ab1ffaa, "Курс лечения пройден!");
	   }
	}
	return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    //#pragma unused vehicleid
	SetPVarInt(playerid,"EngineStalled",GetPVarInt(playerid,"EngineStalled")+1);
	if(GetPVarInt(playerid,"EngineStalled") >= 4 && Engine[vehicleid] == true && !PI[playerid][pImprove][3])
	{
		Engine[vehicleid] = false;
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,false,lights,alarm,doors,bonnet,boot,objective);
		GameTextForPlayer(playerid, "ENGINE ~r~OFF", 1000, 6);
		DeletePVar(playerid,"EngineStalled");
	}
	return 1;
}

stock strtok(const strin[], &index)
{
	new length = strlen(strin);
	while ((index < length) && (strin[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (strin[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = strin[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

stock IsInAllowedM(mnumbers)
{
	for(new i =0;i<sizeof(allowedmfactions);i++)
	{
		if(mnumbers == allowedmfactions[i]) return 1;
	}
	return 0;
}

stock Converts(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0)
	{
		format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	}
	else
	{
		format(string, 30, "%d:%02d", mins, secs);
	}
	return string;
}

stock emptyMessage(string[])
{
    for(new i; string[i] != 0x0; i++)
    {
        switch(string[i])
        {
            case 0x20: continue;
            default: return 0;
        }
    }
    return 1;
}

stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 		PI[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 		PI[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 				PI[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 					PI[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 				PI[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 					PI[playerid][pGunSkill][5]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 				PI[playerid][pGunSkill][6]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 			PI[playerid][pGunSkill][7]*10);
	return 1;
}

stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
    if(newammo < oldammo)
	{
		Shot[playerid]++;
		switch(GetPlayerWeapon(playerid))
		{
		    case 22:
			{
				if(Shot[playerid] >= AMMO_PISTOL && PI[playerid][pGunSkill][6] < 100 && !PI[playerid][pVip]) PI[playerid][pGunSkill][6]++, Shot[playerid] = 0;
				else if(Shot[playerid] >= AMMO_PISTOL_VIP && PI[playerid][pGunSkill][6] < 100 && PI[playerid][pVip]) PI[playerid][pGunSkill][6]++, Shot[playerid] = 0;
			}
		    case 23:
			{
				if(Shot[playerid] >= AMMO_SDPISTOL && PI[playerid][pGunSkill][0] < 100 && !PI[playerid][pVip]) PI[playerid][pGunSkill][0]++, Shot[playerid] = 0;
				else if(Shot[playerid] >= AMMO_SDPISTOL_VIP && PI[playerid][pGunSkill][0] < 100 && PI[playerid][pVip]) PI[playerid][pGunSkill][0]++, Shot[playerid] = 0;
			}
			case 24:
			{
				if(Shot[playerid] >= AMMO_DEAGLE && PI[playerid][pGunSkill][1] < 100 && !PI[playerid][pVip]) PI[playerid][pGunSkill][1]++, Shot[playerid] = 0;
				else if(Shot[playerid] >= AMMO_DEAGLE_VIP && PI[playerid][pGunSkill][1] < 100 && PI[playerid][pVip]) PI[playerid][pGunSkill][1]++, Shot[playerid] = 0;
			}
			case 25:
			{
				if(Shot[playerid] >= AMMO_SHOTGUN && PI[playerid][pGunSkill][2] < 100 && !PI[playerid][pVip]) PI[playerid][pGunSkill][2]++, Shot[playerid] = 0;
				else if(Shot[playerid] >= AMMO_SHOTGUN_VIP && PI[playerid][pGunSkill][2] < 100 && PI[playerid][pVip]) PI[playerid][pGunSkill][2]++, Shot[playerid] = 0;
			}
			case 28:
			{
				if(Shot[playerid] >= AMMO_MICROUZI && PI[playerid][pGunSkill][7] < 100 && !PI[playerid][pVip]) PI[playerid][pGunSkill][7]++, Shot[playerid] = 0;
				else if(Shot[playerid] >= AMMO_MICROUZI_VIP && PI[playerid][pGunSkill][7] < 100 && PI[playerid][pVip]) PI[playerid][pGunSkill][7]++, Shot[playerid] = 0;
			}
			case 29:
			{
				if(Shot[playerid] >= AMMO_MP5 && PI[playerid][pGunSkill][3] < 100 && !PI[playerid][pVip]) PI[playerid][pGunSkill][3]++, Shot[playerid] = 0;
				else if(Shot[playerid] >= AMMO_MP5_VIP && PI[playerid][pGunSkill][3] < 100 && PI[playerid][pVip]) PI[playerid][pGunSkill][3]++, Shot[playerid] = 0;
			}
			case 30:
			{
				if(Shot[playerid] >= AMMO_AK47 && PI[playerid][pGunSkill][4] < 100 && !PI[playerid][pVip]) PI[playerid][pGunSkill][4]++, Shot[playerid] = 0;
				else if(Shot[playerid] >= AMMO_AK47_VIP && PI[playerid][pGunSkill][4] < 100 && PI[playerid][pVip]) PI[playerid][pGunSkill][4]++, Shot[playerid] = 0;
			}
			case 31:
			{
				if(Shot[playerid] >= AMMO_M4A1 && PI[playerid][pGunSkill][5] < 100 && !PI[playerid][pVip]) PI[playerid][pGunSkill][5]++, Shot[playerid] = 0;
				else if(Shot[playerid] >= AMMO_M4A1_VIP && PI[playerid][pGunSkill][5] < 100 && PI[playerid][pVip]) PI[playerid][pGunSkill][5]++, Shot[playerid] = 0;
			}
		}
	}
	SetPlayerSkills(playerid);
	return 1;
}

stock IsABike(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	    case 581,522,521,523,586,448,461,463,468,471: return 1;
	    default: return 0;
	}
	return 0;
}

stock SendLog(namelog[],string[])
{
	new hour, minn, sec, year, month, day, text[256], log[50], File:LogFile, i;
	gettime(hour, minn, sec);
	getdate(year, month, day);
	format(text, sizeof(text), "[%02d.%02d.%02d|%02d:%02d:%02d]%s\r\n", year, month, day, hour, minn, sec, string);
	format(log,sizeof(log),"[Logs]/%s.log", namelog);
	LogFile = fopen(log, io_append);
	while (text[i] != EOS)
	{
		fputchar(LogFile, text[i], false);
		i++;
	}
	fclose(LogFile);
}

stock RemoveFromVehicle(playerid)
{
	if(!PI[playerid][ACCheck]) PI[playerid][ACCheck] = SetTimerEx("CheckPlayer", 1000 * 3, false, "ddd", playerid, GetPlayerVehicleID(playerid), 0);
	PlayerEnterTime[playerid] += 221;
	return RemovePlayerFromVehicle(playerid);
}

stock iswheelmodel(modelid) {

	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i = 0; i < 17; i++)
	{
		if(modelid == wheelmodels[i])
		return 1;
	}
	return 0;
}

stock IllegalCarNitroIde(carmodel) {

	new illegalvehs[29] = {581,523,462,521,463,522,461,448,468,586,509,481,510,472,473,493,595,484,430,453,452,446,454,590,569,537,538,570,449};
	for(new i = 0; i < 29; i++)
	{
		if(carmodel == illegalvehs[i])
		return 1;
	}
	return 0;
}

stock illegal_nos_vehicle(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	new playercarmodel = GetVehicleModel(carid);
	return IllegalCarNitroIde(playercarmodel);
}

stock islegalcarmod(vehicleide, componentid)
{
	new modok = false;
	if((iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IllegalCarNitroIde(vehicleide);
		if(!nosblocker) modok = true;
	}
	else
	{
		for(new i = 0; i < 48; i++)
		{
			if(legalmods[i][0] == vehicleide)
			{
				for(new j = 1; j < 22; j++)
				{
					if(legalmods[i][j] == componentid) modok = true;
				}
			}
		}
	}
	return modok;
}

stock GetPlayerID(name[])
{
	foreach(new i: Player)
	{
		if(strcmp(GetName(i), name, true, strlen(name)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}

stock CaptureUpd(bandkiller)
{
	new SCORE[64];
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pMember] > sizeof(GangInfo)) continue;
		if(GangInfo[PI[i][pMember]][capture] > 0)
		{
			if(GangInfo[bandkiller][gangnumber] == 1)
			{
				format(SCORE, sizeof(SCORE), "%d", GangInfo[bandkiller][score]);
				PlayerTextDrawSetString(i, CaptureTD[i][5], SCORE);
			}
			else
			{
				format(SCORE, sizeof(SCORE), "%d", GangInfo[bandkiller][score]);
				PlayerTextDrawSetString(i, CaptureTD[i][6], SCORE);
			}
		}
	}
}

stock CaptureStart(familyone, familytwo)
{
	new SCORE[64];
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pMember] == familyone || PI[i][pMember] == familytwo)
		{
		    for(new s; s < 7; s++) PlayerTextDrawShow(i, CaptureTD[i][s]);
			format(SCORE, sizeof(SCORE), "%s", GetGangName(familyone));
			PlayerTextDrawSetString(i, CaptureTD[i][3], SCORE);
			format(SCORE, sizeof(SCORE), "%s", GetGangName(familytwo));
			PlayerTextDrawSetString(i, CaptureTD[i][4], SCORE);
			PlayerTextDrawSetString(i, CaptureTD[i][5], "0");
			PlayerTextDrawSetString(i, CaptureTD[i][6], "0");
			drawcapt[i] = true;
			IsCapture = true;
		}
	}
}

stock CaptureEnd(familyone, familytwo)
{
	foreach(new i: Player)
	{
		if(PI[i][pMember] == familyone || PI[i][pMember] == familytwo)
		{
		    for(new s; s < 7; s++) PlayerTextDrawHide(i, CaptureTD[i][s]);
			drawcapt[i] = false;
		}
	}
}

stock IsAPlane(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469: return 1;
		default: return 0;
	}
	return 0;
}

stock IsAVel(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 481,509,510,514: return 1;
		default: return 0;
	}
	return 0;
}

stock IsAMoped(vehicleid)
{
    new model = GetVehicleModel(vehicleid);
	if(model == 461 || model == 463  || model == 468  || model == 471  || model == 521  || model == 522  || model == 523  || model == 581  || model == 586)
	{
		return true;
	}
	return false;
}


stock KamazVeh(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 403 || model == 406 || model == 408 || model == 433 || model == 443 || model == 499 || model == 514 || model == 515 || model == 544)
	{
	    return true;
	}
	return false;
}

stock BusVeh2(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 498 || model == 588 || model == 413 || model == 414 || model == 431 || model == 437 || model == 483 || model == 418)
	{
	    return true;
	}
	return false;
}

stock IsABoat(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 472,473,493,595,484,430,452..454,446: return 1;
		default: return 0;
	}
	return 0;
}

stock IsLoginInvalid(text[])
{
	if(strfind(text, "none", false) != -1) return 1;
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "/", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, "1", true) != -1) return 1;
	if(strfind(text, "2", true) != -1) return 1;
	if(strfind(text, "3", true) != -1) return 1;
	if(strfind(text, "4", true) != -1) return 1;
	if(strfind(text, "5", true) != -1) return 1;
	if(strfind(text, "6", true) != -1) return 1;
	if(strfind(text, "7", true) != -1) return 1;
	if(strfind(text, "8", true) != -1) return 1;
	if(strfind(text, "9", true) != -1) return 1;
	return 0;
}

stock IsTextInvalid(text[])
{
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	return 0;
}

stock IsTextRussian(text[])
{
	if(strfind(text, "а", true) != -1) return 1;
	if(strfind(text, "б", true) != -1) return 1;
	if(strfind(text, "в", true) != -1) return 1;
	if(strfind(text, "г", true) != -1) return 1;
	if(strfind(text, "д", true) != -1) return 1;
	if(strfind(text, "е", true) != -1) return 1;
	if(strfind(text, "ё", true) != -1) return 1;
	if(strfind(text, "ж", true) != -1) return 1;
	if(strfind(text, "з", true) != -1) return 1;
	if(strfind(text, "и", true) != -1) return 1;
	if(strfind(text, "й", true) != -1) return 1;
	if(strfind(text, "к", true) != -1) return 1;
	if(strfind(text, "л", true) != -1) return 1;
	if(strfind(text, "м", true) != -1) return 1;
	if(strfind(text, "н", true) != -1) return 1;
	if(strfind(text, "о", true) != -1) return 1;
	if(strfind(text, "п", true) != -1) return 1;
	if(strfind(text, "р", true) != -1) return 1;
	if(strfind(text, "с", true) != -1) return 1;
	if(strfind(text, "т", true) != -1) return 1;
	if(strfind(text, "у", true) != -1) return 1;
	if(strfind(text, "ф", true) != -1) return 1;
	if(strfind(text, "х", true) != -1) return 1;
	if(strfind(text, "ц", true) != -1) return 1;
	if(strfind(text, "ч", true) != -1) return 1;
	if(strfind(text, "ш", true) != -1) return 1;
	if(strfind(text, "щ", true) != -1) return 1;
	if(strfind(text, "ъ", true) != -1) return 1;
	if(strfind(text, "ы", true) != -1) return 1;
	if(strfind(text, "ь", true) != -1) return 1;
	if(strfind(text, "э", true) != -1) return 1;
	if(strfind(text, "ю", true) != -1) return 1;
	if(strfind(text, "я", true) != -1) return 1;
	return 0;
}

stock GetVehicleType(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	    case 483,534,535,536,558,559,560,561,562,565,567,575,576: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsACop(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_POLICIA,TEAM_SFPD,TEAM_LVPD,TEAM_FBI: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAArmy(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_ARMIYA: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAGang(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_OPGTEST1,TEAM_BALLAS,TEAM_RIFA,TEAM_OPGTEST2,TEAM_VAGOS: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAMafia(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_OPGOR,TEAM_OPGYG: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsANews(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAMedic(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAMayor(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR: return 1;
	    default: return 0;
	}
	return 0;
}

stock SaveGZ(idx)
{
	format(query, 100, "UPDATE "T_GANGZONE" SET fraction = %i WHERE id = %i", GZInfo[idx][gFrak], idx);
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

stock SetPlayerCriminal(playerid, killerid[], reason[])
{
	PI[playerid][pCrimes]++;
	strmid(PI[playerid][pWantedWho], killerid, 0, strlen(killerid), MAX_PLAYER_NAME);
	strmid(PI[playerid][pWantedReason], reason, 0, strlen(reason), 32);
	SendMes(playerid, COLOR_RED, "Вы совершили преступление: %s. Сообщает: %s.", reason, killerid);
	SendMes(playerid, COLOR_RED, "Ваш уровень розыска: %i", PI[playerid][pWanted]);
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(IsACop(i)) SendMes(i, 0x3399FFFF, "[Всем постам] %s[%i] совершил преступление: %s. Уровень розыска: %i", GetName(playerid), playerid, reason, PI[playerid][pWanted]);
	}
	PI[playerid][pZakon]--;
	return 1;
}

stock NotFlyingHack(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,20.0,1968.3948,-1198.0753,17.4500)||IsPlayerInRangeOfPoint(playerid,20.0,2310.9861,-1412.8881,21.6151)||
	IsPlayerInRangeOfPoint(playerid,20.0,1241.1094,-2379.7263,8.3145)||IsPlayerInRangeOfPoint(playerid,20.0,225.6394,-1187.0551,73.4500)||
	IsPlayerInRangeOfPoint(playerid,20.0,193.2040,-1224.7693,76.5034)||IsPlayerInRangeOfPoint(playerid,20.0,196.0067,-1232.3684,76.5034)||
    IsPlayerInRangeOfPoint(playerid,20.0,512.7349,-1104.1942,78.8238)||IsPlayerInRangeOfPoint(playerid,20.0,1283.7939,-806.5845,86.1230)||
	IsPlayerInRangeOfPoint(playerid,20.0,2531.6001,1568.4032,8.4171)||IsPlayerInRangeOfPoint(playerid,60.0,2105.2651,1916.6781,9.5989)||
	IsPlayerInRangeOfPoint(playerid,150.0,-792.4582,2173.0356,40.0821)||IsPlayerInRangeOfPoint(playerid,150.0,1993.5868,1601.2623,9.2979))return 1;
    return 0;
}

stock AntiCarHack(playerid)
{
    SetPVarInt(playerid, "CarHackUsing", 0);
    return 1;
}

stock PlayerSpeed(playerid)
{
    new Float:X, Float:Y, Float:Z;
    if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,X,Y,Z);
    return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 170.0 );
}

stock GetPlayerSpeed(playerid)
{
    new Float:Coord[4];
    if(IsPlayerInAnyVehicle(playerid)) return 0;
	GetPlayerVelocity(playerid,Coord[0], Coord[1], Coord[2]);
    Coord[3] = floatsqroot(floatpower(floatabs(Coord[0]), 2.0) + floatpower(floatabs(Coord[1]), 2.0) + floatpower(floatabs(Coord[2]), 2.0)) * 214.3;
    return floatround(Coord[3]);
}

stock GetVehicleSpeed(vehicleid)
{
    new Float:ST[3];
    GetVehicleVelocity(vehicleid, ST[0], ST[1], ST[2]);
    return floatround(floatsqroot(ST[0]*ST[0] + ST[1]*ST[1] + ST[2]*ST[2])*110.3);
}

forward Float:GetPlayerSpeed1(playerid);
public Float:GetPlayerSpeed1(playerid)
{
	new Float:X, Float:Y, Float:Z, Float:PlayerToPoints;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), X, Y, Z);
	PlayerToPoints = floatsqroot(floatpower(X, 2) + floatpower(Y, 2) + floatpower(Z, 2))*100;
	return PlayerToPoints;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
  /* if(GetVehicleModel(vehicleid) != 570 && GetVehicleModel(vehicleid) != 449)
	{
	    if(vel_x > 100 || vel_y > 100 || vel_z > 100) CheatKick(playerid, 4712);
	}*/
	return 1;
}

stock PlayerTimer()
{
    foreach(new i: Player)
	{
		if(PlayerLogged[i] == true)
		{
		    // MONEY CHECK
		    if(CheckOutMoney[i] == false)
			{
				if(PI[i][pCash] < GetPlayerMoney(i))
				{
				    ResetPlayerMoney(i);
				    GivePlayerMoney(i,PI[i][pCash]);
				}
			}
			else CheckOutMoney[i] = false;
			
		    // HP CHECK
			new Float: FloatParam;
			if(PlayerUseHeal[i] == 0)
			{
				GetPlayerHealth(i, FloatParam);
				if(PI[i][pHeal] < FloatParam) SetPlayerHealth(i, PI[i][pHeal]);
				else PI[i][pHeal] = FloatParam;
			}
			HospitalHealth(i);
			
			// ARM CHECK
			GetPlayerArmour(i, FloatParam);
			if(PlayerArmour[i] < FloatParam) SetPlayerArmour(i, PlayerArmour[i]);
			else PlayerArmour[i] = FloatParam;
			
			// WEAPON AC CHECK
			for(new a = 0; a < 11; a++)
			{
			    if(AC_GunCheattime[i] > 0)
			    {
			        AC_GunCheattime[i]--;
			        break;
			    }
			    new weaponid, ammo;
			    GetPlayerWeaponData(i, a, weaponid, ammo);
			    if(PI[i][pGun][a] != weaponid && weaponid != 0)
				{
				    #if DEBUG_STATUS == true
				    	printf("PI[playerid][pGun][%d][%d][0]: %d != %d && %d != 0", i, a, PI[i][pGun][a], weaponid, weaponid);
					#endif
				//	CheatKick(i, 8125);
			 		break;
				}
			    if(PI[i][pAmmo][a] < ammo && PI[i][pAmmo][a] != 0)
				{
				    #if DEBUG_STATUS == true
	   			    	printf("PI[playerid][pAmmo][%d][%d][1]: %d < %d", i, a, PI[i][pAmmo][a], ammo);
					#endif
				//	CheatKick(i, 8126);
					break;
				}
				PI[i][pGun][a] = weaponid;
			    PI[i][pAmmo][a] = ammo;
			}
			
			// AIRBRAKE
            new carid = GetPlayerVehicleID(i);
            if(IsPlayerInVehicle(i, carid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
            {
                new Float:X, Float:Y, Float:Z, Float:distveh = floatround(GetVehicleDistanceFromPoint(carid, VehiclePos[carid][0], VehiclePos[carid][1], VehiclePos[carid][2]));
                GetVehiclePos(carid, X, Y, Z);
                if(distveh > 100 && GetPVarInt(i, "AntiBreik") == 0 && PI[i][pAFK] < 3 && PI[i][pAdmin] == ADM_NONE && !IsAPlane(GetPlayerVehicleID(i)))
				{
					PlayerBrake[i]++;
				}
				else if(PlayerBrake[i] > 0) PlayerBrake[i]--;
                if(GetVehicleSpeed(carid) > 15)
                {
                    VehiclePos[carid][0] = X;
                    VehiclePos[carid][1] = Y;
                    VehiclePos[carid][2] = Z;
                }
            }
            else
            {
                new Float:X, Float:Y, Float:Z, Float:distpl = floatround(GetPlayerDistanceFromPoint(i, PI[i][pPos][0], PI[i][pPos][1], PI[i][pPos][2]));
                GetPlayerPos(i, X, Y, Z);
                if(distpl > 60 && GetPVarInt(i, "AntiBreik") == 0 && PI[i][pAFK] < 3 && PI[i][pAdmin] == ADM_NONE)
				{
					PlayerBrake[i]++;
				}
				else if(PlayerBrake[i] > 0) PlayerBrake[i]--;
                if(GetPlayerSpeed(i) > 0)
				{
					PI[i][pPos][0] = X;
					PI[i][pPos][1] = Y;
					PI[i][pPos][2] = Z;
				}
            }
			
			// SPEEDHACK
            if(!IsPlayerNPC(i) && GetPVarInt(i,"AC_Protection") == 1)
	        {
                if(IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsAPlane(GetPlayerVehicleID(i)))
		        {
                    GetVehicleVelocity(GetPlayerVehicleID(i), AC_Speed_Car_C[i][0], AC_Speed_Car_C[i][1], AC_Speed_Car_C[i][2]);
                    AC_Speed_Car[i] = floatround(floatsqroot(AC_Speed_Car_C[i][0] * AC_Speed_Car_C[i][0] + AC_Speed_Car_C[i][1] * AC_Speed_Car_C[i][1] + AC_Speed_Car_C[i][2] * AC_Speed_Car_C[i][2]) * 200.0);
                    if((AC_Speed_Car[i] - AC_Speed_Car_1[i])>100)
			        {
                    }
                    else AC_Speed_Car_1[i] = AC_Speed_Car[i];
                }
            }
            
            PI[i][pAFK]++;
			if(PI[i][pAFK] >= 6)
			{
				new temp[144];
				format(temp, sizeof(temp), "{FFFFFF}Отошёл:{00FF61} %s", Converts(PI[i][pAFK]));
				SetPlayerChatBubble(i, temp, COLOR_RED, 10.0, 1600);
			}
			if(PI[i][Spectating][1] != INVALID_PLAYER_ID)
			{
				new str[300];
				new Float:values[3];
				GetPlayerHealth(PI[i][Spectating][0], values[0]);
				GetPlayerArmour(PI[i][Spectating][0], values[1]);
				GetVehicleHealth(GetPlayerVehicleID(PI[i][Spectating][0]), values[2]);
				format(str, sizeof(str), "%s~n~ID: %d~n~Ping: %d~n~HP: %.1f~n~Armour: %.1f~n~Speed: %d~n~CarHP: %.1f~n~Ammo: %i:%i~n~Warns: %d~n~Cash: %d",
				GetName(PI[i][Spectating][0]), PI[i][Spectating][0], GetPlayerPing(PI[i][Spectating][0]),
				values[0], values[1], SpeedVehicle(PI[i][Spectating][0]) / 2, values[2],
				GetPlayerWeapon(PI[i][Spectating][0]), GetPlayerAmmo(PI[i][Spectating][0]),
				PI[PI[i][Spectating][0]][pWarn], PI[PI[i][Spectating][0]][pCash]);
				PlayerTextDrawSetString(PI[i][Spectating][1], PI[PI[i][Spectating][1]][SpecTxt], str);
			}
			new superspeed = GetPlayerSpeed(i);
	   		if(superspeed > 28)
			{
			    if(PI[i][pAdmin] == ADM_NONE)
			    {
					new animlib[30], animname[30];
			    	GetAnimationName(GetPlayerAnimationIndex(i), animlib, sizeof(animlib), animname, sizeof(animname));
			        if(strcmp(animlib, "SWIM", true) == 0 && strcmp(animname, "SWIM_crawl", true) == 0)
			        {
					   	printf("%s Kicked for fly hack",GetName(i));
					}
				}
			}
		}
		
	    AntiCarHack(i);
		
		if(AcStruct[i][CheckMapTP] == 1)
	   	{
	    	new Float:dis = GetPlayerDistanceFromPoint(i, AcStruct[i][MapTP][0], AcStruct[i][MapTP][1], AcStruct[i][MapTP][2]);
		    if(dis < 5.0)
		    {
		    
		    }
	    	AcStruct[i][CheckMapTP] = 0;
	   	}
	   	GetPlayerPos(i, AcStruct[i][LastOnFootPosition][0], AcStruct[i][LastOnFootPosition][1], AcStruct[i][LastOnFootPosition][2]);
	   	
	   	if(GetPVarInt(i, "AntiBreik") > 0) SetPVarInt(i, "AntiBreik", GetPVarInt(i, "AntiBreik") - 1);
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(i);
			if(Fuel[vehicleid] < 1 && PlayerFuelMes[vehicleid] == true && GetVehicleModel(vehicleid) != 462)
			{
				SendClientMessage(i, COLOR_GREY, "В транспорте закончился бензин, необходима заправка!");
				Engine[vehicleid] = false;
				GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(vehicleid,false,lights,alarm,doors,bonnet,boot,objective);
				PlayerFuelMes[vehicleid] = false;
			}
		}
		
	    PI[i][pCheckTime]++;
	    if(PI[i][pAdmin]) AdminInfo[i][admTimeMin]++;
	    if(Ether[i] == true) SetPVarInt(i, "InEther", GetPVarInt(i, "InEther") + 1);
	    if(GetPVarInt(i, "TypeBus")) PI[i][pBusTime]++;
		
		if(IsPlayerInRangeOfPoint(i,1.0,278.8305,2868.6860,1.7934))
		{
			if(IsAArmy(i) || IsAGang(i))
			{
				StealMats(i);
			}
		}
	/*	if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
		    if(SpeedVehicle(i) / 2 > MAX_SPEED && GetVehicleModel(GetPlayerVehicleID(i)) != 519 && GetVehicleModel(GetPlayerVehicleID(i)) != 520)
		    {
		        if(!IsAPlane(GetPlayerVehicleID(i))) CheatKick(i, 1188);
		    }
		}*/
		if(Mobile[i] != -1 && EtherCalled[i] == false)
		{
			SetPVarInt(i, "CallTime", GetPVarInt(i, "CallTime") + 1);
			if(GetPVarInt(i, "CallTime") >= 10)
			{
				if(PI[i][pBank] > PHONE_PRICE)
				{
					PI[i][pBank] -= PHONE_PRICE;
					SetPVarInt(i, "CallTime", 0);
				}
				else
				{
					new callerid = Mobile[i];
					SendClientMessage(callerid, COLOR_GRAD2, "Абонент положил трубку");
					SetPlayerSpecialAction(callerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					CellTime[callerid] = -1;
					CellTime[i] = -1;
					SendClientMessage(i,  COLOR_GRAD2, "Недостаточно средств на счету...");
					Mobile[i] = -1;
					SetPlayerSpecialAction(i,SPECIAL_ACTION_STOPUSECELLPHONE);
					DeletePVar(i, "CallTime");
					DeletePVar(callerid, "CallTime");
				}
			}
		}
		if(GetPVarInt(i, "TimeTaxi") > 0)
		{
			SetPVarInt(i, "TimeTaxi", GetPVarInt(i, "TimeTaxi") - 1);
			if(GetPVarInt(i, "TimeTaxi") == 0)
			{
				if(GetMoney(i) > GetPVarInt(i, "TaxiPrice"))
				{
				    new string[32];
					format(string, sizeof(string), "~r~-%i Рублей", GetPVarInt(i, "TaxiPrice"));
					GameTextForPlayer(i, string, 5000, 1);
					format(string, sizeof(string), "~b~+%i Рублей", GetPVarInt(i, "TaxiPrice"));
					GameTextForPlayer(GetPVarInt(i, "PlayerTaxi"), string, 5000, 1);
					TransferMoney(i, -1, GetPVarInt(i, "TaxiPrice"));
					PI[GetPVarInt(i, "PlayerTaxi")][pPayCheck] += GetPVarInt(i, "TaxiPrice");
					SetPVarInt(i, "TimeTaxi", 30);
					SetPVarInt(GetPVarInt(i, "PlayerTaxi"), "TaxiMoney", GetPVarInt(GetPVarInt(i, "PlayerTaxi"), "TaxiMoney") + GetPVarInt(i, "TaxiPrice"));
				}
				else
				{
					SendClientMessage(i, COLOR_GREY, "У вас не хватает денег!");
					RemoveFromVehicle(i);
				}
			}
		}
		if(GetPVarInt(i, "TimeBus") > 0)
		{
		    SetPVarInt(i, "TimeBus", GetPVarInt(i, "TimeBus") - 1);
		    new string[32];
			format(string, sizeof(string), "~r~%i", GetPVarInt(i, "TimeBus"));
			GameTextForPlayer(i, string, 2000, 6);
			if(GetPVarInt(i, "TimeBus") == 0)
			{
				DeletePVar(i, "TimeBus");
				new p = pPressed[i];
				SetPVarInt(i, "BusStop", 1);
				SetPlayerRaceCheckpoint(i,0,BatirevoUgniy[p][0],BatirevoUgniy[p][1],BatirevoUgniy[p][2],BatirevoUgniy[p][3],BatirevoUgniy[p][4],BatirevoUgniy[p][5],5.0);
			}
		}
		if(EtherCalled[i] == true)
		{
			if(PI[i][pPhoneBalance] > CallPrice[PI[i][pNews]-1])
			{
				PI[i][pPhoneBalance] -= CallPrice[PI[i][pNews]-1];
				if(PI[i][pNews]-1 == 0)
				{
					FracBank[8] += CallPrice[PI[i][pNews]-1];
					MysqlUpdateOtherInt("lsnbank", FracBank[8]);
				}
				if(PI[i][pNews]-1 == 1)
				{
					FracBank[9] += CallPrice[PI[i][pNews]-1];
					MysqlUpdateOtherInt("sfnbank", FracBank[9]);
				}
				if(PI[i][pNews]-1 == 2)
				{
					FracBank[10] += CallPrice[PI[i][pNews]-1];
					MysqlUpdateOtherInt("lvnbank", FracBank[10]);
				}
			}
			else
			{
				new callerid = Mobile[i];
				SendClientMessage(callerid, COLOR_GRAD2, "Абонент положил трубку");
				SetPlayerSpecialAction(callerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				CellTime[callerid] = -1;
				CellTime[i] = -1;
				Mobile[callerid] = -1;
				if(EtherCalled[i] == true) EtherCalled[i] = false;
				if(EtherCalled[callerid] == true) EtherCalled[callerid] = false;
				SendClientMessage(i,  COLOR_GRAD2, "Недостаточно средств на счету...");
				Mobile[i] = -1;
				SetPlayerSpecialAction(i,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		if(PI[i][pJail] > 0)
		{
			PI[i][pJailTime]--;
			if(PI[i][pJailTime] == 0)
			{
				if(PI[i][pJail] == 1)
				{
				    SendClientMessage(i, COLOR_RED,"Вы отбыли свой срок. Больше не нарушайте правила сервера!");
				    PI[i][pSpawnChange] = 0;
    				SpawnPlayer(i);
				}
				if(PI[i][pJail] == 2)
				{
				    SendClientMessage(i, COLOR_RED,"Вы отбыли свой срок. Больше не нарушайте правила сервера!");
				    PI[i][pSpawnChange] = 0;
    				SpawnPlayer(i);
				}
				if(PI[i][pJail] == 3)
				{
				    SendClientMessage(i, COLOR_RED,"Вы отбыли свой срок. Больше не нарушайте правила сервера!");
				    PI[i][pSpawnChange] = 0;
    				SpawnPlayer(i);
				}
				if(PI[i][pJail] == 4)
				{
				    SendClientMessage(i, COLOR_RED,"Вы отбыли свой срок. Больше не нарушайте правила сервера!");
				    PI[i][pSpawnChange] = 0;
    				SpawnPlayer(i);
				}
				PI[i][pJail] = PI[i][pJailTime] = 0;
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
			}
		}
		if(PI[i][pMuted] > 0)
		{
			PI[i][pMuted]--;
			if(PI[i][pMuted] == 0)
			{
               SendClientMessage(i, 0x66CC00FF, "Доступ в чат восстановлен");
			}
		}
		if(PI[i][pWanted] > 0)
		{
			PI[i][pWantedTime]--;
			if(PI[i][pWantedTime] <= 0)
			{
				PI[i][pWanted]--;
				SetPlayerWantedLevel(i, PI[i][pWanted]);
				if(PI[i][pWanted] > 0) PI[i][pWantedTime] = 1800 + random(300);
			}
		}
		if(!PI[i][pAdmin])
		{
		    new speed = PlayerSpeed(i);
		    if(!speed) SetPVarInt(i, "HungerTime", GetPVarInt(i, "HungerTime") + 1);
		    else SetPVarInt(i, "HungerTime", GetPVarInt(i, "HungerTime") + speed/4);
			if(GetPVarInt(i, "HungerTime") == 250 && !PI[i][pVip])
			{
				SetPVarInt(i, "HungerTime", 0);
				if(PI[i][pVip]) PI[i][pHunger] -= 2;
				else PI[i][pHunger]--;
				SetHunger(i, PI[i][pHunger]);
				if(PI[i][pHunger] == 1 || PI[i][pHunger] == 5 || PI[i][pHunger] == 10 || PI[i][pHunger] == 15)
					SendClientMessage(i, COLOR_YELLOW,"Вы проголодались! Сходите в закусочную!");
			}
			SetPVarInt(i, "HealthTime", GetPVarInt(i, "HealthTime") + 1);
			if(GetPVarInt(i, "HealthTime") == 60)
			{
				SetPVarInt(i, "HealthTime", 0);
				if(PI[i][pHunger] <= 0)
				{
				    new Float:shealth;
				    GetPlayerHealth(i, shealth);
				    SetHealth(i, (PI[i][pImprove][0] == 1) ? (shealth-1.0) : (shealth-2.0));
				}
			}
			if(PI[i][pHeal] < 20)
			{
				SetPVarInt(i, "HealthTime_", GetPVarInt(i, "HealthTime_") + 1);
				if(GetPVarInt(i, "HealthTime_") == 600)
				{
					SetPVarInt(i, "HealthTime_", 0);
					SendClientMessage(i, COLOR_YELLOW, "У вас сильно ухудшилось здоровье, вылечитесь у медика!");
				}
			}
		}
		if(GetPlayerDrunkLevel(i) > 0)
		{
			SetPVarInt(i, "DrunkTime", GetPVarInt(i, "DrunkTime") + 1);
			if(GetPVarInt(i, "DrunkTime") >= 100)
			{
				SetPlayerDrunkLevel(i, GetPlayerDrunkLevel(i) - 1000);
				SetPVarInt(i, "DrunkTime", 0);
			}
		}
		if(GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID)
		{
			new cid = GetPlayerSurfingVehicleID(i);
			new cm = GetVehicleModel(cid);
			switch(cm)
			{
				case 430,446,452,453,454,472,473,484,493,595,444: { return 1; }
				default: { }
			}
			new Float:x, Float:y, Float:z;
			GetPlayerPos(i, x, y, z);
			x -= 1.5;
			SetPlayerPos(i, x, y, z);
		}
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
     	{
     	    new Float:vehhealth;
        	GetVehicleHealth(GetPlayerVehicleID(i), vehhealth);
	    	if(vehhealth <= 400)
	    	{
	    	    if(Engine[GetPlayerVehicleID(i)] == true) SendClientMessage(i, COLOR_GREY, "Машина поломана, вызовите механика!");
      			Engine[GetPlayerVehicleID(i)] = false;
            	GetVehicleParamsEx(GetPlayerVehicleID(i),engine,lights,alarm,doors,bonnet,boot,objective);
            	SetVehicleParamsEx(GetPlayerVehicleID(i),false,lights,alarm,doors,bonnet,boot,objective);
	    	}
	    }
		if(GetPVarInt(i, "BusTime") > 0)
		{
			if(GetPlayerState(i) != 2 || GetPlayerVehicleID(i) != PI[i][BusCarID])
			{
				new string[32];
				SetPVarInt(i, "BusTime", GetPVarInt(i, "BusTime") - 1);
				format(string, sizeof(string), "~r~%d",GetPVarInt(i, "BusTime"));
				GameTextForPlayer(i, string, 2000, 6);
				new CB[16];
		    	Convert(PI[i][pBusTime], CB);
				if(GetPVarInt(i, "BusTime") == 0)
				{
				    if(IsValidDynamic3DTextLabel(BusText3D[i])) DestroyDynamic3DTextLabel(BusText3D[i]);
					SendMes(i, COLOR_BLUE, "Рабочий день завершен. Вами заработано: %i Рублей. Время рейса: %s", GetPVarInt(i, "BusMoney"), CB);
					SendClientMessage(i, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
					PI[i][pPayCheck] += GetPVarInt(i, "BusMoney");
					SetVehicleToRespawn(PI[i][BusCarID]);
					PI[i][BusCarID] = INVALID_VEHICLE_ID;
					DeletePVar(i, "BusTime");
					DeletePVar(i, "TypeBus");
					DeletePVar(i, "PriceBus");
					DeletePVar(i, "BusStop");
					DeletePVar(i, "BusMoney");
					PI[i][pBusTime] = 0;
					pPressed[i] = 0;
				}
			}
		}
		if(GetPVarInt(i, "TruckerJobTime") > 0)//дальнобойщик
		{
			if(GetPlayerState(i) != 2)
			{
				SetPVarInt(i, "TruckerJobTime", GetPVarInt(i, "TruckerJobTime") - 1);
				if(GetPVarInt(i, "TruckerJobTime") == 0)
				{
                    DestroyVehicleEx(TruckerCar[i]);
                    PI[i][TruckerCarID] = INVALID_VEHICLE_ID;
                    TruckerCar[i] = 0;
					SendClientMessage(i, COLOR_BLUE, "К сожаленю вы не успели сесть в грузовик.");
					DeletePVar(i, "TruckerJobTime");
					DeletePVar(i, "TruckerJob");
					DeletePVar(i, "TruckerJobRazgruzka");
					pPressed[i] = 0;
					DisablePlayerRaceCheckpoint(i);
				}
			}
		}
		if(GetPVarInt(i, "TruckerJobTimeGoToCar") > 0)//дальнобойщик
		{
			if(GetPlayerState(i) != 2)
			{
				SetPVarInt(i, "TruckerJobTimeGoToCar", GetPVarInt(i, "TruckerJobTimeGoToCar") - 1);
				if(GetPVarInt(i, "TruckerJobTimeGoToCar") == 0)
				{
                    DestroyVehicleEx(TruckerCar[i]);
                    TruckerCar[i] = 0;
                    DisablePlayerRaceCheckpoint(i);
					SendClientMessage(i, COLOR_DARKORANGE, "К сожалению вы не успели сесть в свой грузовик.");
					DeletePVar(i, "TruckerJobTime");
					DeletePVar(i, "TruckerJob");
					DeletePVar(i, "TruckerJobRazgruzka");
				}
			}
		}
		if(CellTime[i] > -1)
		{
			CellTime[i]++;
			if(Mobile[Mobile[i]] == -1 && CellTime[i] == 5)
			{
				CellTime[i] = 0;
				new string[64];
				format(string, sizeof(string), "У %s звонит мобильный телефон", GetName(Mobile[i]));
				ProxDetectorNew(Mobile[i], 13.0, COLOR_PURPLE, string);
			}
		}
		if(TransferReset[i] > 0) TransferReset[i]--;
		if(UnMaskReset[i] > 0) UnMaskReset[i]--;
	}
	return 1;
}

stock GiveBankMoney(playerid, money, reason[] = "None")
{
    new string[100];
	PI[playerid][pBank] += (money);
	format(string,sizeof(string),"[%s] [%s]: [%d Рублей] [%d Рублей] [%s]",PI[playerid][pIP],GetName(playerid),money,PI[playerid][pCash],reason);
	SendLog("BankMoneyLog",string);
	return 1;
}

stock TransferMoney(playerid, toplayerid, money)
{
    if(GetPlayerMoney(playerid) < 0) ResetPlayerMoney(playerid);
	if(GetPlayerMoney(toplayerid) < 0) ResetPlayerMoney(toplayerid);
	if(toplayerid >= 0)
	{
	    GivePlayerMoney(toplayerid, money);
		PI[toplayerid][pCash] = PI[toplayerid][pCash] + money;
		CheckOutMoney[toplayerid] = true;
	}
	if(playerid >= 0)
	{
		GivePlayerMoney(playerid, -money);
		PI[playerid][pCash] = PI[playerid][pCash] - money;
		CheckOutMoney[playerid] = true;
	}
}

stock ResetMoney(playerid)
{
	PI[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
}

stock GetMoney(playerid)
{
	return PI[playerid][pCash];
}

stock HealthCheck()
{
	new Float: Heal;
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		GetPlayerHealth(i, Heal);
		if(PI[i][pHeal] < Heal) SetPlayerHealth(i, PI[i][pHeal]);
		else PI[i][pHeal] = Heal;
	}
}

stock ArmourCheck()
{
	new Float: Arm;
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		GetPlayerArmour(i, Arm);
		if(PlayerArmour[i] < Arm) SetPlayerArmour(i, PlayerArmour[i]);
		else PlayerArmour[i] = Arm;
	}
}

stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return 0;
}

/*stock CheatKick(playerid,errorcode)
{
	if(playerid == INVALID_PLAYER_ID) return 1;
	new string[128];
	if(PI[playerid][pAdmin] != ADM_NONE)
	{
	    format(string, sizeof(string), "[A] Античит попытался Вас кикнуть {F04245}(ac-code %d)", errorcode);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	if(errorcode != 0)
	{
	    format(string, sizeof(string), "Обнаружено использование чит-программ {F04245}(ac-code %d)", errorcode);
		SendClientMessage(playerid, COLOR_LIME, string);
		Kick(playerid);
	}
	else Kick(playerid);
	return 1;
}*/

stock SaveVehicleTuning(playerid)
{
	PI[playerid][cVehcoms][0] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_SPOILER);
	PI[playerid][cVehcoms][1] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_HOOD);
	PI[playerid][cVehcoms][2] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_ROOF);
	PI[playerid][cVehcoms][3] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_SIDESKIRT);
	PI[playerid][cVehcoms][4] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_LAMPS);
	PI[playerid][cVehcoms][5] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_NITRO);
	PI[playerid][cVehcoms][6] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_EXHAUST);
	PI[playerid][cVehcoms][7] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_WHEELS);
	PI[playerid][cVehcoms][8] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_STEREO);
	PI[playerid][cVehcoms][9] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_HYDRAULICS);
	PI[playerid][cVehcoms][10] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_FRONT_BUMPER);
	PI[playerid][cVehcoms][11] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_REAR_BUMPER);
	PI[playerid][cVehcoms][12] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_VENT_RIGHT);
	PI[playerid][cVehcoms][13] = GetVehicleComponentInSlot(PI[playerid][PlayerCarID], CARMODTYPE_VENT_LEFT);
	format(PI[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	PI[playerid][cVehcoms][0], PI[playerid][cVehcoms][1], PI[playerid][cVehcoms][2],
	PI[playerid][cVehcoms][3], PI[playerid][cVehcoms][4], PI[playerid][cVehcoms][5],
	PI[playerid][cVehcoms][6], PI[playerid][cVehcoms][7], PI[playerid][cVehcoms][8],
	PI[playerid][cVehcoms][9], PI[playerid][cVehcoms][10], PI[playerid][cVehcoms][11],
	PI[playerid][cVehcoms][12], PI[playerid][cVehcoms][13]);
	return 1;
}

stock ShowSTODialog(playerid)
{
	ShowPlayerDialog(playerid,D_CTO+1,DIALOG_STYLE_LIST,"{7efd7d}Тюнинг меню","1. Покраска\n2. Гидравлика\n3. Закись азота\n4. Диски\n5.Починить транспорт","Принять","Выход");
	return 1;
}

stock CreateAccount(playerid, password[])
{
    new pass[50];
    mysql_escape_string(password, pass, dbHandle);
	if(IsTextInvalid(pass))
	{
		SendClientMessage(playerid, COLOR_DARKORANGE, "В пароле должны быть только буквы и цифры");
		return Kick(playerid);
	}
	new data[15];
	format(data, sizeof(data), "%s", date("%dd.%mm.%yyyy",gettime()));
	new Query[500];
	new Info[300];
	strcat(Query, "INSERT INTO "T_ACCOUNTS" ");
	strcat(Query, "(`name`, `password`, `regip`, `datareg`, `sex`, `age`, `model`, `mail`, `referal`) ");
	strcat(Query, "VALUES ");
	format(Info, sizeof(Info), "('%s', '%s', '%s', '%s', '%i', '%i', '%i', '%s', '%s')",
	GetName(playerid), pass, PI[playerid][pIP], data, PI[playerid][pSex], PI[playerid][pAge], PI[playerid][pModel], PI[playerid][pMail], PI[playerid][pReferal]);
	strcat(Query, Info);
	mysql_tquery(dbHandle, Query, "", "");
	PlayerLogged[playerid] = true;
	PlayerRegistered[playerid] = 0;
	PI[playerid][pCash] = 300;
	PI[playerid][pLevel] = 1;
	PI[playerid][pBank] = 0;
	PI[playerid][pCredits] = 0;
	PI[playerid][pTotalCredits] = 0;
	PI[playerid][pTruckLevel] = 1;
	SpawnPlayer(playerid);
	return 1;
}

forward OnPlayerLogin(playerid, tmp[]);
public OnPlayerLogin(playerid, tmp[])
{
	mysql_format(dbHandle, query, sizeof(query), "SELECT * FROM bans WHERE name = '%e'", GetName(playerid));
	mysql_tquery(dbHandle, query, "check_banlist", "i", playerid);
	new posx[3];
    new posy[3];
    new posz[3];
    new pint[3];
    new pworld[3];
	if(GetPVarInt(playerid, "gotovkvhody") == 0)
	{
	    SelectTextDraw(playerid, 0xFFFFFFFF);
		return 1;
	}

	
	PI[playerid][pID] = cache_get_row_int(0, 0, dbHandle); // id
	//cache_get_row(0, 2, PI[playerid][pPassword], dbHandle, 32); // password
	cache_get_row(0, 3, PI[playerid][pLastIP], dbHandle, 16); // ip
	cache_get_row(0, 4, PI[playerid][pNumberVehicle], dbHandle, 20); // veh_number
	PI[playerid][pRegVehicle] = cache_get_row_int(0, 5, dbHandle); // veh_reg
	PI[playerid][pAdmin] = cache_get_row_int(0, 6, dbHandle); // admin
	PI[playerid][pSecurityCode] = cache_get_row_int(0, 7, dbHandle); // securitycode
	PI[playerid][pCheckCode] = cache_get_row_int(0, 8, dbHandle); // checkcode
	cache_get_row(0, 9, PI[playerid][pMail], dbHandle, 64); // mail
	PI[playerid][pLevel] = cache_get_row_int(0, 10, dbHandle); // level
	PI[playerid][pCash] = cache_get_row_int(0, 11, dbHandle); // cash
	PI[playerid][pBank] = cache_get_row_int(0, 12, dbHandle); // bank
	PI[playerid][pExp] = cache_get_row_int(0, 13, dbHandle); // exp
	cache_get_row(0, 14, PI[playerid][pRegIP], dbHandle, 16); // regip
	cache_get_row(0, 15, PI[playerid][pRegData], dbHandle, 15); // datareg
	PI[playerid][pLeader] = cache_get_row_int(0, 16, dbHandle); // leader
	PI[playerid][pTempLeader] = cache_get_row_int(0, 17, dbHandle); // templeader
	PI[playerid][pMember] = cache_get_row_int(0, 18, dbHandle); // member
	PI[playerid][pRank] = cache_get_row_int(0, 19, dbHandle); // rank
	PI[playerid][pWarn] = cache_get_row_int(0, 20, dbHandle); // warn
	PI[playerid][pSex] = cache_get_row_int(0, 21, dbHandle); // sex
	PI[playerid][pAge] = cache_get_row_int(0, 22, dbHandle); // age
	PI[playerid][pModel] = cache_get_row_int(0, 23, dbHandle); // model
	PI[playerid][pMemberSkin] = cache_get_row_int(0, 24, dbHandle); // memberskin
	cache_get_row(0, 25, PI[playerid][pLics], dbHandle, 16); // lic
	PI[playerid][pMuted] = cache_get_row_int(0, 28, dbHandle); // mute
	PI[playerid][pPick] = cache_get_row_int(0, 29, dbHandle); // pick
	PI[playerid][pCheckTime] = cache_get_row_int(0, 30, dbHandle); //checktime
	PI[playerid][pNews] = cache_get_row_int(0, 31, dbHandle); // news
	//PI[playerid][pPhone] = cache_get_row_int(0, 32, dbHandle); // phone
	PI[playerid][pPhoneNumber] = cache_get_row_int(0, 33, dbHandle); // phonenumber
	cache_get_row(0, 34, PI[playerid][pTexts], dbHandle, 20); // text
	PI[playerid][pJail] = cache_get_row_int(0, 35, dbHandle); // jail
	PI[playerid][pJailTime] = cache_get_row_int(0, 36, dbHandle); // jailtime
	PI[playerid][pWanted] = cache_get_row_int(0, 37, dbHandle); // wanted
	PI[playerid][pWantedTime] = cache_get_row_int(0, 38, dbHandle); // wantedtime
	cache_get_row(0, 39, PI[playerid][pWantedWho], dbHandle, MAX_PLAYER_NAME); // wantedwho
	cache_get_row(0, 40, PI[playerid][pWantedReason], dbHandle, 32); // wantedreason
	PI[playerid][pHeal] = cache_get_row_float(0, 41, dbHandle); // heal
	PI[playerid][pDrugs] = cache_get_row_int(0, 42, dbHandle); // drugs
	PI[playerid][pPatron] = cache_get_row_int(0, 43, dbHandle); // patron
	PI[playerid][pGunAmount] = cache_get_row_int(0, 44, dbHandle); // gunamount
	PI[playerid][pCrimes] = cache_get_row_int(0, 45, dbHandle); // crimes
	PI[playerid][pJob] = cache_get_row_int(0, 46, dbHandle); // job
	PI[playerid][pMarried] = cache_get_row_int(0, 47, dbHandle); // married
	cache_get_row(0, 48, PI[playerid][pWhoMarried], dbHandle, MAX_PLAYER_NAME); // whomarried
	cache_get_row(0, 49, PI[playerid][pReferal], dbHandle, MAX_PLAYER_NAME); // referal
	PI[playerid][pRefMoney] = cache_get_row_int(0, 50, dbHandle); // refmoney
	PI[playerid][pPayCheck] = cache_get_row_int(0, 51, dbHandle); // paycheck
	PI[playerid][pCharity] = cache_get_row_int(0, 52, dbHandle); // charity
	PI[playerid][pVip] = cache_get_row_int(0, 53, dbHandle); // vip
	PI[playerid][pVipTime] = cache_get_row_int(0, 54, dbHandle); // viptime
	PI[playerid][pTime] = cache_get_row_int(0, 55, dbHandle); // time
	PI[playerid][pFightStyle] = cache_get_row_int(0, 56, dbHandle); // fstyle
	PI[playerid][pCredits] = cache_get_row_int(0, 57, dbHandle); // credits
	PI[playerid][pTotalCredits] = cache_get_row_int(0, 58, dbHandle); // totalcredits
	PI[playerid][pSkin][0] = cache_get_row_int(0, 59, dbHandle); // skin1
	PI[playerid][pSkin][1] = cache_get_row_int(0, 60, dbHandle); // skin2
	PI[playerid][pSkin][2] = cache_get_row_int(0, 61, dbHandle); // skin3
	PI[playerid][pSpawnChange] = cache_get_row_int(0, 62, dbHandle); // spawnchange
	PI[playerid][pGunSkill][0] = cache_get_row_int(0, 63, dbHandle); // sdpistol
	PI[playerid][pGunSkill][1] = cache_get_row_int(0, 64, dbHandle); // deserteagle
	PI[playerid][pGunSkill][2] = cache_get_row_int(0, 65, dbHandle); // shotgun
	PI[playerid][pGunSkill][3] = cache_get_row_int(0, 66, dbHandle); // mp5
	PI[playerid][pGunSkill][4] = cache_get_row_int(0, 67, dbHandle); // ak47
	PI[playerid][pGunSkill][5] = cache_get_row_int(0, 68, dbHandle); // m4
	PI[playerid][pGunSkill][6] = cache_get_row_int(0, 69, dbHandle); // pistol
	PI[playerid][pGunSkill][7] = cache_get_row_int(0, 70, dbHandle); // microuzi
	PI[playerid][pHunger] = cache_get_row_int(0, 71, dbHandle); // hunger
	PI[playerid][pHealthS] = cache_get_row_int(0, 72, dbHandle); // healths
	PI[playerid][pSportExp] = cache_get_row_int(0, 73, dbHandle); // sportexp
	PI[playerid][pOnline] = cache_get_row_int(0, 74, dbHandle); // online
	PI[playerid][pZakon] = cache_get_row_int(0, 75, dbHandle); // zakon
	PI[playerid][pCity] = cache_get_row_int(0, 76, dbHandle); // city
	cache_get_row(0, 77, PI[playerid][pRepcars], dbHandle, 16); // repcar
	PI[playerid][pBed] = cache_get_row_int(0, 78, dbHandle); // bed
	PI[playerid][pWatch] = cache_get_row_int(0, 79, dbHandle); // watch
	PI[playerid][pCiggare] = cache_get_row_int(0, 80, dbHandle); // ciggare
	PI[playerid][pSprunk] = cache_get_row_int(0, 81, dbHandle); // sprunk
	PI[playerid][pMask] = cache_get_row_int(0, 82, dbHandle); // mask
	PI[playerid][pPhoneBalance] = cache_get_row_int(0, 83, dbHandle); // phonebalance
	PI[playerid][pTruckSkill] = cache_get_row_int(0, 84, dbHandle); // truckskill
	PI[playerid][cModel] = cache_get_row_int(0, 85, dbHandle); // cModel
	PI[playerid][cClass] = cache_get_row_int(0, 86, dbHandle); // cClass
	PI[playerid][cFuel] = cache_get_row_int(0, 87, dbHandle); // cFuel
	PI[playerid][cColor][0] = cache_get_row_int(0, 88, dbHandle); // cColor1
	PI[playerid][cColor][1] = cache_get_row_int(0, 89, dbHandle); // cColor2
	PI[playerid][cLock] = cache_get_row_int(0, 90, dbHandle); // cLock
	PI[playerid][cCost] = cache_get_row_int(0, 91, dbHandle); // cCost
	cache_get_row(0, 92, PI[playerid][cVehcom], dbHandle, 64); // cVehcom
	PI[playerid][cPaintjob] = cache_get_row_int(0, 93, dbHandle); // cPaintjob
	PI[playerid][cProbeg] = cache_get_row_int(0, 94, dbHandle); // cPaintjob
	PI[playerid][pAptechka] = cache_get_row_int(0, 95, dbHandle); // aptechka
	PI[playerid][pVoennik] = cache_get_row_int(0, 96, dbHandle); // Voennik
	PI[playerid][pMusic] = cache_get_row_int(0, 97, dbHandle); // music
	cache_get_row(0, 98, PI[playerid][pImproves], dbHandle, 32); // improves
	PI[playerid][pSettings] = cache_get_row_int(0, 99, dbHandle); // settings
	PhoneNumbers[playerid][0] = cache_get_row_int(0, 101, dbHandle); // phnumber1
	PhoneNumbers[playerid][1] = cache_get_row_int(0, 102, dbHandle); // phnumber2
	PhoneNumbers[playerid][2] = cache_get_row_int(0, 103, dbHandle); // phnumber3
	PhoneNumbers[playerid][3] = cache_get_row_int(0, 104, dbHandle); // phnumber4
	PhoneNumbers[playerid][4] = cache_get_row_int(0, 105, dbHandle); // phnumber5
	PhoneNumbers[playerid][5] = cache_get_row_int(0, 106, dbHandle); // phnumber6
	PhoneNumbers[playerid][6] = cache_get_row_int(0, 107, dbHandle); // phnumber7
	PhoneNumbers[playerid][7] = cache_get_row_int(0, 108, dbHandle); // phnumber8
	PI[playerid][pMailConfirmed] = cache_get_row_int(0, 109, dbHandle); // mailconf
	PI[playerid][pFishki] = cache_get_row_int(0, 110, dbHandle); // fishki
	PI[playerid][pCarA] = cache_get_row_int(0, 112, dbHandle); // cash
	PI[playerid][pCarB] = cache_get_row_int(0, 113, dbHandle); // cash
	PI[playerid][pCarC] = cache_get_row_int(0, 114, dbHandle); // cash
	PI[playerid][pCarD] = cache_get_row_int(0, 115, dbHandle); // cash
    cache_get_field_content(0,"pInt",pint), PI[playerid][pInt] = strval(pint);
    cache_get_field_content(0,"pWorld",pworld), PI[playerid][pWorld] = strval(pworld);
    cache_get_field_content(0,"PosX",posx), PI[playerid][PosX] = floatstr(posx);
    cache_get_field_content(0,"PosY",posy), PI[playerid][PosY] = floatstr(posy);
    cache_get_field_content(0,"PosZ",posz), PI[playerid][PosZ] = floatstr(posz);
    PI[playerid][pTruckLevel] = cache_get_row_int(0, 121, dbHandle); // truckskill
   	PI[playerid][pAlog] = cache_get_row_int(0, 122, dbHandle); // cash
   	PI[playerid][pYdochka] = cache_get_row_int(0, 123, dbHandle); // удочка
   	PI[playerid][pRaki] = cache_get_row_int(0, 124, dbHandle); // раки
	
	new l_guns[56], l_ammo[56];
	
	cache_get_row(0, 26, l_guns, dbHandle, 64); // guns
	cache_get_row(0, 27, l_ammo, dbHandle, 64); // ammos

	new g_data[13], a_data[13];
	sscanf(l_guns, "p<,>a<i>[13]", g_data);
	sscanf(l_ammo, "p<,>a<i>[13]", a_data);
	for(new i; i < 13; i++)
	{
	    PI[playerid][pGun][i] = g_data[i];
	    PI[playerid][pAmmo][i] = a_data[i];
	}
	SetPVarInt(playerid, "Connected", 1);
		
    sscanf(PI[playerid][cVehcom], "p<,>a<i>[14]",PI[playerid][cVehcoms]);
	sscanf(PI[playerid][pTexts], "p<,>a<i>[4]", PI[playerid][pText]);
	sscanf(PI[playerid][pRepcars], "p<,>a<i>[2]", PI[playerid][pRepcar]);
	sscanf(PI[playerid][pImproves], "p<,>a<i>[4]", PI[playerid][pImprove]);
	sscanf(PI[playerid][pLics], "p<,>a<i>[4]",PI[playerid][pLic]);


	if(PI[playerid][cModel] > 0 && GetPlayerPorchHouse(playerid) == 0) LoadMyCar(playerid);
	DeletePVar(playerid, "Logged");
	DeletePVar(playerid, "avttimer");

    GetPlayerIp(playerid, PI[playerid][pIP], 16);
	format(query, 256, "UPDATE "T_ACCOUNTS" SET ip = '%s', online = '1' WHERE id = '%i' LIMIT 1", PI[playerid][pIP], PI[playerid][pID]);
	mysql_tquery(dbHandle, query, "", "");
	
	OnLoadPass(playerid);
	
	TextDrawHideForPlayer(playerid, Avtoriz_TD[0]);
 	TextDrawHideForPlayer(playerid, Avtoriz_TD[1]);
  	TextDrawHideForPlayer(playerid, Avtoriz_TD[2]);
   	TextDrawHideForPlayer(playerid, Avtoriz_TD[3]);
   	PlayerTextDrawHide(playerid, Avtoriz_PTD[playerid][0]);
	CancelSelectTextDraw(playerid);
	
	if(PI[playerid][pCheckCode] == 1)
	{
	    new texter_pas[5];
		new digitsd[9] = {1,2,3,4,5,6,7,8,9};
		for(new i, rand, old_digit; i < 9; i++)
		{
			while((rand = random(9)) == i) {}
			old_digit = digitsd[i];
			digitsd[i] = digitsd[rand];
			digitsd[rand] = old_digit;
		}
    	for(new f = 0; f < 10; f++)
		{
		    if(f < 9)
		    {
		        mass_pass[playerid][f] = digitsd[f];
				format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
				PlayerTextDrawSetString(playerid,SecurityCode[playerid][f],texter_pas);
		    }
			PlayerTextDrawShow(playerid,SecurityCode[playerid][f]);
		}
		SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
		PI[playerid][pInputCode] = 0;
		Ujahhs[playerid] = 1;
		SelectTextDraw(playerid, -264092161);
	}
	else if(PI[playerid][pCheckCode] == 2)
	{
	    if(!strcmp(PI[playerid][pLastIP],PI[playerid][pIP],true))
		{
		    if(PI[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, -1, "Вы вошли как администратор. Для авторизации, введите {7efd7d}/alogin");
		    PlayerLogged[playerid] = true;
		    Hunger(playerid, 0);
   			SpawnPlayer(playerid);
		}
		else
		{
		    new texter_pas[5];
			new digitsd[9] = {1,2,3,4,5,6,7,8,9};
			for(new i, rand, old_digit; i < 9; i++)
			{
				while((rand = random(9)) == i) {}
				old_digit = digitsd[i];
				digitsd[i] = digitsd[rand];
				digitsd[rand] = old_digit;
			}
	    	for(new f = 0; f < 10; f++)
			{
			    if(f < 9)
			    {
			        mass_pass[playerid][f] = digitsd[f];
					format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
					PlayerTextDrawSetString(playerid,SecurityCode[playerid][f],texter_pas);
			    }
				PlayerTextDrawShow(playerid,SecurityCode[playerid][f]);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
			PI[playerid][pInputCode] = 0;
			Ujahhs[playerid] = 1;
			SelectTextDraw(playerid,-264092161);
		}
	}
	else if(PI[playerid][pCheckCode] == 3)
	{
	    new strv[26], strvv[26], splitt[4][4], spli[4][4];
	    split(PI[playerid][pLastIP], splitt, '.');
		format(strv, sizeof(strv), "%s.%s", splitt[0], splitt[1]);
	    split(PI[playerid][pIP], spli, '.');
		format(strvv, sizeof(strvv), "%s.%s", spli[0], spli[1]);
	    if(strcmp(strv,strvv,true))
		{
		    new texter_pas[5];
			new digitsd[9] = {1,2,3,4,5,6,7,8,9};
			for(new i, rand, old_digit; i < 9; i++)
			{
				while((rand = random(9)) == i) {}
				old_digit = digitsd[i];
				digitsd[i] = digitsd[rand];
				digitsd[rand] = old_digit;
			}
	    	for(new f = 0; f < 10; f++)
			{
			    if(f < 9)
			    {
			        mass_pass[playerid][f] = digitsd[f];
					format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
					PlayerTextDrawSetString(playerid,SecurityCode[playerid][f],texter_pas);
			    }
				PlayerTextDrawShow(playerid,SecurityCode[playerid][f]);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
			PI[playerid][pInputCode] = 0;
			Ujahhs[playerid] = 1;
			SelectTextDraw(playerid,-264092161);
		}
		else
		{
            ShowPlayerDialog(playerid, SelectSpawn, DIALOG_STYLE_LIST, "{7efd7d}Выбор спавна", "{7efd7d}1. {ffffff}Hа вокзале\n{7efd7d}2. {ffffff}Дома\n{7efd7d}3. {ffffff}В квартире\n{7efd7d}4. {ffffff}На базе орзанизации", "Выбор", "");
		    if(PI[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, -1, "Вы вошли как администратор. Для авторизации, введите {7efd7d}/alogin");
		    //if(!PI[playerid][pMailConfirmed] && PI[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_LIME, "Подсказка: {FFFFFF}Ваша почта не привязана. Привяжите её, чтобы потвердить ваш аккаунт (/menu - Безопасность)");
		    PlayerLogged[playerid] = true;
		    Hunger(playerid, 0);
		}
	}
	else
	{
        ShowPlayerDialog(playerid, SelectSpawn, DIALOG_STYLE_LIST, "{7efd7d}Выбор спавна", "{7efd7d}1. {ffffff}Hа вокзале\n{7efd7d}2. {ffffff}Дома\n{7efd7d}3. {ffffff}В квартире\n{7efd7d}4. {ffffff}На базе орзанизации", "Выбор", "");
	    if(PI[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, -1, "Вы вошли как администратор. Для авторизации, введите {7efd7d}/alogin");
	    if(PI[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_LIME, "Подсказка: {FFFFFF}Если вы хотите полностью обезопасить свой аккаунт (/menu - Безопасность)");
	    //if(!PI[playerid][pMailConfirmed] && PI[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_LIME, "Подсказка: {FFFFFF}Ваша почта не привязана. Привяжите её, чтобы потвердить ваш аккаунт (/menu - Безопасность)");
	    PlayerLogged[playerid] = true;
	    Hunger(playerid, 0);
	}
	
	if(Pick == 1)
	{
		SendClientMessageToAll(COLOR_WHITE, "Сегодня проходят выборы Мэра!");
		SendClientMessageToAll(COLOR_WHITE, "Голосование проходит в Мэрии пгт.Батырево на первом этаже. Сделайте свой выбор.");
	}
		
	if(PI[playerid][pText][0] == 1)
	{
		new i = PI[playerid][pText][0];
		PI[playerid][pBank] += HouseInfo[i][hPrice];
		SendMes(playerid, COLOR_YELLOW, "[Квитанция] Вы были выселены за неуплату! Вам было возвращено %d Рублей", HouseInfo[i][hPrice]);
		SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] Деньги были переведены на ваш банковский счет.");
		format(PI[playerid][pTexts], 20,  "0, %i, %i, %i", PI[playerid][pText][1], PI[playerid][pText][2], PI[playerid][pText][3]);
		format(query, 256, "UPDATE "T_ACCOUNTS" SET text = '%s' WHERE name = '%s'", PI[playerid][pTexts], GetName(playerid));
		mysql_tquery(dbHandle, query, "", "");
	}
	if(PI[playerid][pText][1] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "[Налоговая служба] Ваш бизнес закрыли в связи с нехваткой ресурсов");
		SendClientMessage(playerid, COLOR_YELLOW, "[Налоговая служба] Бюджет бизнеса зачислен на ваш банковский счет");
		format(PI[playerid][pTexts], 20, "%i, 0, %i, %i", PI[playerid][pText][0], PI[playerid][pText][2], PI[playerid][pText][3]);
		format(query, 256, "UPDATE "T_ACCOUNTS" SET text = '%s' WHERE name = '%s'", PI[playerid][pTexts], GetName(playerid));
		mysql_tquery(dbHandle, query, "", "");
	}
	if(PI[playerid][pText][2] == 1)
	{
		TransferMoney(-1, playerid, 50000);
		SendClientMessage(playerid, COLOR_LIME, "Вы получили 50.000 рублей за приглашенного игрока");
		PI[playerid][pRefMoney] = 0;
		format(PI[playerid][pTexts], 20, "%i, %i, 0, %i", PI[playerid][pText][0], PI[playerid][pText][1], PI[playerid][pText][3]);
		format(query, 256, "UPDATE "T_ACCOUNTS" SET text = '%s', refmoney = %d WHERE name = '%s'", PI[playerid][pTexts], PI[playerid][pRefMoney], GetName(playerid));
		mysql_tquery(dbHandle, query, "", "");
	}
	if(PI[playerid][pText][3] == 1)
	{
		SendClientMessage(playerid, COLOR_LIME, "Подсказка: {FFFFFF}На ваш счёт поступил донат платёж (/donate - Проверить зачисления)");
		format(PI[playerid][pTexts], 20, "%i, %i, %i, 0", PI[playerid][pText][0], PI[playerid][pText][1], PI[playerid][pText][2]);
		format(query, 256, "UPDATE "T_ACCOUNTS" SET text = '%s' WHERE name = '%s'", PI[playerid][pTexts], GetName(playerid));
		mysql_tquery(dbHandle, query, "", "");
	}
	StopAudioStreamForPlayer(playerid);
	/*new string[80];
    format(string, sizeof(string), "Ваш номер аккаунта: {FFCC00}%d", PI[playerid][pID]);
    SendClientMessage(playerid,-1, string);*/
	if(PI[playerid][pVipTime] > 0)
	{
	    new year, month, day;
		new current_date = getdate(year, month, day);
		new time_left = PI[playerid][pVipTime] - current_date;
		if(time_left <= 0)
		{
			SendClientMessage(playerid, COLOR_RED, "Срок действия вашего VIP аккаунта истек!");
			PI[playerid][pVip] = PI[playerid][pVipTime] = 0;
		}
	}
	return 1;
}

forward CheckPass(playerid, tmp[]);
public CheckPass(playerid, tmp[])
{
	if(!GetPVarInt(playerid, "Logged")) return 1;
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		PlayerLogTries[playerid]++;
		if(PlayerLogTries[playerid] == 4)
		{
			SendClientMessage(playerid,COLOR_RED, "Вы несколько раз ввели неверный пароль! Для выхода из игры введите: {ffffff}/q");
			return SKick(playerid, 52);
		}
        new string[100];
        DeletePVar(playerid,"passvtr");
		format(string, sizeof(string), "{F04245}Вы ввели неверный пароль!\nУ вас осталось {FFFFFF}%d {F04245}попыток", 3 - PlayerLogTries[playerid]);
		ShowPlayerDialog(playerid, D_ERRORPAS, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ошибка", string, "Повтор", "Выйти");
		return 1;
	}
	SetPVarInt(playerid, "vodpass", 1);
	SetPVarInt(playerid, "goodpass", 1);
	//if(GetPVarInt(playerid, "gotovkvhody") == 0)
	//{
	  //  SelectTextDraw(playerid, 0xFFFFFFFF);
		//return 1;
	//}
	//new string[144];
	//mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%e'", GetName(playerid));
	//mysql_tquery(dbHandle, string, "OnPlayerLogin", "d", playerid);
	return 1;
}

stock SaveAccount(playerid)
{
	if(PlayerLogged[playerid] == false || IsPlayerConnected(playerid) == 0) return 1;
	new src[200];
	format(query,sizeof(query),"UPDATE "T_ACCOUNTS" SET ");
	format(src,sizeof(src),"ip='%s',",PI[playerid][pIP]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"level=%d,",PI[playerid][pLevel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"admin=%d,",PI[playerid][pAdmin]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sex=%d,",PI[playerid][pSex]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"age=%d,",PI[playerid][pAge]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"securitycode='%i',",PI[playerid][pSecurityCode]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"model=%d,",PI[playerid][pModel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"memberskin=%d,",PI[playerid][pMemberSkin]);
	strcat(query,src,sizeof(query));
	if(PI[playerid][pCash] > 100000000 || PI[playerid][pCash] < 0) PI[playerid][pCash] = 0;
	format(src,sizeof(src),"cash=%d,",PI[playerid][pCash]);
	strcat(query,src,sizeof(query));
	if(PI[playerid][pBank] > 100000000 || PI[playerid][pBank] < 0) PI[playerid][pBank] = 0;
	format(src,sizeof(src),"bank=%d,",PI[playerid][pBank]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mute=%d,",PI[playerid][pMuted]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"warn=%d,",PI[playerid][pWarn]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"leader=%d,",PI[playerid][pLeader]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"templeader=%d,",PI[playerid][pTempLeader]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"member=%d,",PI[playerid][pMember]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"rank=%d,",PI[playerid][pRank]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pick=%d,",PI[playerid][pPick]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"exp=%d,",PI[playerid][pExp]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"news=%d,",PI[playerid][pNews]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"crimes=%d,",PI[playerid][pCrimes]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wanted=%d,",PI[playerid][pWanted]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wantedtime=%d,",PI[playerid][pWantedTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wantedwho='%s',",PI[playerid][pWantedWho]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wantedreason='%s',",PI[playerid][pWantedReason]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"jail=%d,",PI[playerid][pJail]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"job=%d,",PI[playerid][pJob]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"jailtime=%d,",PI[playerid][pJailTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"checktime=%d,",PI[playerid][pCheckTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"drugs=%d,",PI[playerid][pDrugs]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"patron=%d,",PI[playerid][pPatron]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"gunamount=%d,",PI[playerid][pGunAmount]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"heal='%f',",PI[playerid][pHeal]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"married=%d,",PI[playerid][pMarried]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"whomarried='%s',",PI[playerid][pWhoMarried]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"paycheck='%i',",PI[playerid][pPayCheck]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"charity='%i',",PI[playerid][pCharity]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"vip='%i',",PI[playerid][pVip]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"viptime='%i',",PI[playerid][pVipTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"time='%i',",PI[playerid][pTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"fstyle='%i',",PI[playerid][pFightStyle]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"credits='%i',",PI[playerid][pCredits]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"totalcredits='%i',",PI[playerid][pTotalCredits]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin1='%i',",PI[playerid][pSkin][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin2='%i',",PI[playerid][pSkin][1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin3='%i',",PI[playerid][pSkin][2]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"spawnchange='%i',",PI[playerid][pSpawnChange]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sdpistol='%i',",PI[playerid][pGunSkill][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"deserteagle='%i',",PI[playerid][pGunSkill][1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"shotgun='%i',",PI[playerid][pGunSkill][2]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mp5='%i',",PI[playerid][pGunSkill][3]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ak47='%i',",PI[playerid][pGunSkill][4]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"m4='%i',",PI[playerid][pGunSkill][5]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pistol='%i',",PI[playerid][pGunSkill][6]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"microuzi='%i',",PI[playerid][pGunSkill][7]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"hunger='%i',",PI[playerid][pHunger]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"healths='%f',",PI[playerid][pHealthS]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sportexp='%i',",PI[playerid][pSportExp]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"online='%i',",PI[playerid][pOnline]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"zakon='%i',",PI[playerid][pZakon]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"checkcode='%i',",PI[playerid][pCheckCode]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"city='%i',",PI[playerid][pCity]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bed='%i',",PI[playerid][pBed]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"watch='%i',",PI[playerid][pWatch]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ciggare='%i',",PI[playerid][pCiggare]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sprunk='%i',",PI[playerid][pSprunk]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mask='%i',",PI[playerid][pMask]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phonebalance='%i',",PI[playerid][pPhoneBalance]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"truckskill='%i',",PI[playerid][pTruckSkill]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cModel='%i',",PI[playerid][cModel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cFuel='%i',",PI[playerid][cFuel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cFuel='%i',",PI[playerid][cFuel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cClass='%i',",PI[playerid][cClass]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cColor1='%i',",PI[playerid][cColor][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cColor2='%i',",PI[playerid][cColor][1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cLock='%i',",PI[playerid][cLock]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cCost='%i',",PI[playerid][cCost]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cVehcom='%s',",PI[playerid][cVehcom]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cPaintjob='%i',",PI[playerid][cPaintjob]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cProbeg='%.2f',",PI[playerid][cProbeg]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"aptechka='%i',",PI[playerid][pAptechka]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"Voennik='%i',",PI[playerid][pVoennik]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"music='%i',",PI[playerid][pMusic]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"datavhod='%s',",date("%dd.%mm.%yyyy",gettime()));
	strcat(query,src,sizeof(query));
 	format(PI[playerid][pRepcars],16,"%i, %i",PI[playerid][pRepcar][0],PI[playerid][pRepcar][1]);
	format(src,sizeof(src),"repcar='%s',",PI[playerid][pRepcars]);
	strcat(query,src,sizeof(query));
	format(PI[playerid][pImproves],32,"%i, %i, %i, %i",PI[playerid][pImprove][0],PI[playerid][pImprove][1],PI[playerid][pImprove][2],PI[playerid][pImprove][3]);
	format(src,sizeof(src),"improves='%s',",PI[playerid][pImproves]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"veh_reg='%i',",PI[playerid][pRegVehicle]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"fishki='%i',",PI[playerid][pFishki]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pcara='%i',",PI[playerid][pCarA]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pcarb='%i',",PI[playerid][pCarB]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pcarc='%i',",PI[playerid][pCarC]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pcard='%i',",PI[playerid][pCarD]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phonenumber='%i',",PI[playerid][pPhoneNumber]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phnumber1='%i',",PhoneNumbers[playerid][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phnumber2='%i',",PhoneNumbers[playerid][1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phnumber3='%i',",PhoneNumbers[playerid][2]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phnumber4='%i',",PhoneNumbers[playerid][3]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phnumber5='%i',",PhoneNumbers[playerid][4]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phnumber6='%i',",PhoneNumbers[playerid][5]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phnumber7='%i',",PhoneNumbers[playerid][6]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phnumber8='%i',",PhoneNumbers[playerid][7]);
	strcat(query,src,sizeof(query));
	format(PI[playerid][pLics],16,"%i, %i, %i, %i",PI[playerid][pLic][0],PI[playerid][pLic][1],PI[playerid][pLic][2],PI[playerid][pLic][3]);
	format(src,sizeof(src),"lic='%s',",PI[playerid][pLics]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pInt='%d',",PI[playerid][pInt]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pWorld='%d',",PI[playerid][pWorld]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"PosX='%f',",PI[playerid][PosX]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"PosY='%f',",PI[playerid][PosY]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"PosZ='%f',",PI[playerid][PosZ]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"trucklevel='%i',",PI[playerid][pTruckLevel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ydochka='%d',",PI[playerid][pYdochka]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"raki='%d'",PI[playerid][pRaki]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src)," WHERE name='%s' LIMIT 1",GetName(playerid));
	strcat(query,src,sizeof(query));
 	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

stock MysqlUpdatePlayerStr(playerid, field[], data[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_ACCOUNTS" SET %s = '%s' WHERE id = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdatePlayerInt(playerid, field[], data)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_ACCOUNTS" SET %s = '%i' WHERE id = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdateHouseStr(idx, field[], data[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_HOUSE" SET %s = '%s' WHERE id = '%d' LIMIT 1", field, data, idx);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdateHouseInt(idx, field[], data)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_HOUSE" SET %s = '%d' WHERE id = '%d' LIMIT 1", field, data, idx);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdateBizzStr(idx, field[], data[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_BIZZ" SET %s = '%s' WHERE id = '%d' LIMIT 1", field, data, idx);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdateBizzInt(idx, field[], data)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_BIZZ" SET %s = '%d' WHERE id = '%d' LIMIT 1", field, data, idx);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdateOtherStr(field[], data[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_OTHER" SET %s = '%s' LIMIT 1", field, data);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdateOtherInt(field[], data)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_OTHER" SET %s = '%d' LIMIT 1", field, data);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdateGangInt(field[], data)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_GANG" SET %s = '%d' LIMIT 1", field, data);
	return mysql_tquery(dbHandle, Query, "", "");
}

stock MysqlUpdateMafiaInt(field[], data)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "T_MAFIA" SET %s = '%d' LIMIT 1", field, data);
	return mysql_tquery(dbHandle, Query, "", "");
}

forward LoadVeh();
public LoadVeh()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
		    VehInfo[idx][vVehicle] = INVALID_VEHICLE_ID;
        	VehInfo[idx][vID] = cache_get_row_int(idx-1, 0, dbHandle); // id
			VehInfo[idx][vModel] = cache_get_row_int(idx-1, 1, dbHandle); // model
        	VehInfo[idx][vPos_X] = cache_get_row_float(idx-1, 2, dbHandle); // x
        	VehInfo[idx][vPos_Y] = cache_get_row_float(idx-1, 3, dbHandle); // y
        	VehInfo[idx][vPos_Z] = cache_get_row_float(idx-1, 4, dbHandle); // z
        	VehInfo[idx][vPos_FA] = cache_get_row_float(idx-1, 5, dbHandle); // fa
        	VehInfo[idx][vInt] = cache_get_row_int(idx-1, 6, dbHandle); // vint
        	VehInfo[idx][vWorld] = cache_get_row_int(idx-1, 7, dbHandle); // world
        	cache_get_row(idx-1, 8, VehInfo[idx][vColors], dbHandle, 16); // colors
        	VehInfo[idx][vFraction] = cache_get_row_int(idx-1, 9, dbHandle); // fraction
			VehInfo[idx][vStatus] = cache_get_row_int(idx-1, 10, dbHandle); // status
			VehInfo[idx][vCost] = cache_get_row_int(idx-1, 11, dbHandle); // cost
            sscanf(VehInfo[idx][vColors], "p<,>a<i>[2]", VehInfo[idx][vColor]);
            if(VehInfo[idx][vStatus] == 0 || VehInfo[idx][vStatus] == 2)
            {
	        	VehInfo[idx][vVehicle] = CreateVehicle(VehInfo[idx][vModel], VehInfo[idx][vPos_X], VehInfo[idx][vPos_Y], VehInfo[idx][vPos_Z], VehInfo[idx][vPos_FA], VehInfo[idx][vColor][0], VehInfo[idx][vColor][1], 300);
	            LinkVehicleToInterior(VehInfo[idx][vVehicle], VehInfo[idx][vInt]);
	            SetVehicleVirtualWorld(VehInfo[idx][vVehicle], VehInfo[idx][vWorld]);
	            Fuel[VehInfo[idx][vVehicle]] = 150;
	           	Engine[VehInfo[idx][vVehicle]] = false;
				Lights[VehInfo[idx][vVehicle]] = false;
			}
			TOTALVEH++;
		}
	}
	printf("[Загружено орг/раб. автомобилей]: <%i>. Потрачено: <%i ms>.", TOTALVEH, GetTickCount() - time);
	return 1;
}

forward LoadATM();
public LoadATM()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			ATMInfo[idx][aID] = cache_get_row_int(idx-1, 0, dbHandle); // ID
			ATMInfo[idx][aX] = cache_get_row_float(idx-1, 1, dbHandle); // aX
			ATMInfo[idx][aY] = cache_get_row_float(idx-1, 2, dbHandle); // aY
			ATMInfo[idx][aZ] = cache_get_row_float(idx-1, 3, dbHandle); // aZ
			ATMInfo[idx][arX] = cache_get_row_float(idx-1, 4, dbHandle); // arX
			ATMInfo[idx][arY] = cache_get_row_float(idx-1, 5, dbHandle); // arY
			ATMInfo[idx][arZ] = cache_get_row_float(idx-1, 6, dbHandle); // arZ
        	TOTALATM++;
			ATM[idx] = CreateObject(2942, ATMInfo[idx][aX], ATMInfo[idx][aY], ATMInfo[idx][aZ], ATMInfo[idx][arX], ATMInfo[idx][arY], ATMInfo[idx][arZ]);
			LABELATM[idx] = CreateDynamic3DTextLabel("{99cc00}Банкомат\n{FFFFFF}Нажмите: {7efd7d}ALT", 0xBBBBBBFF, ATMInfo[idx][aX],ATMInfo[idx][aY],ATMInfo[idx][aZ]+1.1,10.0);
        }
    }
	printf("[Загружено банкоматов]: <%i>. Потрачено: <%i ms>.", TOTALATM, GetTickCount() - time);
	return 1;
}

forward LoadBizz();
public LoadBizz()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	for(new i; i < TOTALBIZZ; i++) strmid(BizzInfo[i][bOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
		    BizzInfo[idx][bID] = cache_get_row_int(idx-1, 0, dbHandle); // id
			cache_get_row(idx-1, 1, BizzInfo[idx][bOwner], dbHandle, MAX_PLAYER_NAME); // owner
			BizzInfo[idx][bType] = cache_get_row_int(idx-1, 2, dbHandle); // type
			BizzInfo[idx][bPrice] = cache_get_row_int(idx-1, 3, dbHandle); // price
			BizzInfo[idx][bBuyPrice] = cache_get_row_int(idx-1, 4, dbHandle); // buyprice
			BizzInfo[idx][bMoney] = cache_get_row_int(idx-1, 5, dbHandle); // money
			BizzInfo[idx][bLic] = cache_get_row_int(idx-1, 6, dbHandle); // lic
			BizzInfo[idx][bEntrx] = cache_get_row_float(idx-1, 7, dbHandle); // x
			BizzInfo[idx][bEntry] = cache_get_row_float(idx-1, 8, dbHandle); // y
			BizzInfo[idx][bEntrz] = cache_get_row_float(idx-1, 9, dbHandle); // z
			BizzInfo[idx][bExitx] = cache_get_row_float(idx-1, 10, dbHandle); // xt
			BizzInfo[idx][bExity] = cache_get_row_float(idx-1, 11, dbHandle); // yt
			BizzInfo[idx][bExitz] = cache_get_row_float(idx-1, 12, dbHandle); // zt
			BizzInfo[idx][bMenux] = cache_get_row_float(idx-1, 13, dbHandle); // menux
			BizzInfo[idx][bMenuy] = cache_get_row_float(idx-1, 14, dbHandle); // menuy
			BizzInfo[idx][bMenuz] = cache_get_row_float(idx-1, 15, dbHandle); // menuz
			BizzInfo[idx][bInt] = cache_get_row_int(idx-1, 16, dbHandle); // vint
			BizzInfo[idx][bVirtual] = cache_get_row_int(idx-1, 17, dbHandle); // virt
			BizzInfo[idx][bMIcon] = cache_get_row_int(idx-1, 18, dbHandle); // icon
			cache_get_row(idx-1, 19, BizzInfo[idx][bName], dbHandle, 32); // name
			BizzInfo[idx][bEnter] = cache_get_row_int(idx-1, 20, dbHandle); // penter
			BizzInfo[idx][bLock] = cache_get_row_int(idx-1, 21, dbHandle); // block
			BizzInfo[idx][bProduct] = cache_get_row_int(idx-1, 22, dbHandle); // product
			BizzInfo[idx][bTill] = cache_get_row_int(idx-1, 23, dbHandle); // till
			BizzInfo[idx][bLockTime] = cache_get_row_int(idx-1, 24, dbHandle); // locktime
			BizzInfo[idx][bMafia] = cache_get_row_int(idx-1, 25, dbHandle); // mafia
			switch(BizzInfo[idx][bMafia])
			{
			   	case TEAM_OPGOR: MafiaTotalBizz[0]++;
			   	case TEAM_OPGYG: MafiaTotalBizz[1]++;
			}
			new fee[64], string[200];
			if(BizzInfo[idx][bEnter] == 0) fee = "бесплатно";
			else format(fee, sizeof(fee), "%d {FFFFFF}руб.", BizzInfo[idx][bEnter]);
			new text[20];
			switch(BizzInfo[idx][bMafia])
			{
			    case TEAM_OPGOR: text = "Русская Мафия";
			    case TEAM_OPGYG: text = "Украинская Мафия";
				case 0: text = "Отсутствует";
			}
			if(BizzInfo[idx][bType] == 1)
			{
				BizzInfo[idx][bPickup] = CreateDynamicPickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				BizzInfo[idx][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz],BizzInfo[idx][bVirtual]);
				BizzInfo[idx][bMenu] = CreateDynamicSphere(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(BizzInfo[idx][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}24/7\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[idx][bPrice]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}24/7\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizzInfo[idx][bType] == 9)
			{
				BizzInfo[idx][bPickup] = CreateDynamicPickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				BizzInfo[idx][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz],BizzInfo[idx][bVirtual]);
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Казино\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[idx][bPrice]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Казино\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
			}
			else if(BizzInfo[idx][bType] == 2)
			{
			    BizzInfo[idx][bPickup] = CreateDynamicPickup(1650,1,BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), "{7efd7d}Заправка\n{99cc00}Заправка продаётся\n{FFFFFF}Цена: {99cc00}%d рублей\n{ffffff}Цена за 1 литр - {7efd7d}%i рублей\n{99cc00}Используйте /fill",BizzInfo[idx][bPrice], BizzInfo[idx][bTill]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+1.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{99cc00}/buyk - купить канистру\n/fill - заправить транспорт\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Цена за 1 литр бензина: {7efd7d}%i рублей",BizzInfo[idx][bOwner], BizzInfo[idx][bTill]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+1.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
			}
			else if(BizzInfo[idx][bType] == 10)
			{
				BizzInfo[idx][bPickup] = CreateDynamicPickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				BizzInfo[idx][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz],BizzInfo[idx][bVirtual]);
				BizzInfo[idx][bMenu] = CreateDynamicSphere(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(BizzInfo[idx][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Магазин Игрушек\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[idx][bPrice]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Магазин Игрушек\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 8)
			{
				BizzInfo[idx][bPickup] = CreateDynamicPickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				BizzInfo[idx][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz],BizzInfo[idx][bVirtual]);
				BizzInfo[idx][bMenu] = CreateDynamicSphere(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(BizzInfo[idx][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
		   		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
    				format(string, sizeof(string), "{3497FF}Магазин Одежды\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[idx][bPrice]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Магазин Одежды\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
					UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
				}
			}
			else if(BizzInfo[idx][bType] == 14)
			{
				BizzInfo[idx][bPickup] = CreateDynamicPickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				BizzInfo[idx][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz],BizzInfo[idx][bVirtual]);
				BizzInfo[idx][bMenu] = CreateDynamicSphere(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(BizzInfo[idx][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Аптека\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[idx][bPrice]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Аптека\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizzInfo[idx][bType] == 15)
			{
				BizzInfo[idx][bPickup] = CreateDynamicPickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				BizzInfo[idx][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz],BizzInfo[idx][bVirtual]);
				BizzInfo[idx][bMenu] = CreateDynamicSphere(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(BizzInfo[idx][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				else CreateDynamicPickup(1274,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}Рыбаловный магазин\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[idx][bPrice]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}Рыбаловный магазин\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizzInfo[idx][bType] == 7)
			{
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), "{3497FF}СТО\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.", text,BizzInfo[idx][bPrice]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+1.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{3497FF}СТО\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s",BizzInfo[idx][bOwner],text);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,-1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+1.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			TOTALBIZZ++;
        }
    }
	printf("[Загружено бизнесов]: <%i>. Потрачено: <%i ms>.", TOTALBIZZ,GetTickCount() - time);
	return 1;
}

forward LoadHouse();
public LoadHouse()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	for(new i; i < TOTALHOUSE; i++) strmid(HouseInfo[i][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			HouseInfo[idx][hID] = cache_get_row_int(idx-1, 0, dbHandle); // id
			HouseInfo[idx][hEntrx] = cache_get_row_float(idx-1, 1, dbHandle); // hEntrx
			HouseInfo[idx][hEntry] = cache_get_row_float(idx-1, 2, dbHandle); // hEntry
			HouseInfo[idx][hEntrz] = cache_get_row_float(idx-1, 3, dbHandle); // hEntrz
			HouseInfo[idx][hExitx] = cache_get_row_float(idx-1, 4, dbHandle); // hExitx
			HouseInfo[idx][hExity] = cache_get_row_float(idx-1, 5, dbHandle); // hExity
			HouseInfo[idx][hExitz] = cache_get_row_float(idx-1, 6, dbHandle); // hExitz
			HouseInfo[idx][hCarx] = cache_get_row_float(idx-1, 7, dbHandle); // carx
			HouseInfo[idx][hCary] = cache_get_row_float(idx-1, 8, dbHandle); // cary
			HouseInfo[idx][hCarz] = cache_get_row_float(idx-1, 9, dbHandle); // carz
			HouseInfo[idx][hCarfa] = cache_get_row_float(idx-1, 10, dbHandle); // carfa
			cache_get_row(idx-1, 11, HouseInfo[idx][hOwner], dbHandle, MAX_PLAYER_NAME); // hOwner
			cache_get_row(idx-1, 12, HouseInfo[idx][hDiscript], dbHandle, 16); // hDiscript
			HouseInfo[idx][hPrice] = cache_get_row_int(idx-1, 13, dbHandle); // hPrice
			HouseInfo[idx][hBuyPrice] = cache_get_row_int(idx-1, 14, dbHandle); // buyprice
			HouseInfo[idx][hInt] = cache_get_row_int(idx-1, 15, dbHandle); // hInt
			HouseInfo[idx][hVirtual] = cache_get_row_int(idx-1, 16, dbHandle); // hVirtual
			HouseInfo[idx][hLock] = cache_get_row_int(idx-1, 17, dbHandle); // hLock
			HouseInfo[idx][hOplata] = cache_get_row_int(idx-1, 18, dbHandle); // hOplata
			HouseInfo[idx][hHeal] = cache_get_row_int(idx-1, 19, dbHandle); // hHeal
           	if(!strcmp(HouseInfo[idx][hOwner],"None",true))
			{
				HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 31, 0,-1,-1,-1,150.0);
				HouseInfo[idx][hPickup] = CreateDynamicPickup(1273, 23, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
			}
			else
			{
				HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 32, 0,-1,-1,-1,150.0);
				HouseInfo[idx][hPickup] = CreateDynamicPickup(1272, 23, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
			}
			TOTALHOUSE++;
        }
    }
	printf("[Загружено домов]: <%i>. Потрачено: <%i ms>.", TOTALHOUSE, GetTickCount() - time);
	return 1;
}
forward LoadMafia();
public LoadMafia()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    FracBank[5] = cache_get_row_int(0, 0, dbHandle); // yakuzabank
		FracBank[6] = cache_get_row_int(0, 1, dbHandle); // lcnbank
		FracBank[7] = cache_get_row_int(0, 2, dbHandle); // rmbank
		DrugsBank[TEAM_OPGYG] = cache_get_row_int(0, 3, dbHandle); // yakuzadrugs
		DrugsBank[TEAM_OPGOR] = cache_get_row_int(0, 4, dbHandle); // lcndrugs
		DrugsBank[TEAM_RM] = cache_get_row_int(0, 5, dbHandle); // rmdrugs
	    MafiaPatr[0] = cache_get_row_int(0, 6, dbHandle); // lcnpat
		MafiaPatr[1] = cache_get_row_int(0, 7, dbHandle); // yakpat
		MafiaPatr[2] = cache_get_row_int(0, 8, dbHandle); // rmpat
		MafiaEd[0] = cache_get_row_int(0, 9, dbHandle); // lcned
		MafiaEd[1] = cache_get_row_int(0, 10, dbHandle); // yaked
		MafiaEd[2] = cache_get_row_int(0, 11, dbHandle); // rmed
		b_Sklad{5} = cache_get_row_int(0, 12, dbHandle); // bskl_l
		b_Sklad{6} = cache_get_row_int(0, 13, dbHandle); // bskl_y
		b_Sklad{7} = cache_get_row_int(0, 14, dbHandle); // bskl_r
    }
	printf("[Загружены склады мафий]: Потрачено: <%i ms>.", GetTickCount() - time);
	return 1;
}

forward LoadGang();
public LoadGang()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    FracBank[0] = cache_get_row_int(0, 0, dbHandle); // grovebank
		FracBank[1] = cache_get_row_int(0, 1, dbHandle); // ballasbank
		FracBank[2] = cache_get_row_int(0, 2, dbHandle); // rifabank
		FracBank[3] = cache_get_row_int(0, 3, dbHandle); // aztecbank
		FracBank[4] = cache_get_row_int(0, 4, dbHandle); // vagosbank
		DrugsBank[TEAM_OPGTEST1] = cache_get_row_int(0, 5, dbHandle); // grovedrugs
		DrugsBank[TEAM_BALLAS] = cache_get_row_int(0, 6, dbHandle); // ballasdrugs
		DrugsBank[TEAM_RIFA] = cache_get_row_int(0, 7, dbHandle); // rifadrugs
		DrugsBank[TEAM_OPGTEST2] = cache_get_row_int(0, 8, dbHandle); // aztecdrugs
		DrugsBank[TEAM_VAGOS] = cache_get_row_int(0, 9, dbHandle); // vagosdrugs
	    GangPatr[0] = cache_get_row_int(0, 10, dbHandle); // grovepat
		GangPatr[1] = cache_get_row_int(0, 11, dbHandle); // ballaspat
		GangPatr[2] = cache_get_row_int(0, 12, dbHandle); // rifapat
		GangPatr[3] = cache_get_row_int(0, 13, dbHandle); // aztecpat
		GangPatr[4] = cache_get_row_int(0, 14, dbHandle); // vagospat
		GangEd[0] = cache_get_row_int(0, 15, dbHandle); // groveed
		GangEd[1] = cache_get_row_int(0, 16, dbHandle); // ballased
		GangEd[2] = cache_get_row_int(0, 17, dbHandle); // rifaed
		GangEd[3] = cache_get_row_int(0, 18, dbHandle); // azteced
		GangEd[4] = cache_get_row_int(0, 19, dbHandle); // vagosed
		b_Capture{0} = cache_get_row_int(0, 20, dbHandle); // bcapt_g
		b_Capture{1} = cache_get_row_int(0, 21, dbHandle); // bcapt_b
		b_Capture{2} = cache_get_row_int(0, 22, dbHandle); // bcapt_r
		b_Capture{3} = cache_get_row_int(0, 23, dbHandle); // bcapt_a
		b_Capture{4} = cache_get_row_int(0, 24, dbHandle); // bcapt_v
		b_Sklad{0} = cache_get_row_int(0, 25, dbHandle); // bskl_g
		b_Sklad{1} = cache_get_row_int(0, 26, dbHandle); // bskl_b
		b_Sklad{2} = cache_get_row_int(0, 27, dbHandle); // bskl_r
		b_Sklad{3} = cache_get_row_int(0, 28, dbHandle); // bskl_a
		b_Sklad{4} = cache_get_row_int(0, 29, dbHandle); // bskl_v
    }
	printf("[Загружены склады банд]: Потрачено: <%i ms>.", GetTickCount() - time);
	return 1;
}

forward LoadOther();
public LoadOther()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		FracBank[8] = cache_get_row_int(0, 0, dbHandle); // lsnbank
		FracBank[9] = cache_get_row_int(0, 1, dbHandle); // sfnbank
		FracBank[10] = cache_get_row_int(0, 2, dbHandle); // lvnbank
		cache_get_row(0, 3, NewsPrice, dbHandle, 40); // newsprice
		sscanf(NewsPrice, "p<,>iiiiii", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
		gGunWorkWH[0] = cache_get_row_int(0, 5, dbHandle); // guncoal
		gGunWorkWH[1] = cache_get_row_int(0, 6, dbHandle); // gunwood
		gGunWorkWH[2] = cache_get_row_int(0, 7, dbHandle); // gun
		gArmyWarehouse[0] = cache_get_row_int(0, 9, dbHandle); // armygun
		gArmyWarehouse[1] = cache_get_row_int(0, 10, dbHandle); // armyammo
		doubling_exp = cache_get_row_int(0, 11, dbHandle); // d_exp
		doubling_donate = cache_get_row_int(0, 12, dbHandle); // d_donate
		
		if(!TEST_SERVER)
		{
      		if(!doubling_donate && !doubling_exp) SendRconCommand("hostname "SERVER_NAME"");
			else if(doubling_donate && doubling_exp) SendRconCommand("hostname "SERVER_NAME" | X2 ДЕНЬ!");
		}
    }
	printf("[Загружено остальное]: Потрачено: <%i ms>.",GetTickCount() - time);
	return 1;
}

stock SaveWarehouse()
{
    new Query[150];
	format(Query, sizeof(Query), "UPDATE "T_OTHER" SET armygun=%d,armyammo=%d,guncoal=%d,gunwood=%d,gun=%d", gArmyWarehouse[0], gArmyWarehouse[1], gGunWorkWH[0], gGunWorkWH[1], gGunWorkWH[2]);
	mysql_tquery(dbHandle, Query, "", "");
	return 1;
}

stock LoadTextDraws()
{
    HungerBackground[0] = TextDrawCreate(547.500000, 58.000000, "_");
	TextDrawBackgroundColor(HungerBackground[0], 255);
	TextDrawFont(HungerBackground[0], 1);
	TextDrawLetterSize(HungerBackground[0], 0.500000, 0.399999);
	TextDrawColor(HungerBackground[0], -1);
	TextDrawSetOutline(HungerBackground[0], 0);
	TextDrawSetProportional(HungerBackground[0], 1);
	TextDrawSetShadow(HungerBackground[0], 1);
	TextDrawUseBox(HungerBackground[0], 1);
	TextDrawBoxColor(HungerBackground[0], 255);
	TextDrawTextSize(HungerBackground[0], 606.000000, 40.000000);
	TextDrawSetSelectable(HungerBackground[0], 0);

	HungerBackground[1] = TextDrawCreate(549.500000, 60.000000, "_");
	TextDrawBackgroundColor(HungerBackground[1], 255);
	TextDrawFont(HungerBackground[1], 1);
	TextDrawLetterSize(HungerBackground[1], 0.490000, -0.000000);
	TextDrawColor(HungerBackground[1], -1);
	TextDrawSetOutline(HungerBackground[1], 0);
	TextDrawSetProportional(HungerBackground[1], 1);
	TextDrawSetShadow(HungerBackground[1], 1);
	TextDrawUseBox(HungerBackground[1], 1);
	TextDrawBoxColor(HungerBackground[1], 1787344480);
	TextDrawTextSize(HungerBackground[1], 604.000000, 40.000000);
	TextDrawSetSelectable(HungerBackground[1], 0);

    AnimDraw = TextDrawCreate(405.500000, 420.000000, "~y~~k~~PED_SPRINT~ ~g~to stop animation");
	TextDrawLetterSize(AnimDraw, 0.333499, 1.337500);
	TextDrawAlignment(AnimDraw, 1);
	TextDrawColor(AnimDraw, -1);
	TextDrawSetShadow(AnimDraw, 0);
	TextDrawSetOutline(AnimDraw, 1);
	TextDrawBackgroundColor(AnimDraw, 51);
	TextDrawFont(AnimDraw, 2);
	TextDrawSetProportional(AnimDraw, 1);
    //
	Button[0] = TextDrawCreate(50.0, 200.0, "<<");
	TextDrawAlignment(Button[0], 2);
	TextDrawTextSize(Button[0], 15.000000, 68.000000);
	TextDrawSetProportional(Button[0], 1);
	TextDrawLetterSize(Button[0], 0.679999, 1.900000);
	TextDrawSetShadow(Button[0], 1);
	TextDrawSetSelectable(Button[0], 1);
	TextDrawColor(Button[0], 0x63BD4EFF);
	TextDrawFont(Button[0], 3);
	TextDrawSetOutline(Button[0], 0);
	TextDrawBackgroundColor(Button[0], 255);

    Button[1] = TextDrawCreate(530.0, 200.0, ">>");
	TextDrawFont(Button[1], 3);
	TextDrawLetterSize(Button[1], 0.679999, 1.900000);
	TextDrawSetOutline(Button[1], 0);
	TextDrawAlignment(Button[1], 2);
	TextDrawTextSize(Button[1], 15.000000, 68.000000);
	TextDrawSetProportional(Button[1], 1);
	TextDrawSetShadow(Button[1], 1);
	TextDrawSetSelectable(Button[1], 1);
	TextDrawColor(Button[1], 0x63BD4EFF);
	TextDrawBackgroundColor(Button[1], 255);

	Button[2] = TextDrawCreate(240.000000, 371.000000, "Cancel");
	TextDrawAlignment(Button[2], 2);
	TextDrawTextSize(Button[2], 15.000000, 68.000000);
	TextDrawBackgroundColor(Button[2], 255);
	TextDrawFont(Button[2], 3);
	TextDrawLetterSize(Button[2], 0.679999, 1.900000);
	TextDrawColor(Button[2], 0x63BD4EFF);
	TextDrawSetOutline(Button[2], 0);
	TextDrawSetProportional(Button[2], 1);
	TextDrawSetShadow(Button[2], 1);
	TextDrawSetSelectable(Button[2], 1);

	Button[3] = TextDrawCreate(382.000000, 371.000000, "Select");
	TextDrawAlignment(Button[3], 2);
	TextDrawTextSize(Button[3], 15.000000, 68.000000);
	TextDrawBackgroundColor(Button[3], 255);
	TextDrawFont(Button[3], 3);
	TextDrawLetterSize(Button[3], 0.679999, 1.900000);
	TextDrawColor(Button[3], 0x63BD4EFF);
	TextDrawSetOutline(Button[3], 0);
	TextDrawSetProportional(Button[3], 1);
	TextDrawSetShadow(Button[3], 1);
	TextDrawSetSelectable(Button[3], 1);
}

forward LoadPorchHouse();
public LoadPorchHouse()
{
    porch_menu = CreateDynamicPickup(1314, 23, 882.9750,1890.6986,1032.6885,-1, 9);
	new rows, fields;
	cache_get_data(rows, fields);
	for(new i; i < TOTALHOUSE; i++) strmid(HouseInfo[i][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			PorchHouseInfo[idx][hID] = cache_get_row_int(idx-1, 0, dbHandle); // id
			PorchHouseInfo[idx][hEntrx] = cache_get_row_float(idx-1, 1, dbHandle); // hEntrx
			PorchHouseInfo[idx][hEntry] = cache_get_row_float(idx-1, 2, dbHandle); // hEntry
			PorchHouseInfo[idx][hEntrz] = cache_get_row_float(idx-1, 3, dbHandle); // hEntrz
			cache_get_row(idx-1, 4, PorchHouseInfo[idx][hOwner], dbHandle, MAX_PLAYER_NAME); // hOwner
			PorchHouseInfo[idx][hOwnerID] = cache_get_row_int(idx-1, 5, dbHandle); // hPrice
			PorchHouseInfo[idx][hPrice] = cache_get_row_int(idx-1, 6, dbHandle); // hPrice
			PorchHouseInfo[idx][hDays] = cache_get_row_int(idx-1, 7, dbHandle);
           	if(!strcmp(PorchHouseInfo[idx][hOwner],"None",true))
			{
				PorchHouseInfo[idx][hMIcon] = CreateDynamicMapIcon(PorchHouseInfo[idx][hEntrx], PorchHouseInfo[idx][hEntry], PorchHouseInfo[idx][hEntrz], 31, 0,floatround(idx / 8, floatround_floor) + 101,9,-1,150.0);
				PorchHouseInfo[idx][hPickup] = CreateDynamicPickup(1273, 1, PorchHouseInfo[idx][hEntrx], PorchHouseInfo[idx][hEntry], PorchHouseInfo[idx][hEntrz], floatround(idx / 8, floatround_floor) + 101, 9);
			}
			else
			{
				PorchHouseInfo[idx][hMIcon] = CreateDynamicMapIcon(PorchHouseInfo[idx][hEntrx], PorchHouseInfo[idx][hEntry], PorchHouseInfo[idx][hEntrz], 32, 0,floatround(idx / 8, floatround_floor) + 101,9,-1,150.0);
				PorchHouseInfo[idx][hPickup] = CreateDynamicPickup(1272, 1, PorchHouseInfo[idx][hEntrx], PorchHouseInfo[idx][hEntry], PorchHouseInfo[idx][hEntrz], floatround(idx / 8, floatround_floor) + 101, 9);
			}
			TOTALPORCHHOUSE++;
        }
    }
	return 1;
}

forward LoadPorch();
public LoadPorch()
{
	new rows, fields;
	porch_house_exit = CreateDynamicPickup(1318, 23, 2424.5337,-1715.2516,26.2475,-1, 0);
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			PorchInfo[idx][pID] = cache_get_row_int(idx-1, 0, dbHandle);
			PorchInfo[idx][pEnterX] = cache_get_row_float(idx-1, 1, dbHandle);
			PorchInfo[idx][pEnterY] = cache_get_row_float(idx-1, 2, dbHandle);
			PorchInfo[idx][pEnterZ] = cache_get_row_float(idx-1, 3, dbHandle);
			PorchInfo[idx][pCarX] = cache_get_row_float(idx-1, 4, dbHandle);
			PorchInfo[idx][pCarY] = cache_get_row_float(idx-1, 5, dbHandle);
			PorchInfo[idx][pCarZ] = cache_get_row_float(idx-1, 6, dbHandle);
			PorchInfo[idx][pCarA] = cache_get_row_float(idx-1, 7, dbHandle);
			PorchInfo[idx][pFirstFlat] = cache_get_row_int(idx-1, 8, dbHandle);
           	PorchInfo[idx][pEnterPick] = CreateDynamicPickup(1318, 23, PorchInfo[idx][pEnterX], PorchInfo[idx][pEnterY], PorchInfo[idx][pEnterZ]);
			TOTALPORCH++;
        }
    }
}

/*stock LoadObject()//объекты
{
//мб пригодится
}*/
stock LoadPickups()
{
    cashmer = CreateDynamicPickup(1239,2,1564.6545,-768.5431,1114.7072);
	bankpick[1] = CreateDynamicPickup(1318,23,2375.5305,-1909.9075,1126.9100);
	CreateDynamic3DTextLabel("Выход",0xFFCC00FF,2375.5305,-1909.9075,1126.9100+1,10.0);
	bankpick[0] = CreateDynamicPickup(1318,23,1853.6962,2035.5128,16.9741);
	CreateDynamic3DTextLabel("Почта России",0xFFCC00FF,374.3026,2904.7910,2.1778+1,10.0);
	pochtapickups[0] = CreateDynamicPickup(1318,23,374.3026,2904.7910,2.1778);//пикап входа почта
	pochtapickups[1] = CreateDynamicPickup(1318,23,669.7141,992.8854,1015.4100);//пикап выхода почта
	pochtapickups[2] = CreateDynamicPickup(1318,23,672.0107,998.2469,1015.4100);//вход для почтальена
	pochtapickups[3] = CreateDynamicPickup(1318,23,673.7890,998.5585,1015.4100);//выход для почтальена
	pochtapickups[4] = CreateDynamicPickup(1318,23,682.7831,997.7057,1015.4100);//выход с зада
	pochtapickups[5] = CreateDynamicPickup(1318,23,387.2009,2919.8337,1.7750);//вход со двора
//	CreateDynamic3DTextLabel("Банк пгт.Батырево",0xFFCC00FF,1853.6962,2035.5128,16.9741+1,10.0);
	meriapick[1] = CreateDynamicPickup(1318,23,1583.3656,-774.4028,1114.7072);
	CreateDynamic3DTextLabel("Выход",0xFFCC00FF,1583.3656,-774.4028,1114.7072+1,10.0);
	meriapick[0] = CreateDynamicPickup(1318,23,1818.2991,2095.6269,16.1631);
	CreateDynamic3DTextLabel("Поселковый совет",0xFFCC00FF,1818.2991,2095.6269,16.1631+1,10.0);
    CreateDynamic3DTextLabel("Украинская Мафия",0xFFCC00FF,1859.4064,1919.3284,13.3253+1,10.0);
	ukrpick[0] = CreateDynamicPickup(1318,23,1859.4064,1919.3284,13.3253,0);//Укринская Мафия
	ukrpick[1] = CreateDynamicPickup(1318,23,146.9571,2041.0522,701.9799,0);
	CreateDynamic3DTextLabel("Выход",0xFFCC00FF,146.9571,2041.0522,701.9799+1,10.0);
	AreaInfo[arBankMenu] = CreateDynamicSphere(2370.7656,-1904.1585,1126.9100,1.0);
	CreateDynamic3DTextLabel("{ffcc00}Нажмите: ALT",0xBBBBBBFF,2370.7656,-1904.1585,1126.9100,10.0);
	CreateDynamic3DTextLabel("{ffffff}Нажмите {7efd7d}\"L.ALT\"{ffffff}для сдачт на права.",-1,2303.3792,-1927.4711,2022.9600,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1);
	CreateDynamic3DTextLabel("{ffffff}Нажмите {7efd7d}\"L.ALT\"{ffffff}для устройства на работу.",-1,-926.1721,857.7138,2512.9500,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1);
	Pickup[5] = CreateDynamicPickup(1239,23,1754.8107,2251.7827,15.8603,0); //Дальнобойщики
	Pickup[10] = CreateDynamicPickup(19134, 23, 2303.3792,-1927.4711,2022.9600, -1); //Автошкола
	CreatePickup(1318,23,1818.2972,2095.7300,16.1631,-1);// на улице
	CreatePickup(1318,23,778.5310,675.8540,1002.5444,-1);// внутри
	CreateDynamicPickup(1318, 23, 883.6675,1892.6168,1032.6885,-1, 9);//Подъезд
	//почта
	CreateDynamicPickup(1239,23,671.5284,995.1760,1015.4100,0);
	//Грузчики
	CreateDynamicPickup(1275,23,2355.0908,-261.2916,2.7890,0);
	CreateDynamic3DTextLabel("Работа грузчика",0x0099FFAA,2355.0908,-261.2916,2.7890+1,2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	Mafia3d[0] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,1754.3183,2379.4780,18.4681+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0); //Склад Русской Мафии
	Mafia3d[1] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,140.3174,2052.1376,701.9799+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0); //Склад Украинской мафии
	Mafia3d[2] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,1421.5254,1674.1588,15.4835+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0); //Склад Армии
	CreateDynamicPickup(2969,23,1754.3183,2379.4780,18.4681,0);//Склад Русской Мафии
	CreateDynamicPickup(2969,23,140.3174,2052.1376,701.9799,0);//Склад Украинской мафии
	sklad = CreateDynamicPickup(3014,23,1421.5254,1674.1588,15.4835,0);//Склад Армии
	//АШ
	ashpick[0] = CreateDynamicPickup(19133, 23, 1912.2393,2227.5884,16.0831,0);
	ashpick[1] = CreateDynamicPickup(19133, 23, 2315.6807,-1927.9712,2022.9600,0);
	//Полиция
 	CreateDynamicPickup(1318, 23, 1919.2799,2183.3992,15.6982,-1);//Полиция вход
	CreateDynamicPickup(1318, 23, 1451.2917,1567.5509,1016.7194,-1);//Полиция выход
	//ТРК ''Релакс''
	CreateDynamicPickup(1318, 23, 1795.2946,2037.9290,16.2072,-1);//Вход
	CreateDynamicPickup(1318, 23, 980.2619,1779.2968,1002.9020,-1);//Выход
	//Армия
 	CreateDynamicPickup(1318, 23, 1473.5433,1672.5758,15.3236,-1);//Казарма вход
	CreateDynamicPickup(1318, 23, 906.5637,1948.4961,1032.7977,-1);//Казарма выход
	//==================ебаная рыбалка=========================
	Create3DTextLabel("{FFA500}Информация: {00BFFF}Рыбалка",0x00FFFFDD, 2825.8967,-2648.2358,2.0501,20.0,0,1);
	fishing[0] = CreatePickup(1239, 23, 2825.8967,-2648.2358,2.0501, -1);
	Create3DTextLabel("{FFA500}Магазин: {00BFFF}Рыбный рынок",0x00FFFFDD, 2786.4055,-2684.2224,3.2554,20.0,0,1);
	fishing[1] = CreatePickup(1318, 23, 2786.4055,-2684.2224,3.2554, -1);
	//Автосалон пгт.Батырево
	avtosalonpick[0] = CreateDynamicPickup(1318, 23, 2015.2994,1540.7522,15.9405,0); //+
	avtosalonpick[1] = CreateDynamicPickup(1318, 23, 1126.6505,1559.8279,2316.2300,0);
	//Военкомат
	voenkomatpick[0] = CreateDynamicPickup(19133,23,1919.2096,2303.8525,15.5697);
	voenkomatpick[1] = CreateDynamicPickup(19133,23,-572.3914,-193.5459,2552.0200);
	CreateDynamicPickup(19134,23,1576.1375,-773.8145,1114.7072,-1);//Устройство на работу в Поселковом Совете
	//СМП-Б
	CreateDynamicPickup(1318, 23, 2140.5476,1845.6045,13.1507,-1);//Вход в больницу
	CreateDynamicPickup(1318, 23, 1479.5999,2885.4265,1013.0210,-1);//Выход из больницы
	//Автобусы
/*	buscar[0] = AddStaticVehicle(418,1951.1075,2103.9897,15.8117,152.6360,6,6); // Автобус №1
	AddStaticVehicle(418,1947.1985,2103.9897,15.8044,152.6360,6,6); // Автобус №2
	AddStaticVehicle(418,1943.2272,2103.9897,15.8140,152.6360,6,6); // Автобус №3
	AddStaticVehicle(418,1939.2080,2103.9897,15.8114,152.6360,6,6); // ///
	AddStaticVehicle(418,1935.7104,2103.9897,15.8119,152.6360,6,6); // Автобус №4
	AddStaticVehicle(418,1931.6420,2103.9897,15.8120,152.6360,6,6); // Автобус №6
	AddStaticVehicle(418,1927.7266,2103.9897,15.8071,152.6360,6,6); // Автобус №7
	buscar[1] = AddStaticVehicle(418,1923.8842,2103.9897,15.8088,152.6360,6,6); // Автобус №8*/
	/*//Такси
	taxicar[0] = AddStaticVehicle(420,-779.2319,949.1096,11.9850,270.2456,141,141);
	AddStaticVehicle(420,-779.2262,953.2773,11.9847,267.5355,141,141);
	AddStaticVehicle(420,-779.0097,957.4914,12.0161,265.4540,141,141);
	AddStaticVehicle(420,-722.8792,949.5326,11.9870,95.3745,141,141);
	AddStaticVehicle(420,-723.0456,953.7891,12.0210,96.5101,141,141);
	taxicar[1] = AddStaticVehicle(420,-723.0406,957.9077,11.9835,90.3595,141,141);
	//Механики
	mechanic[0] = AddStaticVehicle(525,2568.4963,-2028.0879,21.9725,116.0218,6,6); // Механики №1
	AddStaticVehicle(525,2568.4963,-2031.8978,21.9639,116.0218,6,6); // Механики №2
	AddStaticVehicle(525,2568.4963,-2035.7424,21.9631,116.0218,6,6); // Механики №3
	AddStaticVehicle(525,2568.4963,-2039.6643,21.9708,116.0218,6,6); // Механики №4
	AddStaticVehicle(525,2568.4963,-2043.3666,21.9608,116.0218,6,6); // Механики №5
	mechanic[1] = AddStaticVehicle(525,2568.4963,-2047.3429,21.9590,116.0218,6,6); // Механики №6
	//Автомобили автошколы
	CategoryA[0] = AddStaticVehicleEx(461, 1939.1744,2246.4094,15.3708,89.9513,3,3, 100);
	CategoryA[1] = AddStaticVehicleEx(461, 1939.1692,2247.3604,15.3692,88.4778,3,3, 100);
	CategoryB[0] = AddStaticVehicleEx(492, 1933.5253,2225.2029,15.7316,1.7649,3,3, 100);
	AddStaticVehicleEx(492, 1928.8000,2225.1650,15.7315,0.6086,3,3, 100);
	CategoryB[1] = AddStaticVehicleEx(492, 1924.2289,2228.1021,15.7298,0.5742,3,3, 100);
	CategoryC[0] = AddStaticVehicleEx(515, 1934.4994,2250.3352,16.3538,89.8652,3,3, 100);
	CategoryC[1] = AddStaticVehicleEx(515, 1922.8806,2250.6436,16.3560,92.9310,3,3, 100);
	CategoryD = AddStaticVehicleEx(483, 1909.6436,2235.8845,15.9755,359.6084,3,3, 100);
	//Скутеры на спавне пгт.Батырево
	skytera[0] = AddStaticVehicleEx(462,1941.1414,2087.9670,15.2688,-90.0,1,1,300);//1
	skytera[1] = AddStaticVehicleEx(462,1941.3092,2095.8300,15.2693,-90.0,1,1,300);
	skytera[2] = AddStaticVehicleEx(462,1941.4626,2098.3212,15.2690,-90.0,1,1,300);
	skytera[3] = AddStaticVehicleEx(462,1941.4020,2100.2189,15.2695,-90.0,1,1,300);
	skytera[4] = AddStaticVehicleEx(462,1941.2718,2092.0930,15.2695,-90.0,1,1,300);
	//Армия
	armyngcar[0] = AddStaticVehicleEx(551,1417.3633,1695.0658,14.7333,179.2062,1,1,900);
	AddStaticVehicleEx(578,1423.0111,1709.5089,15.3527,179.6817,0,0,900);
	AddStaticVehicleEx(578,1429.0060,1709.3099,15.3593,179.7201,0,0,900);
	AddStaticVehicleEx(578,1435.4539,1709.3947,15.3577,178.1124,0,0,900);
	AddStaticVehicleEx(578,1442.2194,1709.2200,15.3558,179.5179,0,0,900);
	AddStaticVehicleEx(470,1450.0721,1711.5626,15.2378,178.0006,0,0,900);
	AddStaticVehicleEx(470,1456.5314,1711.5568,15.2378,179.2610,0,0,900);
	AddStaticVehicleEx(470,1462.8485,1711.4562,15.2375,179.6209,0,0,900);
	AddStaticVehicleEx(470,1469.4524,1711.4097,15.2365,181.4359,0,0,900);
	AddStaticVehicleEx(601,1475.1501,1718.7994,15.0016,180.0711,0,0,900);
	AddStaticVehicleEx(425,1406.6547,1638.5306,16.3558,0.1601,0,0,900);
	AddStaticVehicleEx(425,1388.5106,1638.0382,16.3432,1.1181,0,0,900);
	AddStaticVehicleEx(548,1448.6503,1635.8107,16.0476,359.1183,0,0,900);
	AddStaticVehicleEx(548,1471.9031,1635.3361,16.0485,0.2842,0,0,900);
	AddStaticVehicleEx(548,1493.8391,1635.3953,16.0437,0.0001,0,0,900);
	armyngcar[1] = AddStaticVehicleEx(425,1427.9449,1637.6971,16.3287,2.4107,0,0,900);
	
	//АП
	meriacar[0] = AddStaticVehicleEx(400,1797.1576,2082.0835,15.2837,0.5613,1,1,900); // АП
	AddStaticVehicleEx(551,1793.2323,2081.7861,15.2768,0.8515,1,1,900); // АП
	AddStaticVehicleEx(551,1789.6597,2082.1636,15.2768,1.1145,1,1,900); // АП
	AddStaticVehicleEx(602,1797.7914,2096.0674,15.7249,358.8111,1,1,900); // АП
	AddStaticVehicleEx(602,1798.0103,2106.7632,15.7249,359.0296,1,1,900); // АП
	AddStaticVehicleEx(409,1797.9113,2118.0518,15.7826,359.2674,1,1,900); // АП
	AddStaticVehicleEx(535,1785.7787,2126.1326,15.8420,0.9357,1,1,900); // АП
	AddStaticVehicleEx(535,1785.9381,2117.9285,15.8385,0.5354,1,1,900); // АП
	AddStaticVehicleEx(516,1786.3560,2106.9336,15.6096,308.0589,1,1,900); // АП
	AddStaticVehicleEx(516,1786.1765,2102.6106,15.6096,305.0979,1,1,900); // АП
	AddStaticVehicleEx(516,1786.6086,2098.3669,15.6062,302.1446,1,1,900); // АП
	meriacar[1] = AddStaticVehicleEx(421,1785.8984,2082.0061,15.2768,0.7072,1,1,900); // АП
	
	//Русская мафия
    opg1car[0] = AddStaticVehicle(482,1779.1231,2382.9245,15.4300,35.7824,0,0); //Авто Русской мафии
    AddStaticVehicle(542,1763.7330,2406.2785,15.1275,171.4136,0,0);
    AddStaticVehicle(466,1761.2939,2408.7563,15.0142,171.1279,0,0);
    AddStaticVehicle(466,1758.7401,2412.1899,15.0176,169.8447,0,0);
    AddStaticVehicle(492,1756.6260,2415.5197,15.3654,169.9025,0,0);
	opg1car[1] = AddStaticVehicle(492,1754.1147,2418.5134,15.3696,168.3896,0,0); // Авто Русской мафии
	
	//Украинская мафия
	opg2car[0] = AddStaticVehicle(466,1879.2816,1922.9937,12.9449,96.7458,0,0);
	AddStaticVehicle(466,1879.5778,1919.4393,12.9452,96.8964,0,0);
	AddStaticVehicle(565,1880.0816,1915.5988,13.3273,96.9552,0,0);
	AddStaticVehicle(565,1880.3859,1911.7260,13.3193,99.1672,0,0);
	AddStaticVehicle(579,1880.4836,1907.0640,13.2573,98.4869,0,0);
	opg2car[1] = AddStaticVehicle(440,1852.9390,1903.0019,13.4417,275.6712,0,0);
	
	//Авто Полиция
	policiacar[0] = AddStaticVehicleEx(551,1947.2599,2167.9360,15.1283,89.3624,1,1,900); //Авто Полиция
	AddStaticVehicleEx(599,1948.3379,2164.1238,15.9142,90.8542,1,1,900); //Авто Полиция
	AddStaticVehicleEx(599,1948.1598,2160.5288,15.9143,89.8405,1,1,900); //Авто Полиция
	AddStaticVehicleEx(599,1948.0234,2156.9382,15.9146,89.9587,1,1,900); //Авто Полиция
	AddStaticVehicleEx(402,1922.7512,2157.5952,15.3911,90.0095,0,0,900); //Авто Полиция
	AddStaticVehicleEx(402,1930.5603,2157.6250,15.3961,89.7816,0,0,900); //Авто Полиция
	AddStaticVehicleEx(402,1937.9064,2157.5059,15.3856,88.0882,0,0,900); //Авто Полиция
	AddStaticVehicleEx(402,1953.9863,2171.8416,15.3224,91.5420,0,0,900); //Авто Полиция
	policiacar[1] = AddStaticVehicleEx(599,1932.8105,2172.1467,15.9140,268.9068,1,1,900); // Полиция
	//Авто ТРК"Адвенс"
	smicar[0] = AddStaticVehicleEx(582,1814.2269,2026.9897,15.7221,358.2644,1,1,900); //Авто ТРК"Адвенс"
	AddStaticVehicleEx(582,1810.0531,2027.1492,15.7243,359.7739,-1,-1,900); //Авто ТРК"Адвенс"
    AddStaticVehicleEx(603,1778.2971,2047.1904,15.6905,88.8241,1,1,900); //Авто ТРК"Адвенс"
    AddStaticVehicleEx(603,1786.9061,2047.1234,15.6538,89.8942,1,1,900); //Авто ТРК"Адвенс"
    AddStaticVehicleEx(603,1795.5588,2047.1355,15.6415,90.1536,1,1,900); //Авто ТРК"Адвенс"
    AddStaticVehicleEx(603,1804.3590,2047.1134,15.6373,90.0052,1,1,900); //Авто ТРК"Адвенс"
    AddStaticVehicleEx(400,1818.0060,2040.3792,15.9190,359.3248,1,1,900); //Авто ТРК"Адвенс"
	smicar[1] = AddStaticVehicleEx(400,1818.0717,2047.1102,15.9123,359.7832,1,1,900); //Авто ТРК"Адвенс"
	//Авто СМП-Б
	bolkacar[0] = AddStaticVehicleEx(416,2125.2886,1825.6949,11.9434,89.9434,1,3,300); // //Авто СМП-Б
	AddStaticVehicleEx(416,2125.28865,1818.6951,11.9477,89.9434,1,3,300); // //Авто СМП-Б
	AddStaticVehicleEx(416,2125.2886,1811.3879,11.9414,89.9434,1,3,300); // //Авто СМП-Б
	bolkacar[1] = AddStaticVehicleEx(551,2125.2886,1804.2783,11.4585,89.9434,1,1,300); // //Авто СМП-Б*/
	return 1;
}

stock LoadRakolov()
{
    for(new i; i < sizeof(g_ranks); i ++)
	{
	    new rank_nor[244];
	    format(rank_nor, sizeof rank_nor, "{ffffff}Раковая норка {00FF61}№%d\n{ffffff}Используйте {00FF61}л.ALT {ffffff}чтобы искать раков", g_ranks[i][rak_id]);
		CreateDynamicPickup(19135, 1, g_ranks[i][rak_x], g_ranks[i][rak_y], g_ranks[i][rak_z] - 0.2, 0, 0);
		CreateDynamic3DTextLabel(rank_nor, 0xFFDD00FF, g_ranks[i][rak_x], g_ranks[i][rak_y], g_ranks[i][rak_z], 25.0);
	}
	return 1;
}

stock UpdateBizz(idx)
{
	new string[200],fee[64],text[20];
	if(BizzInfo[idx][bEnter] == 0) fee = "бесплатно";
	else format(fee, sizeof(fee), "%d {FFFFFF}руб.", BizzInfo[idx][bEnter]);
	switch(BizzInfo[idx][bMafia])
	{
	    case TEAM_OPGOR: text = "Русская Мафия";
	    case TEAM_OPGYG: text = "Украинская Мафия";
		case 0: text = "Отсутствует";
	}
	if(BizzInfo[idx][bType] == 1)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), "{3497FF}24/7\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[idx][bPrice]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
		else
		{
			format(string, sizeof(string), "{3497FF}24/7\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text, fee);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
	}
	if(BizzInfo[idx][bType] == 10)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), "{3497FF}Магазин Игрушек\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[idx][bPrice]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
		else
		{
			format(string, sizeof(string), "{3497FF}Магазин Игрушек\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text, fee);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
	}
	else if(BizzInfo[idx][bType] == 9)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), "{3497FF}Казино\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[idx][bPrice]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
		else
		{
			format(string, sizeof(string), "{3497FF}Казино\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text, fee);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
	}
	else if(BizzInfo[idx][bType] == 2)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), "{7efd7d}Заправка\n{99cc00}Заправка продаётся\n{FFFFFF}Цена: {99cc00}%d рублей\n{ffffff}Цена за 1 литр - {7efd7d}%i рублей\n{99cc00}Используйте /fill",BizzInfo[idx][bPrice], BizzInfo[idx][bTill]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
		else
		{
			format(string, sizeof(string), "{99cc00}/buyk - купить канистру\n/fill - заправить транспорт\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Цена за 1 литр бензина: {7efd7d}%i рублей",BizzInfo[idx][bOwner], BizzInfo[idx][bTill]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
	}
	else if(BizzInfo[idx][bType] == 7)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), "{3497FF}СТО\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.",text,BizzInfo[idx][bPrice]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
		else
		{
			format(string, sizeof(string), "{3497FF}СТО\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s",BizzInfo[idx][bOwner],text);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
	}
	else if(BizzInfo[idx][bType] == 8)
	{
   		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), "{3497FF}Магазин Одежды\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно",text,BizzInfo[idx][bPrice]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
		else
		{
			format(string, sizeof(string), "{3497FF}Магазин Одежды\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
	}
	else if(BizzInfo[idx][bType] == 14)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), "{3497FF}Аптека\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[idx][bPrice]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
		else
		{
			format(string, sizeof(string), "{3497FF}Аптека\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
	}
	else if(BizzInfo[idx][bType] == 15)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), "{3497FF}Рыбаловный магазиг\n{FFFFFF}Владелец: {99cc00}Государство\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена: {99cc00}%d {FFFFFF}руб.\n{FFFFFF}Цена за вход: {7efd7d}бесплатно", text,BizzInfo[idx][bPrice]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
		else
		{
			format(string, sizeof(string), "{3497FF}Рыбаловный магазин\n{FFFFFF}Владелец: {99cc00}%s\n{FFFFFF}Крыша: {3497FF}%s\n{FFFFFF}Цена за вход: {7efd7d}%s",BizzInfo[idx][bOwner],text,fee);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],-1,string);
		}
	}
	return 1;
}

stock UpdateHouse(idx)
{
	DestroyDynamicMapIcon(HouseInfo[idx][hMIcon]);
	DestroyDynamicPickup(HouseInfo[idx][hPickup]);
	if(!strcmp(HouseInfo[idx][hOwner],"None",true))
	{
		HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 31, 0,-1,-1,-1,150.0);
		HouseInfo[idx][hPickup] = CreateDynamicPickup(1273, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
	}
	else
	{
		HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 32, 0,-1,-1,-1,150.0);
		HouseInfo[idx][hPickup] = CreateDynamicPickup(1272, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
	}
	return 1;
}
stock ShowCapture(playerid)
{
    for(new i; i < 3; i++) PlayerTextDrawShow(playerid, CaptureBIZ[playerid][i]);
}
stock HideCapture(playerid)
{
	for(new i; i < 3; i++) PlayerTextDrawHide(playerid, CaptureBIZ[playerid][i]);
}
stock ShowRabotaCruz(playerid)
{
    for(new i; i < 5; i++) PlayerTextDrawShow(playerid, RabotaGruz[playerid][i]);
}
stock HideRabotaCruz(playerid)
{
	for(new i; i < 5; i++) PlayerTextDrawHide(playerid, RabotaGruz[playerid][i]);
}
stock BuyCar(playerid)
{
	if(GetPlayerHouse(playerid) == 1 || GetPlayerPorchHouse(playerid))
	{
		new Float:x, Float:y, Float:z, Float:fa,cost[MAX_PLAYERS],model[MAX_PLAYERS];
		switch(InShop[playerid])
		{
			case 1: cost[playerid] = carsC[pPressed[playerid]][1], model[playerid] = carsC[pPressed[playerid]][0], x=2013.5319, y=1540.7651, z=15.9405, fa=90.3657;
			case 2: cost[playerid] = carsB[pPressed[playerid]][1], model[playerid] = carsB[pPressed[playerid]][0], x=2013.5319, y=1540.7651, z=15.9405, fa=90.3657;
			case 3: cost[playerid] = carsA[pPressed[playerid]][1], model[playerid] = carsA[pPressed[playerid]][0], x=2013.5319, y=1540.7651, z=15.9405, fa=90.3657;
			case 4: cost[playerid] = carsBike[pPressed[playerid]][1], model[playerid] = carsBike[pPressed[playerid]][0], x=2013.5319, y=1540.7651, z=15.9405, fa=90.3657;
		}
		switch(InShop[playerid])
		{
			case 1: PI[playerid][cClass] = 1;
			case 2: PI[playerid][cClass] = 2;
			case 3: PI[playerid][cClass] = 3;
			case 4: PI[playerid][cClass] = 4;
		}
		if(PI[playerid][pCash] < cost[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег!");
		InShop[playerid] = 0;
		TogglePlayerControllable(playerid,true);
		PI[playerid][pCash] -= cost[playerid];
		for(new i; i < 16; i++) PlayerTextDrawHide(playerid,AvtosalonTD[playerid][i]);
		SetPlayerPos(playerid,x,y,z);
		SetPlayerFacingAngle(playerid,fa);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);

		for(new i = 0; i < 14; i++) PI[playerid][cVehcoms][i] = 0;
		format(PI[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
		PI[playerid][cVehcoms][0],PI[playerid][cVehcoms][1],PI[playerid][cVehcoms][2],
		PI[playerid][cVehcoms][3],PI[playerid][cVehcoms][4],PI[playerid][cVehcoms][5],
		PI[playerid][cVehcoms][6],PI[playerid][cVehcoms][7],PI[playerid][cVehcoms][8],
		PI[playerid][cVehcoms][9],PI[playerid][cVehcoms][10],PI[playerid][cVehcoms][11],
		PI[playerid][cVehcoms][12],PI[playerid][cVehcoms][13]);

		PI[playerid][cModel] = model[playerid];
		PI[playerid][cCost] = cost[playerid];
		PI[playerid][cLock] = 1;
		PI[playerid][cFuel] = 45;
		PI[playerid][cColor][0] = colors[playerid][0];
		PI[playerid][cColor][1] = colors[playerid][1];
		PI[playerid][cPaintjob] = 3;
		SendClientMessage(playerid, COLOR_BLUE, "Поздравляем Вас с успешной покупкой авто.(Чтобы зареспавнить транспорт к дому используйте /car)");
		CancelSelectTextDraw(playerid);
		if(PI[playerid][SalonCarID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][SalonCarID]);
		PI[playerid][SalonCarID] = INVALID_VEHICLE_ID;
	/*	if(PI[playerid][PlayerCarID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(PI[playerid][PlayerCarID]);
			PI[playerid][PlayerCarID] = INVALID_VEHICLE_ID;
		}*/
		pPressed[playerid] = 0;
		new string[128];
		format(string, sizeof(string), "Игрок %s купил транспорт %s[%i] за %d Рублей", GetName(playerid), VehicleNames[GetVehicleModel(PI[playerid][PlayerCarID])-400], GetPlayerVehicleID(playerid), cost[playerid]);
		SendLog("BuyCar", string);
		if(GetPlayerPorchHouse(playerid) == 0) LoadMyCar(playerid);
	}
	return 1;
}
stock BuyCloseCar(playerid)
{
	new Float:x, Float:y, Float:z, Float:fa;
	switch(InShop[playerid])
	{
 		case 1: x=2013.5319, y=1540.7651, z=15.9405, fa=90.3657;
 		case 2: x=2013.5319, y=1540.7651, z=15.9405, fa=90.3657;
 		case 3: x=2013.5319, y=1540.7651, z=15.9405, fa=90.3657;
 		case 4: x=2013.5319, y=1540.7651, z=15.9405, fa=90.3657;
	}
	if(PI[playerid][SalonCarID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][SalonCarID]);
	PI[playerid][SalonCarID] = INVALID_VEHICLE_ID;
	InShop[playerid] = 0;
	TogglePlayerControllable(playerid,true);
	for(new i; i < 16; i++) PlayerTextDrawHide(playerid,AvtosalonTD[playerid][i]);
	SetPlayerPos(playerid,x,y,z);
	SetPlayerFacingAngle(playerid,fa);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetCameraBehindPlayer(playerid);
	pPressed[playerid] = 0;
	return 1;
}

stock LoadMyCar(playerid)
{
	if(GetPlayerHouse(playerid) != 0) 
	{
		new h = GetPVarInt(playerid, "PlayerHouse");
		new carid;
		if(PI[playerid][cModel] == 0 || PI[playerid][cModel] < 400 || PI[playerid][cModel] > 611) return 1;
		if(PI[playerid][cPaintjob] > 3 || PI[playerid][cPaintjob] < 0) PI[playerid][cPaintjob] = 3;
		if(PI[playerid][PlayerCarID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(PI[playerid][PlayerCarID]);
			PI[playerid][PlayerCarID] = INVALID_VEHICLE_ID;
		}
	    carid = CreateVehicle(PI[playerid][cModel], HouseInfo[h][hCarx], HouseInfo[h][hCary], HouseInfo[h][hCarz], HouseInfo[h][hCarfa], PI[playerid][cColor][0], PI[playerid][cColor][1], 90000);
	    SetVehicleVirtualWorld(PI[playerid][PlayerCarID], 0);
	    LinkVehicleToInterior(PI[playerid][PlayerCarID], 0);
		PI[playerid][PlayerCarID] = carid;
		CarDoors(carid, PI[playerid][cLock]);
		Fuel[carid] = PI[playerid][cFuel];
		SetVehicleHealth(carid, 1000);
		Engine[carid] = Lights[PI[playerid][PlayerCarID]] = false;
		IsLocked[carid] = (!PI[playerid][cLock]) ? (false) : (true);
		for(new i; i < 14; i++)
		{
		    if(PI[playerid][cVehcoms][i]) AddVehicleComponent(PI[playerid][PlayerCarID], PI[playerid][cVehcoms][i]);
		}
		if(PI[playerid][cPaintjob] != 3) ChangeVehiclePaintjob(PI[playerid][PlayerCarID], PI[playerid][cPaintjob]);
		new labeltext[60];
	   	format(labeltext, sizeof(labeltext), "%s", PI[playerid][pNumberVehicle]);
		VehicleLabel[carid] = Create3DTextLabel(labeltext, 0xFFFFFFFF, 0, 0, 0, 10.0, 0);
		Attach3DTextLabelToVehicle(VehicleLabel[carid], carid, 0, 0, 0.2);
	}
	else if(GetPlayerPorchHouse(playerid) != 0)
	{
		new h = GetPlayerPorchHouse(playerid);
		new porch = floatround(h / 9, floatround_floor) + 1;
		new carid;
		if(PI[playerid][cModel] == 0 || PI[playerid][cModel] < 400 || PI[playerid][cModel] > 611) return 1;
		if(PI[playerid][cPaintjob] > 3 || PI[playerid][cPaintjob] < 0) PI[playerid][cPaintjob] = 3;
		if(PI[playerid][PlayerCarID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(PI[playerid][PlayerCarID]);
			PI[playerid][PlayerCarID] = INVALID_VEHICLE_ID;
		}
	    carid = CreateVehicle(PI[playerid][cModel], PorchInfo[porch][pCarX], PorchInfo[porch][pCarY], PorchInfo[porch][pCarZ], PorchInfo[porch][pCarA], PI[playerid][cColor][0], PI[playerid][cColor][1], 90000);
	    SetVehicleVirtualWorld(PI[playerid][PlayerCarID], 0);
	    LinkVehicleToInterior(PI[playerid][PlayerCarID], 0);
		PI[playerid][PlayerCarID] = carid;
		CarDoors(carid, PI[playerid][cLock]);
		Fuel[carid] = PI[playerid][cFuel];
		SetVehicleHealth(carid, 1000);
		Engine[carid] = Lights[PI[playerid][PlayerCarID]] = false;
		IsLocked[carid] = (!PI[playerid][cLock]) ? (false) : (true);
		for(new i; i < 14; i++)
		{
		    if(PI[playerid][cVehcoms][i]) AddVehicleComponent(PI[playerid][PlayerCarID], PI[playerid][cVehcoms][i]);
		}
		if(PI[playerid][cPaintjob] != 3) ChangeVehiclePaintjob(PI[playerid][PlayerCarID], PI[playerid][cPaintjob]);
		new labeltext[60];
	   	format(labeltext, sizeof(labeltext), "%s", PI[playerid][pNumberVehicle]);
		VehicleLabel[carid] = Create3DTextLabel(labeltext, 0xFFFFFFFF, 0, 0, 0, 10.0, 0);
		Attach3DTextLabelToVehicle(VehicleLabel[carid], carid, 0, 0, 0.2);	
	}
	return 1;
}

stock SendVipMessage(color, str[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pVip] > 0) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendAdminMessage(color, str[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pAdmin] > ADM_MODER) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendSAdminMessage(color, str[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pAdmin] > ADM_NONE) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendAdminMessageEx(color, str[], admin_level)
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pAdmin] >= admin_level) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendAdminMessageToAll(color, const message[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		SendClientMessage(i, color, message);
	}
}

stock SendFMes(family, color, str[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pMember] == family) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendDMes(color, str[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pMember] == TEAM_ARMIYA || IsAMedic(i) || IsAMayor(i) || IsACop(i) || PI[i][pMember] == TEAM_AUTOSCHOOL || IsANews(i)) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendNMes(news, color, str[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pNews] == news) SendClientMessage(i, color, str);
	}
	return 1;
}

stock ProxDetectorNew(playerid, Float:Radi = 10.0, color, text[])
{
	new Float:posx, Float:posy, Float:posz;
	GetPlayerPos(playerid, posx, posy, posz);
	foreach(new i: Player)
	{
		if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)
 		&& GetPlayerInterior(playerid) == GetPlayerInterior(i)
 		&& IsPlayerInRangeOfPoint(i, Radi, posx, posy, posz)) SendClientMessage(i, color, text);
	}
	return 1;
}

stock ProxDetector(Float:radi, playerid, str[],col1,col2,col3,col4,col5)
{
	new Float:posx, Float:posy, Float:posz, Float:oldposx, Float:oldposy,
	Float:oldposz, Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		GetPlayerPos(i, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) SendClientMessage(i, col1, str);
		else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) SendClientMessage(i, col2, str);
		else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) SendClientMessage(i, col3, str);
		else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) SendClientMessage(i, col4, str);
		else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) SendClientMessage(i, col5, str);
	}
	return 1;
}

stock IsPlayerInRangeOfPlayer(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid) && !IsPlayerNPC(playerid) && !IsPlayerNPC(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(targetid, posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, radi, posx, posy, posz)) return 1;
	}
	return 0;
}

stock IsVehicleInRangeOfPoint(vehicleid, Float:distance, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx - x);
	tempposy = (oldposy - y);
	tempposz = (oldposz - z);
	if (((tempposx < distance) && (tempposx > -distance)) && ((tempposy < distance) && (tempposy > -distance)) && ((tempposz < distance) && (tempposz > -distance)))return true;
	return false;
}

stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 143.3;
	return floatround(ST[3]);
}

stock CreateTextDraws(playerid)
{
    SecurityCode[playerid][9] = CreatePlayerTextDraw(playerid,  510.666870, 282.088989, "box");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][9], 0.000000, 10.890344);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][9], 571.493652, 0.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][9], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][9], -222);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][9], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][9], -222);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][9], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][9], 0);

    SecurityCode[playerid][0] = CreatePlayerTextDraw(playerid,  513.333374, 287.066650, "1");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][0], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][0], 528.666748, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][0], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][0], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][0], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][0], true);

	SecurityCode[playerid][5] = CreatePlayerTextDraw(playerid,  533.228515, 287.066650, "6");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][5], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][5], 548.561889, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][5], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][5], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][5], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][5], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][5], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][5], true);

	SecurityCode[playerid][2] = CreatePlayerTextDraw(playerid,  553.523559, 287.066650, "3");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][2], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][2], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][2], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][2], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][2], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][2], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][2], true);

	SecurityCode[playerid][4] = CreatePlayerTextDraw(playerid,  553.523559, 318.868591, "5");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][4], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][4], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][4], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][4], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][4], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][4], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][4], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][4], true);

	SecurityCode[playerid][7] = CreatePlayerTextDraw(playerid,  533.228515, 318.868591, "8");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][7], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][7], 548.561889, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][7], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][7], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][7], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][7], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][7], true);

	SecurityCode[playerid][6] = CreatePlayerTextDraw(playerid,  513.233398, 318.868591, "7");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][6], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][6], 528.566772, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][6], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][6], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][6], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][6], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][6], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][6], true);

	SecurityCode[playerid][1] = CreatePlayerTextDraw(playerid,  513.233398, 350.770538, "2");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][1], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][1], 528.566772, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][1], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][1], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][1], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][1], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][1], true);

	SecurityCode[playerid][3] = CreatePlayerTextDraw(playerid,  533.328491, 350.770538, "4");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][3], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][3], 548.661865, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][3], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][3], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][3], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][3], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][3], true);

	SecurityCode[playerid][8] = CreatePlayerTextDraw(playerid,  553.523559, 350.770538, "9");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][8], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][8], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][8], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][8], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][8], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][8], -5963521);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][8], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][8], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][8], true);
	//================================[/bizwar]=================================
	CaptureBIZ[playerid][0] = CreatePlayerTextDraw(playerid, 144.000000, 199.988891, "usebox");
	PlayerTextDrawLetterSize(playerid, CaptureBIZ[playerid][0], 0.000000, 5.283334);
	PlayerTextDrawTextSize(playerid, CaptureBIZ[playerid][0], 6.500000, 0.000000);
	PlayerTextDrawAlignment(playerid, CaptureBIZ[playerid][0], 1);
	PlayerTextDrawColor(playerid, CaptureBIZ[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, CaptureBIZ[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, CaptureBIZ[playerid][0], 102);
	PlayerTextDrawSetShadow(playerid, CaptureBIZ[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, CaptureBIZ[playerid][0], 0);
	PlayerTextDrawFont(playerid, CaptureBIZ[playerid][0], 0);

	CaptureBIZ[playerid][1] = CreatePlayerTextDraw(playerid, 14.000000, 201.599990, "Русская Мафия");
	PlayerTextDrawLetterSize(playerid, CaptureBIZ[playerid][1], 0.411000, 1.954666);
	PlayerTextDrawAlignment(playerid, CaptureBIZ[playerid][1], 1);
	PlayerTextDrawColor(playerid, CaptureBIZ[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, CaptureBIZ[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, CaptureBIZ[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, CaptureBIZ[playerid][1], 51);
	PlayerTextDrawFont(playerid, CaptureBIZ[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, CaptureBIZ[playerid][1], 1);

	CaptureBIZ[playerid][2] = CreatePlayerTextDraw(playerid, 13.500000, 222.511123, "Украинская Мафия");
	PlayerTextDrawLetterSize(playerid, CaptureBIZ[playerid][2], 0.411000, 1.954666);
	PlayerTextDrawAlignment(playerid, CaptureBIZ[playerid][2], 1);
	PlayerTextDrawColor(playerid, CaptureBIZ[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, CaptureBIZ[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, CaptureBIZ[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, CaptureBIZ[playerid][2], 51);
	PlayerTextDrawFont(playerid, CaptureBIZ[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, CaptureBIZ[playerid][2], 1);
	//============================[Работа Грузчика]=============================
	RabotaGruz[playerid][0] = CreatePlayerTextDraw(playerid, 100.222213, 218.033325, "usebox");
	PlayerTextDrawLetterSize(playerid, RabotaGruz[playerid][0], 0.000000, 4.163333);
	PlayerTextDrawTextSize(playerid, RabotaGruz[playerid][0], 8.666666, 0.000000);
	PlayerTextDrawAlignment(playerid, RabotaGruz[playerid][0], 1);
	PlayerTextDrawColor(playerid, RabotaGruz[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, RabotaGruz[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, RabotaGruz[playerid][0], 255);
	PlayerTextDrawSetShadow(playerid, RabotaGruz[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, RabotaGruz[playerid][0], 0);
	PlayerTextDrawFont(playerid, RabotaGruz[playerid][0], 0);

	RabotaGruz[playerid][1] = CreatePlayerTextDraw(playerid, 100.222213, 227.988861, "usebox");
	PlayerTextDrawLetterSize(playerid, RabotaGruz[playerid][1], 0.000000, -1.865308);
	PlayerTextDrawTextSize(playerid, RabotaGruz[playerid][1], 8.222223, 0.000000);
	PlayerTextDrawAlignment(playerid, RabotaGruz[playerid][1], 1);
	PlayerTextDrawColor(playerid, RabotaGruz[playerid][1], 0);
	PlayerTextDrawUseBox(playerid, RabotaGruz[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, RabotaGruz[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, RabotaGruz[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, RabotaGruz[playerid][1], 0);
	PlayerTextDrawFont(playerid, RabotaGruz[playerid][1], 0);

	RabotaGruz[playerid][2] = CreatePlayerTextDraw(playerid, 12.888903, 225.493362, "1000 •Љ…KO‹");
	PlayerTextDrawLetterSize(playerid, RabotaGruz[playerid][2], 0.277555, 1.420800);
	PlayerTextDrawAlignment(playerid, RabotaGruz[playerid][2], 1);
	PlayerTextDrawColor(playerid, RabotaGruz[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, RabotaGruz[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, RabotaGruz[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, RabotaGruz[playerid][2], 51);
	PlayerTextDrawFont(playerid, RabotaGruz[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, RabotaGruz[playerid][2], 1);

	RabotaGruz[playerid][3] = CreatePlayerTextDraw(playerid, 13.444460, 240.928894, "10000 PY—.");
	PlayerTextDrawLetterSize(playerid, RabotaGruz[playerid][3], 0.277555, 1.420800);
	PlayerTextDrawAlignment(playerid, RabotaGruz[playerid][3], 1);
	PlayerTextDrawColor(playerid, RabotaGruz[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, RabotaGruz[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, RabotaGruz[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, RabotaGruz[playerid][3], 51);
	PlayerTextDrawFont(playerid, RabotaGruz[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, RabotaGruz[playerid][3], 1);

	RabotaGruz[playerid][4] = CreatePlayerTextDraw(playerid, 23.555547, 214.044464, "‚PY€Ќ…K");
	PlayerTextDrawLetterSize(playerid, RabotaGruz[playerid][4], 0.441555, 1.361066);
	PlayerTextDrawAlignment(playerid, RabotaGruz[playerid][4], 1);
	PlayerTextDrawColor(playerid, RabotaGruz[playerid][4], -65281);
	PlayerTextDrawSetShadow(playerid, RabotaGruz[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, RabotaGruz[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, RabotaGruz[playerid][4], 51);
	PlayerTextDrawFont(playerid, RabotaGruz[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, RabotaGruz[playerid][4], 1);
	//
	StatusWork[playerid][0] = CreatePlayerTextDraw(playerid,  609.500000, 143.687500, " ");
	PlayerTextDrawLetterSize(playerid, GreenZoneText[playerid][0], 0.000000, 0.016666);
	PlayerTextDrawTextSize(playerid, GreenZoneText[playerid][0], 0.500000, 0.000000);
	PlayerTextDrawAlignment(playerid, GreenZoneText[playerid][0], 0);
	PlayerTextDrawColor(playerid, GreenZoneText[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, GreenZoneText[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, GreenZoneText[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, GreenZoneText[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, GreenZoneText[playerid][0], 0);
	PlayerTextDrawFont(playerid, GreenZoneText[playerid][0], 0);
	
	StatusWork[playerid][1] = CreatePlayerTextDraw(playerid,  478.000000, 187.419998, "usebox");
	PlayerTextDrawLetterSize(playerid, StatusWork[playerid][1], 0.000000, 9.638891);
	PlayerTextDrawTextSize(playerid, StatusWork[playerid][1], 618.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, StatusWork[playerid][1], 1);
	PlayerTextDrawColor(playerid, StatusWork[playerid][1], 0);
	PlayerTextDrawUseBox(playerid, StatusWork[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, StatusWork[playerid][1], 102);
	PlayerTextDrawSetShadow(playerid, StatusWork[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, StatusWork[playerid][1], 0);
	PlayerTextDrawFont(playerid, StatusWork[playerid][1], 0);

	StatusWork[playerid][2] = CreatePlayerTextDraw(playerid,  619.439941, 191.899978, "usebox");
	PlayerTextDrawLetterSize(playerid, StatusWork[playerid][2], -0.006399, 8.520547);
	PlayerTextDrawTextSize(playerid, StatusWork[playerid][2], 476.399993, 0.000000);
	PlayerTextDrawAlignment(playerid, StatusWork[playerid][2], 1);
	PlayerTextDrawColor(playerid, StatusWork[playerid][2], 0);
	PlayerTextDrawUseBox(playerid, StatusWork[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, StatusWork[playerid][2], -5963521);
	PlayerTextDrawSetShadow(playerid, StatusWork[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, StatusWork[playerid][2], 0);
	PlayerTextDrawFont(playerid, StatusWork[playerid][2], 0);

	StatusWork[playerid][3] = CreatePlayerTextDraw(playerid,  495.999908, 191.893264, "ИНФОРМАЦИЯ");
	PlayerTextDrawLetterSize(playerid, StatusWork[playerid][3], 0.383599, 1.652266);
	PlayerTextDrawAlignment(playerid, StatusWork[playerid][3], 1);
	PlayerTextDrawColor(playerid, StatusWork[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, StatusWork[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, StatusWork[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, StatusWork[playerid][3], 51);
	PlayerTextDrawFont(playerid, StatusWork[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, StatusWork[playerid][3], 1);

	StatusWork[playerid][4] = CreatePlayerTextDraw(playerid,  485.239898, 217.458587, "ПPИНEСEНО: 0");
	PlayerTextDrawLetterSize(playerid, StatusWork[playerid][4], 0.383599, 1.652266);
	PlayerTextDrawAlignment(playerid, StatusWork[playerid][4], 1);
	PlayerTextDrawColor(playerid, StatusWork[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, StatusWork[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, StatusWork[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, StatusWork[playerid][4], 51);
	PlayerTextDrawFont(playerid, StatusWork[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, StatusWork[playerid][4], 1);

	StatusWork[playerid][5] = CreatePlayerTextDraw(playerid,  486.000000, 241.530441, "ПРOЦEНТ: 0 %");
	PlayerTextDrawLetterSize(playerid, StatusWork[playerid][5], 0.416878, 1.632107);
	PlayerTextDrawAlignment(playerid, StatusWork[playerid][5], 1);
	PlayerTextDrawColor(playerid, StatusWork[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, StatusWork[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, StatusWork[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, StatusWork[playerid][5], 51);
	PlayerTextDrawFont(playerid, StatusWork[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, StatusWork[playerid][5], 1);
	//
	
	GreenZoneText[playerid][0] = CreatePlayerTextDraw(playerid,  609.500000, 143.687500, "usebox");
	PlayerTextDrawLetterSize(playerid, GreenZoneText[playerid][0], 0.000000, 2.016666);
	PlayerTextDrawTextSize(playerid, GreenZoneText[playerid][0], 499.500000, 0.000000);
	PlayerTextDrawAlignment(playerid, GreenZoneText[playerid][0], 1);
	PlayerTextDrawColor(playerid, GreenZoneText[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, GreenZoneText[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, GreenZoneText[playerid][0], 1673350911);
	PlayerTextDrawSetShadow(playerid, GreenZoneText[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, GreenZoneText[playerid][0], 0);
	PlayerTextDrawFont(playerid, GreenZoneText[playerid][0], 0);

	GreenZoneText[playerid][1] = CreatePlayerTextDraw(playerid,  608.000000, 144.562500, "usebox");
	PlayerTextDrawLetterSize(playerid, GreenZoneText[playerid][1], 0.000000, 1.822222);
	PlayerTextDrawTextSize(playerid, GreenZoneText[playerid][1], 500.500000, 0.000000);
	PlayerTextDrawAlignment(playerid, GreenZoneText[playerid][1], 1);
	PlayerTextDrawColor(playerid, GreenZoneText[playerid][1], 0);
	PlayerTextDrawUseBox(playerid, GreenZoneText[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, GreenZoneText[playerid][1], 102);
	PlayerTextDrawSetShadow(playerid, GreenZoneText[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, GreenZoneText[playerid][1], 0);
	PlayerTextDrawFont(playerid, GreenZoneText[playerid][1], 0);

	GreenZoneText[playerid][2] = CreatePlayerTextDraw(playerid,  554.500000, 146.562500, "GREEN ZONE");
	PlayerTextDrawLetterSize(playerid, GreenZoneText[playerid][2], 0.314000, 1.184376);
	PlayerTextDrawAlignment(playerid, GreenZoneText[playerid][2], 2);
	PlayerTextDrawColor(playerid, GreenZoneText[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, GreenZoneText[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, GreenZoneText[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, GreenZoneText[playerid][2], 51);
	PlayerTextDrawFont(playerid, GreenZoneText[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, GreenZoneText[playerid][2], 1);

	GreenZoneText[playerid][3] = CreatePlayerTextDraw(playerid,  599.500000, 137.375000, "ld_chat:badchat");
	PlayerTextDrawLetterSize(playerid, GreenZoneText[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, GreenZoneText[playerid][3], 18.000000, 16.187500);
	PlayerTextDrawAlignment(playerid, GreenZoneText[playerid][3], 1);
	PlayerTextDrawColor(playerid, GreenZoneText[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, GreenZoneText[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, GreenZoneText[playerid][3], 0);
	PlayerTextDrawFont(playerid, GreenZoneText[playerid][3], 4);
	
	CaptureTD[playerid][0] = CreatePlayerTextDraw(playerid,  211.000000, 310.000000, "_");
	PlayerTextDrawUseBox(playerid, CaptureTD[playerid][0], 1);
	PlayerTextDrawTextSize(playerid, CaptureTD[playerid][0], 5.000000, 200.000000);
	PlayerTextDrawLetterSize(playerid, CaptureTD[playerid][0], 0.240000, -7.000000);
	PlayerTextDrawBoxColor(playerid, CaptureTD[playerid][0], COLOR_BOX);

	CaptureTD[playerid][1] = CreatePlayerTextDraw(playerid,  14.000000, 260.000000, "Time:");
	PlayerTextDrawBackgroundColor(playerid, CaptureTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, CaptureTD[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, CaptureTD[playerid][1], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, CaptureTD[playerid][1], COLOR_GREEN);
	PlayerTextDrawSetOutline(playerid, CaptureTD[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, CaptureTD[playerid][1], 1);

	CaptureTD[playerid][2] = CreatePlayerTextDraw(playerid,  75.000000, 260.000000, "10:00");
	PlayerTextDrawBackgroundColor(playerid, CaptureTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, CaptureTD[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, CaptureTD[playerid][2], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, CaptureTD[playerid][2], COLOR_GREEN);
	PlayerTextDrawSetOutline(playerid, CaptureTD[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, CaptureTD[playerid][2], 1);

	CaptureTD[playerid][3] = CreatePlayerTextDraw(playerid,  14.000000, 276.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, CaptureTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, CaptureTD[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, CaptureTD[playerid][3], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, CaptureTD[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, CaptureTD[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, CaptureTD[playerid][3], 1);

	CaptureTD[playerid][4] = CreatePlayerTextDraw(playerid,  14.000000, 293.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, CaptureTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, CaptureTD[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, CaptureTD[playerid][4], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, CaptureTD[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, CaptureTD[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, CaptureTD[playerid][4], 1);

	CaptureTD[playerid][5] = CreatePlayerTextDraw(playerid,  190.000000, 277.000000, "0");
	PlayerTextDrawBackgroundColor(playerid, CaptureTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, CaptureTD[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, CaptureTD[playerid][5], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, CaptureTD[playerid][5], 0xFF0000FF);
	PlayerTextDrawSetOutline(playerid, CaptureTD[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, CaptureTD[playerid][5], 1);

	CaptureTD[playerid][6] = CreatePlayerTextDraw(playerid,  190.000000, 293.000000, "0");
	PlayerTextDrawBackgroundColor(playerid, CaptureTD[playerid][6], 255);
	PlayerTextDrawFont(playerid, CaptureTD[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, CaptureTD[playerid][6], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, CaptureTD[playerid][6], 0xFF0000FF);
	PlayerTextDrawSetOutline(playerid, CaptureTD[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, CaptureTD[playerid][6], 1);
//================| Автосалон TD |==============================================
	AvtosalonTD[playerid][0] = CreatePlayerTextDraw(playerid, 637.000000, 160.166641, "usebox");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][0], 0.000000, 14.502780);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][0], 500.500000, 0.000000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, AvtosalonTD[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, AvtosalonTD[playerid][0], 102);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][0], 0);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][0], 0);

	AvtosalonTD[playerid][1] = CreatePlayerTextDraw(playerid, 639.500000, 125.750000, "usebox");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][1], 0.000000, 3.576851);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][1], 494.875000, 0.000000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][1], 0);
	PlayerTextDrawUseBox(playerid, AvtosalonTD[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, AvtosalonTD[playerid][1], 102);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][1], 0);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][1], 0);

	AvtosalonTD[playerid][2] = CreatePlayerTextDraw(playerid, 639.500000, 165.416656, "usebox");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][2], 0.000000, 1.951854);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][2], 497.375000, 0.000000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][2], 0);
	PlayerTextDrawUseBox(playerid, AvtosalonTD[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, AvtosalonTD[playerid][2], -3407702);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][2], 0);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][2], 0);

	AvtosalonTD[playerid][3] = CreatePlayerTextDraw(playerid, 640.500000, 189.749923, "usebox");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][3], 0.000000, 1.951854);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][3], 497.375000, 0.000000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][3], 0);
	PlayerTextDrawUseBox(playerid, AvtosalonTD[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, AvtosalonTD[playerid][3], -3407702);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][3], 0);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][3], 0);

	AvtosalonTD[playerid][4] = CreatePlayerTextDraw(playerid, 639.625000, 214.666595, "usebox");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][4], 0.000000, 1.951854);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][4], 497.375000, 0.000000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][4], 0);
	PlayerTextDrawUseBox(playerid, AvtosalonTD[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, AvtosalonTD[playerid][4], -3407702);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][4], 0);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][4], 0);

	AvtosalonTD[playerid][5] = CreatePlayerTextDraw(playerid, 640.000000, 240.166580, "usebox");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][5], 0.000000, 1.951854);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][5], 496.750000, 0.000000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][5], 0);
	PlayerTextDrawUseBox(playerid, AvtosalonTD[playerid][5], true);
	PlayerTextDrawBoxColor(playerid, AvtosalonTD[playerid][5], -3407702);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][5], 0);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][5], 0);

	AvtosalonTD[playerid][6] = CreatePlayerTextDraw(playerid, 568.250000, 270.416687, "usebox");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][6], 0.000000, 1.692590);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][6], 508.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][6], 0);
	PlayerTextDrawUseBox(playerid, AvtosalonTD[playerid][6], true);
	PlayerTextDrawBoxColor(playerid, AvtosalonTD[playerid][6], 1506870527);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][6], 0);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][6], 0);

	AvtosalonTD[playerid][7] = CreatePlayerTextDraw(playerid, 631.750000, 270.249969, "usebox");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][7], 0.000000, 1.692590);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][7], 570.500000, 0.000000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][7], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][7], 0);
	PlayerTextDrawUseBox(playerid, AvtosalonTD[playerid][7], true);
	PlayerTextDrawBoxColor(playerid, AvtosalonTD[playerid][7], 1506870527);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][7], 0);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][7], 0);

	AvtosalonTD[playerid][8] = CreatePlayerTextDraw(playerid, 527.500000, 166.833419, "Next car");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][8], 0.449999, 1.600000);
//	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][8], 655.000000, -61.249950);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][8], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][8], -1);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][8], 1);
	PlayerTextDrawBackgroundColor(playerid, AvtosalonTD[playerid][8], 51);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, AvtosalonTD[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, AvtosalonTD[playerid][8], true);

	AvtosalonTD[playerid][9] = CreatePlayerTextDraw(playerid, 526.000000, 191.750015, "back car");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][9], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][9], 632.500000, 253.750152);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][9], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][9], -1);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][9], 1);
	PlayerTextDrawBackgroundColor(playerid, AvtosalonTD[playerid][9], 51);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, AvtosalonTD[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, AvtosalonTD[playerid][9], true);

	AvtosalonTD[playerid][10] = CreatePlayerTextDraw(playerid, 515.750000, 216.083328, "next color");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][10], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][10], 635.625000, 167.416732);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][10], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][10], -1);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][10], 1);
	PlayerTextDrawBackgroundColor(playerid, AvtosalonTD[playerid][10], 51);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][10], 2);
	PlayerTextDrawSetProportional(playerid, AvtosalonTD[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, AvtosalonTD[playerid][10], true);

	AvtosalonTD[playerid][11] = CreatePlayerTextDraw(playerid, 524.500000, 241.166656, "old color");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][11], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][11], 634.375000, 28.583335);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][11], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][11], -1);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][11], 1);
	PlayerTextDrawBackgroundColor(playerid, AvtosalonTD[playerid][11], 51);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid, AvtosalonTD[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, AvtosalonTD[playerid][11], true);

	AvtosalonTD[playerid][12] = CreatePlayerTextDraw(playerid, 519.375000, 270.666564, "buy");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][12], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][12], 563.750000, 34.416664);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][12], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][12], -1);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][12], 1);
	PlayerTextDrawBackgroundColor(playerid, AvtosalonTD[playerid][12], 51);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][12], 2);
	PlayerTextDrawSetProportional(playerid, AvtosalonTD[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, AvtosalonTD[playerid][12], true);

	AvtosalonTD[playerid][13] = CreatePlayerTextDraw(playerid, 582.250000, 269.916687, "exit");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][13], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, AvtosalonTD[playerid][13], 626.875000, 57.749992);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][13], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][13], -1);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][13], 1);
	PlayerTextDrawBackgroundColor(playerid, AvtosalonTD[playerid][13], 51);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][13], 2);
	PlayerTextDrawSetProportional(playerid, AvtosalonTD[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, AvtosalonTD[playerid][13], true);

	AvtosalonTD[playerid][14] = CreatePlayerTextDraw(playerid, 499.375000, 124.250022, "1500000 rub");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][14], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][14], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][14], 8388863);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][14], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][14], 1);
	PlayerTextDrawBackgroundColor(playerid, AvtosalonTD[playerid][14], 51);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][14], 2);
	PlayerTextDrawSetProportional(playerid, AvtosalonTD[playerid][14], 1);

	AvtosalonTD[playerid][15] = CreatePlayerTextDraw(playerid, 501.625000, 139.833343, "model: 500");
	PlayerTextDrawLetterSize(playerid, AvtosalonTD[playerid][15], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, AvtosalonTD[playerid][15], 1);
	PlayerTextDrawColor(playerid, AvtosalonTD[playerid][15], 8388863);
	PlayerTextDrawSetShadow(playerid, AvtosalonTD[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, AvtosalonTD[playerid][15], 1);
	PlayerTextDrawBackgroundColor(playerid, AvtosalonTD[playerid][15], 51);
	PlayerTextDrawFont(playerid, AvtosalonTD[playerid][15], 2);
	PlayerTextDrawSetProportional(playerid, AvtosalonTD[playerid][15], 1);
}

forward check_banlist(playerid);
public check_banlist(playerid)
{
	new unbandate, vas[32], bool:ban, rows, fields, dialog[500], str[150];
	cache_get_data(rows, fields);
	if(rows)
	{
	    cache_get_field_content(0, "unbandate", vas); unbandate = strval(vas);
		if(unbandate - gettime() > 0) ban = true;
	}
	if(ban == true)
	{
		new data[15], whobanned[MAX_PLAYER_NAME], reason[32], timeban;
		cache_get_field_content(0, "bandate", data);
		cache_get_field_content(0, "unbandate", vas); unbandate = strval(vas);
		cache_get_field_content(0, "whobanned", whobanned);
		cache_get_field_content(0, "reason", reason);
		timeban = cache_get_field_content_int(0, "time");
       	
       	strcat(dialog, "{F04245}");
		format(str, sizeof(str), "{ffffff}Этот аккаунт заблокирован на {FF6347}%d дней\n", timeban);
		strcat(dialog, str);
		format(str, sizeof(str), "{ffffff}Ник администратора: %s\n", whobanned);
		strcat(dialog, str);
		format(str, sizeof(str), "{ffffff}Причина блокировки: %s\n", reason);
	 	strcat(dialog, str);
  		format(str, sizeof(str), "{ffffff}Дата и время: {7efd7d}%s\n\n", data);
		strcat(dialog, str);
		format(str, sizeof(str), "{ffffff}Введите {7efd7d}/q {ffffff}чтобы выйти.", data);
		strcat(dialog, str);
		
       	
		ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{7efd7d}House RolePlay", dialog, "Закрыть", "");
		SKick(playerid, 28183);
	}
	return 1;
}

stock SetPlayerDataToDefault(playerid)
{
    SetPVarInt(playerid, "USEDIALOGID", -1);
    
    PI[playerid][pCity]                         	=
    iPlayerAmmo[playerid]                           =
	iNewPlayerAmmo[playerid]						=
	Shot[playerid]                                  =
    PI[playerid][pBusTime]                          =
    PI[playerid][pWorkSalary]                       =
    WeaponTime[playerid] 							=
    RapidFire[playerid] 							=
    PI[playerid][pAFK]                              =
    AdminInfo[playerid][admReport]                  =
    AdminInfo[playerid][admReputation]              =
    AdminInfo[playerid][admGoto]                    =
    AdminInfo[playerid][admGethere]                 =
    AdminInfo[playerid][admSpectate]                =
    Ujahhs[playerid] 								=
    Medicines[playerid]								=
    UnMaskReset[playerid] 							=
    UseWork[playerid] 								=
	PlayerBrake[playerid] 							=
    AC_Air_Time[playerid] 							=
    AC_Air_Time_Car[playerid] 						=
	pickupentered[playerid] 						=
	AcStruct[playerid][CheckMapTP] 					=
	PI[playerid][pSportExp] 						=
	PI[playerid][pMask] 							=
	PI[playerid][pBed] 								=
	PI[playerid][pTruckSkill] 						=
	PI[playerid][pTruckLevel] 						=
	PI[playerid][pZakon] 							=
	PI[playerid][pCheckCode] 						=
	PI[playerid][pWatch] 							=
	PI[playerid][pCiggare] 							=
	PI[playerid][pSprunk] 							=
	ChosenSkin[playerid] 							=
	SelectCharPlace[playerid] 						=
	PI[playerid][pPhoneBalance] 					=
	PlayerLogTries[playerid] 						=
	PlayerStats[playerid] 							=
	ClothesRound[playerid]							=
	HousePrice[playerid] 							=
	InShop[playerid] 								=
	InShopSkin[playerid] 							=
	DrivingTestTime[playerid]						=
	FlyTestTime[playerid]							=
	WaterTestTime[playerid]							=
	Oldskin2[playerid] 								=
	PI[playerid][pAdmin] 							=
	PI[playerid][pLeader] 							=
	PI[playerid][pTempLeader]                       =
	PI[playerid][pMember] 							=
	PI[playerid][pRank] 							=
	PI[playerid][pModel] 							=
	PI[playerid][pMemberSkin] 						=
	PI[playerid][pSex] 								=
	PI[playerid][pID] 								=
	PI[playerid][pWarn] 							=
	PI[playerid][pCash] 							=
	PI[playerid][pExp] 								=
    PI[playerid][pMuted] 							=
	PI[playerid][pAge] 								=
	PI[playerid][pBank] 							=
	PI[playerid][pNews] 							=
	PI[playerid][pJail] 							=
	PI[playerid][pJailTime] 						=
	PI[playerid][pWanted] 							=
	PI[playerid][pWantedTime] 						=
	PI[playerid][pDrugs] 							=
	PI[playerid][pPatron] 							=
	PI[playerid][pGunAmount] 						=
	PI[playerid][pCarA] 				     		=
	PI[playerid][pCarB] 				     		=
	PI[playerid][pCarC] 				     		=
	PI[playerid][pCarD] 				     		=
	PI[playerid][pCheckTime] 						=
	PI[playerid][pPick] 							=
	PI[playerid][pJob] 								=
	PI[playerid][pMarried] 							=
	PI[playerid][pPayCheck] 						=
	PI[playerid][pCharity] 							=
	PI[playerid][pVip] 								=
	PI[playerid][pVipTime]							=
	PI[playerid][pTime] 							=
	PI[playerid][pFightStyle] 						=
	PI[playerid][pCredits] 							=
	PI[playerid][pTotalCredits] 					=
	PI[playerid][pSkin][0] 							=
	PI[playerid][pSkin][1] 							=
	PI[playerid][pSkin][2] 							=
	PI[playerid][pZakon] 							=
	PI[playerid][pCheckCode] 						=
	PI[playerid][pVehicleKey]                       =
	PI[playerid][pMailConfirmed]                    =
	PI[playerid][pPhoneNumber]                      =
	PI[playerid][pVoennik]                          =
	PassInfo[playerid][psDateBirth][0] 				=
 	PassInfo[playerid][psDateBirth][1] 				=
 	PassInfo[playerid][psDateBirth][2] 				=
 	PassInfo[playerid][psDate][0] 					=
 	PassInfo[playerid][psDate][1] 					=
 	PassInfo[playerid][psDate][2] 					=
 	PassInfo[playerid][psCity] 						=
 	PassRegSex[playerid] 							=
 	PI[playerid][pRegVehicle] 						=
 	PI[playerid][pFishki]                           =
 	PI[playerid][pSpawnChange]						=
 	PI[playerid][ACCheck] 							=
 	Predlog[playerid]								=
    ZapretDice[playerid] 							=
    KostiMoney[playerid]							= 0;
    
    PI[playerid][pInputCode]						=
    HouseOffer[playerid] 							=
    Mobile[playerid] 								=
	CellTime[playerid] 								=
	PlayerStats[playerid] 							=
	PassInfo[playerid][mcState] 					= -1;
    
    activemusic[playerid]                           =
    PlayerMusic[playerid]                           =
    StartGMTest[playerid]                           =
    ac_1{playerid}                                  =
    PlayerDied[playerid]                    		= 
    CheckOutMoney[playerid]							= 
    UseGPS[playerid] 								= 
	FreezePlayer[playerid]							= 
	PlayerTied[playerid] 							= 
	PlayerLogged[playerid] 							= 
	AdminLogged[playerid] 							=
	TaxiON[playerid]                                =
	MedicON[playerid]                               =
	MechanicON[playerid]                            =
	PoliceON[playerid]                              =
	Ether[playerid] 								=
	EtherCall[0] 									=
	EtherCall[1] 									=
	EtherSms[0] 									=
	EtherSms[1] 									=
	EtherLive[playerid] 							=
	EtherCalled[playerid] 							= false;
	
	times[playerid] 								=
	Phone[playerid] 								= true;
	
	NameStats[playerid]                             =
	pCuff[playerid][pCuffer] 						=
	pCuff[playerid][pCuffee] 						=
    PI[playerid][Spectating][0] 					=
	PI[playerid][Spectating][1] 					=
	KostiName[playerid] 							= INVALID_PLAYER_ID;
	
	VehTest[playerid]                               =
	PI[playerid][TaxiCarID]                         =
	PI[playerid][BusCarID]                          =
	PI[playerid][MechanicCarID]                     =
	PI[playerid][GruzCarID] 						=
	PI[playerid][TruckerCarID]                      =
	PI[playerid][SalonCarID]                        =
	PI[playerid][PlayerCarID]                       =
	EnterVehicle[playerid] 							= INVALID_VEHICLE_ID;
	
	PI[playerid][pColor]							= NONE_COLOR;
	PI[playerid][pSettings]                    		= 65535;
	PlayerArmour[playerid] 							= 0.0;
	PlayerLastTick[playerid] 						= GetTickCount();
	PI[playerid][pLevel] 							= 1;
	PI[playerid][pHealthS] 							= 100.0;
	PI[playerid][pHunger] 							= 50;
	
	new i;
	
	for(i = 0; i < 4; i++)
	{
    	PI[playerid][pLic][i] = 0;
 	    PI[playerid][pImprove][i] = 0;
 	    PI[playerid][pText][i] = 0;
	}
	for(i = 0; i < 8; i++)
	{
	    PI[playerid][pGunSkill][i] = 0;
	    PhoneNumbers[playerid][i] = 0;
	}
	for(i = 0; i < 12; i++)
 	{
        PI[playerid][pGun][i] = 0;
		PI[playerid][pAmmo][i] = 0;
	}
	
	/* Транспорт */
	for(i = 0; i < 13; i++)
	{
		PI[playerid][cVehcoms][i] = 0;
	}
	PI[playerid][cModel] 							=
	PI[playerid][cFuel] 							=
	PI[playerid][cColor][0] 						=
	PI[playerid][cColor][1] 						=
	PI[playerid][cLock] 							=
	PI[playerid][cCost] 							=
	PI[playerid][cPaintjob] 						= 0;
	/* Конец */
	
	strmid(PlayerName[playerid], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	strmid(PI[playerid][pPassword], "", 0, strlen(PI[playerid][pPassword]), 32);
	strmid(PI[playerid][pMail], "", 0, strlen(PI[playerid][pMail]), 64);
	
	SetSpawnInfoEx(playerid, 0, 0.0, 0.0, 0.0, 0.0);
	ResetPlayerWeaponsAC(playerid);
	return 1;
}

stock SetHealth(playerid, Float: Heal)
{
	PlayerUseHeal[playerid] = 1;
	PI[playerid][pHeal] = Heal;
	SetPlayerHealth(playerid, Heal);
	PlayerUseHeal[playerid] = 0;
	return 1;
}

stock SetArmour(playerid, Float: Arm)
{
	PlayerArmour[playerid] = Arm;
	SetPlayerArmour(playerid, Arm);
	return 1;
}

stock CarDoors(vehicleid, status)
{
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
	GetVehicleParamsEx(vehicleid, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
	SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, status, ebonnet, eboot, eobjective);
	if(vehicleid < lastveh) SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, false, ebonnet, eboot, eobjective);
	return 1;
}

stock CarDoorsEx(vehicleid, status)
{
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
	GetVehicleParamsEx(vehicleid, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
	SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, status, ebonnet, eboot, eobjective);
	return 1;
}

stock GetPlayerHouse(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALHOUSE;i++)
	{
		if(!strcmp(HouseInfo[i][hOwner], GetName(playerid), true)) 
		{
			SetPVarInt(playerid, "PlayerHouse", i);
			house ++;
			break;
		}
	}
	return house;
}
stock GetPlayerPorchHouse(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALPORCHHOUSE;i++)
	{
		if(PorchHouseInfo[i][hOwnerID] == PI[playerid][pID])
		{
	 		SetPVarInt(playerid, "PlayerPorchHouse", i);
			house = i;
			break;
		}
	}
	return house;
}

stock GetPlayerBizz(playerid)
{
	new bizz = 0;
	for(new i = 1; i <= TOTALBIZZ;i++)
	{
		if(!strcmp(BizzInfo[i][bOwner], GetName(playerid), true)) bizz++, SetPVarInt(playerid, "PlayerBizz", i);
	}
	return bizz;
}

stock IsTheMember(member)
{
	switch(member)
	{
		case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR,TEAM_POLICIA,TEAM_SFPD,TEAM_FBI,TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL,TEAM_ARMIYA,TEAM_LVPD,TEAM_AUTOSCHOOL,TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: return 1;
		default: return 0;
	}
	return 0;
}

stock IsThePayDayMembers(member)
{
	switch(member)
	{
		case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR,TEAM_POLICIA,TEAM_SFPD,TEAM_FBI,TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL,TEAM_ARMIYA,TEAM_AUTOSCHOOL,TEAM_LVPD,TEAM_OPGOR,TEAM_OPGYG,TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: return 1;
		default: return 0;
	}
	return 0;
}

stock IsAbleToGosNewsRank(playerid)
{
	switch(PI[playerid][pMember])
	{
		case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_POLICIA,TEAM_SFPD,TEAM_LVPD: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_FBI: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_ARMIYA: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_AUTOSCHOOL: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: if(PI[playerid][pRank] >= 9) return 1;
		default: return 0;
	}
	return 0;
}

stock IsAbleToInvite(playerid)
{
	switch(PI[playerid][pMember])
	{
	    case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_POLICIA,TEAM_SFPD,TEAM_LVPD: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_FBI: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_ARMIYA: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_OPGTEST1,TEAM_BALLAS,TEAM_RIFA,TEAM_OPGTEST2,TEAM_VAGOS: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_OPGOR,TEAM_OPGYG: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_AUTOSCHOOL: if(PI[playerid][pRank] >= 9) return 1;
	}
	return 0;
}

stock IsAbleToUninvite(playerid)
{
    switch(PI[playerid][pMember])
	{
	    case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_POLICIA,TEAM_SFPD,TEAM_LVPD: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_FBI: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_ARMIYA: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_OPGTEST1,TEAM_BALLAS,TEAM_RIFA,TEAM_OPGTEST2,TEAM_VAGOS: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_OPGOR,TEAM_OPGYG: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_AUTOSCHOOL: if(PI[playerid][pRank] >= 9) return 1;
	}
	return 0;
}

stock IsAbleToGiverank(playerid)
{
    switch(PI[playerid][pMember])
	{
	    case TEAM_MERIA,TEAM_SFMAYOR,TEAM_LVMAYOR: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_POLICIA,TEAM_SFPD,TEAM_LVPD: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_FBI: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_ARMIYA: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_SMP,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_OPGTEST1,TEAM_BALLAS,TEAM_RIFA,TEAM_OPGTEST2,TEAM_VAGOS: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_OPGOR,TEAM_OPGYG: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: if(PI[playerid][pRank] >= 9) return 1;
		case TEAM_AUTOSCHOOL: if(PI[playerid][pRank] >= 9) return 1;
	}
	return 0;
}

stock SelectCar(playerid)
{
	new string[128];
	new Keys,ud,lr;
	GetPlayerKeys(playerid,Keys,ud,lr);
	if((GetTickCount() - PlayerLastTick[playerid]) < 500) return 1;
	if(lr < 0)
	{
		pPressed[playerid]++;
		if(PI[playerid][SalonCarID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][SalonCarID]);
		if(InShop[playerid] == 1)
		{
			if(pPressed[playerid]>sizeof(carsC))pPressed[playerid] = 0;
			PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,sizeof(string),"~w~%s",VehicleNames[carsC[pPressed[playerid]][0]-400]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
			format(string,64,"~g~%d Рублей",carsC[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		}
		if(InShop[playerid] == 2)
		{
			if(pPressed[playerid]>sizeof(carsB))pPressed[playerid] = 0;
			PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,sizeof(string),"~w~%s",VehicleNames[carsB[pPressed[playerid]][0]-400]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
			format(string,sizeof(string),"~g~%d Рублей",carsB[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		}
		if(InShop[playerid] == 3)
		{
			if(pPressed[playerid]>sizeof(carsA))pPressed[playerid] = 0;
			PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,sizeof(string),"~w~%s",VehicleNames[carsA[pPressed[playerid]][0]-400]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
			format(string,sizeof(string),"~g~%d Рублей",carsA[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		}
		if(InShop[playerid] == 4)
		{
			if(pPressed[playerid]>sizeof(carsBike))pPressed[playerid] = 0;
			PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,sizeof(string),"~w~%s",VehicleNames[carsBike[pPressed[playerid]][0]-400]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
			format(string,sizeof(string),"~g~%d Рублей",carsBike[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		}
		PlayerLastTick[playerid] = GetTickCount();
		LinkVehicleToInterior(PI[playerid][SalonCarID],0);
		SetVehicleVirtualWorld(PI[playerid][SalonCarID],playerid);
		PutPlayerInVehicle(playerid,PI[playerid][SalonCarID],0);
		SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
		SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
	}
	if(lr > 0)
	{
		pPressed[playerid]--;
		if(PI[playerid][SalonCarID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][SalonCarID]);
		if(InShop[playerid] == 1)
		{
			if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsC)-1;
			PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,sizeof(string),"~w~%s",VehicleNames[carsC[pPressed[playerid]][0]-400]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
			format(string,sizeof(string),"~g~%d Рублей",carsC[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		}
		if(InShop[playerid] == 2)
		{
			if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsB)-1;
			PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,sizeof(string),"~w~%s",VehicleNames[carsB[pPressed[playerid]][0]-400]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
			format(string,sizeof(string),"~g~%i Рублей",carsB[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		}
		if(InShop[playerid] == 3)
		{
			if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsA)-1;
			PI[playerid][SalonCarID] = CreateVehicle(carsA[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,sizeof(string),"~w~%s",VehicleNames[carsA[pPressed[playerid]][0]-400]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
			format(string,sizeof(string),"~g~%d Рублей",carsA[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		}
		if(InShop[playerid] == 4)
		{
			if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsBike)-1;
			PI[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			format(string,sizeof(string),"~w~%s",VehicleNames[carsBike[pPressed[playerid]][0]-400]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][15],string);
			format(string,sizeof(string),"~g~%d Рублей",carsBike[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,AvtosalonTD[playerid][14],string);
		}
		PlayerLastTick[playerid] = GetTickCount();
		LinkVehicleToInterior(PI[playerid][SalonCarID],0);
		PutPlayerInVehicle(playerid,PI[playerid][SalonCarID],0);
		SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
		SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
	}
	return 1;
}

stock Convert(seconds, stringTo[], size = sizeof(stringTo))
{
	stringTo[0] = 0x0;
	new result[4];
	result[0] = floatround(seconds / (3600 * 24));
	result[1] = floatround(seconds / 3600);
	result[2] = floatround((seconds / 60) - (result[1] * 60));
	result[3] = floatround(seconds - ((result[1] * 3600) + (result[2] * 60)));
	switch(result[0])
	{
		case 0:
		{
			switch(result[1])
			{
				case 0: format(stringTo,size,"%02d:%02d",result[2],result[3]);
				default: format(stringTo,size,"%d:%02d:%02d",result[1],result[2],result[3]);
			}
		}
	}
	return stringTo;
}

stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float:a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vid = GetPlayerVehicleID(playerid);
		if(vid > 0 && vid <= MAX_VEHICLES) GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}

stock IsPlayerInInvalidNosVehicle(playerid)
{
    #define MAX_INVALID_NOS_VEHICLES 52
    static const InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
    {
		581,523,462,521,463,522,461,448,468,586,417,425,469,487,512,520,563,593,
		509,481,510,472,473,493,520,595,484,430,453,432,476,497,513,533,577,
		452,446,447,454,590,569,537,538,570,449,519,460,488,511,519,548,592
	};
	if(IsPlayerInAnyVehicle(playerid))
	{
		for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
        {
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == InvalidNosVehicles[i]) return 1;
		}
	}
	return 0;
}

stock IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return 1;

    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return 0;
}

stock GetGangZoneColor(fractionid)
	return
		(GZInfo[fractionid][gFrak] == TEAM_BALLAS) ? (0xCC00FFAA) :
		(GZInfo[fractionid][gFrak] == TEAM_RIFA) ? (0x6666FFAA) :
		(GZInfo[fractionid][gFrak] == TEAM_VAGOS) ? (0xffa500AA) :
		(GZInfo[fractionid][gFrak] == TEAM_OPGTEST1) ? (0x009900AA) :
		(GZInfo[fractionid][gFrak] == TEAM_OPGTEST2) ? (0x00CCFFAA) : (0xFFFFFF65);
		
stock GetGangName(fractionid)
{
	new string[20];
	switch(fractionid)
	{
		case 7: format(string, sizeof(string), "Закрыто");
		case 8: format(string, sizeof(string), "Закрыто");
		case 9: format(string, sizeof(string), "Закрыто");
		case 10: format(string, sizeof(string), "Закрыто");
		case 11: format(string, sizeof(string), "Закрыто");
	}
	return string;
}

stock IsInAllowed(playerid)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(PI[playerid][pMember] == allowedfactions[i]||PI[playerid][pLeader] == allowedfactions[i]) return 1;
	}
	return 0;
}

stock IsInAllowedF(fractionid)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(fractionid == allowedfactions[i]) return 1;
	}
	return 0;
}

stock IsPlayerInBandOnline(fractionid)
{
	new np;
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pMember] == fractionid || PI[i][pLeader] == fractionid) np++;
	}
	return np;
}

stock IsPlayerToSquare(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return 1;
	return 0;
}

stock GivePlayerWeaponAC(playerid, weaponid, ammo)
{
    new slot = GetWeaponSlotEx(weaponid);
	if(slot == -1) return 0;
	PI[playerid][pGun][slot] = weaponid;
    if(ammo > 0) PI[playerid][pAmmo][slot] += ammo;
    else PI[playerid][pAmmo][slot] -= ammo;
	GivePlayerWeapon(playerid, weaponid, ammo);
	AC_GunCheattime[playerid] = 3 + floatround(GetPlayerPing(playerid) / 100);
	return 1;
}

stock RemovePlayerWeapon(playerid, weaponid)
{
	if(!IsPlayerConnected(playerid) || weaponid < 0 || weaponid > 50) return;
	for(new i = 0; i < 12; i++) GetPlayerWeaponData(playerid, i, PI[playerid][pGun][i], PI[playerid][pAmmo][i]);
	ResetPlayerWeaponsAC(playerid);
	for(new i = 0; i < 12; i++)
	{
		if(PI[playerid][pGun][i] == weaponid || PI[playerid][pAmmo][i] == 0) continue;
		GivePlayerWeaponAC(playerid, PI[playerid][pGun][i], PI[playerid][pAmmo][i]);
	}
	GivePlayerWeaponAC(playerid, 0, 1);
}

stock ResetPlayerWeaponsAC(playerid)
{
	for(new i = 0; i < 12; i++)
    {
        PI[playerid][pGun][i] = 0;
		PI[playerid][pAmmo][i] = 0;
	}
	ResetPlayerWeapons(playerid);
	AC_GunCheattime[playerid] = 3 + floatround(GetPlayerPing(playerid) / 100);
	return 1;
}
forward UpdateRabotaGruz(playerid);
public UpdateRabotaGruz(playerid)
{
    new info[2][20];
	if(!doubling_donate)
	{
		format(info[0],20,"%d •Љ…K(O‹)", GetPVarInt(playerid,"JobY"));
		PlayerTextDrawSetString(playerid,RabotaGruz[playerid][2],info[0]);//Кол-Во ящиков
		format(info[1],20,"%d PY—.", GetPVarInt(playerid,"JobY")*200);
	    PlayerTextDrawSetString(playerid,RabotaGruz[playerid][3],info[1]);//Денег
	}
	else
	{
		format(info[0],20,"%d •Љ…K(O‹)", GetPVarInt(playerid,"JobY"));
		PlayerTextDrawSetString(playerid,RabotaGruz[playerid][2],info[0]);//Кол-Во ящиков
		format(info[1],20,"%d PY—.", GetPVarInt(playerid,"JobY")*400);
	    PlayerTextDrawSetString(playerid,RabotaGruz[playerid][3],info[1]);//Денег
	}
	return 1;
}
forward UpdateCaptureBIZ(playerid);
public UpdateCaptureBIZ(playerid)
{
    new info[2][20];
	format(info[0],20,"ОПГ 'Орехи'  %d", opgorexi);
	PlayerTextDrawSetString(playerid,CaptureBIZ[playerid][1],info[0]);//Кол-Во ящиков
	format(info[1],20,"ОПГ 'Южное'  %d", opgygi);
    PlayerTextDrawSetString(playerid,CaptureBIZ[playerid][2],info[1]);//Денег
	return 1;
}
stock GetWeaponSlotEx(weaponid)
{
	switch(weaponid)
	{
		case 0,1:			return 0;
		case 2..9:			return 1;
		case 22..24:		return 2;
		case 25..27:		return 3;
		case 28,29,32:		return 4;
		case 30,31:			return 5;
		case 33,34:			return 6;
		case 35..38:		return 7;
		case 16..18,39:		return 8;
		case 41..43:		return 9;
		case 10..15:		return 10;
		case 44..46:		return 11;
		case 40:			return 12;
	}
	return -1;
}

stock GzCheck()
{
	new string[256], SCORE[128];
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(ZoneOnBattle[i] == 1 && IsCapture == true)
		{
   			foreach(new x: Player)
			{
				if(PlayerLogged[x] == false && drawcapt[x] == true) continue;
				if(PI[x][pMember] == GZInfo[i][gNapad] || PI[x][pMember] == GZInfo[i][gFrak])
				{
				    for(new s; s < 7; s++) PlayerTextDrawShow(x, CaptureTD[x][s]);
					format(SCORE, sizeof(SCORE), "%s", GetGangName(GZInfo[i][gNapad]));
					PlayerTextDrawSetString(x, CaptureTD[x][3], SCORE);
					format(SCORE, sizeof(SCORE), "%s", GetGangName(GZInfo[i][gFrak]));
					PlayerTextDrawSetString(x, CaptureTD[x][4], SCORE);
					format(SCORE, sizeof(SCORE), "%d", GangInfo[GZInfo[i][gNapad]][score]);
					PlayerTextDrawSetString(x, CaptureTD[x][5], SCORE);
					format(SCORE, sizeof(SCORE), "%d", GangInfo[GZInfo[i][gFrak]][score]);
					PlayerTextDrawSetString(x, CaptureTD[x][6], SCORE);
					GangZoneFlashForPlayer(x,GangZone[i],GetGangZoneColor(GZInfo[i][gNapad]));
					drawcapt[x] = true;
				}
			}
		}
		if(ZoneOnBattle[i] == 1 && GZSafeTime[i] == 0)
		{
			if(GangInfo[GZInfo[i][gNapad]][score] == GangInfo[GZInfo[i][gFrak]][score])
			{
				new zh = GZInfo[i][gNapad];
				new zj = i;
				new zg = GZInfo[i][gFrak];
				format(string, 128, "Вы захватили новую территорию, которая находилась под контролем банды %s",GetGangName(zg));
				SendFMes(GZInfo[i][gNapad],COLOR_GREEN, string);
				format(string, 128, "Вам не удалось отстоять свою территорию, теперь эта территория под контролем банды %s",GetGangName(zh));
				SendFMes(GZInfo[i][gFrak],COLOR_RED, string);
				ZoneOnBattle[i] = 0;
				IsCapture = false;
				CaptureEnd(GZInfo[i][gNapad], GZInfo[i][gFrak]);
				GangInfo[GZInfo[i][gNapad]][captureid] =
				GangInfo[GZInfo[i][gNapad]][capture] =
				GangInfo[GZInfo[i][gNapad]][score] =
				GangInfo[GZInfo[i][gFrak]][captureid] =
				GangInfo[GZInfo[i][gFrak]][capture] =
				GangInfo[GZInfo[i][gFrak]][score] =
				GangInfo[GZInfo[i][gNapad]][gangnumber] =
				GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
				GZInfo[zj][gFrak] = zh;
				GZInfo[zj][gNapad] = 0;
				GangZoneStopFlashForAll(GangZone[zj]);
				GangZoneHideForAll(GangZone[zj]);
				GangZoneShowForAll(GangZone[zj],GetGangZoneColor(zj));
				SaveGZ(zj);
	
			}
			else if(GangInfo[GZInfo[i][gNapad]][score] > GangInfo[GZInfo[i][gFrak]][score])
			{
				new zx = GZInfo[i][gNapad];
				new zl = i;
				format(string, 128, "Вы захватили новую территорию, которая находилась под контролем банды %s", GetGangName(GZInfo[i][gFrak]));
				SendFMes(GZInfo[i][gNapad],COLOR_GREEN, string);
				format(string, 128, "Вам не удалось отстоять свою территорию, теперь эта территория под контролем банды %s",GetGangName(zx));
				SendFMes(GZInfo[i][gFrak],COLOR_RED, string);
				ZoneOnBattle[zl] = 0;
				CaptureEnd(GZInfo[zl][gNapad], GZInfo[zl][gFrak]);
				GangInfo[GZInfo[zl][gNapad]][captureid] =
				GangInfo[GZInfo[zl][gNapad]][capture] =
				GangInfo[GZInfo[zl][gNapad]][score] =
				GangInfo[GZInfo[zl][gFrak]][captureid] =
				GangInfo[GZInfo[zl][gFrak]][capture] =
				GangInfo[GZInfo[zl][gFrak]][score] =
				GangInfo[GZInfo[i][gNapad]][gangnumber] =
				GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
				GZInfo[zl][gFrak] = zx;
				GZInfo[zl][gNapad] = 0;
				IsCapture = false;
				GangZoneStopFlashForAll(GangZone[zl]);
				GangZoneHideForAll(GangZone[zl]);
				GangZoneShowForAll(GangZone[zl],GetGangZoneColor(zl));
				SaveGZ(zl);
	
			}
			else if(GangInfo[GZInfo[i][gNapad]][score] < GangInfo[GZInfo[i][gFrak]][score])
			{
				new zx = GZInfo[i][gFrak];
				new zl = i;
				SendFMes(GZInfo[i][gNapad],COLOR_RED, "Вам не удалось захватить новую территорию");
				SendFMes(GZInfo[i][gFrak],COLOR_GREEN,"Вы отстояли свою территорию");
				ZoneOnBattle[zl] = 0;
				CaptureEnd(GZInfo[zl][gNapad], GZInfo[zl][gFrak]);
				GangInfo[GZInfo[zl][gNapad]][captureid] =
				GangInfo[GZInfo[zl][gNapad]][capture] =
				GangInfo[GZInfo[zl][gNapad]][score] =
				GangInfo[GZInfo[zl][gFrak]][captureid] =
				GangInfo[GZInfo[zl][gFrak]][capture] =
				GangInfo[GZInfo[zl][gFrak]][score] =
				GangInfo[GZInfo[i][gNapad]][gangnumber] =
				GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
				IsCapture = false;
				GZInfo[zl][gFrak] = zx;
				GZInfo[zl][gNapad] = 0;
				GangZoneStopFlashForAll(GangZone[zl]);
				GangZoneHideForAll(GangZone[zl]);
				GangZoneShowForAll(GangZone[zl],GetGangZoneColor(zl));
				SaveGZ(zl);
	
			}
		}
	}
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		for(new z = 0; z < 20; z++)
		{
			OnZONE[i][z] = 0;
		}
	}
	for(new i = 0; i < sizeof(MZInfo); i++)
	{
		if(ZoneOnBattlem[i] == 1 && MZSafeTime[i] == 0)
		{
			ZoneTimerm[i] -= 10;
			if(ZoneTimerm[i] <= 0)
			{
				for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(BizzInfo[h][bZahvat] == 1)
					{
						SendFMes(BizzInfo[h][bMafia],COLOR_GREEN,"Вам удалось отстоять свой бизнес");
						BizzInfo[h][bZahvat] = 0;
					}
				}
				SendFMes(MZInfo[i][mNapad],COLOR_RED,"Вам не удалось взять под контроль новый бизнес");
				startwar = 0;
				ZoneOnBattlem[i] = 0;
				GangZoneStopFlashForAll(zons);
			}
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(IsPlayerToSquare(x,328.755706, 2412.644531, 448.755706, 2564.644531))
				{
					new factionm;
					if(PI[x][pLeader] != 0) factionm = PI[x][pLeader];
					else factionm = PI[x][pMember];
					OnmZONE[i][factionm]++;
				}
			}
			new asd;
			for(new x = 0; x < 20; x++)
			{
				if(OnmZONE[i][x] > 0 && IsInAllowedM(x)) asd++;
			}
		}
	}
	for(new mz = 0; mz < 20; mz++)
	{
		OnmZONE[0][mz] = 0;
	}
	return 1;
}

stock LeaveFractionPlayer(playerid)
{
	if(IsAGang(playerid))
	{
		for(new i; i < 7; i++) PlayerTextDrawHide(playerid, CaptureTD[playerid][i]);
	}
	PI[playerid][pMemberSkin] = PI[playerid][pMember] = PI[playerid][pRank] = 0;
	if(PI[playerid][pLeader]) PI[playerid][pLeader] = 0;
	ResetPlayerWeaponsAC(playerid);
	SetPlayerSkin(playerid,PI[playerid][pModel]);
	PI[playerid][pSpawnChange] = 0;
	return 1;
}

stock NewsPanel(playerid)
{
	new full = 0;
	full = (PI[playerid][pMember] == TEAM_SMI) ? (0) : (PI[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
	new string[210];
	format(string, sizeof(string), "%s\n{FFFFFF}- Пригласить в эфир\n{FFFFFF}- Выпроводить из эфира\n%s\n%s",
	!Ether[playerid] ? ("{63BD4E}- Войти в эфир") : ("{F04245}- Выйти из эфира"),
	!EtherCall[full] ? ("{63BD4E}- Включить прием звонков в эфир") : ("{F04245}- Выключить прием звонков в эфир"),
	!EtherSms[full] ? ("{63BD4E}- Включить прием смс в эфир") : ("{F04245}- Выключить прием смс в эфир"));
	ShowPlayerDialog(playerid, D_NMENU, 2,
	(PI[playerid][pMember] == TEAM_SMI) ? ("{7efd7d}ТРК ''Релакс'' {FFFFFF}(т. 555)") :
	(PI[playerid][pMember] == TEAM_SFNEWS) ? ("{7efd7d}Закрыто {FFFFFF}(т. 666)") : ("{7efd7d}Закрыто {FFFFFF}(т. 777)"),
	string, "Принять", "Отмена");
	return 1;
}

stock MobileCrash(playerid)
{
	SendClientMessage(Mobile[playerid], COLOR_GRAD2, "Абонент положил трубку");
	SetPlayerSpecialAction(Mobile[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
	CellTime[Mobile[playerid]] = CellTime[playerid] = Mobile[Mobile[playerid]] = -1;
	if(EtherCalled[playerid] == true) EtherCalled[playerid] = false;
	if(EtherCalled[Mobile[playerid]] == true) EtherCalled[Mobile[playerid]] = false;
	Mobile[playerid] = -1;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	DeletePVar(playerid, "CallTime");
	DeletePVar(Mobile[playerid], "CallTime");
	return 1;
}

stock ClearBizz(i)
{
	new playerid = GetPlayerID(BizzInfo[i][bOwner]);
	if(playerid != INVALID_PLAYER_ID)
	{
		if(IsPlayerConnected(playerid) && PlayerLogged[playerid])
		{
			PI[playerid][pBank] += BizzInfo[i][bBuyPrice];
			PI[playerid][pBank] += BizzInfo[i][bMoney];
			SendClientMessage(playerid, COLOR_YELLOW,"[Налоговая служба] Ваш бизнес закрыли в связи с нехваткой ресурсов");
			SendClientMessage(playerid, COLOR_YELLOW,"[Налоговая служба] Половина стоимости бизнеса и его бюджет зачислены на ваш банковский счет");
		}
	}
	else
	{
		format(query, sizeof(query), "SELECT `bank`,`text` FROM "T_ACCOUNTS" WHERE name = '%s'", BizzInfo[i][bOwner]);
		mysql_tquery(dbHandle, query, "OfflineClearBizz", "i", i);
	}
	BizzPay[i] = BizzInfo[i][bLock] = BizzInfo[i][bLockTime] = BizzInfo[i][bMafia] = BizzInfo[i][bBuyPrice] = BizzInfo[i][bMoney] = BizzInfo[i][bLic] = BizzInfo[i][bEnter] = 0;
	BizzInfo[i][bTill] = 50;
	switch(BizzInfo[i][bType])
	{
	    case 1: BizzInfo[i][bProduct] = 5000;
	    case 2: BizzInfo[i][bProduct] = 20000;
	    case 3: BizzInfo[i][bProduct] = 3000;
	    case 4: BizzInfo[i][bProduct] = 7000;
	    case 5: BizzInfo[i][bProduct] = 7000;
	    case 6: BizzInfo[i][bProduct] = 20000;
	    case 7: BizzInfo[i][bProduct] = 100000;
	    case 8: BizzInfo[i][bProduct] = 50000;
	    case 9: BizzInfo[i][bProduct] = 50000;
	}
	strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	format(query, sizeof(query), "UPDATE "T_BIZZ" SET owner='%s', block=%d, locktime=%d, money=%d, lic=%d, penter=%d, till=%d,buyprice=%d,product=%d,mafia=%d WHERE id = %d",
	BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bLockTime], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill],BizzInfo[i][bBuyPrice],BizzInfo[i][bProduct],BizzInfo[i][bMafia],i);
	mysql_tquery(dbHandle, query, "", "");
	UpdateBizz(i);
	return 1;
}

forward OfflineClearBizz(bizzid);
public OfflineClearBizz(bizzid)
{
    new rows, fields, bank, texts[20], text[4];
	cache_get_data(rows, fields);
	if(rows)
	{
		bank = cache_get_row_int(0, 0, dbHandle); // bank
		cache_get_row(0, 1, texts, dbHandle); // text
	}
	sscanf(texts, "p<,>a<i>[4]", text);
	format(texts, sizeof(texts), "%i, 1, %i, %i", text[0], text[2], text[3]);
	bank += BizzInfo[bizzid][bBuyPrice];
	bank += BizzInfo[bizzid][bMoney];
	format(query, sizeof(query), "UPDATE "T_ACCOUNTS" SET text = '%s', bank = %i WHERE name = '%s'", texts, bank, BizzInfo[bizzid][bOwner]);
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

stock GetHomeOplata(idx)
{
	new htax;
    if(!strcmp("D",HouseInfo[idx][hDiscript],true)) htax = 1000;
	if(!strcmp("C",HouseInfo[idx][hDiscript],true)) htax = 1000;
	if(!strcmp("B",HouseInfo[idx][hDiscript],true)) htax = 1000;
	if(!strcmp("A",HouseInfo[idx][hDiscript],true)) htax = 1000;
	return htax;
}

forward OfflineClearHouse(houseid);
public OfflineClearHouse(houseid)
{
    new rows, fields, texts[16], text[4];
	cache_get_data(rows, fields);
	if(rows) cache_get_field_content(0, "text", texts);
	sscanf(texts, "p<,>a<i>[4]", text);
	format(texts, sizeof(texts), "%i, %i, %i, %i", houseid, text[1], text[2], text[3]);
	format(query, sizeof(query), "UPDATE "T_ACCOUNTS"  SET text = '%s' WHERE name = '%s'", texts, HouseInfo[houseid][hOwner]);
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

stock GunShopList(playerid)
{
	if(PI[playerid][pLic][3] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на оружие!");
	new string[700], str[80];
	strcat(string, "{FFFF00}Наименование\t\t{FFFF00}Цена\n");
	for(new i; i < GUN_OBJECTS-8; i++)
	{
	    format(str, sizeof(str), "{FFFFFF}%s\t\t{63BD4E}%d Рублей\n", gGunNames[i], gGunCosts[i]);
	    strcat(string, str);
	}
	for(new i = 2; i < GUN_OBJECTS; i++)
	{
	    format(str, sizeof(str), "{FFFFFF}%s\t\t{63BD4E}%d Рублей {AFAFAF}за 1 пт.\n", gGunNames[i], gGunCosts[i]);
	    strcat(string, str);
	}
	ShowPlayerDialog(playerid, 1374, DIALOG_STYLE_TABLIST_HEADERS, "{7efd7d}Магазин оружия", string, "Купить", "Отмена");
	return 1;
}

stock SkinShopList(playerid)
{
	ShowPlayerDialog(playerid, D_JOB+31, DIALOG_STYLE_MSGBOX, "{7efd7d}Покупка одежды", "{FFFFFF}Вы хотите перейти к выбору одежды?", "Да", "Нет");
	return 1;
}

stock MagazineList(playerid)
{
	ShowPlayerDialog(playerid, D_HEAL+13, DIALOG_STYLE_LIST, "{7efd7d}Магазин","{7efd7d}1. {ffffff}Телефон\t{99cc00}5000 руб.\n{7efd7d}2. {ffffff}SIM-Карта\t{99cc00}200 руб.\n{7efd7d}3. {ffffff}Фотоапарат\t{99cc00}3000 руб.\n{7efd7d}4. {ffffff}Сигареты\t{99cc00}100 руб.\n{7efd7d}5. {ffffff}Пепси\t{99cc00}75 руб.","Купить","Отмена");
	return 1;
}
stock ToolsList(playerid)
{
	ShowPlayerDialog(playerid,1456,DIALOG_STYLE_LIST,"{7efd7d}Покупка игрушек","{7efd7d}1. {ffffff}Машинка   {99cc00}1000 рублей\n{7efd7d}2. {ffffff}Самолётик   {99cc00}2800 рублей\n{7efd7d}3. {ffffff}Вертолётик   {99cc00}2500 рублей\n{7efd7d}4. {ffffff}Вертолётик   {99cc00}2600 рублей\n{7efd7d}5. {ffffff}Танчик   {99cc00}6200 рублей\n{7efd7d}6. {ffffff}Горшок   {99cc00}800 рублей","Купить","Отмена");
	return 1;
}
stock AptekaList(playerid)
{
	ShowPlayerDialog(playerid,1458,DIALOG_STYLE_LIST,"{7efd7d}Аптека","{7efd7d}1. {ffffff}Аптечка\t{99cc00}1000 руб.\n{7efd7d}2. {ffffff}Маска\t{99cc00}2000 руб.","Купить","Отмена");
	return 1;
}
stock FishingList(playerid)
{
	ShowPlayerDialog(playerid, D_BUYSNASTI, DIALOG_STYLE_LIST,"{ffffff}Рыбаловный магазин","1.Костюм раколова\t10.000 Рублей","Купить", "Отмена");
	return 1;
}
stock EatList(playerid, idx)
{
	new string[512], str[64];
	strcat(string, "{FFFF00}Наименование\t\t{FFFF00}Цена\n");
	for(new i; i < EAT_OBJECTS; i++)
	{
	    if(GetPlayerInterior(playerid) == 5)
	    {
			format(str, sizeof(str), "{FFFFFF}%s\t\t{63BD4E}%d Рублей\n", gEateryNames1[i], BizzInfo[idx][bTill] * gEateryCosts[i]);
			strcat(string, str);
		}
	    else if(GetPlayerInterior(playerid) == 10)
	    {
			format(str, sizeof(str), "{FFFFFF}%s\t\t{63BD4E}%d Рублей\n", gEateryNames2[i], BizzInfo[idx][bTill] * gEateryCosts[i]);
			strcat(string, str);
		}
	    else if(GetPlayerInterior(playerid) == 9)
	    {
			format(str, sizeof(str), "{FFFFFF}%s\t\t{63BD4E}%d Рублей\n", gEateryNames3[i], BizzInfo[idx][bTill] * gEateryCosts[i]);
			strcat(string, str);
		}
	}
	ShowPlayerDialog(playerid, D_HEAL+14, DIALOG_STYLE_LIST, "{7efd7d}Закусочная", string, "Купить", "Отмена");
	return 1;
}

stock BarList(playerid)
{
	ShowPlayerDialog(playerid, D_HEAL+15, DIALOG_STYLE_LIST, "{7efd7d}Барная стойка","\
	\nВода     			50р\
	\nСода     		   100р\
	\nКока-кола		   150р\
	\nПиво			   200р\
	\nВодка			   250р\
	\nКоньяк		   300р\
	\nАбсент 		   350р", "Купить", "Отмена");
	return 1;
}

stock BizzStats(playerid, idx)
{
	new string[850], text[20];
	switch(BizzInfo[idx][bMafia])
	{
	    case TEAM_OPGOR: text = "Русская Мафия";
	    case TEAM_OPGYG: text = "Украинская Мафия";
		case 0: text = "Отсутствует";
	}
	if(BizzInfo[idx][bProduct] < 1) SendClientMessage(playerid, COLOR_LIME, "Подсказка: {FFFFFF}Бизнес не приносит прибыли по причине отсутствия продуктов");
	if(BizzInfo[idx][bType] == 1)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\t24/7\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\n\nПродуктов:\t\t\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	if(BizzInfo[idx][bType] == 10)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\tМагазин Игрушек\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\n\nПродуктов:\t\t\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	if(BizzInfo[idx][bType] == 15)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\tРыбаловный магазин\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\n\nПродуктов:\t\t\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	else if(BizzInfo[idx][bType] == 2)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\tЗаправка\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\nЦена за 1 литр:\t\t%i Рублей\n\nТоплива:\t\t\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	else if(BizzInfo[idx][bType] == 3)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\t%s\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\nЦена за товар:\t\t%i Рублей\n\nПродуктов:\t\t\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	else if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\tКлуб\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\nЦена за товар:\t\t%i Рублей\n\nПродуктов:\t\t\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	else if(BizzInfo[idx][bType] == 6)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\tСтоловая\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\n\nБоеприпасов на складе:\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	else if(BizzInfo[idx][bType] == 7)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\tСТО\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\nЦена за 1 запчасть:\t\t%i Рублей\n\nЗапчастей на складе:\t\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	else if(BizzInfo[idx][bType] == 8)
	{
		format(string, sizeof(string), "{FFFFFF}Бизнес:\t\tМагазин Одежды\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\n\nТовар:\t\t\t\t%i\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	else if(BizzInfo[idx][bType] == 9)
	{
	    format(string, sizeof(string), "{FFFFFF}Бизнес:\t\t\tКазино\nВладелец:\t\t\t%s\n\nНа счету бизнеса:\t\t%i Рублей\nВ этом часу заработано:\t%i Рублей\nСтоимость бизнеса:\t\t%i Рублей\n\nСтатус:\t\t\t\t%s\nЛицензия на бизнес:\t\t%s\nВремя простоя:\t\t%i час(-а/ов)\nКрыша:\t\t\t%s",
		BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bPrice]
		,(!BizzInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}") : ("{F04245}Закрыт{ffffff}"),(!BizzInfo[idx][bLic])?("{F04245}Нет{ffffff}"):("{63BD4E}Да{ffffff}"), BizzInfo[idx][bLockTime], text);
	}
	ShowPlayerDialog(playerid, D_NULL, 0, "{7efd7d}Статистика бизнеса", string, "Закрыть", "");
	return 1;
}

stock AdvertList(playerid)
{
	new full = 0;
	full = (PI[playerid][pMember] == TEAM_SMI) ? (0) : (PI[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
	new str[42], str2[630];
	for(new i = 1; i <= TOTALADVERT[full]; i++)
	{
		format(str, sizeof(str), "№%i - Прислал: %s\n",i, AdvertInfo[i][full][aName]);
		strcat(str2, str);
	}
	if(TOTALADVERT[full] == 0) return ShowPlayerDialog(playerid, D_NULL, 0, "{7efd7d}Объявления", "{FFFFFF}Новых объявлений нет", "Назад", "");
	ShowPlayerDialog(playerid, D_NMENU+5, 2, "{7efd7d}Объявления", str2, "Принять", "Отмена");
	return 1;
}

stock BankFracEnter(playerid)
{
	new bank, string[256];
	if(PI[playerid][pMember] == TEAM_SMI) bank = FracBank[8];
	if(PI[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
	if(PI[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
	format(string, sizeof(string), "Ввод средств в банк организации\nВывод средств из банка организации\nВ банке организации: %i Рублей", bank);
	ShowPlayerDialog(playerid, D_JOB+131, 2, "{7efd7d}Банк", string, "Принять", "Отмена");
	return 1;
}

stock SavePos(playerid)
{
    new Float:X;
    new Float:Y;
    new Float:Z;
    GetPlayerPos(playerid,X,Y,Z);
    PI[playerid][PosX] = X;
    PI[playerid][PosY] = Y;
    PI[playerid][PosZ] = Z;
    PI[playerid][pInt] = GetPlayerInterior(playerid);
    PI[playerid][pWorld] = GetPlayerVirtualWorld(playerid);
    SaveAcc();
    return true;
}

stock SetPos(playerid)
{
    SetPlayerInterior(playerid, PI[playerid][pInt]);
    SetPlayerVirtualWorld(playerid, PI[playerid][pWorld]);
    SetPlayerPos(playerid, PI[playerid][PosX],PI[playerid][PosY],PI[playerid][PosZ]);
    return true;
}

stock SetPosInShop(playerid)
{
	SetPlayerPos(playerid,2355.3850, -1842.7719, 22.4348);
	SetPlayerFacingAngle(playerid,101.9068);
	TogglePlayerControllable(playerid,false);
	pPressed[playerid] = 0;
	SetPlayerVirtualWorld(playerid,playerid);
	SetVehicleVirtualWorld(PI[playerid][SalonCarID],playerid);
	for(new i; i < 16; i++) PlayerTextDrawShow(playerid,AvtosalonTD[playerid][i]);
	PutPlayerInVehicle(playerid,PI[playerid][SalonCarID],0);
}

forward OfflineSetReferalMoney(playerid);
public OfflineSetReferalMoney(playerid)
{
    new rows, fields, texts[12], text[4];
	cache_get_data(rows, fields);
	if(rows) cache_get_field_content(0, "text", texts);
    sscanf(texts, "p<,>a<i>[4]", text);
   	format(texts, sizeof(texts), "%i, %i, %i, %i", text[0], text[1], 1, text[3]);
    format(query, sizeof(query), "UPDATE "T_ACCOUNTS"  SET text = '%s' WHERE name = '%s'", texts, PI[playerid][pReferal]);
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}
 
stock PayDay()
{
    new string[128];
    new hour;
    gettime(hour);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(PlayerLogged[i])
	    {
			if(PI[i][pCheckTime] >= 1200 && IsThePayDayMembers(PI[i][pMember]) && !PI[i][pAdmin])
			{
				PI[i][pPayCheck] += Fraction_Pay[GetTeamID(i)][PI[i][pRank]-1];
			}
			else if(PI[i][pCheckTime] >= 1200 && IsAGang(i) && !PI[i][pAdmin])
			{
				if(PI[i][pLeader] == TEAM_OPGTEST1) PI[i][pPayCheck] += 40 * GangTotalGz[3];
				else if(PI[i][pMember] == TEAM_OPGTEST1) PI[i][pPayCheck] += 100 * GangTotalGz[3];
				if(PI[i][pLeader] == TEAM_BALLAS) PI[i][pPayCheck] += 40 * GangTotalGz[2];
				else if(PI[i][pMember] == TEAM_BALLAS) PI[i][pPayCheck] += 100 * GangTotalGz[2];
				if(PI[i][pLeader] == TEAM_RIFA) PI[i][pPayCheck] += 40 * GangTotalGz[0];
				else if(PI[i][pMember] == TEAM_RIFA) PI[i][pPayCheck] += 100 * GangTotalGz[0];
				if(PI[i][pLeader] == TEAM_OPGTEST2) PI[i][pPayCheck] += 40 * GangTotalGz[1];
				else if(PI[i][pMember] == TEAM_OPGTEST2) PI[i][pPayCheck] += 100 * GangTotalGz[1];
				if(PI[i][pLeader] == TEAM_VAGOS) PI[i][pPayCheck] += 40 * GangTotalGz[4];
				else if(PI[i][pMember] == TEAM_VAGOS) PI[i][pPayCheck] += 100 * GangTotalGz[4];
			}
	        SendClientMessageToAll(0xFFFFFFAA, "    БАНКОВСКИЙ ЧЕК");
	        SendClientMessageToAll(0xFFFFFFAA, "______________________");
	        SendClientMessageToAll(0xFFFFFFAA, "");
			if(PI[i][pAdmin])
			{
			    new AdminSalary = 1000*(PI[i][pAdmin]+1);
				GiveBankMoney(i, AdminSalary, "AdminSalary");
		    	format(string, sizeof(string), "Админ - зарплата: {7efd7d}%d  Рублей", AdminSalary);
				SendClientMessage(i, 0xFFFFFFAA, string);
			}
			format(string, sizeof(string), "Зарплата: {66CC33}%d  Рублей", PI[i][pPayCheck]);
			SendClientMessage(i, 0xFFFFFFAA, string);
			GiveBankMoney(i, PI[i][pPayCheck], "PayDay");
			format(string, sizeof(string), "Текущий баланс счёта: {7efd7d}%d  Рублей", PI[i][pBank]);
			SendClientMessage(i, 0xFFFFFFAA, string);
			SendClientMessage(i,0xFFFFFFAA, "______________________");
			PI[i][pPayCheck] = 0;
			PI[i][pZakon]++;
			{
				PI[i][pCheckTime] = 0;
				PI[i][pTime]++;
				PI[i][pExp]++;
				if(doubling_exp) PI[i][pExp]++;
			    if(PI[i][pVip] && !(PI[i][pTime] % 4)) PI[i][pExp]++;
			    format(string, sizeof(string), "Вы получили респект, теперь у вас %d из %d респектов", PI[i][pExp], (PI[i][pLevel]+1)*4);
			    SendClientMessage(i, COLOR_LIME, string);
			    if(PI[i][pExp] >= (PI[i][pLevel]+1)*4)
			    {
			        SendClientMessage(i, COLOR_BLUE, "Ваш игровой уровень повысился, теперь вы перешли на следующий уровень!");
				    PI[i][pLevel]++;
				    PI[i][pExp] = 0;
				    SetPlayerScore(i, PI[i][pLevel]);
			    }
			    if(PI[i][pLevel] == 4 && PI[i][pExp] == 0)
			    {
			        if(!strcmp(PI[i][pReferal], "None", true)) { }
			        else
			        {
			        	new targetid = GetPlayerID(PI[i][pReferal]);
						if(targetid != INVALID_PLAYER_ID)
						{
							TransferMoney(-1, targetid, 100000);
						    SendClientMessage(targetid, COLOR_YELLOW, "Вы получили {ffffff}100000  Рублей{ffff00} за приглашенного игрока");
						}
						else
						{
						  	format(query, sizeof(query), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", PI[i][pReferal]);
						  	mysql_tquery(dbHandle, query, "OfflineSetReferalMoney", "i", i);
						}
			   		}
			    }
			}
			SaveAccount(i);
			PlayerPlaySound(i,5203,0.0,0.0,0.0);
		}
		else SendClientMessage(i, COLOR_GREY, "Вы не авторизированы для получения зарплаты");
	}
	if(hour == 4)
	{
		new Query[128],
			targetid;
		for(new idx = 1; idx <= TOTALPORCHHOUSE; idx++)
		{
			if(PorchHouseInfo[idx][hOwnerID] == 0) continue;
			PorchHouseInfo[idx][hDays]--;
			if(PorchHouseInfo[idx][hDays] <= 0)
			{	
				targetid = GetPlayerID(PorchHouseInfo[idx][hOwner]);
				if(targetid != INVALID_PLAYER_ID)
				{
					PI[targetid][pSpawnChange] = 0;
					SendClientMessage(targetid, COLOR_YELLOW, "Вы были выселены из квартиры за неуплату.");
					if(PI[targetid][PlayerCarID] != INVALID_VEHICLE_ID)
					{
						DestroyVehicle(PI[targetid][PlayerCarID]);
						PI[targetid][PlayerCarID] = INVALID_VEHICLE_ID;
					}
					MysqlUpdatePlayerInt(targetid, "spawnchange", 0);
				}
				else
				{
					mysql_format(dbHandle, Query,sizeof Query, "UPDATE "T_ACCOUNTS" SET `spawnchange` = '0'WHERE `id` = '%d'", PorchHouseInfo[idx][hOwnerID]);
					mysql_tquery(dbHandle, Query, "", "");
				}
				strmid(PorchHouseInfo[idx][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				PorchHouseInfo[idx][hDays] = 0;
				PorchHouseInfo[idx][hOwnerID] = 0;
				mysql_format(dbHandle, Query,sizeof Query, "UPDATE "T_PORCH_HOUSE" SET `hOwner` = 'none', `hOwnerID` = '0', `hDays` = `0' WHERE `id` = '%d'", idx);
				mysql_tquery(dbHandle, Query, "", "");
				DestroyDynamicMapIcon(PorchHouseInfo[idx][hMIcon]);
				DestroyDynamicPickup(PorchHouseInfo[idx][hPickup]);
				PorchHouseInfo[idx][hMIcon] = CreateDynamicMapIcon(PorchHouseInfo[idx][hEntrx], PorchHouseInfo[idx][hEntry], PorchHouseInfo[idx][hEntrz], 32, 0,idx + 100,9,-1,150.0);
				PorchHouseInfo[idx][hPickup] = CreateDynamicPickup(1272, 1, PorchHouseInfo[idx][hEntrx], PorchHouseInfo[idx][hEntry], PorchHouseInfo[idx][hEntrz]);
			}
			else 
			{
				mysql_format(dbHandle, Query,sizeof Query, "UPDATE "T_PORCH_HOUSE" SET `hDays` = `%d' WHERE `id` = '%d'", PorchHouseInfo[idx][hDays], idx);
				mysql_tquery(dbHandle, Query, "", "");
			}
		}
	}
	if(hour == 23)
	{
		for(new houseid = 1; houseid <= TOTALHOUSE; houseid++)
		{
			if(!strcmp("None", HouseInfo[houseid][hOwner], true)) continue;
			if(HouseInfo[houseid][hOplata] < 1)
			{
				new targetid = GetPlayerID(HouseInfo[houseid][hOwner]);
				if(targetid != INVALID_PLAYER_ID)
				{
					PI[targetid][pBank] += HouseInfo[houseid][hBuyPrice];
					PI[targetid][pSpawnChange] = 0;
					SendClientMessage(targetid, COLOR_YELLOW, "Вы были выселены из дома за неуплату.");
					SendClientMessage(targetid, COLOR_YELLOW, "На ваш банковский счет возвращена стоимость дома по гос-ву.");
					if(PI[targetid][PlayerCarID] != INVALID_VEHICLE_ID)
					{
						DestroyVehicle(PI[targetid][PlayerCarID]);
						PI[targetid][PlayerCarID] = INVALID_VEHICLE_ID;
					}
				}
				else
				{
					strmid(HouseInfo[houseid][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
					format(query, sizeof(query), "UPDATE "T_HOUSE" SET hOwner='%s',hOplata=%d,buyprice=%d,hLock=%d WHERE id=%d",
					HouseInfo[houseid][hOwner],HouseInfo[houseid][hOplata],HouseInfo[houseid][hBuyPrice],HouseInfo[houseid][hLock],houseid);
					mysql_tquery(dbHandle, query, "", "");
					UpdateHouse(houseid);
				}
				MysqlUpdatePlayerInt(targetid, "spawnchange", 0);
				strmid(HouseInfo[houseid][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				format(query, sizeof(query), "UPDATE "T_HOUSE" SET hOwner='%s',hOplata=%d,buyprice=%d,hLock=%d WHERE id=%d",
				HouseInfo[houseid][hOwner],HouseInfo[houseid][hOplata],HouseInfo[houseid][hBuyPrice],HouseInfo[houseid][hLock],houseid);
				mysql_tquery(dbHandle, query, "", "");
				UpdateHouse(houseid);
			}
			else
			{
				HouseInfo[houseid][hOplata] -= 1;
				MysqlUpdateHouseInt(houseid, "hOplata", HouseInfo[houseid][hOplata]);
			}
			HouseInfo[houseid][hRob] = false;
		}
		for(new bizzid = 1; bizzid <= TOTALBIZZ; bizzid++)
		{
		    if(!strcmp(BizzInfo[bizzid][bOwner], "None", true)) continue;
		    if(BizzInfo[bizzid][bMoney] < BizzInfo[bizzid][bBuyPrice] / 2000 || BizzInfo[bizzid][bLock] == 1 && BizzInfo[bizzid][bLockTime] >= 12) ClearBizz(bizzid);
		    else
		    {
		       	BizzPay[bizzid] = 0;
		       	new playerid = GetPlayerID(BizzInfo[bizzid][bOwner]);
		        if(BizzInfo[bizzid][bProduct] <= 0 || BizzInfo[bizzid][bLic] == 0)
				{
					if(playerid != INVALID_PLAYER_ID && IsPlayerConnected(playerid))
					{
						if(BizzInfo[bizzid][bLockTime] == 0)
						{
						    if(GetPlayerBizz(playerid))
							{
								SendClientMessage(playerid, COLOR_DARKORANGE, "[Налоговая служба] Ваш бизнес был закрыт по причине: отсутствие продуктов или отсутствие лицензии");
								SendClientMessage(playerid, COLOR_DARKORANGE, "[Налоговая служба] Если по истечению 12 часов бизнес будет закрыт, он будет продан гос-ву");
							}
						}
						BizzInfo[bizzid][bLock] = 1;
						MysqlUpdateBizzInt(bizzid, "block", BizzInfo[bizzid][bLock]);
					}
				}
				if(BizzInfo[bizzid][bLock] == 1)
				{
					BizzInfo[bizzid][bLockTime]++;
					MysqlUpdateBizzInt(bizzid, "locktime", BizzInfo[bizzid][bLockTime]);
				}
				if(BizzInfo[bizzid][bLockTime] > 1 && BizzInfo[bizzid][bLockTime] < 12)
				{
					if(IsPlayerConnected(playerid) && playerid != INVALID_PLAYER_ID)
					{
						if(GetPlayerBizz(playerid))
						{
							SendMes(playerid, COLOR_DARKORANGE, "[Напоминание] Ваш бизнес закрыт уже %i час(а)", BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bLockTime]);
							SendClientMessage(playerid, COLOR_DARKORANGE, "[Напоминание] Если по истечению 12 часов бизнес будет закрыт, он будет продан гос-ву");
						}
					}
				}
	  			BizzInfo[bizzid][bMoney] -= BizzInfo[bizzid][bBuyPrice] / 2000;
				MysqlUpdateBizzInt(bizzid, "money", BizzInfo[bizzid][bMoney]);
		    }
		   	switch(BizzInfo[bizzid][bMafia])
	    	{
	    		case TEAM_OPGOR:
				{
					FracBank[6] += BizzPay[bizzid] / 10;
    				MysqlUpdateMafiaInt("lcnbank", FracBank[6]);
				}
		    	case TEAM_OPGYG:
				{
					FracBank[5] += BizzPay[bizzid] / 10;
    				MysqlUpdateMafiaInt("yakuzabank", FracBank[5]);
				}
			}
		}
	}
	return 1;
}

stock Menu()
{
    specmenu = CreateMenu("Spec", 1, 40.0, 220.0, 100.0);
    AddMenuItem(specmenu, 0, "Обновить");
    AddMenuItem(specmenu, 0, ">>");
    AddMenuItem(specmenu, 0, "<<");
    AddMenuItem(specmenu, 0, "Слапнуть");
    AddMenuItem(specmenu, 0, "ГМ тест");
    AddMenuItem(specmenu, 0, "Статистика");
    AddMenuItem(specmenu, 0, "Выйти");
    
   	skinmenu = CreateMenu("СКИНЫ", 1, 50.0, 160.0, 90.0);
	AddMenuItem(skinmenu ,0,"ДАЛЕЕ");
	AddMenuItem(skinmenu ,0,"НАЗАД");
	AddMenuItem(skinmenu ,0,"ПРИНЯТЬ");
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    if(GetPlayerMenu(playerid) == Menu:INVALID_MENU) return SKick(playerid, 7436);
    if(GetPlayerMenu(playerid) == specmenu)
    {
        switch(row)
        {
            case 0:
            {
	            SetPlayerInterior(playerid,GetPlayerInterior(PI[playerid][Spectating][0]));
	            SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(PI[playerid][Spectating][0]));
	            TogglePlayerSpectating(playerid, 1);
	            if(IsPlayerInAnyVehicle(PI[playerid][Spectating][0]))
	            {
		           new carid = GetPlayerVehicleID(PI[playerid][Spectating][0]);
		           PlayerSpectateVehicle(playerid, carid);
             	}
	            else PlayerSpectatePlayer(playerid, PI[playerid][Spectating][0]);
                ShowMenuForPlayer(specmenu, playerid);
            }
            case 1:
			{
			    new maxplayers = GetMaxPlayers();
				for(new id = PI[playerid][Spectating][0]+1, bool:secondloop; id < maxplayers; id++)
				{
				    if(id == maxplayers && !secondloop)
					{
						secondloop = true, id = 0;
						continue;
					}
					if(PlayerLogged[id] == false) continue;
					switch(GetPlayerState(id))
					{
						case 1..3: {}
						default: continue;
					}
					new param_str[4];
					format(param_str, sizeof param_str, "%i", id);
					cmd_spec(playerid, param_str);
					break;
				}
				ShowMenuForPlayer(specmenu, playerid);
			}
            case 2:
			{
			    new maxplayers = GetMaxPlayers();
				for(new id = PI[playerid][Spectating][0]-1, bool:secondloop; id >= 0; id--)
				{
				    if(id <= 0 && !secondloop)
					{
						secondloop = true, id = maxplayers;
						continue;
					}
					if(PlayerLogged[id] == false) continue;
					switch(GetPlayerState(id))
					{
						case 1..3: {}
						default: continue;
					}
					new param_str[4];
					format(param_str, sizeof param_str, "%i", id);
					cmd_spec(playerid, param_str);
					break;
				}
				ShowMenuForPlayer(specmenu, playerid);
			}
            case 3:
            {
                new param_str[11];
                format(param_str, sizeof(param_str), "%i", PI[playerid][Spectating][0]);
                cmd_slap(playerid, param_str);
                ShowMenuForPlayer(specmenu, playerid);
            }
            case 4:
            {
                new param_str[11];
                format(param_str, sizeof(param_str), "%i", PI[playerid][Spectating][0]);
                cmd_gm(playerid, param_str);
                ShowMenuForPlayer(specmenu, playerid);
            }
            case 5:
			{
				ShowPlayerStatsDialog(playerid, PI[playerid][Spectating][0]);
				ShowMenuForPlayer(specmenu, playerid);
			}
            case 6: cmd_specoff(playerid, "");
		}
    }
    if(GetPlayerMenu(playerid) == skinmenu)
	{
		switch(row)
		{
		    case 0:
			{
			    if(PI[playerid][pSex] == 1)
				{
					if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinRegM)-1;
					else SelectCharPlace[playerid]--;
					SetPlayerSkin(playerid, JoinRegM[SelectCharPlace[playerid]]);
					ChosenSkin[playerid] = JoinRegM[SelectCharPlace[playerid]];
				}
			    else
			    {
					if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinRegF)-1;
					else SelectCharPlace[playerid]--;
					SetPlayerSkin(playerid, JoinRegF[SelectCharPlace[playerid]]);
					ChosenSkin[playerid] = JoinRegF[SelectCharPlace[playerid]];
			    }
			    {
			        ShowMenuForPlayer(skinmenu,playerid);
			    }
		    }
		    case 1:
		    {
			    if(PI[playerid][pSex] == 1)
				{
					if(SelectCharPlace[playerid] == sizeof(JoinRegM)-1) SelectCharPlace[playerid] = 0;
					else SelectCharPlace[playerid]++;
					SetPlayerSkin(playerid, JoinRegM[SelectCharPlace[playerid]]);
					ChosenSkin[playerid] = JoinRegM[SelectCharPlace[playerid]];
				}
				else
				{
					if(SelectCharPlace[playerid] == sizeof(JoinRegF)-1) SelectCharPlace[playerid] = 0;
					else SelectCharPlace[playerid]++;
					SetPlayerSkin(playerid, JoinRegF[SelectCharPlace[playerid]]);
					ChosenSkin[playerid] = JoinRegF[SelectCharPlace[playerid]];
				}
				{
					ShowMenuForPlayer(skinmenu,playerid);
				}
			}
			case 2:
			{
				PI[playerid][pModel] = ChosenSkin[playerid];
				ChosenSkin[playerid] = 0;
				SelectCharPlace[playerid] = 0;
				ClothesRound[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				CreateAccount(playerid, PI[playerid][pPassword]);
				HideMenuForPlayer(specmenu, playerid);
			}
		}
	}
    return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    if(!IsPlayerConnected(playerid)) return 0;
	if(PI[playerid][pAFK] >= 3) return 0;
//	new slot = GetWeaponSlotEx(weaponid);
/*	if(AC_GunCheattime[playerid] == 0 && slot != -1)
	{
		if(PI[playerid][pGun][slot] != weaponid)
		{
 			CheatKick(playerid, 8127);
	    	return 0;
		}
	}*/
	
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);

	//Desync weapon IDs that don't fire bullets
	if (weaponid < 22 || weaponid > 38) return 0;
	
	//Desync shots with Z pos out of bounds
	if(!(-20000.0 <= z <= 20000.0)) return 0;
	
	if(hittype == BULLET_HIT_TYPE_NONE)
	{
	    if(hitid != 65535) return 1;
	}
	else if(hittype == BULLET_HIT_TYPE_PLAYER)
	{
	    if(BadFloat(fX) || BadFloat(fY) || BadFloat(fZ)) return 0;
	    if(hitid == INVALID_PLAYER_ID) return 0;
	}
	
	if(weaponid == 38) return 0;
    
 /*   if(GetTickCount()-WeaponTime[playerid] < 120 && weaponid != 17 && weaponid <= 27 || GetTickCount()-WeaponTime[playerid] < 30 && weaponid > 27 && weaponid <= 34)
	{
	    RapidFire[playerid]++;
	    if(RapidFire[playerid] > 3)
	    {
	        CheatKick(playerid, 4123);
	 		return 0;
		}
	}
	else RapidFire[playerid] = 0;*/
    WeaponTime[playerid] = GetTickCount();
    
    new block = 0, Float:Pos[6]; // блокируем фейк урон
	if(hittype != 0 && Pos[0] != 0.0 && Pos[1] != 0.0 && Pos[2] != 0.0 && GetPVarInt(playerid, "LastTimeShot_Advanced") == GetTickCount() && floatcmp(Pos[0], GetPVarFloat(playerid, "LastShotPosX")) == 0 && floatcmp(Pos[1], GetPVarFloat(playerid, "LastShotPosY")) == 0 && floatcmp(Pos[2], GetPVarFloat(playerid, "LastShotPosZ")) == 0) block = 1;
	SetPVarInt(playerid, "LastTimeShot_Advanced", GetTickCount());
	SetPVarFloat(playerid, "LastShotPosX", Pos[0]);
	SetPVarFloat(playerid, "LastShotPosY", Pos[1]);
	SetPVarFloat(playerid, "LastShotPosZ", Pos[2]);
	if(block == 1) return 0;
	
	if(!IsACop(playerid) || !IsAArmy(playerid) || !IsAMayor(playerid) || !PI[playerid][pAdmin])
	{
		for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	    {
	        if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
	        {
				ApplyAnimation(playerid,"PED","handscower",4.1,1,0,0,0,1000);
			 	SetPlayerArmedWeapon(playerid, 0);
			 	return 0;
			}
		}
	}
    return 1;
}

stock SKick(playerid, reason)
{
    new string[128];
    format(string, sizeof(string), "%s[%d] был кикнут с причиной: %i", GetName(playerid), playerid, reason);
	SendLog("ServerSkick",string);
	return Kick(playerid);
}

stock SetHunger(playerid, amount)
{
	if(amount > 100) PI[playerid][pHunger] = 100;
	else if(amount < 0) PI[playerid][pHunger] = 0;
	else PI[playerid][pHunger] = amount;
	Hunger(playerid, 0);
	return 1;
}

stock GiveHunger(playerid, amount)
{
	SetHunger(playerid,PI[playerid][pHunger] + amount);
	if(PI[playerid][pHunger] + amount > 100) PI[playerid][pHunger] = 100;
	Hunger(playerid, 0);
}

stock Hunger(playerid, type)
{
    if(PI[playerid][pSettings] & setHungerInfo)
    {
		switch(type)
		{
		    case 0:
			{
/*				TextDrawShowForPlayer(playerid, HungerBackground[0]);
				TextDrawShowForPlayer(playerid, HungerBackground[1]);
				PlayerTextDrawTextSize(playerid, HungerProgress[playerid], 549.5 + PI[playerid][pHunger] / 100.0 * 54.5, 40.000000);*/
				switch(PI[playerid][pHunger])
				{
/*				    case 81..100: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0x63BD4EFF);
				    case 51..80: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0xCCFF00FF);
				    case 31..50: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0xFDE910FF);
				    case 16..30: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0xFF8800FF);
				    case 0..15: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0xFF0600FF);*/
				}
			//	PlayerTextDrawShow(playerid, HungerProgress[playerid]);
			}
			case 1:
			{
/*				PlayerTextDrawHide(playerid, HungerProgress[playerid]);
				TextDrawHideForPlayer(playerid, HungerBackground[0]);
				TextDrawHideForPlayer(playerid, HungerBackground[1]);*/
			}
		}
	}
}

stock Air_Get_Pos(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid))GetPlayerPos(playerid,AC_Air_Player[playerid][0],AC_Air_Player[playerid][1],AC_Air_Player[playerid][2]);
    else GetVehiclePos(GetPlayerVehicleID(playerid),AC_Air_Car[playerid][0],AC_Air_Car[playerid][1],AC_Air_Car[playerid][2]);
}

stock Air_Gettime(playerid,extra)
{
    if(!IsPlayerInAnyVehicle(playerid)) AC_Air_Time[playerid]=gettime()+extra;
    else AC_Air_Time_Car[playerid]=gettime()+extra;
}

stock TunningGarages(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,20.0,2065.3801,-1832.5280,13.68)||IsPlayerInRangeOfPoint(playerid,20.0,-99.7154,1117.5011,19.88)||IsPlayerInRangeOfPoint(playerid,20.0,719.8336,-456.7990,16.47)||IsPlayerInRangeOfPoint(playerid,20.0,-1420.4562,2583.2180,55.98)||IsPlayerInRangeOfPoint(playerid,20.0,-2424.8093,1021.1127,50.53)||IsPlayerInRangeOfPoint(playerid,20.0,1975.0587,2161.9456,11.21)||
    IsPlayerInRangeOfPoint(playerid,20.0,487.9699,-1741.5265,11.28)||IsPlayerInRangeOfPoint(playerid,20.0,1025.7683,-1023.8249,32.24)||IsPlayerInRangeOfPoint(playerid,20.0,-1904.9709,285.8506,41.18)||IsPlayerInRangeOfPoint(playerid,20.0,615.2845,-124.2390,997.7112)||IsPlayerInRangeOfPoint(playerid,20.0,616.7787,-74.8150,997.6274)||IsPlayerInRangeOfPoint(playerid,20.0,617.5302,-1.9900,1001.06))return 1;
    return 0;
}

stock ShowDialogGhetto(playerid)
{
	new string[400];
	format(string, sizeof(string), "{FFFFFF}Закрыто\t\t\t| %s\nЗакрыто\t\t\t| %s\nЗакрыто\t\t\t| %s\nЗакрыто\t\t| %s\nЗакрыто\t\t| %s",
	(b_Capture{0} ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")),
	(b_Capture{1} ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")),
	(b_Capture{2} ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")),
	(b_Capture{3} ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")),
	(b_Capture{4} ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")));
	ShowPlayerDialog(playerid, 969, DIALOG_STYLE_LIST, "{7efd7d}Управление каптами", string, "Изменить", "Отмена");
	return 1;
}

stock isNumeric(const string[])
{
	if(strlen(string) <= 0) return 0;
  	for(new i = 0; i < strlen(string); i++)
    {
		if((string[i] > '9' || string[i] < '0' && string[i] != '-' && string[i] != '+')
		|| (string[i] == '-' && i != 0) || (string[i] == '+' && i != 0)) return 0;
	}
  	if(strlen(string) == 1 && (string[0] == '-' || string[0] == '+')) return 0;
  	return 1;
}

forward OnPlayerChangeName(playerid, nickname[]);
public OnPlayerChangeName(playerid, nickname[])
{
    new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "Этот никнейм уже используется");
		return ShowPlayerDialog(playerid, D_JOB+20, 1, "{7efd7d}Смена NonRP ника", "{FFFFFF}Введите будущий ник\n\n{F04245}Возможно сменить только если у Вас NonRP ник!", "Принять", "Назад");
	}
	new full = 0;
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pAdmin] > ADM_SUPER_MODER) full++;
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Модераторы игровых логинов сейчас находятся оффлайн!");
	set_name = playerid;
	strmid(PlayerName[playerid], nickname, 0, strlen(nickname), MAX_PLAYER_NAME);
	SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно отправили заявку на смену игрового ника");
	new string[128];
	format(string, sizeof(string), "[Смена ника] %s[%i] просит сменить NonRP имя на %s", GetName(playerid), playerid, nickname);
	SendAdminMessage(COLOR_LIME, string);
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(PI[i][pAdmin] > ADM_SUPER_ADMIN)
		{
			SendClientMessage(i, COLOR_YELLOW, "Введите /setname, чтобы принять заявку");
		}
	}
	return 1;
}

forward OnPlayerChangeDonateName(playerid, nickname[]);
public OnPlayerChangeDonateName(playerid, nickname[])
{
    new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "Этот никнейм уже используется");
		return ShowPlayerDialog(playerid, D_JOB+179, 1, "{7efd7d}Смена ника", "{FFFFFF}Введите будущий ник:", "Принять", "Назад");
	}
	if(GetPlayerHouse(playerid))
	{
		new i = GetPVarInt(playerid, "PlayerHouse");
		if(!strcmp(HouseInfo[i][hOwner],GetName(playerid),true))
		{
			format(HouseInfo[i][hOwner], MAX_PLAYER_NAME, nickname);
			MysqlUpdateHouseStr(i, "hOwner", nickname);
		}
	}
	if(GetPlayerBizz(playerid))
	{
		new i = GetPVarInt(playerid, "PlayerBizz");
		if(!strcmp(BizzInfo[i][bOwner],GetName(playerid),true))
		{
			format(BizzInfo[i][bOwner], MAX_PLAYER_NAME, nickname);
			MysqlUpdateBizzStr(i, "owner", nickname);
			UpdateBizz(i);
		}
	}
	new string[128];
	format(string, sizeof(string), "[За донат] %s сменил ник на %s", GetName(playerid), GetName(playerid), nickname);
	SendLog("SetName", string);
	format(string, sizeof(string), "%s изменил имя на %s", GetName(playerid), nickname);
	SendClientMessageToAll(COLOR_LIME, string);
	PI[playerid][pCredits] -= 20;
	format(query, sizeof(query), "UPDATE "T_ACCOUNTS" SET name='%s',credits=%i WHERE name='%s'", nickname, PI[playerid][pCredits], GetName(playerid));
	mysql_tquery(dbHandle, query, "", "");
	if(PI[playerid][pAdmin])
	{
		format(query, sizeof(query), "UPDATE "T_ADMIN" SET name='%s' WHERE name='%s'", nickname, GetName(playerid));
		mysql_tquery(dbHandle, query, "", "");
	}
	format(query, sizeof(query), "INSERT INTO `historyname` (`idacca`, `Name`) VALUE ('%d', '%s')", PI[playerid][pID], nickname);
	mysql_tquery(dbHandle, query, "", "");
	format(GetName(playerid), MAX_PLAYER_NAME, nickname);
	SetPlayerName(playerid, nickname);
	SendMes(playerid, COLOR_GREEN, "Ваше новое имя: {ffffff}%s", nickname);
	SendClientMessage(playerid, COLOR_GREEN, "Обязательно нужно сделать скриншот. Клавиша: {ffffff}F8");
	SendClientMessage(playerid, COLOR_GREEN, "Пропишите свой новый ник в окне {ffffff}SA:MP");
	Kick(playerid);
	return 1;
}

forward OnPlayerSetName(playerid, nickname[]);
public OnPlayerSetName(playerid, nickname[])
{
	new string[128];
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
    {
        format(string, sizeof(string), "{FFFFFF}Введите будущий ник для игрока: %s", GetName(NameStats[playerid]));
		ShowPlayerDialog(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{7efd7d}Имя игрока", string, "Принять", "Отмена");
		return SendClientMessage(playerid, COLOR_GREY, "Этот никнейм уже используется");
    }
	if(GetPlayerHouse(NameStats[playerid]))
	{
		new i = GetPVarInt(NameStats[playerid], "PlayerHouse");
		strmid(HouseInfo[i][hOwner], nickname, 0, strlen(nickname), MAX_PLAYER_NAME);
		MysqlUpdateHouseStr(i, "hOwner", nickname);
	}
	if(GetPlayerBizz(NameStats[playerid]))
	{
		new i = GetPVarInt(NameStats[playerid], "PlayerBizz");
		strmid(BizzInfo[i][bOwner], nickname, 0, strlen(nickname), MAX_PLAYER_NAME);
		MysqlUpdateBizzStr(i, "owner", nickname);
		UpdateBizz(i);
	}
	format(string, sizeof(string), "Вы сменили имя игрока %s на %s", GetName(NameStats[playerid]), nickname);
	SendClientMessage(playerid, COLOR_LIME, string);
	format(string, sizeof(string), "[Админ] %s сменил ник игрока %s на %s", GetName(playerid), GetName(set_name), PlayerName[set_name]);
	SendLog("SetName", string);
	format(query, sizeof(query), "UPDATE "T_ACCOUNTS" SET name = '%s' WHERE name = '%s'", nickname, GetName(NameStats[playerid]));
	mysql_tquery(dbHandle, query, "", "");
	if(PI[NameStats[playerid]][pAdmin])
	{
		format(query, sizeof(query), "UPDATE "T_ADMIN" SET name='%s' WHERE name='%s'", nickname, GetName(NameStats[playerid]));
		mysql_tquery(dbHandle, query, "", "");
	}
	format(query, sizeof(query), "INSERT INTO `historyname` (`idacca`, `Name`) VALUE ('%d', '%s')", PI[NameStats[playerid]][pID], nickname);
	mysql_tquery(dbHandle, query, "", "");
	format(GetName(NameStats[playerid]), MAX_PLAYER_NAME, nickname);
	SetPlayerName(NameStats[playerid], nickname);
	format(string, sizeof(string), "Администратор %s сменил Вам никнейм", GetName(playerid));
	SendClientMessage(NameStats[playerid], COLOR_WHITE, string);
	format(string, sizeof(string), "Ваш новый никнейм: {ffffff}%s", nickname);
	SendClientMessage(NameStats[playerid], COLOR_GREEN, string);
	SendClientMessage(NameStats[playerid], COLOR_GREEN, "Обязательно нужно сделать скриншот. Клавиша: {ffffff}F8");
	SendClientMessage(NameStats[playerid], COLOR_GREEN, "Пропишите свой новый ник в окне {ffffff}SA:MP");
	Kick(NameStats[playerid]);
	return 1;
}

forward OnPlayerSetPhoneNumber(playerid);
public OnPlayerSetPhoneNumber(playerid)
{
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
	{
	    SendClientMessage(playerid, COLOR_GREY, "Такой номер уже используется");
		ShowPlayerDialog(playerid, D_BUYSIM, DIALOG_STYLE_INPUT, "{7efd7d}Покупка SIM-карты", "{FFFFFF}Введите новый шестизначный номер", "Купить", "Закрыть");
		return 1;
	}
	new price = gShopCosts[1];
	new i = GetPVarInt(playerid, "PlayerBizz");
    PI[playerid][pPhoneNumber] = GetPVarInt(playerid, "CheckNumber");
    TransferMoney(playerid, -1, price);
    if(BizzInfo[i][bProduct] > 0)
    {
		BizzInfo[i][bMoney] += price;
		BizzPay[i] += price;
		BizzInfo[i][bProduct] -= gShopProd[1];
		MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
		MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
	}
	new string[64];
	format(string, sizeof(string), "Вы купили SIM-карту. Ваш номер: {FFFFFF}%i", PI[playerid][pPhoneNumber]);
	SendClientMessage(playerid, COLOR_BLUE, string);
	MysqlUpdatePlayerInt(playerid, "phonenumber", PI[playerid][pPhoneNumber]);
	DeletePVar(playerid, "CheckNumber");
	MagazineList(playerid);
	return 1;
}

forward MysqlCheckPhoneNumber(playerid, telephone);
public MysqlCheckPhoneNumber(playerid, telephone)
{
	if(cache_get_row_count(dbHandle) > 0) return SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка при покупке SIM-карты, попробуйте еще раз!");
	new num;
	foreach(new i: Player)
	{
 		if((PI[i][pPhoneNumber] == telephone) && (i != playerid))
		{
	 		SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка при покупке SIM-карты, попробуйте еще раз!");
	 		num++;
	 		break;
		}
	}
    if(num == 0)
	{
	    PI[playerid][pPhoneNumber] = telephone;
		SendClientMessage(playerid, COLOR_BLUE, "Вы купили мобильный телефон.");
		MysqlUpdatePlayerInt(playerid, "phonenumber", PI[playerid][pPhoneNumber]);
		new price = gShopCosts[0];
		new i = GetPVarInt(playerid, "PlayerBizz");
	    TransferMoney(playerid, -1, price);
	    if(BizzInfo[i][bProduct] > 0)
	    {
			BizzInfo[i][bMoney] += price;
			BizzPay[i] += price;
			BizzInfo[i][bProduct] -= gShopProd[0];
		    MysqlUpdateBizzInt(i, "money", BizzInfo[i][bMoney]);
			MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
		}
	    MagazineList(playerid);
	}
	return 1;
}

forward OfflineMembersOnFraction(playerid);
public OfflineMembersOnFraction(playerid)
{
    new rows, fields;
	cache_get_data(rows, fields);
	new string[84], string_dialogue[1681], mname[MAX_PLAYER_NAME], mdata[15], mrank;
    strcat(string_dialogue, "{FFFF00}Ник\t{FFFF00}Должность\t{FFFF00}Последний вход\n");
	if(rows)
	{
	    for(new i = 0; i < rows; i++)
	    {
			cache_get_field_content(i, "name", mname, dbHandle, MAX_PLAYER_NAME);
       		cache_get_field_content(i, "datavhod", mdata, dbHandle, 15);
			mrank = cache_get_field_content_int(i, "rank", dbHandle);
			format(string, sizeof(string), "{FFFFFF}%s\t%s (%i)\t%s\n", mname, Fraction_Rang[PI[playerid][pMember]][mrank], mrank, mdata);
	    	strcat(string_dialogue, string);
  		}
	}
	ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_TABLIST_HEADERS, "{7efd7d}Члены организации в offline", string_dialogue, "Закрыть", "");
	return 1;
}

forward OfflineUninviteOnFraction(playerid);
public OfflineUninviteOnFraction(playerid)
{
	new rows, fields, Names[MAX_PLAYER_NAME];
	cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, COLOR_GRAD1, "Не найдено совпадений!");
    cache_get_field_content(0, "name", Names, dbHandle, 32);
    format(query, 256, "UPDATE "T_ACCOUNTS" SET leader = '0', member = '0', rank = '0', memberskin = '0' WHERE name = '%s' LIMIT 1",Names);
	mysql_tquery(dbHandle, query, "", "");
	new string[63];
	format(string, sizeof(string), "Вы уволили игрока %s", Names);
	SendClientMessage(playerid, COLOR_RED, string);
	return 1;
}

forward AllAdmins(playerid);
public AllAdmins(playerid)
{
   	new rows, fields;
	cache_get_data(rows, fields);
	new string[72], string_dialogue[1440], aname[MAX_PLAYER_NAME], alevel, alastcon[15], adata[15];
	strcat(string_dialogue, "{FFFF00}Ник {FFFF00}Уровень админа {FFFF00}Последний вход {FFFF00}Поставлен\n");
	if(rows)
	{
	    for(new i = 0; i < rows; i++)
	    {
	        cache_get_field_content(i, "name", aname, dbHandle, MAX_PLAYER_NAME);
			alevel = cache_get_field_content_int(i, "level", dbHandle);
			cache_get_field_content(i, "last_connect", alastcon, dbHandle, 15);
			cache_get_field_content(i, "data", adata, dbHandle, 15);
			if(alevel == 6) continue;
	    	format(string, sizeof(string), "{FFFFFF}%s\t%d\t%s\t%s\n", aname, alevel, alastcon, adata);
	    	strcat(string_dialogue, string);
    	}
	}
	ShowPlayerDialog(playerid, D_APANEL+1, DIALOG_STYLE_LIST, "{7efd7d}Весь список администрации", string_dialogue, "Закрыть", "");
	return 1;
}
forward OnPlayerReferal(playerid);
public OnPlayerReferal(playerid)
{
    new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		ShowPlayerDialog(playerid, D_JOB+30, 1, "{7efd7d}Реферал", "{ffffff}Введите имя игрока, приглосившего Вас на сервер\nЕсли Вас никто не приглашал, то нажмите \"Пропустить\"\n\n{7efd7d}Если Вы достигните 5 уровня,\nто Ваш реферал получит 50 000 рублей", "Ок", "Пропустить");
		return SendClientMessage(playerid, COLOR_GREY, "Игрок с таким логином не играет на сервере!");
	}
	new name[MAX_PLAYER_NAME];
	GetPVarString(playerid, "Drug", name, sizeof(name));
	strmid(PI[playerid][pReferal], name, 0, strlen(name), MAX_PLAYER_NAME);
	SetPVarInt(playerid, "ReferalReg", 1);
	return 1;
}

stock Float:GetAngleToPoint(Float:X, Float:Y, Float:A, Float:x, Float:y)
{
	new Float:angle = 185.0 - atan2(X-x, Y-y);
	A -= (angle - 5.0);
	return A;
}

forward GetPlayerAngleToPoint(playerid, Float:x, Float:y);
stock GetPlayerAngleToPoint(playerid, Float:x, Float:y)
{
	new Float:ix, Float:iy, Float:iz, Float:a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, ix, iy, iz);
	return floatround(GetAngleToPoint(ix, iy, a, x, y));
}

stock Float:GetPlayerAngleToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	return float(GetPlayerAngleToPoint(playerid, x, y));
}

stock GetPlayerFaceToPlayer(playerid, targetid, Float:facing)
{
	new Float:radius = GetPlayerAngleToPlayer(playerid, targetid);
	return (radius > -facing && radius < facing);
}
stock PlayerSecurity(playerid)
{
    new string[350];
	format(string, sizeof(string), "Смена пароля");
	ShowPlayerDialog(playerid, D_JOB+201, 2, "{7efd7d}Безопасность", string, "Выбрать", "Назад");
	return 1;
}

stock GPSPlayer_(playerid, Float:X, Float:Y, Float:Z, locname[])
{
	if(X == 0.0) return SendClientMessage(playerid, COLOR_GREY, "Критическая ошибка! Обратитесь к администрации!");
 	new Float:VPos[3];
    GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
    UseGPS[playerid] = true;
    DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0, 0, 0, 5.0);
	new string[128];
	format(string, sizeof(string), "Вы отметили на карте: %s. {7efd7d}Расстояние: %.1f м", locname, GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], X, Y, Z));
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

stock MeAction(playerid, action[], Float:distance = 13.0)
{
	new string[128];
	format(string, sizeof(string), "%s %s", GetName(playerid), action);
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i, COLOR_PURPLE, string);
	}
	return 1;
}

stock DoAction(playerid, action[], Float:distance = 13.0)
{
	new string[128];
	format(string, sizeof(string), "%s | %s", action, GetName(playerid));
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) ||  GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i, COLOR_PURPLE, string);
	}
	return 1;
}

stock TryAction(playerid, action[], Float:distance = 13.0)
{
	new string[128];
	if(random(2) == 1) format(string, sizeof(string), "%s %s - {63BD4E}удачно", GetName(playerid), action);
	else format(string, sizeof(string), "%s %s - {FF6347}неудачно", GetName(playerid), action);
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i, COLOR_PURPLE, string);
	}
	return 1;
}

stock AutoStationBusInfo(playerid, text[]) ProxDetectorNew(playerid, 30.0, COLOR_BLUE, text);

forward OnPlayerOffban(playerid, name[], day, reason[]);
public OnPlayerOffban(playerid, name[], day, reason[])
{
	if(cache_get_row_count(dbHandle) > 0)
    {
		new string[144];
		format(string, sizeof(string), "Игрок %s получил оффлайн бан на %i дней от администратора %s. Причина: %s", name, day, GetName(playerid), reason);
		SendClientMessageToAll(COLOR_RED, string);
		SendLog("OffBan", string);
		getdate(years, months, days);
		new unbandate = gettime() + day*86400;
		new data[15];
        mysql_tquery(dbHandle, "SET NAMES 'cp1251'", "", "");
		mysql_tquery(dbHandle, "SET CHARACTER SET 'cp1251'", "", "");
		format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
		format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', '%d', '%d', '%s')", name, GetName(playerid), cache_get_row_int(0, 3, dbHandle), data, day, unbandate, reason);
		mysql_tquery(dbHandle, query, "", "");
		format(query, sizeof(query), "UPDATE "T_ACCOUNTS" SET warn=0,member=0,leader=0,templeader=0,rank=0,job=0,spawnchange=0 WHERE name='%s'", name);
		mysql_tquery(dbHandle, query, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
	return 1;
}

forward OnPlayerOffwarn(playerid, name[], reason[]);
public OnPlayerOffwarn(playerid, name[], reason[])
{
	if(cache_get_row_count(dbHandle) > 0)
	{
	    new string[144];
		if(cache_get_row_int(0, 20, dbHandle) < 3)
		{
			format(string, sizeof(string), "Игрок %s получил оффлайн предупреждение от администратора %s. Причина: %s", name, GetName(playerid), reason);
			format(query, sizeof(query), "UPDATE "T_ACCOUNTS" SET warn=warn+1,member=0,leader=0,templeader=0,rank=0,job=0,spawnchange=0 WHERE name='%s'", name);
			mysql_tquery(dbHandle, query, "", "");
		}
		else
		{
		    new data[15], unbandate;
			format(string, sizeof(string), "Игрок %s получил оффлайн бан на 7 дней от администратора %s. Причина: %s", name, GetName(playerid), reason);
			getdate(years, months, days);
			unbandate = gettime() + 7*86400;
			format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
			format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', 7, %d, '%s')", name, GetName(playerid), cache_get_row_int(0, 3, dbHandle), data, unbandate, reason);
			mysql_tquery(dbHandle, query, "", "");
			format(query, sizeof(query), "UPDATE "T_ACCOUNTS" SET warn=0,member=0,leader=0,templeader=0,rank=0,job=0,spawnchange=0 WHERE name='%s'", name);
			mysql_tquery(dbHandle, query, "", "");
		}
		SendClientMessageToAll(COLOR_RED, string);
	    SendLog("WarnLog", string);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
	return 1;
}

forward OnPlayerUnban(playerid, name[]);
public OnPlayerUnban(playerid, name[])
{
    new rows, fields;
	cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не забанен!");
    else
    {
		format(query, sizeof(query), "DELETE FROM bans WHERE name = '%s'", name);
	    mysql_tquery(dbHandle, query, "", "");
		new string[76];
		format(string, sizeof(string), "[A] %s[%d] разблокировал аккаунт игрока %s", GetName(playerid), playerid, name);
		SendAdminMessage(COLOR_GREY, string);
	}
	return 1;
}

forward OnPlayerDeleteAccount(playerid, name[]);
public OnPlayerDeleteAccount(playerid, name[])
{
	if(cache_get_row_count(dbHandle) > 0)
    {
        new idacca, level;
        idacca = cache_get_row_int(0, 0, dbHandle);
        level = cache_get_row_int(0, 1, dbHandle);
        if(!GetPVarInt(playerid, "deleting_account"))
        {
            new string[80];
            SetPVarInt(playerid, "deleting_account", 1);
			format(string, sizeof(string), "Ник: %s, аккаунт №%i, уровень: %i. Удалить аккаунт?", name, idacca, level);
			SendClientMessage(playerid, COLOR_DARKORANGE, string);
			SendClientMessage(playerid, COLOR_YELLOW, "Чтобы ОТМЕНИТЬ удаление аккаунта, повторите /delacc без ника");
			SendClientMessage(playerid, COLOR_YELLOW, "Чтобы ПОТВЕРДИТЬ удаление аккаунта, повторите /delacc [ник игрока]");
		}
		else if(GetPVarInt(playerid, "deleting_account"))
		{
		    new string[87];
	    	format(string, sizeof(string), "Аккаунт №%i удалён", idacca);
	    	SendClientMessage(playerid, COLOR_LIME, string);
	    	format(string, sizeof(string), "[Внимание] %s[%i] удалил аккаунт игрока %s", GetName(playerid), playerid, name);
	    	SendAdminMessage(COLOR_REDD, string);
	    	SendLog("DeleteAccount", string);
	    	if(GetPlayerID(name) != -1)
	    	{
	    	    SendClientMessage(GetPlayerID(name), COLOR_REDD, "Ваш аккаунт был удалён за нарушение правил сервера");
				Kick(GetPlayerID(name));
	    	}
			format(string, sizeof(string), "DELETE FROM "T_ACCOUNTS" WHERE `name` = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			SetPVarInt(playerid, "deleting_account", 0);
		}
    }
    else
    {
        DeletePVar(playerid, "deleting_account");
    	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
    }
	return 1;
}

forward OnPlayerOffget(playerid, name[]);
public OnPlayerOffget(playerid, name[])
{
	if(cache_get_row_count(dbHandle) > 0)
	{
	    new string[64], string_dialogue[512], idacca, cash, bank, level, regip[16], lastip[16], datareg[15], donate;
	    idacca = cache_get_row_int(0, 0, dbHandle);
	    cash = cache_get_row_int(0, 11, dbHandle);
	    bank = cache_get_row_int(0, 12, dbHandle);
	    level = cache_get_row_int(0, 10, dbHandle);
	    cache_get_row(0, 14, regip, dbHandle, 16);
	    cache_get_row(0, 3, lastip, dbHandle, 16);
	    cache_get_row(0, 15, datareg, dbHandle, 15);
	    donate = cache_get_row_int(0, 58, dbHandle);
		format(string, sizeof(string), "{7efd7d}Номер аккаунта:\t%i\n", idacca);
		strcat(string_dialogue, string);
		format(string, sizeof(string), "{7efd7d}Наличные:\t\t%i\n", cash);
		strcat(string_dialogue, string);
		format(string, sizeof(string), "{7efd7d}Банковский счёт:\t%i\n", bank);
		strcat(string_dialogue, string);
		format(string, sizeof(string), "Уровень:\t\t%i\n", level);
		strcat(string_dialogue, string);
		format(string, sizeof(string), "{7efd7d}IP адрес (регис.):\t%s\n", regip);
		strcat(string_dialogue, string);
		format(string, sizeof(string), "{7efd7d}IP адрес (последн.):\t%s\n", lastip);
		strcat(string_dialogue, string);
		format(string, sizeof(string), "{7efd7d}Дата регистрации:\t%s\n", datareg);
		strcat(string_dialogue, string);
		format(string, sizeof(string), "{7efd7d}Донат:\t\t\t%i\n", donate);
		strcat(string_dialogue, string);
		ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, name, string_dialogue, "Закрыть", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
	return 1;
}

stock PhoneMenu(playerid)
{
	ShowPlayerDialog(playerid, D_PHONE, 2, "{7efd7d}Телефон", "1. Контакты\n2. Позвонить\n3. Отправить СМС\n4. Сервисы", "Принять", "Выход");
	return 1;
}

stock SendSMS(playerid)
{
	new string[85];
	format(string, sizeof(string), "{ffffff}Вы пытаетесь отправить СМС на номер: %i\n\nВведите текст сообщения:", GetPVarInt(playerid, "PhoneSMS"));
	ShowPlayerDialog(playerid, D_PHONE+4, 1, "{7efd7d}СМС", string, "Принять", "Назад");
	return 1;
}

stock SetString(param_1[], param_2[], size = 300)
{
    return strmid(param_1, param_2, 0, strlen(param_2), size);
}

stock GetString(param1[],param2[])
{
	return !strcmp(param1, param2, false);
}

forward GmTest(playerid, targetid, Float:oldhealth);
public GmTest(playerid, targetid, Float:oldhealth)
{
    new Float: newhealth;
	GetPlayerHealth(targetid, newhealth);
	new mes[256], string[60];
	if(oldhealth == newhealth) string = "{FF0000}Возможно игрок использует God Mode(GM)";
	if(oldhealth != newhealth) string = "{05E900}Вероятно игрок чист, показатель его HP уменьшился";
    format(mes, sizeof(mes), "{FFFFFF}Было: {FF9900}%.0f.0 (HP)\n{FFFFFF}Стало: {FF9900}%.0f.0 (HP)\n{FFFFFF}Уменьшилось на: {FF9900}%.0f.0 (HP)\n\n%s", oldhealth, newhealth, oldhealth-newhealth, string);
    ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, GetName(targetid), mes, "Закрыть", "");
	SetHealth(targetid, oldhealth);
	StartGMTest[playerid] = false;
	return 1;
}

forward StealMats(playerid);
public StealMats(playerid)
{
	new guns = random(5) + 1;
	new ammo = random(5) + 1;
	if(PI[playerid][pGunAmount] + guns > 500) guns = 500 - PI[playerid][pGunAmount];
	if(PI[playerid][pPatron] + ammo > 500) ammo = 500 - PI[playerid][pPatron];
	if(500 < ammo + PI[playerid][pPatron] && !PI[playerid][pImprove][2]) return 0;
	else if(1000 < ammo + PI[playerid][pPatron] && PI[playerid][pImprove][2]) return 0;
	if(500 < guns + PI[playerid][pGunAmount] && !PI[playerid][pImprove][2]) return 0;
	else if(1000 < guns + PI[playerid][pGunAmount] && PI[playerid][pImprove][2]) return 0;
	if(gArmyWarehouse[0] < guns || gArmyWarehouse[1] < ammo) return 0;
	gArmyWarehouse[0] -= guns;
	gArmyWarehouse[1] -= ammo;
	new string[35];
	format(string, sizeof(string), "~y~ЕД.ОРУЖИЯ: +%d~n~~b~ПАТРОНОВ: +%d", guns, ammo);
	GameTextForPlayer(playerid, string, 1500, 6);
	PI[playerid][pGunAmount] += guns;
	MysqlUpdatePlayerInt(playerid, "gunamount", PI[playerid][pGunAmount]);
	PI[playerid][pPatron] += ammo;
	MysqlUpdatePlayerInt(playerid, "patron", PI[playerid][pPatron]);
	return 1;
}

stock WHDataUpdate()
{
	new string[500];
	format(string,sizeof(string),"{99cc00}Русская Мафия\n{FFFFFF}Патроны: {7efd7d}%d {FFFFFF}шт.\n{FFFFFF}Металл: {7efd7d}%d {FFFFFF}кг.\n{FFFFFF}Наркотики: {7efd7d}%d {FFFFFF}гр.\n{FFFFFF}Деньги: {7efd7d}%d {FFFFFF}руб.\n{FFFFFF}Кол-во бизнесов: {7efd7d}%i {FFFFFF}шт.", MafiaPatr[0], MafiaEd[0], DrugsBank[TEAM_OPGOR], FracBank[6], MafiaTotalBizz[0]);
	UpdateDynamic3DTextLabelText(Mafia3d[0],0xFFFFFFFF,string);
	format(string,sizeof(string),"{99cc00}Украинская Мафия\n{FFFFFF}Патроны: {7efd7d}%d {FFFFFF}шт.\n{FFFFFF}Металл: {7efd7d}%d {FFFFFF}кг.\n{FFFFFF}Наркотики: {7efd7d}%d {FFFFFF}гр.\n{FFFFFF}Деньги: {7efd7d}%d {FFFFFF}руб.\n{FFFFFF}Кол-во бизнесов: {7efd7d}%i {FFFFFF}шт.", MafiaPatr[1], MafiaEd[1], DrugsBank[TEAM_OPGYG], FracBank[5], MafiaTotalBizz[1]);//Писюн
	UpdateDynamic3DTextLabelText(Mafia3d[1],0xFFFFFFFF,string);
	format(string,sizeof(string),"{99cc00}Армия\n{FFFFFF}Патроны: {7efd7d}%d {FFFFFF}шт.\n{FFFFFF}Металл: {7efd7d}%d {FFFFFF}кг.\n{7efd7d}/getmet - взять металл\n/getammo - взять патроны", gArmyWarehouse[1], gArmyWarehouse[0]);
	UpdateDynamic3DTextLabelText(Mafia3d[2],0xFFFFFFFF,string);
}

stock ShowMakeGunList(playerid)
{
	new string[256], gunname[24];
	for(new i; i < 9; i++)
	{
		GetWeaponName(gGunID[i], gunname, sizeof(gunname));
		if(!i) format(string, sizeof(string), "%s", gunname);
		else format(string, sizeof(string), "%s\n%s", string, gunname);
	}
	ShowPlayerDialog(playerid, D_MAKEGUN, 2, "{7efd7d}Сборка оружия", string, "Далее", "Отмена");
}

stock GetPlayerTruckLevel(playerid)
{
	if(PI[playerid][pTruckSkill] >= TRUCK_LEVEL_2) return 2;
	else return 1;
}

stock BadFloat(Float:x)
{
    if(x >= 10.0 || x <= -10.0) return 1;
    return 0;
}

stock IsIpFound(const string[])
{
	if(!CheckIPs) CheckIPs = regex_build("([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})");
	return regex_search_exid(string, CheckIPs);
}

stock CheckString(string[])
{
    static const WebSites[][] = {
		".ws",".ru",".tk",".com","www.",".org",".net",".cc",".рф",".by",".biz",".su",".info",
		"админки","лидерки","Переезд","Новый сервер","NEW IP","АДМИНКИ","Лидерки","vk . com",
		"Переехали","переезжаем","дам админку","vk .com","cheat-master","переехали","Чит Мастер",
		"Bathory","youtube.com","мамк","mq","МАМК","mamke привет",
		"MQ","CM_","CHEAT-MASTER","cheat master","CHEAT MASTER","positiv","POSITIV","Positiv",
		"нубо мод","дно сервер","нубо сервер","нубомод","дносервер","нубосервер","сервер гавно"
	};
	for(new i = 0; i < sizeof(WebSites); i++)
	{
		if(strfind(string, WebSites[i], true) != -1) return 1;
	}
	return 0;
}

stock CheckExceptionName(string[])
{
	if(strfind(string, NAME_DEVELOPER_ONE, true) != -1) return 1;
	if(strfind(string, NAME_DEVELOPER_TWO, true) != -1) return 1;
	return 0;
}

stock PlayerGetsChatBan(playerid, text[])
{
	new string[90];
	format(string, sizeof(string), "[Антиреклама] %s[%i] подозревается в рекламе [IP:%s]", GetName(playerid), playerid, PI[playerid][pIP]);
	SendAdminMessage(COLOR_LIME, string);
	format(string, sizeof(string), "[Антиреклама] Текст: %s", text);
	SendAdminMessage(COLOR_LIME, string);
	format(string, sizeof(string), "Игрок %s [%s]: %s", GetName(playerid), PI[playerid][pIP], text);
	SendLog("PlayerAdvertise",string);
	return 1;
}

stock AdminAntisliv(playerid, text[])
{
	RemoveAdmin(playerid, GetName(playerid));
	new string[88];
	format(string, sizeof(string), "[Внимание] %s[%i] подозревается во взломе [IP:%s]", GetName(playerid), playerid, PI[playerid][pIP]);
	SendAdminMessage(COLOR_REDD, string);
	format(string, sizeof(string), "[Внимание] Текст: %s", text);
	SendAdminMessage(COLOR_REDD, string);
	format(string, sizeof(string), "Админ %s [%s]: %s", GetName(playerid), PI[playerid][pIP], text);
	SendLog("AdminAntisliv",string);
	new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + 30*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
	format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', 'System', '%s', '%s', '30', '%d', 'Слив админки')", GetName(playerid), PI[playerid][pIP], data, unbandate);
	mysql_tquery(dbHandle, query, "", "");
	Kick(playerid);
	return 1;
}

stock AttemptRemoveChiefAdmin(playerid)
{
	RemoveAdmin(playerid, GetName(playerid));
    new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + 30*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
	format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', 'System', '%s', '%s', '30', '%d', 'Слив админки')", GetName(playerid), PI[playerid][pIP], data, unbandate);
	mysql_tquery(dbHandle, query, "", "");
    new string[98];
    format(string, sizeof(string), "[Внимание] %s был снят за попытку выдать наказание главному администратору", GetName(playerid));
    SendAdminMessageEx(COLOR_REDD, string, 5);
    SendLog("AttemptRemoveChiefAdmin", string);
    Kick(playerid);
	return 1;
}

stock AttemptRemoveAdmin(playerid)
{
    SendClientMessage(playerid, COLOR_GREY, "Администратор выше вас рангом, или равен вам");
    new string[97];
    format(string, sizeof(string), "[Внимание] %s попытался выдать наказание администратору выше его по рангу", GetName(playerid));
    SendAdminMessageEx(COLOR_REDD, string, 5);
    SendLog("AttemptRemoveAdmin", string);
	return 1;
}

stock RemoveAdmin(targetid, name[])
{
	PI[targetid][pAdmin] = ADM_NONE;
	new string[128];
	mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_ADMIN" WHERE `name`='%s'", name);
	mysql_tquery(dbHandle, string, "", "");
	MysqlUpdatePlayerInt(targetid, "admin", PI[targetid][pAdmin]);
	return 1;
}

stock SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:a)
    return SetSpawnInfo(playerid, 255, skin, x, y, z-0.2, a, 0, 0, 0, 0, 0, 0);

stock HaveWeapon(playerid, weaponid)
{
	new weapons[13][2];
	for(new i = 0; i <= 12; i++)
	{
		GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);
		if((weapons[i][0] == weaponid) && weapons[i][1]) return 1;
	}
	return 0;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li, aNum, len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

stock GetNameWithNumber(number)
{
	new str[MAX_PLAYER_NAME] = {"Offline/None"};
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pPhoneNumber] == number)
		{
			format(str, sizeof(str), "%s", GetName(i));
			break;
		}
	}
	return str;
}

forward SetAdmin(playerid, name[], level);
public SetAdmin(playerid, name[], level)
{
	new rows, fields, string[256];
	cache_get_data(rows, fields);
	if(rows)
	{
		if(!level)
		{
		    if(GetPlayerID(name) != INVALID_PLAYER_ID) PI[GetPlayerID(name)][pAdmin] = 0;
			mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_ADMIN" WHERE `name`='%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ACCOUNTS" SET `admin` = '0' WHERE `name` = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "Вы сняли %s с должности администратора", name);
	    	SendClientMessage(playerid, COLOR_YELLOW, string);
	    	format(string, sizeof(string), "%s снял %s с должности администратора", GetName(playerid), name);
	    	SendLog("DeleteAdmin", string);
		}
		else
		{
		    if(GetPlayerID(name) != INVALID_PLAYER_ID) PI[GetPlayerID(name)][pAdmin] = level;
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET `level` = '%d' WHERE `name` = '%s' LIMIT 1", level, name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "Вы установили уровень администратора %s на %i", name, level);
	    	SendClientMessage(playerid, COLOR_YELLOW, string);
	    	format(string, sizeof(string), "%s установил уровень администратора %s на %i", GetName(playerid), name, level);
	    	SendLog("EditAdmin", string);
		}
	}
	else
	{
		if(!level) return SendClientMessage(playerid, COLOR_GREY, "Игрок не администратор");
		new data[15];
		getdate(years, months, days);
		format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
		mysql_format(dbHandle, string, sizeof(string), "INSERT INTO "T_ADMIN" (`name`, `level`, `last_connect`, `put_admin`, `data`) VALUES ('%s', %d, '%s', '%s', '%s')", name, level, data, GetName(playerid), data);
		mysql_tquery(dbHandle, string, "", "");
		format(string, sizeof(string), "%s добавлен в список администрации. Уровень полномочий %i", name, level);
	    SendClientMessage(playerid, COLOR_GREEN, string);
	    format(string, sizeof(string), "%s добавил в список администрации %s (%i уровень)", GetName(playerid), name, level);
	    SendLog("SetAdmin", string);
	    if(GetPlayerID(name) != INVALID_PLAYER_ID)
    	{
    	    format(string, sizeof(string), "%s назначил Вас администратором", GetName(playerid));
	    	SendClientMessage(GetPlayerID(name), COLOR_YELLOW, string);
    	}
	}
	return 1;
}

forward adm(playerid, name[]);
public adm(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		if(PI[playerid][pAdmin] > ADM_NONE) PI[playerid][pAdmin] = ADM_NONE;
		return 1;
	}
	new Password[16];
	cache_get_field_content(0, "password", Password, dbHandle);
	if(!strcmp(Password, "qwerty", true))
	{
		SetPVarInt(playerid, "adm", 1);
		ShowPlayerDialog(playerid, D_adm, DIALOG_STYLE_PASSWORD, "{7efd7d}Регистрация администратора", "{FFFFFF}Введите пароль, который будет от панели администратора\n\n{63BD4E}Примечание:\n\t- Пароль должен состоять из латинских букв и цифр\n\t- Размер пароля от 6 до 15 символов", "Принять", "Отмена");
	}
	else
	{
		SetPVarInt(playerid, "adm", 0);
		ShowPlayerDialog(playerid, D_adm, DIALOG_STYLE_PASSWORD, "{7efd7d}Доступ администратора", "{FFFFFF}Введите Ваш пароль от панели администратора.", "Принять", "Отмена");
	}
	return 1;
}

forward admReg(playerid, name[]);
public admReg(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return 1;
	new inputtext[16], string[144], ipplayer[256];
	GetPVarString(playerid, "inputtext", inputtext, sizeof(inputtext));
	mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET `password` = '%s' WHERE `name` = '%s' LIMIT 1", inputtext, GetName(playerid));
	mysql_tquery(dbHandle, string, "", "");
	PI[playerid][pAdmin] = cache_get_row_int(0, 1, dbHandle);
	GetPlayerIp(playerid,ipplayer,sizeof(ipplayer));
	MysqlUpdatePlayerInt(playerid, "admin", PI[playerid][pAdmin]);
	static const Admin_Names[6][32] = {"Хелпер","Мл. Администратор","Администратор","Зам. ГА","Гл. Администратор","Руководитель"};
	if(PI[playerid][pSex] == 1) format(string, sizeof(string), "[A] %s %s[%i] авторизовался [IP: %s | R-IP %s]", Admin_Names[PI[playerid][pAdmin]-1], GetName(playerid), playerid, PI[playerid][pLastIP],PI[playerid][pRegIP]);
	else format(string, sizeof(string), "[A] %s %s[%i] авторизовалась [IP: %s | R-IP %s]", Admin_Names[PI[playerid][pAdmin]-1], GetName(playerid), playerid, ipplayer,PI[playerid][pIP]);
	SendAdminMessage(0x99CCFFFF, string);
	AdminLogged[playerid] = true;
	new day, month, year;
	getdate(year, month, day);
	mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET `last_connect` = '%d.%d.%d' WHERE `name` = '%s' LIMIT 1", day, month, year, GetName(playerid));
	mysql_tquery(dbHandle, string, "", "");
	for(new i; i < 10; i++) TextDrawShowForPlayer(playerid,tdapanel_TD_TD[i]);
	new str[244];
	format(str,sizeof(str),"%d",PI[playerid][pAdmin]);
	TextDrawSetString(tdapanel_TD_TD[6],str);
	format(str,sizeof(str),"%d",AdminInfo[playerid][admReputation]);
	TextDrawSetString(tdapanel_TD_TD[8],str);
	format(str,sizeof(str),"%d",AdminInfo[playerid][admReport]);
	TextDrawSetString(tdapanel_TD_TD[9],str);
	return 1;
}

forward admAuth(playerid, inputtext[]);
public admAuth(playerid, inputtext[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "Неверный пароль");
		SetPVarInt(playerid, "attempt_pass", GetPVarInt(playerid, "attempt_pass") + 1);
		if(GetPVarInt(playerid, "attempt_pass") > 3)
		{
			DeletePVar(playerid, "attempt_pass");
			SKick(playerid, 2112);
		}
	}
	else
	{
	    new string[144], ipplayer[256];
		AdminLogged[playerid] = true;
		PI[playerid][pAdmin] = cache_get_row_int(0, 1, dbHandle);
		AdminInfo[playerid][admGoto] = cache_get_row_int(0, 6, dbHandle);
	    AdminInfo[playerid][admGethere] = cache_get_row_int(0, 7, dbHandle);
	    AdminInfo[playerid][admSpectate] = cache_get_row_int(0, 8, dbHandle);
	    AdminInfo[playerid][admTimeMin] = cache_get_row_int(0, 9, dbHandle);
		AdminInfo[playerid][admReport] = cache_get_row_int(0, 10, dbHandle);
	 	AdminInfo[playerid][admReputation] = cache_get_row_int(0,11, dbHandle);
	    GetPlayerIp(playerid,ipplayer,sizeof(ipplayer));
		static const Admin_Names[6][32] = {"Хелпер","Мл. Администратор","Администратор","Зам. ГА","Гл. Администратор","Руководитель"};
		if(PI[playerid][pAdmin] > 5)
		{
			if(PI[playerid][pSex] == 1) format(string, sizeof(string), "[A] %s %s[%i] авторизовался [IP: *скрыто* | R-IP *скрыто*]", Admin_Names[PI[playerid][pAdmin]-1], GetName(playerid), playerid);
			else format(string, sizeof(string), "[A] %s %s[%i] авторизовалась [IP: *скрыто* | R-IP *скрыто*]", Admin_Names[PI[playerid][pAdmin]-1], GetName(playerid), playerid);
			SendClientMessage(playerid, -1, "[DEBUG] Успешно авторизовались");
		}
		else
		{
			if(PI[playerid][pSex] == 1) format(string, sizeof(string), "[A] %s %s[%i] авторизовался [IP: %s | R-IP %s]", Admin_Names[PI[playerid][pAdmin]-1], GetName(playerid), playerid,  PI[playerid][pLastIP],PI[playerid][pRegIP]);
			else format(string, sizeof(string), "[A] %s %s[%i] авторизовалась [IP: %s | R-IP %s]", Admin_Names[PI[playerid][pAdmin]-1], GetName(playerid), playerid, ipplayer,PI[playerid][pIP]);
	 	}
		SendAdminMessage(0x99CCFFFF, string);
		new day, month, year;
  		getdate(year, month, day);
		mysql_format(dbHandle, string, 144, "UPDATE "T_ADMIN" SET `last_connect` = '%d.%d.%d' WHERE `name` = '%s' LIMIT 1", day, month, year, GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
		for(new i; i < 10; i++) TextDrawShowForPlayer(playerid,tdapanel_TD_TD[i]);
		new str[244];
		format(str,sizeof(str),"%d",PI[playerid][pAdmin]);
		TextDrawSetString(tdapanel_TD_TD[6],str);
		format(str,sizeof(str),"%d",AdminInfo[playerid][admReputation]);
		TextDrawSetString(tdapanel_TD_TD[8],str);
		format(str,sizeof(str),"%d",AdminInfo[playerid][admReport]);
		TextDrawSetString(tdapanel_TD_TD[9],str);
	}
	return 1;
}

stock IsValidPassport(playerid)
{
    new string[100];
	format(string, sizeof(string), "SELECT `Name` FROM `passports` WHERE `Name` = '%s' LIMIT 1", GetName(playerid));
	new Cache:result = mysql_query(dbHandle, string);
	new accounts = cache_get_row_count(dbHandle);
	cache_delete(result, dbHandle);
	return accounts;
}

stock OnRegPass(playerid)
{
	new string[250];
	format(string, sizeof(string), "INSERT INTO `passports` (`Name`,`Seria`,`Number`,`Sex`,`D_Day`,`D_Month`,`D_Year`,`DB_Day`,`DB_Month`,`DB_Year`,`McState`) VALUE ('%s','%d','%d','%d','%d','%d','%d','%d','%d','%d','-1')",
	GetName(playerid),
	PassInfo[playerid][psSeria],
	PassInfo[playerid][psNumber],
	PassInfo[playerid][psSex],
	PassInfo[playerid][psDate][0],
	PassInfo[playerid][psDate][1],
	PassInfo[playerid][psDate][2],
	PassInfo[playerid][psDateBirth][0],
	PassInfo[playerid][psDateBirth][1],
	PassInfo[playerid][psDateBirth][2]);
	mysql_tquery(dbHandle, string, "", "");
	return 1;
}

stock OnLoadPass(playerid)
{
	new string[100];
	format(string, sizeof(string), "SELECT * FROM `passports` WHERE `Name` = '%s' LIMIT 1", GetName(playerid));
	mysql_tquery(dbHandle, string, "MysqlLoadPassport", "d", playerid);
	return 1;
}

forward MysqlLoadPassport(playerid);
public MysqlLoadPassport(playerid)
{
	if(cache_get_row_count(dbHandle) == 1)
	{
		PassInfo[playerid][psSeria] = cache_get_row_int(0, 1, dbHandle);
		PassInfo[playerid][psNumber] = cache_get_row_int(0, 2, dbHandle);
		PassInfo[playerid][psSex] = cache_get_row_int(0, 3, dbHandle);
		PassInfo[playerid][psDate][0] = cache_get_row_int(0, 4, dbHandle);
		PassInfo[playerid][psDate][1] = cache_get_row_int(0, 5, dbHandle);
		PassInfo[playerid][psDate][2] = cache_get_row_int(0, 6, dbHandle);
		PassInfo[playerid][psDateBirth][0] = cache_get_row_int(0, 7, dbHandle);
		PassInfo[playerid][psDateBirth][1] = cache_get_row_int(0, 8, dbHandle);
		PassInfo[playerid][psDateBirth][2] = cache_get_row_int(0, 9, dbHandle);
		PassInfo[playerid][psCity] = cache_get_row_int(0, 10, dbHandle);
		PassInfo[playerid][mcState] = cache_get_row_int(0, 11, dbHandle);
	}
	return 1;
}

stock GetMonthDays(year, month)
{
	switch(month)
	{
	    case 0:     return 31;
	    case 1: 	return 31;
	    case 2: 	return februarydays(year);
	    case 3: 	return 31;
	    case 4: 	return 30;
	    case 5: 	return 31;
	    case 6: 	return 30;
	    case 7: 	return 31;
	    case 8: 	return 31;
	    case 9: 	return 30;
	    case 10: 	return 31;
	    case 11: 	return 30;
	    case 12: 	return 31;
	    default: 	return -1;
	}
	return -1;
}

stock februarydays(year)
{
	if(!(year % 4)) return 29;
	else return 28;
}

public OnPlayerProxy(playerid)
{
    new string[100];
   	format(string, sizeof(string), "[A] %s[%d] кикнут за использование VPN или Proxy", GetName(playerid), playerid);
    SendAdminMessage(COLOR_ORANGE, string);
    SendLog("CheatLog",string);
    SendClientMessage(playerid, COLOR_RED, "Вы были кикнуты по подозрению в использовании VPN или Proxy! Код: #6491");
	SendClientMessage(playerid, COLOR_RED, "Если Вы считаете, что произошла ошибка, сообщите об этом на форум, указав код ошибки.");
    Kick(playerid);
    return 1;
}

stock GetMaxSeat(modelid)
{
	switch(modelid)
	{
		case 596..598, 427, 490: return 4;
		case 599, 497, 528: return 2;
	}
	return -1;
}

stock CategoryVeh(carid)
{
	if(carid >= CategoryA[0] && carid <= CategoryA[1]) return true;
    if(carid >= CategoryB[0] && carid <= CategoryB[1]) return true;
	if(carid >= CategoryC[0] && carid <= CategoryC[1]) return true;
	if(carid == CategoryD) return true;
	return false;
}

forward Unfreez2(playerid);
public Unfreez2(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
}

forward TazerOff(playerid);
public TazerOff(playerid)
{
	SetPVarInt(playerid, "Tazer", 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 0);
	TogglePlayerControllable(playerid, 1);
	return 1;
}

forward ClearAnimText(playerid);
public ClearAnimText(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);

forward ClearAnimationsDelay(playerid);
public ClearAnimationsDelay(playerid) ApplyAnimation(playerid, "PED", "IDLE_chat", 4.1, 1, 0, 0, 0, 1, 1);

forward WarningGreenZone(playerid);
public WarningGreenZone(playerid)
{
	PlayerTextDrawHide(playerid, GreenZoneText[playerid][3]);
	PlayerTextDrawBoxColor(playerid, GreenZoneText[playerid][0], 1673350911);
	PlayerTextDrawShow(playerid, GreenZoneText[playerid][0]);
	DeletePVar(playerid, "SwitchingTextdraw");
	return 1;
}

forward OnPlayerHistoryName(playerid);
public OnPlayerHistoryName(playerid)
{
    if(cache_get_row_count(dbHandle) > 0)
    {
		new string[128];
		new idacca = cache_get_row_int(0, 0, dbHandle);
		format(string, sizeof(string), "SELECT * FROM `historyname` WHERE `idacca` = '%d' ORDER BY `id` DESC LIMIT 10", idacca);
		mysql_tquery(dbHandle, string, "OnPlayerHistoryName2", "d", playerid);
    }
    else SendClientMessage(playerid, COLOR_GREY, "Игрок с таким именем не найден");
	return 1;
}

forward OnPlayerHistoryName2(playerid);
public OnPlayerHistoryName2(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    new nickname[MAX_PLAYER_NAME], string[350], str[35];
	    for(new i = 0; i < rows; i++)
	    {
			cache_get_row(i, 2, nickname, dbHandle);
	        format(str, sizeof(str), "{FFFFFF}%s\n", nickname);
			strcat(string, str);
	    }
	    ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_LIST, "{7efd7d}История ников", string, "Закрыть", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Данный игрок ещё не менял имя");
	return 1;
}

forward Itter_OPDCInternal_adm_vehicles(playerid);
public Itter_OPDCInternal_adm_vehicles(playerid)
{
    Itter_Remove(adm_vehicles, playerid);
	return 1;
}
forward hand(playerid);
public hand(playerid)
{
	if(startjob2[playerid]==true)
	{
		ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,0,0,1,5150);
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		SetPlayerAttachedObject(playerid,2, 905, 5, 0.020944, 0.039285, -0.035010, 0.000000, 0.000000, 0.000000, 0.301603, 0.125763, 0.233199);
		SetPlayerAttachedObject(playerid,3, 906, 6, -0.032336, 0.111448, 0.001745, 0.000000, 0.000000, 0.000000, 0.026124, 0.048238, 0.048593);
        timemine[playerid] = SetTimerEx("TimeMine",5700,false,"i", playerid);
    }
    return true;
}
forward TimeMine(playerid);
public TimeMine(playerid)
{
    if(startjob2[playerid]==true)
    {
  		if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
		if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
		SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
		SetPlayerAttachedObject(playerid,3, 905, 1, -0.275758, 1.305280, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		SetPlayerCheckpoint(playerid,2295.2573,1660.5576,-39.4470-1,2.0);
    }
    return true;
}
stock GiveMoney(playerid, amount)
{
	PI[playerid][pCash] += amount;
	GivePlayerMoney(playerid, amount);
}
forward Gunjobanim(playerid);
public Gunjobanim(playerid)
{
        RemovePlayerAttachedObject(playerid,3);
        ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
        ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
        SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
        SetPVarInt(playerid, "Gjob",3);
        SendClientMessage(playerid, COLOR_LIGHTGREEN, "Оружие собрано. Идите к складу.");
        SetPlayerCheckpoint(playerid,132.3752,1857.3159,-18.3955-1,2.5);//склад сборщика оружия
        return 1;
}
CMD:intporch(playerid)
{
	SetPlayerInterior(playerid, 9);
	return SetPlayerPos(playerid, 2452.3127, -2085.6118, -1.9220);
}
CMD:addpod(playerid)
{
	 if(GetString(GetName(playerid), NAME_DEVELOPER_ONE) || GetString(GetName(playerid), NAME_DEVELOPER_TWO))
	 {
	 	if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	 	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,  COLOR_GREY, !"Вы не должны находиться в машине");
	 	new Float:x, Float:y, Float:z;
	 	GetPlayerPos(playerid, x, y, z);
	 	new Cache:temp = mysql_query(dbHandle, "SELECT max(id) FROM "T_PORCH_HOUSE"", true);
	 	new flat[10];
		cache_get_row(0, 0, flat);
		new last_flat = strval(flat) + 1;
		cache_delete(temp, dbHandle);
		new Query[200];
		mysql_format(dbHandle, Query, sizeof Query, "INSERT INTO "T_PORCH" (`pEnterX`, `pEnterY`,`pEnterZ`, `pCarX`, `pCarY`, `pCarZ`, `first_flat`) VALUES ('%f','%f','%f','%f','%f','%f','%d')", x, y, z, x, y, z, last_flat);
		temp = mysql_query(dbHandle, Query, true);
		new id = cache_insert_id(dbHandle);
		cache_delete(temp, dbHandle); 
		for(new idx = 1; idx < sizeof(PorchFlatsCoord); idx++)
		{
			mysql_format(dbHandle, Query, sizeof Query, "INSERT INTO "T_PORCH_HOUSE" (`hEntrx`, `hEntry`,`hEntrz`,`hPrice`) VALUES ('%f','%f','%f','%d')", PorchFlatsCoord[idx][0],PorchFlatsCoord[idx][1],PorchFlatsCoord[idx][2], PORCH_FLAT_COST);
			mysql_tquery(dbHandle, Query, "", "");
		}
		format(Query, sizeof Query, "{00FF00}Создан подъезд № %d\n{FFFFFF}*Изменения вступят в силу после перезагрузки сервера\n{FFFFFF}Не забудьте установить координаты для спавна авто ({1B84D1}/podsetcarpos)", id);
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Создание подъезда", Query, "Ок", "");
	 }
	 return 1;
}
CMD:podsetcarpos(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_DEVELOPER_ONE) || GetString(GetName(playerid), NAME_DEVELOPER_TWO))
	{
	 	if(AdminLogged[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	 	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,  COLOR_GREY, !"Вы должны находиться в машине");
	 	new porch;
	 	if(sscanf(params, "d", porch)) return SendClientMessage(playerid,  COLOR_GREY, !"Использовние: /podsetcarpos [Номер подъезда]");
	 	if(porch < 1 || porch > TOTALPORCH) return SendClientMessage(playerid,  COLOR_GREY, !"Такого подъезда не существует");
	 	new Float:x, Float:y, Float:z, Float:a;
	 	GetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
	 	GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	 	PorchInfo[porch][pCarX] = x;
	 	PorchInfo[porch][pCarY] = y;
	 	PorchInfo[porch][pCarZ] = z;
	 	PorchInfo[porch][pCarA] = a;
	 	new Query[144];
	 	format(Query, sizeof Query, "UPDATE "T_PORCH" SET `pCarX` = '%f', `pCarY` = '%f',`pCarZ` = '%f',`pCarA` = '%f' WHERE `id` = '%d'", x, y, z, a, porch);
	 	mysql_tquery(dbHandle, Query, "", "");
	 	SendClientMessage(playerid, COLOR_GREEN, "Координаты спавна авто установлены");
 	}
 	return 1;
}
CMD:giveoffcredits(playerid, params[]) // Доработать
{
    if(GetString(GetName(playerid), NAME_DEVELOPER_ONE) || GetString(GetName(playerid), NAME_DEVELOPER_TWO))
    {
        new playername[MAX_PLAYER_NAME], credits;
        if(sscanf(params, "s[24]i", playername, credits)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /giveoffcredits [ник игрока] [кол-во]");
        else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /givecredits");
        new Query[128];
		format(Query, sizeof(Query), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
 		mysql_tquery(dbHandle, Query, "GiveOffCredits", "isi", playerid, playername, credits);
    }
    return 1;
}
forward GiveOffCredits(playerid, name[], credits);
public GiveOffCredits(playerid, name[], credits)
{
    new texts[12], text[4];
    new rows;
    cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
	else
	{
	    new Query[128];
	    format(Query, sizeof(Query), "INSERT INTO donate (Name, Credits, activated) VALUES ('%s', '%d', '0')", name, credits);
		mysql_tquery(dbHandle, Query, "", "");
		//
		sscanf(texts, "p<,>a<i>[4]", text);
	   	format(texts, sizeof(texts),"%i, %i, %i, 1",text[0], text[1], text[2]);
	    format(query, sizeof(query), "UPDATE "T_ACCOUNTS"  SET text = '%s' WHERE name = '%s'", texts, name);
		mysql_tquery(dbHandle, query, "", "");
		//
		new string[128];
        format(string, sizeof(string), "Вы выдали %i кредитов игроку %s", credits, name);
        SendClientMessage(playerid, COLOR_GREEN, string);
		format(string, sizeof(string), "Администратор %s в оффлайне выдал %d кредитов игроку %s", GetName(playerid), credits, name);
		SendLog("GiveCredits",string);
	}
	return 1;
}
forward gdonat_callback(playerid);
public gdonat_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, 0xBEBEBEAA, "На Ваш счёт не поступало пополнений. {FFFF00}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"");
	new sum = cache_get_row_int(0, 0, dbHandle);
	new status = cache_get_row_int(0, 1, dbHandle);
	new did = cache_get_row_int(0, 2, dbHandle);
	new string[128];
    if(status == 1)
    {
        PI[playerid][pCredits] += sum;
        PI[playerid][pTotalCredits] += sum;
        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", sum);
		SendClientMessage(playerid, COLOR_GREEN, string);
		format(string, sizeof(string), "%s /donate to %d", GetName(playerid), sum);
		SendLog("GiveCredits", string);
		format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits=%d,totalcredits=%d WHERE id=%d", PI[playerid][pCredits], PI[playerid][pTotalCredits], PI[playerid][pID]);
		mysql_tquery(dbHandle, string, "", "");
		format(string, sizeof(string), "DELETE FROM `gdonate_payments` WHERE `id` = '%d'", did);
		mysql_tquery(dbHandle, string, "", "");
    }
	return 1;
}
stock SendAdminMessageDisconnect(color, str[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pAdmin] > ADM_NONE)
		{
		    if(PI[i][pAlog] == 0) { }
		    if(PI[i][pAlog] == 1) SendClientMessage(i, color, str);
		}
	}
	return 1;
}
stock SendAdminMessageConnect(color, str[])
{
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(PI[i][pAdmin] > ADM_NONE)
		{
		    if(PI[i][pAlog] == 0) { }
		    if(PI[i][pAlog] == 1) SendClientMessage(i, color, str);
		}
	}
	return 1;
}
CMD:rakolov(playerid)
{
    if(PI[playerid][pYdochka] != 1 && GetPVarInt(playerid,"Rakolov") != 1) return SendClientMessage(playerid, -1, "[debug] Нет костюма раколова");
    if(GetPVarInt(playerid,"Rakolov") == 1)
    {
		SetPlayerSkin(playerid, PI[playerid][pModel]);
		SetPVarInt(playerid, "Rakolov", 0);
		PI[playerid][pYdochka] = 0;
    }
    else
    {
        SetPlayerSkin(playerid, 97);
        SetPVarInt(playerid, "Rakolov", 1);
        PI[playerid][pYdochka] = 0;
    }
	return 1;
}
/*CMD:rak_spawn(playerid)
{
	for(new i; i < sizeof(g_ranks); i ++)
	{
	    new rank_nor[244];
	    format(rank_nor, sizeof rank_nor, "{ffcc00}Раковая норка №%d\nИспользуйте л.ALT чтобы искать раков", g_ranks[i][rak_id]);
		CreateDynamicPickup(19135, 1, g_ranks[i][rak_x], g_ranks[i][rak_y], g_ranks[i][rak_z] - 0.2, 0, 0);
		CreateDynamic3DTextLabel(rank_nor, 0xFFDD00FF, g_ranks[i][rak_x], g_ranks[i][rak_y], g_ranks[i][rak_z], 25.0);
	}
	return 1;
}*/
ShowFishingInfo(playerid)
{
    SendClientMessage(playerid, 0xC0C0C0FF, "=================[ {FFFFFF}Рыбалка{C0C0C0} ]================");
    SendClientMessage(playerid, 0xC0C0C0FF, "/rod {FFFFFF}- взять/убрать удочку");
    return SendClientMessage(playerid, 0xC0C0C0FF, "/fish {FFFFFF}- начать/остановить рыбалку");
}

VaildFishingPlace(playerid)
{
    if(!IsPlayerConnected(playerid))
        return 0;
    if(IsPlayerInRangeOfPoint(playerid, 4,2102.9692,871.2963,14.5325) || IsPlayerInRangeOfPoint(playerid, 4,2102.9692,871.2963,14.5325))
        return 1;
    if(IsPlayerInRangeOfPoint(playerid, 4,2121.3354,871.1487,14.5264) || IsPlayerInRangeOfPoint(playerid, 4,2121.3354,871.1487,14.5264))
        return 1;
    if(IsPlayerInRangeOfPoint(playerid, 4,2146.3259,994.8870,14.0064) || IsPlayerInRangeOfPoint(playerid, 4,2146.3259,994.8870,14.0064))
        return 1;
    if(IsPlayerInRangeOfPoint(playerid, 4,2173.3025,1100.4312,14.2064) || IsPlayerInRangeOfPoint(playerid, 4,2173.3025,1100.4312,14.2064))
        return 1;
    if(IsPlayerInRangeOfPoint(playerid, 4,2169.2078,1085.7008,14.2125) || IsPlayerInRangeOfPoint(playerid, 4,2169.2078,1085.7008,99.2125))
        return 1;
    return 0;
}

forward FishTimer(playerid);
public FishTimer(playerid)
{
    if(!VaildFishingPlace(playerid))
    {
        fishing_busy[playerid] = 0;
        SetCameraBehindPlayer(playerid);
        return ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
    }
    static const FishNames[][8] =
    {
        {"Ерша"},
        {"Окуня"},
        {"Карася"},
        {"Щуку"},
        {"Белугу"},
        {"Кету"},
        {"Горбушу"},
        {"Семгу"},
        {"Нерку"},
        {"Лосося"}
    };
    TogglePlayerControllable(playerid, 1);
    fishing_busy[playerid] = 0;
    new fish = random(sizeof(FishNames)+1)-1;
    if(fish == -1)
    return fishing_line[playerid] = 0, SendClientMessage(playerid, -1, "Рыба сорвалась и порвала леску!");
    static const fmt_str[] = "{00FF00}х {FFFFFF}Вы поймали {88AA88}%s {FFFFFF}и продали на рынке за {88AA88}%d${FFFFFF}!";
    new string[sizeof(fmt_str)-2+sizeof(FishNames[])-2+11];
    new money = fish*3+1;
    GivePlayerMoney(playerid, money);
    format(string, sizeof(string), "~g~+%d$", money);
    GameTextForPlayer(playerid, string, 1200, 1);
    format(string, sizeof(string), fmt_str, FishNames[fish], money);
    return SendClientMessage(playerid, -1, string);
}

CMD:testdialogs1(playerid)
{
    ShowPlayerDialog(playerid, D_MARKETF, DIALOG_STYLE_LIST, "Рыбный рынок", "Удочка (50$)\nПриманка (35$)\nЛеска (15$)\nПолный комплект (100$)", "Купить", "Отмена");
    return 1;
}
